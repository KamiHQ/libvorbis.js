function makeVorbisEncoderModule(Module, module) {
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function shell_read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function shell_read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return new Uint8Array(xhr.response);
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function shell_print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function shell_printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    if (!func) return; // on null pointer, return undefined
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    funcstr += "if (typeof EmterpreterAsync === 'object') { assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling cwrap') }";
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math_min((+(Math_floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;

/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - Module['asm'].stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



var /* show errors on likely calls to FS when it was not included */ FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;



// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = Runtime.GLOBAL_BASE;

STATICTOP = STATIC_BASE + 546752;
/* global initializers */  __ATINIT__.push();


/* memory initializer */ allocate([0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,248,63,0,0,0,0,0,0,4,64,0,0,0,0,0,0,18,64,0,0,0,0,0,0,33,64,0,0,0,0,0,128,48,64,0,0,0,4,107,244,52,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,248,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,4,64,0,0,0,0,0,0,18,64,0,0,0,0,0,0,33,64,0,0,0,4,107,244,52,66,255,255,255,255,0,0,12,195,0,0,12,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,194,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,128,0,0,0,63,0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,66,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,154,153,153,153,153,153,185,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,8,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,8,64,154,153,153,153,153,153,185,191,0,0,0,0,0,0,0,0,154,153,153,153,153,153,185,63,154,153,153,153,153,153,201,63,51,51,51,51,51,51,211,63,154,153,153,153,153,153,217,63,0,0,0,0,0,0,224,63,51,51,51,51,51,51,227,63,102,102,102,102,102,102,230,63,154,153,153,153,153,153,233,63,205,204,204,204,204,204,236,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,205,204,204,204,204,204,244,63,154,153,153,153,153,153,249,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,12,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,16,64,51,51,51,51,51,51,17,64,102,102,102,102,102,102,18,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,0,0,0,0,0,0,20,64,154,153,153,153,153,153,201,63,154,153,153,153,153,153,201,63,154,153,153,153,153,153,201,63,154,153,153,153,153,153,217,63,51,51,51,51,51,51,227,63,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,0,0,0,0,128,135,195,64,205,204,204,204,204,204,43,64,51,51,51,51,51,51,46,64,154,153,153,153,153,153,47,64,0,0,0,0,0,128,48,64,51,51,51,51,51,51,49,64,102,102,102,102,102,230,50,64,154,153,153,153,153,25,52,64,0,0,0,0,0,0,72,64,0,0,0,0,0,56,143,64,0,0,0,0,0,56,143,64,0,0,0,0,0,56,143,64,0,0,0,0,0,56,143,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,248,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,64,0,0,0,0,0,0,4,64,154,153,153,153,153,153,5,64,0,0,0,0,0,0,8,64,154,153,153,153,153,153,13,64,0,0,0,0,0,0,16,64,0,0,0,0,0,0,16,64,0,0,0,0,0,64,191,64,0,0,0,0,0,88,203,64,0,0,0,0,0,130,228,64,0,0,0,0,0,112,183,64,0,0,0,0,0,148,193,64,0,0,0,0,0,64,223,64,0,0,0,0,0,112,199,64,0,0,0,0,0,136,211,64,0,0,0,0,0,106,232,64,154,153,153,153,153,153,185,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,51,51,51,51,51,51,211,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,18,64,0,0,0,0,0,0,22,64,0,0,0,0,0,0,62,64,0,0,0,0,0,64,191,64,0,0,0,0,0,100,201,64,0,0,0,0,0,124,229,64,0,0,0,0,0,64,207,64,0,0,0,0,0,88,219,64,0,0,0,0,0,64,239,64,0,0,0,0,0,106,248,64,154,153,153,153,153,153,185,191,154,153,153,153,153,153,169,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,0,154,153,153,153,153,153,233,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,51,51,51,51,51,51,211,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,26,64,0,0,0,0,0,0,32,64,0,0,0,0,0,0,62,64,0,0,0,0,0,192,88,64,0,0,0,0,0,0,240,63,0,0,0,0,0,0,0,64,0,0,0,0,0,0,8,64,0,0,0,0,0,0,16,64,0,0,0,0,0,112,199,64,0,0,0,0,0,136,211,64,0,0,0,0,0,124,229,64,0,0,0,0,0,255,244,64,0,0,0,0,0,64,207,64,0,0,0,0,0,88,219,64,0,0,0,0,0,106,232,64,0,0,0,0,0,249,245,64,0,0,0,0,0,0,35,64,0,0,0,0,0,0,38,64,0,0,0,0,0,0,62,64,0,0,0,0,0,192,88,64,0,0,0,0,0,76,205,64,0,0,0,0,0,136,211,64,0,0,0,0,0,124,229,64,0,0,0,0,0,255,244,64,0,0,0,0,0,76,221,64,0,0,0,0,0,130,228,64,0,0,0,0,0,100,233,64,0,0,0,0,0,64,239,64,0,0,0,0,0,148,241,64,0,0,0,0,0,11,243,64,0,0,0,0,0,255,244,64,0,0,0,0,0,118,246,64,0,0,0,0,0,219,250,64,0,0,0,0,0,76,253,64,0,0,0,0,0,23,1,65,0,0,0,0,128,49,7,65,154,153,153,153,153,153,40,64,0,0,0,0,0,0,42,64,0,0,0,0,0,0,42,64,0,0,0,0,0,0,44,64,0,0,0,0,0,0,46,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,192,88,64,0,0,0,0,0,148,209,64,0,0,0,0,0,88,219,64,0,0,0,0,0,23,225,64,0,0,0,0,0,249,229,64,0,0,0,0,0,88,235,64,0,0,0,0,0,76,237,64,0,0,0,0,128,79,242,64,0,0,0,0,0,249,245,64,0,0,0,0,0,106,248,64,0,0,0,0,128,19,252,64,0,0,0,0,128,79,2,65,0,0,0,0,128,49,7,65,0,0,0,0,0,64,223,64,0,0,0,0,0,112,231,64,0,0,0,0,0,76,237,64,0,0,0,0,0,23,241,64,0,0,0,0,0,136,243,64,0,0,0,0,0,255,244,64,0,0,0,0,0,112,247,64,0,0,0,0,0,219,250,64,0,0,0,0,0,76,253,64,0,0,0,0,0,23,1,65,0,0,0,0,0,136,3,65,0,0,0,0,8,76,13,65,0,0,0,0,0,88,203,64,0,0,0,0,0,136,211,64,0,0,0,0,0,88,219,64,0,0,0,0,0,142,226,64,0,0,0,0,0,118,230,64,0,0,0,0,0,94,234,64,0,0,0,0,128,79,242,64,0,0,0,0,0,112,247,64,0,0,0,0,0,76,253,64,0,0,0,0,0,23,1,65,0,0,0,0,0,249,5,65,0,0,0,0,8,76,13,65,0,0,0,0,0,249,213,64,0,0,0,0,0,64,223,64,0,0,0,0,0,136,227,64,0,0,0,0,0,112,231,64,0,0,0,0,0,88,235,64,0,0,0,0,0,64,239,64,0,0,0,0,0,136,243,64,0,0,0,0,0,112,247,64,0,0,0,0,0,88,251,64,0,0,0,0,0,64,255,64,0,0,0,0,0,136,3,65,0,0,0,0,136,132,14,65,0,0,0,0,183,29,193,4,110,59,130,9,217,38,67,13,220,118,4,19,107,107,197,23,178,77,134,26,5,80,71,30,184,237,8,38,15,240,201,34,214,214,138,47,97,203,75,43,100,155,12,53,211,134,205,49,10,160,142,60,189,189,79,56,112,219,17,76,199,198,208,72,30,224,147,69,169,253,82,65,172,173,21,95,27,176,212,91,194,150,151,86,117,139,86,82,200,54,25,106,127,43,216,110,166,13,155,99,17,16,90,103,20,64,29,121,163,93,220,125,122,123,159,112,205,102,94,116,224,182,35,152,87,171,226,156,142,141,161,145,57,144,96,149,60,192,39,139,139,221,230,143,82,251,165,130,229,230,100,134,88,91,43,190,239,70,234,186,54,96,169,183,129,125,104,179,132,45,47,173,51,48,238,169,234,22,173,164,93,11,108,160,144,109,50,212,39,112,243,208,254,86,176,221,73,75,113,217,76,27,54,199,251,6,247,195,34,32,180,206,149,61,117,202,40,128,58,242,159,157,251,246,70,187,184,251,241,166,121,255,244,246,62,225,67,235,255,229,154,205,188,232,45,208,125,236,119,112,134,52,192,109,71,48,25,75,4,61,174,86,197,57,171,6,130,39,28,27,67,35,197,61,0,46,114,32,193,42,207,157,142,18,120,128,79,22,161,166,12,27,22,187,205,31,19,235,138,1,164,246,75,5,125,208,8,8,202,205,201,12,7,171,151,120,176,182,86,124,105,144,21,113,222,141,212,117,219,221,147,107,108,192,82,111,181,230,17,98,2,251,208,102,191,70,159,94,8,91,94,90,209,125,29,87,102,96,220,83,99,48,155,77,212,45,90,73,13,11,25,68,186,22,216,64,151,198,165,172,32,219,100,168,249,253,39,165,78,224,230,161,75,176,161,191,252,173,96,187,37,139,35,182,146,150,226,178,47,43,173,138,152,54,108,142,65,16,47,131,246,13,238,135,243,93,169,153,68,64,104,157,157,102,43,144,42,123,234,148,231,29,180,224,80,0,117,228,137,38,54,233,62,59,247,237,59,107,176,243,140,118,113,247,85,80,50,250,226,77,243,254,95,240,188,198,232,237,125,194,49,203,62,207,134,214,255,203,131,134,184,213,52,155,121,209,237,189,58,220,90,160,251,216,238,224,12,105,89,253,205,109,128,219,142,96,55,198,79,100,50,150,8,122,133,139,201,126,92,173,138,115,235,176,75,119,86,13,4,79,225,16,197,75,56,54,134,70,143,43,71,66,138,123,0,92,61,102,193,88,228,64,130,85,83,93,67,81,158,59,29,37,41,38,220,33,240,0,159,44,71,29,94,40,66,77,25,54,245,80,216,50,44,118,155,63,155,107,90,59,38,214,21,3,145,203,212,7,72,237,151,10,255,240,86,14,250,160,17,16,77,189,208,20,148,155,147,25,35,134,82,29,14,86,47,241,185,75,238,245,96,109,173,248,215,112,108,252,210,32,43,226,101,61,234,230,188,27,169,235,11,6,104,239,182,187,39,215,1,166,230,211,216,128,165,222,111,157,100,218,106,205,35,196,221,208,226,192,4,246,161,205,179,235,96,201,126,141,62,189,201,144,255,185,16,182,188,180,167,171,125,176,162,251,58,174,21,230,251,170,204,192,184,167,123,221,121,163,198,96,54,155,113,125,247,159,168,91,180,146,31,70,117,150,26,22,50,136,173,11,243,140,116,45,176,129,195,48,113,133,153,144,138,93,46,141,75,89,247,171,8,84,64,182,201,80,69,230,142,78,242,251,79,74,43,221,12,71,156,192,205,67,33,125,130,123,150,96,67,127,79,70,0,114,248,91,193,118,253,11,134,104,74,22,71,108,147,48,4,97,36,45,197,101,233,75,155,17,94,86,90,21,135,112,25,24,48,109,216,28,53,61,159,2,130,32,94,6,91,6,29,11,236,27,220,15,81,166,147,55,230,187,82,51,63,157,17,62,136,128,208,58,141,208,151,36,58,205,86,32,227,235,21,45,84,246,212,41,121,38,169,197,206,59,104,193,23,29,43,204,160,0,234,200,165,80,173,214,18,77,108,210,203,107,47,223,124,118,238,219,193,203,161,227,118,214,96,231,175,240,35,234,24,237,226,238,29,189,165,240,170,160,100,244,115,134,39,249,196,155,230,253,9,253,184,137,190,224,121,141,103,198,58,128,208,219,251,132,213,139,188,154,98,150,125,158,187,176,62,147,12,173,255,151,177,16,176,175,6,13,113,171,223,43,50,166,104,54,243,162,109,102,180,188,218,123,117,184,3,93,54,181,180,64,247,177,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,255,1,0,0,255,3,0,0,255,7,0,0,255,15,0,0,255,31,0,0,255,63,0,0,255,127,0,0,255,255,0,0,255,255,1,0,255,255,3,0,255,255,7,0,255,255,15,0,255,255,31,0,255,255,63,0,255,255,127,0,255,255,255,0,255,255,255,1,255,255,255,3,255,255,255,7,255,255,255,15,255,255,255,31,255,255,255,63,255,255,255,127,255,255,255,255,116,14,0,0,244,14,0,0,244,15,0,0,244,17,0,0,244,21,0,0,244,29,0,0,244,45,0,0,244,77,0,0,24,0,120,58,76,70,11,60,242,204,192,60,116,252,59,61,86,73,154,61,241,93,228,61,248,163,29,62,180,231,78,62,54,157,130,62,78,220,159,62,193,174,190,62,65,132,222,62,173,194,254,62,186,101,15,63,248,0,31,63,29,233,45,63,249,219,59,63,45,162,72,63,160,17,84,63,38,15,94,63,46,143,102,63,112,149,109,63,174,51,115,63,159,135,119,63,66,184,122,63,196,242,124,63,75,103,126,63,196,69,127,63,241,186,127,63,217,237,127,63,162,253,127,63,248,255,127,63,168,9,120,57,17,119,11,59,135,139,193,59,74,113,61,60,148,82,156,60,94,8,233,60,42,83,34,61,74,118,87,61,138,227,137,61,7,140,171,61,34,154,208,61,108,239,248,61,164,52,18,62,100,112,41,62,65,21,66,62,67,11,92,62,47,56,119,62,197,191,137,62,92,97,152,62,135,112,167,62,4,220,182,62,188,145,198,62,231,126,214,62,48,144,230,62,227,177,246,62,13,104,3,63,121,107,11,63,98,89,19,63,42,40,27,63,137,206,34,63,166,67,42,63,49,127,49,63,126,121,56,63,153,43,63,63,92,143,69,63,127,159,75,63,165,87,81,63,104,180,86,63,89,179,91,63,8,83,96,63,252,146,100,63,177,115,104,63,138,246,107,63,198,29,111,63,109,236,113,63,62,102,116,63,154,143,118,63,104,109,120,63,3,5,122,63,26,92,123,63,153,120,124,63,143,96,125,63,17,26,126,63,39,171,126,63,176,25,127,63,74,107,127,63,68,165,127,63,132,204,127,63,123,229,127,63,17,244,127,63,158,251,127,63,219,254,127,63,218,255,127,63,0,0,128,63,5,12,120,56,50,131,11,58,118,186,193,58,226,203,61,59,38,207,156,59,139,32,234,59,245,102,35,60,63,100,89,60,184,127,139,60,59,23,174,60,239,114,212,60,96,140,254,60,45,46,22,61,114,237,46,61,155,127,73,61,220,223,101,61,123,4,130,61,159,250,145,61,71,207,162,61,38,127,180,61,173,6,199,61,16,98,218,61,63,141,238,61,244,193,1,62,185,160,12,62,128,224,23,62,182,126,35,62,166,120,47,62,116,203,59,62,34,116,72,62,141,111,85,62,107,186,98,62,83,81,112,62,180,48,126,62,110,42,134,62,252,92,141,62,9,174,148,62,138,27,156,62,100,163,163,62,112,67,171,62,119,249,178,62,54,195,186,62,93,158,194,62,147,136,202,62,118,127,210,62,154,128,218,62,142,137,226,62,217,151,234,62,2,169,242,62,139,186,250,62,251,100,1,63,99,106,5,63,65,108,9,63,89,105,13,63,116,96,17,63,94,80,21,63,231,55,25,63,231,21,29,63,58,233,32,63,197,176,36,63,116,107,40,63,62,24,44,63,35,182,47,63,43,68,51,63,109,193,54,63,10,45,58,63,48,134,61,63,26,204,64,63,17,254,67,63,107,27,71,63,142,35,74,63,238,21,77,63,15,242,79,63,132,183,82,63,239,101,85,63,3,253,87,63,129,124,90,63,60,228,92,63,21,52,95,63,254,107,97,63,246,139,99,63,14,148,101,63,98,132,103,63,33,93,105,63,133,30,107,63,213,200,108,63,103,92,110,63,155,217,111,63,224,64,113,63,172,146,114,63,131,207,115,63,241,247,116,63,139,12,118,63,239,13,119,63,193,252,119,63,172,217,120,63,99,165,121,63,155,96,122,63,15,12,123,63,124,168,123,63,163,54,124,63,71,183,124,63,41,43,125,63,13,147,125,63,183,239,125,63,229,65,126,63,89,138,126,63,205,201,126,63,251,0,127,63,150,48,127,63,78,89,127,63,205,123,127,63,182,152,127,63,167,176,127,63,53,196,127,63,239,211,127,63,91,224,127,63,245,233,127,63,51,241,127,63,127,246,127,63,59,250,127,63,190,252,127,63,84,254,127,63,64,255,127,63,186,255,127,63,238,255,127,63,254,255,127,63,0,0,128,63,169,12,120,55,54,134,11,57,38,198,193,57,94,226,61,58,234,237,156,58,85,101,234,58,56,170,35,59,207,219,89,59,169,226,139,59,42,178,174,59,13,91,213,59,204,219,255,59,91,25,23,60,250,46,48,60,194,45,75,60,156,20,104,60,46,113,131,60,225,202,147,60,185,22,165,60,1,84,183,60,245,129,202,60,198,159,222,60,155,172,243,60,199,211,4,61,213,71,16,61,250,49,28,61,174,145,40,61,101,102,53,61,141,175,66,61,140,108,80,61,193,156,94,61,133,63,109,61,41,84,124,61,252,236,133,61,26,232,141,61,13,27,150,61,110,133,158,61,212,38,167,61,210,254,175,61,245,12,185,61,200,80,194,61,209,201,203,61,146,119,213,61,139,89,223,61,51,111,233,61,2,184,243,61,105,51,254,61,106,112,4,62,214,223,9,62,171,103,15,62,153,7,21,62,77,191,26,62,116,142,32,62,181,116,38,62,184,113,44,62,34,133,50,62,149,174,56,62,178,237,62,62,21,66,69,62,92,171,75,62,30,41,82,62,243,186,88,62,112,96,95,62,40,25,102,62,170,228,108,62,132,194,115,62,68,178,122,62,185,217,128,62,203,98,132,62,26,244,135,62,105,141,139,62,120,46,143,62,6,215,146,62,211,134,150,62,156,61,154,62,29,251,157,62,19,191,161,62,57,137,165,62,71,89,169,62,249,46,173,62,5,10,177,62,36,234,180,62,13,207,184,62,117,184,188,62,18,166,192,62,153,151,196,62,190,140,200,62,52,133,204,62,175,128,208,62,225,126,212,62,125,127,216,62,52,130,220,62,184,134,224,62,185,140,228,62,233,147,232,62,248,155,236,62,150,164,240,62,117,173,244,62,67,182,248,62,178,190,252,62,57,99,0,63,153,102,2,63,82,105,4,63,60,107,6,63,48,108,8,63,6,108,10,63,151,106,12,63,188,103,14,63,78,99,16,63,39,93,18,63,33,85,20,63,21,75,22,63,222,62,24,63,87,48,26,63,92,31,28,63,199,11,30,63,117,245,31,63,66,220,33,63,12,192,35,63,176,160,37,63,12,126,39,63,254,87,41,63,104,46,43,63,39,1,45,63,29,208,46,63,43,155,48,63,51,98,50,63,23,37,52,63,188,227,53,63,4,158,55,63,214,83,57,63,23,5,59,63,173,177,60,63,128,89,62,63,120,252,63,63,126,154,65,63,124,51,67,63,93,199,68,63,12,86,70,63,119,223,71,63,138,99,73,63,54,226,74,63,104,91,76,63,17,207,77,63,35,61,79,63,145,165,80,63,76,8,82,63,75,101,83,63,130,188,84,63,231,13,86,63,114,89,87,63,26,159,88,63,218,222,89,63,172,24,91,63,138,76,92,63,113,122,93,63,93,162,94,63,78,196,95,63,67,224,96,63,58,246,97,63,54,6,99,63,56,16,100,63,67,20,101,63,92,18,102,63,133,10,103,63,198,252,103,63,37,233,104,63,168,207,105,63,89,176,106,63,64,139,107,63,102,96,108,63,216,47,109,63,159,249,109,63,201,189,110,63,97,124,111,63,118,53,112,63,23,233,112,63,81,151,113,63,53,64,114,63,212,227,114,63,61,130,115,63,131,27,116,63,184,175,116,63,238,62,117,63,56,201,117,63,171,78,118,63,90,207,118,63,90,75,119,63,192,194,119,63,162,53,120,63,21,164,120,63,48,14,121,63,8,116,121,63,182,213,121,63,79,51,122,63,235,140,122,63,162,226,122,63,139,52,123,63,191,130,123,63,85,205,123,63,102,20,124,63,9,88,124,63,88,152,124,63,106,213,124,63,88,15,125,63,58,70,125,63,41,122,125,63,62,171,125,63,143,217,125,63,54,5,126,63,75,46,126,63,228,84,126,63,27,121,126,63,7,155,126,63,190,186,126,63,88,216,126,63,236,243,126,63,144,13,127,63,91,37,127,63,99,59,127,63,188,79,127,63,125,98,127,63,185,115,127,63,135,131,127,63,249,145,127,63,36,159,127,63,26,171,127,63,238,181,127,63,179,191,127,63,122,200,127,63,85,208,127,63,84,215,127,63,136,221,127,63,0,227,127,63,204,231,127,63,249,235,127,63,150,239,127,63,177,242,127,63,85,245,127,63,144,247,127,63,109,249,127,63,246,250,127,63,54,252,127,63,55,253,127,63,1,254,127,63,156,254,127,63,18,255,127,63,103,255,127,63,163,255,127,63,204,255,127,63,229,255,127,63,244,255,127,63,252,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,60,12,120,54,253,134,11,56,19,201,193,56,248,231,61,57,148,245,156,57,115,118,234,57,238,186,35,58,113,249,89,58,32,251,139,58,96,216,174,58,34,148,213,58,3,23,0,59,209,82,23,59,65,125,48,59,21,150,75,59,8,157,104,59,233,200,131,59,20,58,148,59,218,161,165,59,16,0,184,59,136,84,203,59,16,159,223,59,118,223,244,59,194,138,5,60,128,32,17,60,217,48,29,60,172,187,41,60,219,192,54,60,67,64,68,60,194,57,82,60,52,173,96,60,115,154,111,60,88,1,127,60,222,112,135,60,186,157,143,60,42,7,152,60,25,173,160,60,112,143,169,60,23,174,178,60,246,8,188,60,243,159,197,60,245,114,207,60,225,129,217,60,156,204,227,60,10,83,238,60,14,21,249,60,70,9,2,61,177,165,7,61,187,95,13,61,81,55,19,61,102,44,25,61,230,62,31,61,195,110,37,61,233,187,43,61,71,38,50,61,202,173,56,61,97,82,63,61,247,19,70,61,121,242,76,61,210,237,83,61,240,5,91,61,187,58,98,61,32,140,105,61,8,250,112,61,93,132,120,61,132,21,128,61,249,246,131,61,130,230,135,61,19,228,139,61,159,239,143,61,26,9,148,61,119,48,152,61,169,101,156,61,163,168,160,61,88,249,164,61,186,87,169,61,186,195,173,61,76,61,178,61,95,196,182,61,230,88,187,61,209,250,191,61,18,170,196,61,152,102,201,61,85,48,206,61,56,7,211,61,48,235,215,61,47,220,220,61,34,218,225,61,248,228,230,61,161,252,235,61,11,33,241,61,35,82,246,61,217,143,251,61,13,109,0,62,105,24,3,62,247,201,5,62,174,129,8,62,133,63,11,62,113,3,14,62,104,205,16,62,96,157,19,62,79,115,22,62,42,79,25,62,232,48,28,62,124,24,31,62,221,5,34,62,255,248,36,62,215,241,39,62,90,240,42,62,125,244,45,62,51,254,48,62,114,13,52,62,45,34,55,62,88,60,58,62,232,91,61,62,208,128,64,62,3,171,67,62,118,218,70,62,26,15,74,62,229,72,77,62,199,135,80,62,181,203,83,62,162,20,87,62,127,98,90,62,63,181,93,62,213,12,97,62,50,105,100,62,73,202,103,62,12,48,107,62,108,154,110,62,92,9,114,62,203,124,117,62,173,244,120,62,241,112,124,62,138,241,127,62,52,187,129,62,190,127,131,62,91,70,133,62,4,15,135,62,176,217,136,62,89,166,138,62,245,116,140,62,126,69,142,62,234,23,144,62,50,236,145,62,78,194,147,62,54,154,149,62,224,115,151,62,70,79,153,62,93,44,155,62,31,11,157,62,130,235,158,62,127,205,160,62,11,177,162,62,31,150,164,62,177,124,166,62,186,100,168,62,47,78,170,62,9,57,172,62,62,37,174,62,198,18,176,62,150,1,178,62,167,241,179,62,238,226,181,62,100,213,183,62,254,200,185,62,179,189,187,62,122,179,189,62,74,170,191,62,25,162,193,62,221,154,195,62,142,148,197,62,34,143,199,62,142,138,201,62,203,134,203,62,205,131,205,62,140,129,207,62,253,127,209,62,24,127,211,62,210,126,213,62,33,127,215,62,252,127,217,62,88,129,219,62,45,131,221,62,112,133,223,62,23,136,225,62,25,139,227,62,108,142,229,62,5,146,231,62,219,149,233,62,228,153,235,62,21,158,237,62,102,162,239,62,203,166,241,62,59,171,243,62,173,175,245,62,21,180,247,62,107,184,249,62,164,188,251,62,181,192,253,62,150,196,255,62,30,228,0,63,207,229,1,63,88,231,2,63,182,232,3,63,226,233,4,63,215,234,5,63,146,235,6,63,12,236,7,63,66,236,8,63,45,236,9,63,202,235,10,63,19,235,11,63,4,234,12,63,151,232,13,63,200,230,14,63,145,228,15,63,239,225,16,63,220,222,17,63,84,219,18,63,81,215,19,63,208,210,20,63,202,205,21,63,61,200,22,63,34,194,23,63,117,187,24,63,50,180,25,63,85,172,26,63,215,163,27,63,182,154,28,63,236,144,29,63,117,134,30,63,77,123,31,63,110,111,32,63,214,98,33,63,126,85,34,63,100,71,35,63,130,56,36,63,212,40,37,63,87,24,38,63,5,7,39,63,219,244,39,63,213,225,40,63,239,205,41,63,36,185,42,63,113,163,43,63,209,140,44,63,64,117,45,63,188,92,46,63,63,67,47,63,199,40,48,63,78,13,49,63,211,240,49,63,80,211,50,63,195,180,51,63,39,149,52,63,122,116,53,63,184,82,54,63,220,47,55,63,229,11,56,63,206,230,56,63,149,192,57,63,54,153,58,63,174,112,59,63,249,70,60,63,21,28,61,63,255,239,61,63,179,194,62,63,48,148,63,63,113,100,64,63,116,51,65,63,55,1,66,63,182,205,66,63,239,152,67,63,224,98,68,63,134,43,69,63,222,242,69,63,230,184,70,63,156,125,71,63,253,64,72,63,7,3,73,63,184,195,73,63,14,131,74,63,6,65,75,63,159,253,75,63,215,184,76,63,172,114,77,63,28,43,78,63,38,226,78,63,199,151,79,63,253,75,80,63,201,254,80,63,39,176,81,63,22,96,82,63,150,14,83,63,164,187,83,63,63,103,84,63,103,17,85,63,26,186,85,63,86,97,86,63,28,7,87,63,105,171,87,63,62,78,88,63,152,239,88,63,120,143,89,63,221,45,90,63,198,202,90,63,50,102,91,63,33,0,92,63,147,152,92,63,134,47,93,63,251,196,93,63,242,88,94,63,105,235,94,63,98,124,95,63,219,11,96,63,213,153,96,63,80,38,97,63,76,177,97,63,201,58,98,63,199,194,98,63,70,73,99,63,71,206,99,63,202,81,100,63,208,211,100,63,88,84,101,63,100,211,101,63,244,80,102,63,9,205,102,63,163,71,103,63,195,192,103,63,107,56,104,63,154,174,104,63,82,35,105,63,147,150,105,63,96,8,106,63,184,120,106,63,157,231,106,63,16,85,107,63,19,193,107,63,166,43,108,63,203,148,108,63,132,252,108,63,209,98,109,63,180,199,109,63,48,43,110,63,68,141,110,63,244,237,110,63,64,77,111,63,42,171,111,63,181,7,112,63,225,98,112,63,177,188,112,63,38,21,113,63,67,108,113,63,10,194,113,63,123,22,114,63,155,105,114,63,106,187,114,63,234,11,115,63,31,91,115,63,9,169,115,63,172,245,115,63,9,65,116,63,35,139,116,63,252,211,116,63,151,27,117,63,245,97,117,63,26,167,117,63,8,235,117,63,193,45,118,63,72,111,118,63,159,175,118,63,202,238,118,63,201,44,119,63,161,105,119,63,84,165,119,63,228,223,119,63,85,25,120,63,168,81,120,63,226,136,120,63,3,191,120,63,16,244,120,63,11,40,121,63,247,90,121,63,215,140,121,63,173,189,121,63,125,237,121,63,73,28,122,63,20,74,122,63,226,118,122,63,181,162,122,63,144,205,122,63,118,247,122,63,107,32,123,63,112,72,123,63,138,111,123,63,186,149,123,63,5,187,123,63,109,223,123,63,245,2,124,63,160,37,124,63,113,71,124,63,108,104,124,63,147,136,124,63,233,167,124,63,114,198,124,63,48,228,124,63,38,1,125,63,89,29,125,63,201,56,125,63,124,83,125,63,115,109,125,63,178,134,125,63,60,159,125,63,19,183,125,63,60,206,125,63,184,228,125,63,139,250,125,63,184,15,126,63,66,36,126,63,44,56,126,63,120,75,126,63,43,94,126,63,70,112,126,63,204,129,126,63,194,146,126,63,41,163,126,63,4,179,126,63,86,194,126,63,35,209,126,63,109,223,126,63,55,237,126,63,131,250,126,63,85,7,127,63,175,19,127,63,148,31,127,63,7,43,127,63,10,54,127,63,160,64,127,63,205,74,127,63,146,84,127,63,242,93,127,63,239,102,127,63,141,111,127,63,206,119,127,63,181,127,127,63,67,135,127,63,124,142,127,63,98,149,127,63,247,155,127,63,61,162,127,63,56,168,127,63,233,173,127,63,83,179,127,63,120,184,127,63,90,189,127,63,252,193,127,63,95,198,127,63,134,202,127,63,116,206,127,63,41,210,127,63,168,213,127,63,244,216,127,63,13,220,127,63,247,222,127,63,179,225,127,63,67,228,127,63,168,230,127,63,229,232,127,63,252,234,127,63,237,236,127,63,188,238,127,63,105,240,127,63,246,241,127,63,101,243,127,63,183,244,127,63,238,245,127,63,11,247,127,63,16,248,127,63,254,248,127,63,214,249,127,63,155,250,127,63,76,251,127,63,236,251,127,63,124,252,127,63,252,252,127,63,110,253,127,63,211,253,127,63,44,254,127,63,121,254,127,63,189,254,127,63,247,254,127,63,42,255,127,63,84,255,127,63,120,255,127,63,150,255,127,63,175,255,127,63,195,255,127,63,211,255,127,63,224,255,127,63,234,255,127,63,241,255,127,63,246,255,127,63,250,255,127,63,253,255,127,63,254,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,171,15,120,53,24,135,11,55,225,201,193,55,107,233,61,56,128,247,156,56,187,122,234,56,24,191,35,57,213,0,90,57,56,1,140,57,229,225,174,57,88,162,213,57,60,33,0,58,24,97,23,58,175,144,48,58,243,175,75,58,212,190,104,58,159,222,131,58,143,85,148,58,48,196,165,58,119,42,184,58,90,136,203,58,204,221,223,58,191,42,245,58,148,183,5,59,124,85,17,59,16,111,29,59,73,4,42,59,31,21,55,59,138,161,68,59,129,169,82,59,252,44,97,59,241,43,112,59,88,166,127,59,19,206,135,59,169,6,144,59,233,124,152,59,204,48,161,59,79,34,170,59,106,81,179,59,26,190,188,59,86,104,198,59,26,80,208,59,95,117,218,59,31,216,228,59,83,120,239,59,244,85,250,59,126,184,2,60,177,100,8,60,145,47,14,60,25,25,20,60,70,33,26,60,19,72,32,60,126,141,38,60,129,241,44,60,25,116,51,60,65,21,58,60,246,212,64,60,50,179,71,60,243,175,78,60,50,203,85,60,235,4,93,60,26,93,100,60,186,211,107,60,198,104,115,60,58,28,123,60,7,119,129,60,33,111,133,60,102,118,137,60,212,140,141,60,105,178,145,60,33,231,149,60,251,42,154,60,243,125,158,60,6,224,162,60,50,81,167,60,115,209,171,60,199,96,176,60,43,255,180,60,154,172,185,60,19,105,190,60,146,52,195,60,20,15,200,60,149,248,204,60,19,241,209,60,137,248,214,60,245,14,220,60,83,52,225,60,160,104,230,60,215,171,235,60,246,253,240,60,249,94,246,60,220,206,251,60,205,166,0,61,153,109,3,61,207,59,6,61,109,17,9,61,114,238,11,61,220,210,14,61,167,190,17,61,211,177,20,61,94,172,23,61,68,174,26,61,133,183,29,61,30,200,32,61,12,224,35,61,78,255,38,61,225,37,42,61,196,83,45,61,243,136,48,61,109,197,51,61,47,9,55,61,55,84,58,61,130,166,61,61,15,0,65,61,218,96,68,61,226,200,71,61,35,56,75,61,156,174,78,61,73,44,82,61,40,177,85,61,55,61,89,61,115,208,92,61,217,106,96,61,103,12,100,61,25,181,103,61,238,100,107,61,227,27,111,61,244,217,114,61,30,159,118,61,96,107,122,61,182,62,126,61,143,12,129,61,73,253,130,61,138,241,132,61,79,233,134,61,150,228,136,61,94,227,138,61,167,229,140,61,109,235,142,61,175,244,144,61,109,1,147,61,164,17,149,61,83,37,151,61,120,60,153,61,17,87,155,61,30,117,157,61,155,150,159,61,136,187,161,61,226,227,163,61,169,15,166,61,218,62,168,61,116,113,170,61,116,167,172,61,218,224,174,61,162,29,177,61,205,93,179,61,87,161,181,61,62,232,183,61,130,50,186,61,32,128,188,61,22,209,190,61,98,37,193,61,2,125,195,61,245,215,197,61,57,54,200,61,203,151,202,61,169,252,204,61,211,100,207,61,68,208,209,61,252,62,212,61,249,176,214,61,56,38,217,61,184,158,219,61,117,26,222,61,111,153,224,61,163,27,227,61,14,161,229,61,175,41,232,61,132,181,234,61,138,68,237,61,191,214,239,61,33,108,242,61,174,4,245,61,99,160,247,61,62,63,250,61,61,225,252,61,93,134,255,61,78,23,1,62,252,108,2,62,56,196,3,62,255,28,5,62,81,119,6,62,45,211,7,62,145,48,9,62,125,143,10,62,238,239,11,62,228,81,13,62,94,181,14,62,89,26,16,62,214,128,17,62,210,232,18,62,77,82,20,62,69,189,21,62,184,41,23,62,166,151,24,62,13,7,26,62,236,119,27,62,65,234,28,62,11,94,30,62,73,211,31,62,250,73,33,62,28,194,34,62,173,59,36,62,172,182,37,62,24,51,39,62,240,176,40,62,50,48,42,62,220,176,43,62,238,50,45,62,101,182,46,62,64,59,48,62,126,193,49,62,30,73,51,62,29,210,52,62,123,92,54,62,54,232,55,62,76,117,57,62,187,3,59,62,131,147,60,62,162,36,62,62,22,183,63,62,222,74,65,62,248,223,66,62,98,118,68,62,28,14,70,62,35,167,71,62,117,65,73,62,18,221,74,62,247,121,76,62,35,24,78,62,149,183,79,62,74,88,81,62,66,250,82,62,121,157,84,62,240,65,86,62,163,231,87,62,146,142,89,62,186,54,91,62,26,224,92,62,177,138,94,62,124,54,96,62,122,227,97,62,169,145,99,62,7,65,101,62,147,241,102,62,75,163,104,62,44,86,106,62,54,10,108,62,102,191,109,62,187,117,111,62,51,45,113,62,204,229,114,62,132,159,116,62,90,90,118,62,75,22,120,62,85,211,121,62,120,145,123,62,176,80,125,62,253,16,127,62,46,105,128,62,101,74,129,62,36,44,130,62,105,14,131,62,52,241,131,62,130,212,132,62,84,184,133,62,169,156,134,62,127,129,135,62,213,102,136,62,171,76,137,62,255,50,138,62,209,25,139,62,32,1,140,62,233,232,140,62,46,209,141,62,236,185,142,62,34,163,143,62,208,140,144,62,244,118,145,62,142,97,146,62,156,76,147,62,29,56,148,62,17,36,149,62,118,16,150,62,76,253,150,62,144,234,151,62,67,216,152,62,99,198,153,62,239,180,154,62,230,163,155,62,71,147,156,62,17,131,157,62,67,115,158,62,219,99,159,62,218,84,160,62,60,70,161,62,3,56,162,62,43,42,163,62,181,28,164,62,160,15,165,62,233,2,166,62,145,246,166,62,149,234,167,62,245,222,168,62,176,211,169,62,197,200,170,62,50,190,171,62,246,179,172,62,17,170,173,62,129,160,174,62,69,151,175,62,91,142,176,62,196,133,177,62,125,125,178,62,133,117,179,62,220,109,180,62,128,102,181,62,112,95,182,62,171,88,183,62,47,82,184,62,252,75,185,62,17,70,186,62,108,64,187,62,11,59,188,62,239,53,189,62,22,49,190,62,126,44,191,62,38,40,192,62,13,36,193,62,51,32,194,62,150,28,195,62,52,25,196,62,12,22,197,62,30,19,198,62,104,16,199,62,233,13,200,62,159,11,201,62,138,9,202,62,169,7,203,62,249,5,204,62,123,4,205,62,44,3,206,62,11,2,207,62,24,1,208,62,81,0,209,62,181,255,209,62,66,255,210,62,248,254,211,62,213,254,212,62,216,254,213,62,255,254,214,62,75,255,215,62,184,255,216,62,71,0,218,62,245,0,219,62,195,1,220,62,173,2,221,62,180,3,222,62,214,4,223,62,17,6,224,62,101,7,225,62,208,8,226,62,81,10,227,62,231,11,228,62,144,13,229,62,76,15,230,62,25,17,231,62,245,18,232,62,224,20,233,62,217,22,234,62,221,24,235,62,236,26,236,62,5,29,237,62,39,31,238,62,79,33,239,62,125,35,240,62,176,37,241,62,230,39,242,62,31,42,243,62,88,44,244,62,145,46,245,62,200,48,246,62,253,50,247,62,45,53,248,62,88,55,249,62,124,57,250,62,153,59,251,62,172,61,252,62,181,63,253,62,179,65,254,62,163,67,255,62,195,34,0,63,173,163,0,63,142,36,1,63,102,165,1,63,53,38,2,63,250,166,2,63,180,39,3,63,99,168,3,63,5,41,4,63,155,169,4,63,36,42,5,63,159,170,5,63,12,43,6,63,105,171,6,63,183,43,7,63,244,171,7,63,32,44,8,63,59,172,8,63,68,44,9,63,58,172,9,63,28,44,10,63,235,171,10,63,164,43,11,63,73,171,11,63,216,42,12,63,80,170,12,63,177,41,13,63,251,168,13,63,44,40,14,63,69,167,14,63,68,38,15,63,41,165,15,63,243,35,16,63,162,162,16,63,53,33,17,63,172,159,17,63,5,30,18,63,65,156,18,63,95,26,19,63,94,152,19,63,61,22,20,63,252,147,20,63,155,17,21,63,24,143,21,63,116,12,22,63,173,137,22,63,195,6,23,63,182,131,23,63,133,0,24,63,46,125,24,63,179,249,24,63,18,118,25,63,74,242,25,63,91,110,26,63,69,234,26,63,6,102,27,63,159,225,27,63,14,93,28,63,84,216,28,63,111,83,29,63,95,206,29,63,36,73,30,63,188,195,30,63,40,62,31,63,102,184,31,63,119,50,32,63,90,172,32,63,14,38,33,63,146,159,33,63,230,24,34,63,10,146,34,63,253,10,35,63,190,131,35,63,77,252,35,63,169,116,36,63,211,236,36,63,200,100,37,63,138,220,37,63,22,84,38,63,110,203,38,63,143,66,39,63,122,185,39,63,47,48,40,63,172,166,40,63,241,28,41,63,254,146,41,63,210,8,42,63,108,126,42,63,205,243,42,63,243,104,43,63,223,221,43,63,143,82,44,63,3,199,44,63,59,59,45,63,54,175,45,63,244,34,46,63,116,150,46,63,182,9,47,63,185,124,47,63,125,239,47,63,1,98,48,63,69,212,48,63,72,70,49,63,10,184,49,63,139,41,50,63,202,154,50,63,198,11,51,63,127,124,51,63,246,236,51,63,40,93,52,63,22,205,52,63,191,60,53,63,36,172,53,63,66,27,54,63,27,138,54,63,174,248,54,63,249,102,55,63,254,212,55,63,187,66,56,63,47,176,56,63,91,29,57,63,63,138,57,63,217,246,57,63,41,99,58,63,48,207,58,63,236,58,59,63,93,166,59,63,130,17,60,63,93,124,60,63,235,230,60,63,44,81,61,63,33,187,61,63,201,36,62,63,35,142,62,63,48,247,62,63,238,95,63,63,94,200,63,63,126,48,64,63,80,152,64,63,209,255,64,63,3,103,65,63,228,205,65,63,117,52,66,63,181,154,66,63,163,0,67,63,64,102,67,63,139,203,67,63,131,48,68,63,41,149,68,63,124,249,68,63,123,93,69,63,39,193,69,63,127,36,70,63,132,135,70,63,51,234,70,63,142,76,71,63,148,174,71,63,68,16,72,63,159,113,72,63,164,210,72,63,83,51,73,63,172,147,73,63,174,243,73,63,89,83,74,63,173,178,74,63,169,17,75,63,77,112,75,63,154,206,75,63,143,44,76,63,43,138,76,63,110,231,76,63,89,68,77,63,234,160,77,63,34,253,77,63,0,89,78,63,133,180,78,63,176,15,79,63,128,106,79,63,246,196,79,63,18,31,80,63,210,120,80,63,56,210,80,63,66,43,81,63,242,131,81,63,69,220,81,63,61,52,82,63,217,139,82,63,24,227,82,63,252,57,83,63,131,144,83,63,174,230,83,63,123,60,84,63,236,145,84,63,0,231,84,63,183,59,85,63,16,144,85,63,12,228,85,63,170,55,86,63,235,138,86,63,206,221,86,63,83,48,87,63,121,130,87,63,66,212,87,63,172,37,88,63,184,118,88,63,101,199,88,63,180,23,89,63,164,103,89,63,53,183,89,63,104,6,90,63,59,85,90,63,175,163,90,63,197,241,90,63,123,63,91,63,210,140,91,63,201,217,91,63,97,38,92,63,154,114,92,63,115,190,92,63,237,9,93,63,7,85,93,63,194,159,93,63,29,234,93,63,24,52,94,63,179,125,94,63,239,198,94,63,203,15,95,63,72,88,95,63,100,160,95,63,33,232,95,63,126,47,96,63,123,118,96,63,24,189,96,63,85,3,97,63,51,73,97,63,177,142,97,63,207,211,97,63,141,24,98,63,236,92,98,63,235,160,98,63,138,228,98,63,202,39,99,63,170,106,99,63,42,173,99,63], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
/* memory initializer */ allocate([75,239,99,63,13,49,100,63,111,114,100,63,114,179,100,63,21,244,100,63,90,52,101,63,63,116,101,63,197,179,101,63,236,242,101,63,180,49,102,63,29,112,102,63,39,174,102,63,211,235,102,63,32,41,103,63,15,102,103,63,159,162,103,63,209,222,103,63,164,26,104,63,26,86,104,63,49,145,104,63,235,203,104,63,71,6,105,63,69,64,105,63,230,121,105,63,42,179,105,63,16,236,105,63,153,36,106,63,197,92,106,63,148,148,106,63,7,204,106,63,29,3,107,63,214,57,107,63,52,112,107,63,53,166,107,63,218,219,107,63,36,17,108,63,18,70,108,63,164,122,108,63,220,174,108,63,184,226,108,63,57,22,109,63,96,73,109,63,44,124,109,63,157,174,109,63,181,224,109,63,115,18,110,63,214,67,110,63,225,116,110,63,146,165,110,63,233,213,110,63,232,5,111,63,142,53,111,63,219,100,111,63,209,147,111,63,110,194,111,63,179,240,111,63,160,30,112,63,54,76,112,63,117,121,112,63,93,166,112,63,239,210,112,63,41,255,112,63,14,43,113,63,156,86,113,63,213,129,113,63,184,172,113,63,70,215,113,63,127,1,114,63,99,43,114,63,243,84,114,63,46,126,114,63,21,167,114,63,169,207,114,63,233,247,114,63,214,31,115,63,113,71,115,63,184,110,115,63,173,149,115,63,80,188,115,63,162,226,115,63,161,8,116,63,80,46,116,63,174,83,116,63,187,120,116,63,119,157,116,63,228,193,116,63,1,230,116,63,206,9,117,63,76,45,117,63,123,80,117,63,92,115,117,63,238,149,117,63,51,184,117,63,42,218,117,63,211,251,117,63,48,29,118,63,64,62,118,63,3,95,118,63,122,127,118,63,166,159,118,63,134,191,118,63,27,223,118,63,101,254,118,63,101,29,119,63,27,60,119,63,135,90,119,63,169,120,119,63,131,150,119,63,19,180,119,63,91,209,119,63,91,238,119,63,20,11,120,63,132,39,120,63,174,67,120,63,145,95,120,63,46,123,120,63,132,150,120,63,149,177,120,63,96,204,120,63,231,230,120,63,41,1,121,63,38,27,121,63,223,52,121,63,85,78,121,63,136,103,121,63,120,128,121,63,37,153,121,63,144,177,121,63,185,201,121,63,161,225,121,63,72,249,121,63,174,16,122,63,212,39,122,63,185,62,122,63,96,85,122,63,198,107,122,63,238,129,122,63,216,151,122,63,131,173,122,63,241,194,122,63,33,216,122,63,20,237,122,63,202,1,123,63,68,22,123,63,130,42,123,63,133,62,123,63,77,82,123,63,217,101,123,63,43,121,123,63,68,140,123,63,34,159,123,63,200,177,123,63,52,196,123,63,104,214,123,63,99,232,123,63,39,250,123,63,180,11,124,63,9,29,124,63,40,46,124,63,17,63,124,63,196,79,124,63,65,96,124,63,137,112,124,63,156,128,124,63,124,144,124,63,39,160,124,63,158,175,124,63,226,190,124,63,244,205,124,63,211,220,124,63,128,235,124,63,251,249,124,63,69,8,125,63,94,22,125,63,71,36,125,63,255,49,125,63,136,63,125,63,225,76,125,63,11,90,125,63,7,103,125,63,212,115,125,63,115,128,125,63,229,140,125,63,42,153,125,63,66,165,125,63,46,177,125,63,238,188,125,63,130,200,125,63,235,211,125,63,41,223,125,63,61,234,125,63,38,245,125,63,230,255,125,63,124,10,126,63,234,20,126,63,47,31,126,63,75,41,126,63,64,51,126,63,13,61,126,63,180,70,126,63,51,80,126,63,140,89,126,63,191,98,126,63,205,107,126,63,181,116,126,63,120,125,126,63,23,134,126,63,146,142,126,63,233,150,126,63,28,159,126,63,44,167,126,63,26,175,126,63,229,182,126,63,142,190,126,63,22,198,126,63,124,205,126,63,194,212,126,63,231,219,126,63,235,226,126,63,208,233,126,63,149,240,126,63,59,247,126,63,195,253,126,63,44,4,127,63,118,10,127,63,163,16,127,63,179,22,127,63,165,28,127,63,123,34,127,63,52,40,127,63,210,45,127,63,83,51,127,63,186,56,127,63,5,62,127,63,53,67,127,63,75,72,127,63,72,77,127,63,42,82,127,63,243,86,127,63,163,91,127,63,58,96,127,63,185,100,127,63,32,105,127,63,111,109,127,63,166,113,127,63,199,117,127,63,208,121,127,63,196,125,127,63,161,129,127,63,104,133,127,63,25,137,127,63,182,140,127,63,61,144,127,63,176,147,127,63,14,151,127,63,89,154,127,63,143,157,127,63,179,160,127,63,195,163,127,63,192,166,127,63,171,169,127,63,132,172,127,63,74,175,127,63,255,177,127,63,163,180,127,63,53,183,127,63,183,185,127,63,40,188,127,63,137,190,127,63,217,192,127,63,26,195,127,63,76,197,127,63,111,199,127,63,130,201,127,63,135,203,127,63,126,205,127,63,102,207,127,63,65,209,127,63,14,211,127,63,205,212,127,63,128,214,127,63,38,216,127,63,191,217,127,63,76,219,127,63,204,220,127,63,65,222,127,63,170,223,127,63,8,225,127,63,91,226,127,63,163,227,127,63,224,228,127,63,19,230,127,63,59,231,127,63,90,232,127,63,110,233,127,63,122,234,127,63,124,235,127,63,116,236,127,63,100,237,127,63,75,238,127,63,42,239,127,63,1,240,127,63,207,240,127,63,149,241,127,63,84,242,127,63,12,243,127,63,188,243,127,63,101,244,127,63,7,245,127,63,162,245,127,63,55,246,127,63,198,246,127,63,78,247,127,63,209,247,127,63,77,248,127,63,196,248,127,63,54,249,127,63,162,249,127,63,9,250,127,63,108,250,127,63,201,250,127,63,34,251,127,63,118,251,127,63,198,251,127,63,18,252,127,63,89,252,127,63,157,252,127,63,221,252,127,63,26,253,127,63,83,253,127,63,136,253,127,63,187,253,127,63,234,253,127,63,22,254,127,63,64,254,127,63,103,254,127,63,139,254,127,63,173,254,127,63,204,254,127,63,234,254,127,63,5,255,127,63,30,255,127,63,53,255,127,63,74,255,127,63,94,255,127,63,112,255,127,63,128,255,127,63,143,255,127,63,157,255,127,63,169,255,127,63,180,255,127,63,191,255,127,63,200,255,127,63,208,255,127,63,215,255,127,63,221,255,127,63,227,255,127,63,232,255,127,63,236,255,127,63,239,255,127,63,243,255,127,63,245,255,127,63,248,255,127,63,249,255,127,63,251,255,127,63,252,255,127,63,253,255,127,63,254,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,204,8,120,52,171,134,11,54,79,202,193,54,190,233,61,55,238,247,156,55,192,123,234,55,43,192,35,56,161,2,90,56,189,2,140,56,76,228,174,56,227,165,213,56,199,35,0,57,168,100,23,57,134,149,48,57,104,182,75,57,64,199,104,57,7,228,131,57,105,92,148,57,191,204,165,57,6,53,184,57,65,149,203,57,105,237,223,57,120,61,245,57,184,194,5,58,166,98,17,58,134,126,29,58,81,22,42,58,9,42,55,58,172,185,68,58,54,197,82,58,165,76,97,58,250,79,112,58,47,207,127,58,34,229,135,58,154,32,144,58,255,153,152,58,80,81,161,58,139,70,170,58,174,121,179,58,186,234,188,58,171,153,198,58,129,134,208,58,58,177,218,58,212,25,229,58,79,192,239,58,167,164,250,58,109,227,2,59,117,147,8,59,105,98,14,59,73,80,20,59,19,93,26,59,199,136,32,59,100,211,38,59,232,60,45,59,83,197,51,59,164,108,58,59,218,50,65,59,243,23,72,59,239,27,79,59,204,62,86,59,138,128,93,59,38,225,100,59,161,96,108,59,249,254,115,59,45,188,123,59,29,204,129,59,145,201,133,59,113,214,137,59,188,242,141,59,113,30,146,59,145,89,150,59,26,164,154,59,12,254,158,59,102,103,163,59,40,224,167,59,80,104,172,59,222,255,176,59,209,166,181,59,40,93,186,59,228,34,191,59,2,248,195,59,131,220,200,59,101,208,205,59,168,211,210,59,74,230,215,59,76,8,221,59,172,57,226,59,105,122,231,59,131,202,236,59,249,41,242,59,202,152,247,59,245,22,253,59,60,82,1,60,170,32,4,60,196,246,6,60,137,212,9,60,249,185,12,60,19,167,15,60,216,155,18,60,69,152,21,60,92,156,24,60,26,168,27,60,129,187,30,60,143,214,33,60,69,249,36,60,160,35,40,60,162,85,43,60,73,143,46,60,149,208,49,60,133,25,53,60,26,106,56,60,81,194,59,60,44,34,63,60,168,137,66,60,199,248,69,60,134,111,73,60,230,237,76,60,231,115,80,60,134,1,84,60,197,150,87,60,162,51,91,60,28,216,94,60,52,132,98,60,232,55,102,60,56,243,105,60,35,182,109,60,170,128,113,60,202,82,117,60,131,44,121,60,214,13,125,60,96,123,128,60,161,115,130,60,174,111,132,60,134,111,134,60,40,115,136,60,149,122,138,60,205,133,140,60,206,148,142,60,152,167,144,60,44,190,146,60,136,216,148,60,173,246,150,60,154,24,153,60,78,62,155,60,202,103,157,60,13,149,159,60,23,198,161,60,231,250,163,60,125,51,166,60,217,111,168,60,249,175,170,60,223,243,172,60,137,59,175,60,247,134,177,60,40,214,179,60,29,41,182,60,213,127,184,60,80,218,186,60,140,56,189,60,138,154,191,60,74,0,194,60,202,105,196,60,11,215,198,60,12,72,201,60,205,188,203,60,77,53,206,60,140,177,208,60,137,49,211,60,69,181,213,60,189,60,216,60,243,199,218,60,230,86,221,60,149,233,223,60,0,128,226,60,39,26,229,60,8,184,231,60,164,89,234,60,250,254,236,60,9,168,239,60,210,84,242,60,83,5,245,60,141,185,247,60,126,113,250,60,39,45,253,60,134,236,255,60,206,87,1,61,52,187,2,61,117,32,4,61,144,135,5,61,133,240,6,61,84,91,8,61,253,199,9,61,128,54,11,61,219,166,12,61,16,25,14,61,29,141,15,61,3,3,17,61,193,122,18,61,87,244,19,61,197,111,21,61,10,237,22,61,39,108,24,61,26,237,25,61,228,111,27,61,132,244,28,61,251,122,30,61,71,3,32,61,105,141,33,61,96,25,35,61,45,167,36,61,206,54,38,61,67,200,39,61,141,91,41,61,171,240,42,61,156,135,44,61,96,32,46,61,248,186,47,61,99,87,49,61,160,245,50,61,175,149,52,61,144,55,54,61,67,219,55,61,199,128,57,61,28,40,59,61,65,209,60,61,56,124,62,61,254,40,64,61,148,215,65,61,250,135,67,61,47,58,69,61,51,238,70,61,5,164,72,61,166,91,74,61,20,21,76,61,80,208,77,61,90,141,79,61,49,76,81,61,212,12,83,61,68,207,84,61,128,147,86,61,135,89,88,61,90,33,90,61,248,234,91,61,97,182,93,61,148,131,95,61,145,82,97,61,88,35,99,61,232,245,100,61,65,202,102,61,100,160,104,61,78,120,106,61,1,82,108,61,123,45,110,61,188,10,112,61,197,233,113,61,148,202,115,61,41,173,117,61,133,145,119,61,166,119,121,61,140,95,123,61,55,73,125,61,166,52,127,61,237,144,128,61,105,136,129,61,198,128,130,61,5,122,131,61,37,116,132,61,39,111,133,61,9,107,134,61,204,103,135,61,112,101,136,61,244,99,137,61,88,99,138,61,157,99,139,61,193,100,140,61,196,102,141,61,167,105,142,61,106,109,143,61,11,114,144,61,139,119,145,61,234,125,146,61,40,133,147,61,67,141,148,61,61,150,149,61,20,160,150,61,201,170,151,61,92,182,152,61,203,194,153,61,24,208,154,61,66,222,155,61,72,237,156,61,42,253,157,61,233,13,159,61,132,31,160,61,250,49,161,61,76,69,162,61,122,89,163,61,130,110,164,61,101,132,165,61,35,155,166,61,188,178,167,61,47,203,168,61,124,228,169,61,162,254,170,61,163,25,172,61,124,53,173,61,47,82,174,61,187,111,175,61,31,142,176,61,92,173,177,61,113,205,178,61,94,238,179,61,35,16,181,61,192,50,182,61,52,86,183,61,127,122,184,61,160,159,185,61,153,197,186,61,104,236,187,61,13,20,189,61,136,60,190,61,217,101,191,61,255,143,192,61,250,186,193,61,202,230,194,61,111,19,196,61,233,64,197,61,55,111,198,61,89,158,199,61,78,206,200,61,23,255,201,61,179,48,203,61,35,99,204,61,101,150,205,61,121,202,206,61,96,255,207,61,25,53,209,61,164,107,210,61,0,163,211,61,45,219,212,61,44,20,214,61,251,77,215,61,154,136,216,61,10,196,217,61,74,0,219,61,89,61,220,61,56,123,221,61,230,185,222,61,99,249,223,61,174,57,225,61,200,122,226,61,176,188,227,61,102,255,228,61,233,66,230,61,58,135,231,61,88,204,232,61,66,18,234,61,249,88,235,61,124,160,236,61,203,232,237,61,230,49,239,61,204,123,240,61,125,198,241,61,249,17,243,61,63,94,244,61,79,171,245,61,42,249,246,61,206,71,248,61,60,151,249,61,114,231,250,61,114,56,252,61,58,138,253,61,202,220,254,61,17,24,0,62,33,194,0,62,149,108,1,62,108,23,2,62,166,194,2,62,68,110,3,62,69,26,4,62,168,198,4,62,111,115,5,62,152,32,6,62,35,206,6,62,17,124,7,62,98,42,8,62,20,217,8,62,40,136,9,62,157,55,10,62,117,231,10,62,173,151,11,62,71,72,12,62,66,249,12,62,158,170,13,62,91,92,14,62,120,14,15,62,246,192,15,62,213,115,16,62,19,39,17,62,177,218,17,62,175,142,18,62,13,67,19,62,202,247,19,62,231,172,20,62,99,98,21,62,62,24,22,62,120,206,22,62,16,133,23,62,7,60,24,62,92,243,24,62,16,171,25,62,33,99,26,62,145,27,27,62,94,212,27,62,137,141,28,62,17,71,29,62,246,0,30,62,56,187,30,62,215,117,31,62,211,48,32,62,43,236,32,62,224,167,33,62,241,99,34,62,93,32,35,62,38,221,35,62,74,154,36,62,202,87,37,62,165,21,38,62,219,211,38,62,108,146,39,62,88,81,40,62,159,16,41,62,64,208,41,62,59,144,42,62,144,80,43,62,63,17,44,62,72,210,44,62,170,147,45,62,102,85,46,62,122,23,47,62,232,217,47,62,175,156,48,62,206,95,49,62,69,35,50,62,21,231,50,62,61,171,51,62,189,111,52,62,148,52,53,62,195,249,53,62,73,191,54,62,38,133,55,62,91,75,56,62,230,17,57,62,199,216,57,62,255,159,58,62,141,103,59,62,113,47,60,62,171,247,60,62,59,192,61,62,31,137,62,62,89,82,63,62,232,27,64,62,204,229,64,62,5,176,65,62,146,122,66,62,115,69,67,62,168,16,68,62,49,220,68,62,14,168,69,62,62,116,70,62,194,64,71,62,152,13,72,62,193,218,72,62,61,168,73,62,12,118,74,62,44,68,75,62,159,18,76,62,100,225,76,62,122,176,77,62,225,127,78,62,154,79,79,62,164,31,80,62,255,239,80,62,170,192,81,62,166,145,82,62,242,98,83,62,141,52,84,62,121,6,85,62,180,216,85,62,63,171,86,62,25,126,87,62,65,81,88,62,185,36,89,62,126,248,89,62,147,204,90,62,245,160,91,62,165,117,92,62,163,74,93,62,238,31,94,62,135,245,94,62,109,203,95,62,159,161,96,62,30,120,97,62,233,78,98,62,1,38,99,62,100,253,99,62,19,213,100,62,14,173,101,62,84,133,102,62,229,93,103,62,193,54,104,62,231,15,105,62,88,233,105,62,19,195,106,62,24,157,107,62,103,119,108,62,255,81,109,62,224,44,110,62,11,8,111,62,126,227,111,62,58,191,112,62,62,155,113,62,139,119,114,62,31,84,115,62,251,48,116,62,31,14,117,62,138,235,117,62,59,201,118,62,52,167,119,62,115,133,120,62,248,99,121,62,196,66,122,62,213,33,123,62,44,1,124,62,200,224,124,62,170,192,125,62,208,160,126,62,59,129,127,62,245,48,128,62,111,161,128,62,11,18,129,62,201,130,129,62,168,243,129,62,169,100,130,62,204,213,130,62,15,71,131,62,117,184,131,62,251,41,132,62,162,155,132,62,107,13,133,62,84,127,133,62,93,241,133,62,136,99,134,62,210,213,134,62,61,72,135,62,200,186,135,62,116,45,136,62,63,160,136,62,42,19,137,62,52,134,137,62,94,249,137,62,168,108,138,62,17,224,138,62,153,83,139,62,64,199,139,62,6,59,140,62,235,174,140,62,239,34,141,62,17,151,141,62,82,11,142,62,177,127,142,62,46,244,142,62,201,104,143,62,130,221,143,62,89,82,144,62,78,199,144,62,96,60,145,62,143,177,145,62,220,38,146,62,70,156,146,62,205,17,147,62,113,135,147,62,50,253,147,62,16,115,148,62,9,233,148,62,32,95,149,62,82,213,149,62,161,75,150,62,12,194,150,62,146,56,151,62,53,175,151,62,243,37,152,62,204,156,152,62,193,19,153,62,209,138,153,62,252,1,154,62,66,121,154,62,163,240,154,62,31,104,155,62,181,223,155,62,101,87,156,62,48,207,156,62,21,71,157,62,20,191,157,62,45,55,158,62,96,175,158,62,172,39,159,62,18,160,159,62,145,24,160,62,41,145,160,62,218,9,161,62,165,130,161,62,136,251,161,62,132,116,162,62,152,237,162,62,197,102,163,62,10,224,163,62,103,89,164,62,220,210,164,62,105,76,165,62,14,198,165,62,202,63,166,62,158,185,166,62,137,51,167,62,139,173,167,62,164,39,168,62,213,161,168,62,27,28,169,62,121,150,169,62,237,16,170,62,119,139,170,62,24,6,171,62,206,128,171,62,155,251,171,62,125,118,172,62,117,241,172,62,130,108,173,62,165,231,173,62,221,98,174,62,42,222,174,62,140,89,175,62,2,213,175,62,142,80,176,62,46,204,176,62,226,71,177,62,170,195,177,62,135,63,178,62,119,187,178,62,124,55,179,62,148,179,179,62,191,47,180,62,254,171,180,62,80,40,181,62,181,164,181,62,45,33,182,62,184,157,182,62,85,26,183,62,5,151,183,62,199,19,184,62,156,144,184,62,130,13,185,62,123,138,185,62,133,7,186,62,161,132,186,62,206,1,187,62,13,127,187,62,93,252,187,62,190,121,188,62,48,247,188,62,178,116,189,62,70,242,189,62,233,111,190,62,157,237,190,62,98,107,191,62,54,233,191,62,26,103,192,62,14,229,192,62,17,99,193,62,36,225,193,62,70,95,194,62,119,221,194,62,184,91,195,62,7,218,195,62,100,88,196,62,209,214,196,62,75,85,197,62,212,211,197,62,107,82,198,62,16,209,198,62,195,79,199,62,132,206,199,62,82,77,200,62,45,204,200,62,21,75,201,62,11,202,201,62,13,73,202,62,29,200,202,62,56,71,203,62,97,198,203,62,149,69,204,62,214,196,204,62,34,68,205,62,123,195,205,62,223,66,206,62,79,194,206,62,202,65,207,62,81,193,207,62,226,64,208,62,127,192,208,62,38,64,209,62,216,191,209,62,148,63,210,62,91,191,210,62,44,63,211,62,7,191,211,62,235,62,212,62,218,190,212,62,210,62,213,62,211,190,213,62,222,62,214,62,242,190,214,62,15,63,215,62,53,191,215,62,99,63,216,62,154,191,216,62,217,63,217,62,32,192,217,62,112,64,218,62,199,192,218,62,38,65,219,62,140,193,219,62,250,65,220,62,112,194,220,62,236,66,221,62,112,195,221,62,250,67,222,62,139,196,222,62,34,69,223,62,192,197,223,62,100,70,224,62,14,199,224,62,189,71,225,62,115,200,225,62,46,73,226,62,239,201,226,62,181,74,227,62,127,203,227,62,79,76,228,62,36,205,228,62,253,77,229,62,219,206,229,62,190,79,230,62,164,208,230,62,142,81,231,62,125,210,231,62,111,83,232,62,100,212,232,62,93,85,233,62,89,214,233,62,89,87,234,62,91,216,234,62,96,89,235,62,104,218,235,62,114,91,236,62,126,220,236,62,141,93,237,62,158,222,237,62,176,95,238,62,196,224,238,62,218,97,239,62,241,226,239,62,10,100,240,62,35,229,240,62,62,102,241,62,89,231,241,62,116,104,242,62,145,233,242,62,173,106,243,62,202,235,243,62,230,108,244,62,3,238,244,62,31,111,245,62,59,240,245,62,86,113,246,62,112,242,246,62,137,115,247,62,161,244,247,62,184,117,248,62,206,246,248,62,226,119,249,62,244,248,249,62,4,122,250,62,18,251,250,62,30,124,251,62,40,253,251,62,47,126,252,62,52,255,252,62,54,128,253,62,52,1,254,62,48,130,254,62,40,3,255,62,29,132,255,62,135,2,0,63,254,66,0,63,115,131,0,63,230,195,0,63,86,4,1,63,197,68,1,63,49,133,1,63,155,197,1,63,3,6,2,63,103,70,2,63,202,134,2,63,42,199,2,63,135,7,3,63,225,71,3,63,56,136,3,63,141,200,3,63,222,8,4,63,44,73,4,63,119,137,4,63,191,201,4,63,3,10,5,63,68,74,5,63,130,138,5,63,188,202,5,63,242,10,6,63,36,75,6,63,83,139,6,63,126,203,6,63,165,11,7,63,199,75,7,63,230,139,7,63,1,204,7,63,23,12,8,63,41,76,8,63,54,140,8,63,63,204,8,63,67,12,9,63,67,76,9,63,62,140,9,63,52,204,9,63,37,12,10,63,18,76,10,63,249,139,10,63,219,203,10,63,184,11,11,63,144,75,11,63,98,139,11,63,47,203,11,63,246,10,12,63,184,74,12,63,116,138,12,63,43,202,12,63,219,9,13,63,134,73,13,63,43,137,13,63,202,200,13,63,98,8,14,63,245,71,14,63,129,135,14,63,7,199,14,63,135,6,15,63,0,70,15,63,114,133,15,63,222,196,15,63,67,4,16,63,161,67,16,63,249,130,16,63,73,194,16,63,147,1,17,63,213,64,17,63,17,128,17,63,69,191,17,63,114,254,17,63,151,61,18,63,181,124,18,63,203,187,18,63,218,250,18,63,225,57,19,63,225,120,19,63,216,183,19,63,200,246,19,63,176,53,20,63,143,116,20,63,103,179,20,63,54,242,20,63,253,48,21,63,188,111,21,63,114,174,21,63,32,237,21,63,197,43,22,63,98,106,22,63,246,168,22,63,129,231,22,63,3,38,23,63,125,100,23,63,237,162,23,63,84,225,23,63,178,31,24,63,7,94,24,63,83,156,24,63,149,218,24,63,206,24,25,63,253,86,25,63,35,149,25,63,63,211,25,63,82,17,26,63,90,79,26,63,89,141,26,63,78,203,26,63,57,9,27,63,25,71,27,63,240,132,27,63,188,194,27,63,126,0,28,63,54,62,28,63,227,123,28,63,134,185,28,63,30,247,28,63,172,52,29,63,47,114,29,63,167,175,29,63,20,237,29,63,118,42,30,63,206,103,30,63,26,165,30,63,91,226,30,63,145,31,31,63,188,92,31,63,219,153,31,63,239,214,31,63,247,19,32,63,244,80,32,63,230,141,32,63,203,202,32,63,165,7,33,63,115,68,33,63,53,129,33,63,235,189,33,63,150,250,33,63,52,55,34,63,198,115,34,63,75,176,34,63,197,236,34,63,50,41,35,63,146,101,35,63,230,161,35,63,46,222,35,63,105,26,36,63,151,86,36,63,185,146,36,63,205,206,36,63,213,10,37,63,208,70,37,63,190,130,37,63,158,190,37,63,114,250,37,63,56,54,38,63,241,113,38,63,157,173,38,63,59,233,38,63,204,36,39,63,79,96,39,63,197,155,39,63,45,215,39,63,135,18,40,63,211,77,40,63,18,137,40,63,66,196,40,63,101,255,40,63,121,58,41,63,128,117,41,63,120,176,41,63,98,235,41,63,62,38,42,63,11,97,42,63,202,155,42,63,122,214,42,63,28,17,43,63,175,75,43,63,52,134,43,63,170,192,43,63,16,251,43,63,105,53,44,63,178,111,44,63,236,169,44,63,23,228,44,63,51,30,45,63,64,88,45,63,61,146,45,63,43,204,45,63,10,6,46,63,218,63,46,63,154,121,46,63,74,179,46,63,235,236,46,63,124,38,47,63,254,95,47,63,112,153,47,63,210,210,47,63,36,12,48,63,102,69,48,63,152,126,48,63,186,183,48,63,204,240,48,63,205,41,49,63,191,98,49,63,160,155,49,63,113,212,49,63,49,13,50,63,225,69,50,63,128,126,50,63,15,183,50,63,141,239,50,63,251,39,51,63,87,96,51,63,163,152,51,63,222,208,51,63,8,9,52,63,34,65,52,63,42,121,52,63,33,177,52,63,7,233,52,63,219,32,53,63,159,88,53,63,81,144,53,63,242,199,53,63,129,255,53,63,255,54,54,63,108,110,54,63,198,165,54,63,16,221,54,63,71,20,55,63,109,75,55,63,129,130,55,63,131,185,55,63,116,240,55,63,82,39,56,63,30,94,56,63,217,148,56,63,129,203,56,63,23,2,57,63,155,56,57,63,13,111,57,63,108,165,57,63,185,219,57,63,244,17,58,63,28,72,58,63,50,126,58,63,53,180,58,63,38,234,58,63,4,32,59,63,207,85,59,63,135,139,59,63,45,193,59,63,192,246,59,63,64,44,60,63,173,97,60,63,7,151,60,63,78,204,60,63,130,1,61,63,163,54,61,63,177,107,61,63,171,160,61,63,146,213,61,63,102,10,62,63,39,63,62,63,212,115,62,63,110,168,62,63,244,220,62,63,103,17,63,63,198,69,63,63,17,122,63,63,73,174,63,63,109,226,63,63,126,22,64,63,122,74,64,63,99,126,64,63,56,178,64,63,248,229,64,63,165,25,65,63,62,77,65,63,195,128,65,63,52,180,65,63,144,231,65,63,216,26,66,63,13,78,66,63,44,129,66,63,56,180,66,63,47,231,66,63,18,26,67,63,224,76,67,63,154,127,67,63,64,178,67,63,208,228,67,63,77,23,68,63,180,73,68,63,7,124,68,63,69,174,68,63,111,224,68,63,131,18,69,63,131,68,69,63,110,118,69,63,68,168,69,63,5,218,69,63,177,11,70,63,72,61,70,63,202,110,70,63,55,160,70,63,143,209,70,63,210,2,71,63,255,51,71,63,23,101,71,63,26,150,71,63,8,199,71,63,224,247,71,63,163,40,72,63,81,89,72,63,233,137,72,63,107,186,72,63,216,234,72,63,48,27,73,63,114,75,73,63,158,123,73,63,181,171,73,63,181,219,73,63,161,11,74,63,118,59,74,63,54,107,74,63,224,154,74,63,116,202,74,63,242,249,74,63,90,41,75,63,173,88,75,63,233,135,75,63,15,183,75,63,32,230,75,63,26,21,76,63,254,67,76,63,204,114,76,63,132,161,76,63,38,208,76,63,177,254,76,63,38,45,77,63,133,91,77,63,206,137,77,63,0,184,77,63,28,230,77,63,34,20,78,63,17,66,78,63,234,111,78,63,172,157,78,63,88,203,78,63,238,248,78,63,108,38,79,63,213,83,79,63,38,129,79,63,97,174,79,63,134,219,79,63,147,8,80,63,138,53,80,63,107,98,80,63,52,143,80,63,231,187,80,63,131,232,80,63,8,21,81,63,119,65,81,63,206,109,81,63,15,154,81,63,57,198,81,63,76,242,81,63,71,30,82,63,44,74,82,63,250,117,82,63,177,161,82,63,81,205,82,63,218,248,82,63,76,36,83,63,166,79,83,63,234,122,83,63,22,166,83,63,44,209,83,63,42,252,83,63,17,39,84,63,224,81,84,63,153,124,84,63,58,167,84,63,196,209,84,63,54,252,84,63,146,38,85,63,214,80,85,63,2,123,85,63,24,165,85,63,22,207,85,63,252,248,85,63,204,34,86,63,131,76,86,63,36,118,86,63,172,159,86,63,30,201,86,63,120,242,86,63,186,27,87,63,229,68,87,63,248,109,87,63,244,150,87,63,216,191,87,63,165,232,87,63,90,17,88,63,248,57,88,63,126,98,88,63,236,138,88,63,67,179,88,63,130,219,88,63,169,3,89,63,185,43,89,63,177,83,89,63,145,123,89,63,90,163,89,63,11,203,89,63,164,242,89,63,37,26,90,63,143,65,90,63,225,104,90,63,27,144,90,63,62,183,90,63,72,222,90,63,59,5,91,63,22,44,91,63,217,82,91,63,133,121,91,63,24,160,91,63,148,198,91,63,248,236,91,63,68,19,92,63,120,57,92,63,149,95,92,63,153,133,92,63,134,171,92,63,91,209,92,63,24,247,92,63,189,28,93,63,74,66,93,63,191,103,93,63,28,141,93,63,98,178,93,63,143,215,93,63,165,252,93,63,162,33,94,63,136,70,94,63,86,107,94,63,11,144,94,63,169,180,94,63,47,217,94,63,157,253,94,63,243,33,95,63,49,70,95,63,88,106,95,63,102,142,95,63,92,178,95,63,59,214,95,63,1,250,95,63,175,29,96,63,70,65,96,63,196,100,96,63,43,136,96,63,122,171,96,63,176,206,96,63,207,241,96,63,214,20,97,63,197,55,97,63,155,90,97,63,90,125,97,63,1,160,97,63,144,194,97,63,8,229,97,63,103,7,98,63,174,41,98,63,221,75,98,63,245,109,98,63,244,143,98,63,220,177,98,63,171,211,98,63,99,245,98,63,3,23,99,63,139,56,99,63,251,89,99,63,83,123,99,63,147,156,99,63,188,189,99,63,204,222,99,63,197,255,99,63,166,32,100,63,110,65,100,63,32,98,100,63,185,130,100,63,58,163,100,63,164,195,100,63,245,227,100,63,47,4,101,63,82,36,101,63,92,68,101,63,78,100,101,63,41,132,101,63,236,163,101,63,151,195,101,63,43,227,101,63,167,2,102,63,11,34,102,63,87,65,102,63,139,96,102,63,168,127,102,63,174,158,102,63,155,189,102,63,113,220,102,63,47,251,102,63,214,25,103,63,101,56,103,63,220,86,103,63,59,117,103,63,132,147,103,63,180,177,103,63,205,207,103,63,206,237,103,63,184,11,104,63,138,41,104,63,69,71,104,63,233,100,104,63,116,130,104,63,233,159,104,63,69,189,104,63,139,218,104,63,185,247,104,63,207,20,105,63,207,49,105,63,182,78,105,63,135,107,105,63,64,136,105,63,225,164,105,63,108,193,105,63,223,221,105,63,59,250,105,63,127,22,106,63,172,50,106,63,195,78,106,63,193,106,106,63,169,134,106,63,121,162,106,63,51,190,106,63,213,217,106,63,96,245,106,63,212,16,107,63,48,44,107,63,118,71,107,63,165,98,107,63,188,125,107,63,189,152,107,63,167,179,107,63,121,206,107,63,53,233,107,63,218,3,108,63,104,30,108,63,223,56,108,63,63,83,108,63,136,109,108,63,187,135,108,63,214,161,108,63,219,187,108,63,201,213,108,63,161,239,108,63,97,9,109,63,11,35,109,63,159,60,109,63,27,86,109,63,129,111,109,63,209,136,109,63,9,162,109,63,44,187,109,63,56,212,109,63,45,237,109,63,12,6,110,63,212,30,110,63,134,55,110,63,33,80,110,63,166,104,110,63,21,129,110,63,110,153,110,63,176,177,110,63,220,201,110,63,241,225,110,63,241,249,110,63,218,17,111,63,173,41,111,63,106,65,111,63,16,89,111,63,161,112,111,63,28,136,111,63,128,159,111,63,207,182,111,63,7,206,111,63,42,229,111,63,54,252,111,63,45,19,112,63,14,42,112,63,217,64,112,63,142,87,112,63,46,110,112,63,184,132,112,63,43,155,112,63,138,177,112,63,210,199,112,63,5,222,112,63,35,244,112,63,42,10,113,63,29,32,113,63,249,53,113,63,193,75,113,63,114,97,113,63,15,119,113,63,150,140,113,63,7,162,113,63,99,183,113,63,170,204,113,63,220,225,113,63,249,246,113,63,0,12,114,63,242,32,114,63,207,53,114,63,151,74,114,63,73,95,114,63,231,115,114,63,112,136,114,63,227,156,114,63,66,177,114,63,140,197,114,63,193,217,114,63,225,237,114,63,236,1,115,63,227,21,115,63,197,41,115,63,146,61,115,63,74,81,115,63,238,100,115,63,125,120,115,63,248,139,115,63,94,159,115,63,175,178,115,63,236,197,115,63,21,217,115,63,41,236,115,63,41,255,115,63,21,18,116,63,236,36,116,63,175,55,116,63,94,74,116,63,248,92,116,63,127,111,116,63,241,129,116,63,80,148,116,63,154,166,116,63,208,184,116,63,242,202,116,63,1,221,116,63,251,238,116,63,226,0,117,63,181,18,117,63,116,36,117,63,31,54,117,63,183,71,117,63,59,89,117,63,171,106,117,63,8,124,117,63,81,141,117,63,135,158,117,63,169,175,117,63,184,192,117,63,179,209,117,63,155,226,117,63,112,243,117,63,50,4,118,63,224,20,118,63,123,37,118,63,3,54,118,63,120,70,118,63,217,86,118,63,40,103,118,63,100,119,118,63,140,135,118,63,162,151,118,63,165,167,118,63,149,183,118,63,114,199,118,63,61,215,118,63,245,230,118,63,154,246,118,63,44,6,119,63,172,21,119,63,26,37,119,63,117,52,119,63,189,67,119,63,243,82,119,63,22,98,119,63,40,113,119,63,39,128,119,63,19,143,119,63,238,157,119,63,182,172,119,63,108,187,119,63,16,202,119,63,162,216,119,63,34,231,119,63,144,245,119,63,236,3,120,63,55,18,120,63,111,32,120,63,150,46,120,63,170,60,120,63,174,74,120,63,159,88,120,63,127,102,120,63,77,116,120,63,10,130,120,63,181,143,120,63,79,157,120,63,215,170,120,63,78,184,120,63,180,197,120,63,8,211,120,63,76,224,120,63,126,237,120,63,158,250,120,63,174,7,121,63,173,20,121,63,155,33,121,63,119,46,121,63,67,59,121,63,254,71,121,63,168,84,121,63,66,97,121,63,202,109,121,63,66,122,121,63,169,134,121,63,0,147,121,63,70,159,121,63,124,171,121,63,161,183,121,63,181,195,121,63,186,207,121,63,173,219,121,63,145,231,121,63,100,243,121,63,40,255,121,63,219,10,122,63,126,22,122,63,16,34,122,63,147,45,122,63,6,57,122,63,105,68,122,63,188,79,122,63,255,90,122,63,51,102,122,63,86,113,122,63,106,124,122,63,111,135,122,63,99,146,122,63,72,157,122,63,30,168,122,63,228,178,122,63,155,189,122,63,66,200,122,63,218,210,122,63,99,221,122,63,221,231,122,63,71,242,122,63,162,252,122,63,238,6,123,63,43,17,123,63,89,27,123,63,120,37,123,63,137,47,123,63,138,57,123,63,124,67,123,63,96,77,123,63,53,87,123,63,252,96,123,63,179,106,123,63,92,116,123,63,247,125,123,63,131,135,123,63,1,145,123,63,112,154,123,63,209,163,123,63,36,173,123,63,104,182,123,63,158,191,123,63,198,200,123,63,224,209,123,63,236,218,123,63,234,227,123,63,218,236,123,63,188,245,123,63,144,254,123,63,86,7,124,63,14,16,124,63,185,24,124,63,86,33,124,63,230,41,124,63,104,50,124,63,220,58,124,63,67,67,124,63,156,75,124,63,232,83,124,63,39,92,124,63,88,100,124,63,124,108,124,63,147,116,124,63,157,124,124,63,153,132,124,63,137,140,124,63,107,148,124,63,65,156,124,63,9,164,124,63,197,171,124,63,116,179,124,63,22,187,124,63,172,194,124,63,52,202,124,63,176,209,124,63,32,217,124,63,131,224,124,63,217,231,124,63,35,239,124,63,97,246,124,63,146,253,124,63,183,4,125,63,208,11,125,63,221,18,125,63,221,25,125,63,209,32,125,63,185,39,125,63,150,46,125,63,102,53,125,63,42,60,125,63,227,66,125,63,143,73,125,63,48,80,125,63,197,86,125,63,78,93,125,63,204,99,125,63,62,106,125,63,165,112,125,63,0,119,125,63,80,125,125,63,148,131,125,63,205,137,125,63,251,143,125,63,29,150,125,63,52,156,125,63,64,162,125,63,65,168,125,63,55,174,125,63,34,180,125,63,2,186,125,63,215,191,125,63,161,197,125,63,96,203,125,63,21,209,125,63,190,214,125,63,93,220,125,63,242,225,125,63,124,231,125,63,251,236,125,63,112,242,125,63,218,247,125,63,58,253,125,63,143,2,126,63,219,7,126,63,28,13,126,63,82,18,126,63,127,23,126,63,161,28,126,63,186,33,126,63,200,38,126,63,204,43,126,63,199,48,126,63,183,53,126,63,158,58,126,63,123,63,126,63,78,68,126,63,23,73,126,63,215,77,126,63,141,82,126,63,58,87,126,63,221,91,126,63,118,96,126,63,6,101,126,63,141,105,126,63,10,110,126,63,126,114,126,63,233,118,126,63,75,123,126,63,164,127,126,63,243,131,126,63,57,136,126,63,119,140,126,63,171,144,126,63,214,148,126,63,249,152,126,63,18,157,126,63,35,161,126,63,44,165,126,63,43,169,126,63,34,173,126,63,16,177,126,63,246,180,126,63,211,184,126,63,167,188,126,63,115,192,126,63,55,196,126,63,243,199,126,63,166,203,126,63,81,207,126,63,243,210,126,63,142,214,126,63,32,218,126,63,171,221,126,63,45,225,126,63,167,228,126,63,26,232,126,63,132,235,126,63,231,238,126,63,66,242,126,63,149,245,126,63,224,248,126,63,36,252,126,63,96,255,126,63,148,2,127,63,193,5,127,63,230,8,127,63,4,12,127,63,27,15,127,63,42,18,127,63,50,21,127,63,50,24,127,63,43,27,127,63,29,30,127,63,8,33,127,63,236,35,127,63,201,38,127,63,158,41,127,63,109,44,127,63,53,47,127,63,246,49,127,63,175,52,127,63,99,55,127,63,15,58,127,63,181,60,127,63,83,63,127,63,236,65,127,63,125,68,127,63,8,71,127,63,141,73,127,63,11,76,127,63,131,78,127,63,244,80,127,63,95,83,127,63,195,85,127,63,33,88,127,63,121,90,127,63,203,92,127,63,23,95,127,63,92,97,127,63,155,99,127,63,213,101,127,63,8,104,127,63,54,106,127,63,93,108,127,63,127,110,127,63,155,112,127,63,177,114,127,63,193,116,127,63,203,118,127,63,208,120,127,63,207,122,127,63,201,124,127,63,189,126,127,63,171,128,127,63,148,130,127,63,120,132,127,63,86,134,127,63,47,136,127,63,2,138,127,63,209,139,127,63,153,141,127,63,93,143,127,63,28,145,127,63,213,146,127,63,137,148,127,63,57,150,127,63,227,151,127,63,136,153,127,63,40,155,127,63,196,156,127,63,90,158,127,63,236,159,127,63,121,161,127,63,1,163,127,63,132,164,127,63,3,166,127,63,125,167,127,63,242,168,127,63,99,170,127,63,207,171,127,63,55,173,127,63,154,174,127,63,249,175,127,63,84,177,127,63,170,178,127,63,251,179,127,63,73,181,127,63,146,182,127,63,215,183,127,63,24,185,127,63,85,186,127,63,141,187,127,63,193,188,127,63,242,189,127,63,30,191,127,63,71,192,127,63,107,193,127,63,140,194,127,63,168,195,127,63,193,196,127,63,214,197,127,63,231,198,127,63,245,199,127,63,255,200,127,63,5,202,127,63,7,203,127,63,6,204,127,63,1,205,127,63,249,205,127,63,237,206,127,63,222,207,127,63,203,208,127,63,181,209,127,63,156,210,127,63,127,211,127,63,95,212,127,63,59,213,127,63,20,214,127,63,234,214,127,63,189,215,127,63,141,216,127,63,90,217,127,63,35,218,127,63,233,218,127,63,173,219,127,63,109,220,127,63,43,221,127,63,229,221,127,63,156,222,127,63,81,223,127,63,3,224,127,63,178,224,127,63,94,225,127,63,7,226,127,63,174,226,127,63,82,227,127,63,243,227,127,63,146,228,127,63,46,229,127,63,199,229,127,63,94,230,127,63,242,230,127,63,132,231,127,63,19,232,127,63,160,232,127,63,42,233,127,63,178,233,127,63,56,234,127,63,187,234,127,63,60,235,127,63,187,235,127,63,55,236,127,63,177,236,127,63,41,237,127,63,159,237,127,63,18,238,127,63,132,238,127,63,243,238,127,63,96,239,127,63,204,239,127,63,53,240,127,63,156,240,127,63,1,241,127,63,101,241,127,63,198,241,127,63,37,242,127,63,131,242,127,63,222,242,127,63,56,243,127,63,144,243,127,63,231,243,127,63,59,244,127,63,142,244,127,63,223,244,127,63,46,245,127,63,124,245,127,63,200,245,127,63,19,246,127,63,91,246,127,63,163,246,127,63,233,246,127,63,45,247,127,63,111,247,127,63,177,247,127,63,240,247,127,63,47,248,127,63,108,248,127,63,167,248,127,63,225,248,127,63,26,249,127,63,82,249,127,63,136,249,127,63,188,249,127,63,240,249,127,63,34,250,127,63,83,250,127,63,131,250,127,63,178,250,127,63,224,250,127,63,12,251,127,63,55,251,127,63,97,251,127,63,138,251,127,63,178,251,127,63,217,251,127,63,255,251,127,63,36,252,127,63,72,252,127,63,107,252,127,63,141,252,127,63,173,252,127,63,205,252,127,63,237,252,127,63,11,253,127,63,40,253,127,63,69,253,127,63,96,253,127,63,123,253,127,63,149,253,127,63,174,253,127,63,199,253,127,63,222,253,127,63,245,253,127,63,12,254,127,63,33,254,127,63,54,254,127,63,74,254,127,63,93,254,127,63,112,254,127,63,130,254,127,63,148,254,127,63,165,254,127,63,181,254,127,63,197,254,127,63,212,254,127,63,227,254,127,63,241,254,127,63,254,254,127,63,11,255,127,63,24,255,127,63,36,255,127,63,47,255,127,63,59,255,127,63,69,255,127,63,79,255,127,63,89,255,127,63,99,255,127,63,108,255,127,63,116,255,127,63,124,255,127,63,132,255,127,63,140,255,127,63,147,255,127,63,154,255,127,63,160,255,127,63,166,255,127,63,172,255,127,63,178,255,127,63,183,255,127,63,188,255,127,63,193,255,127,63,197,255,127,63,202,255,127,63,206,255,127,63,209,255,127,63,213,255,127,63,216,255,127,63,220,255,127,63,223,255,127,63,225,255,127,63,228,255,127,63,230,255,127,63,233,255,127,63,235,255,127,63,237,255,127,63,239,255,127,63,240,255,127,63,242,255,127,63,243,255,127,63,245,255,127,63,246,255,127,63,247,255,127,63,248,255,127,63,249,255,127,63,250,255,127,63,251,255,127,63,251,255,127,63,252,255,127,63,252,255,127,63,253,255,127,63,253,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,198,63,120,51,98,136,11,53,151,200,193,53,80,233,61,54,183,247,156,54,46,124,234,54,153,192,35,55,244,2,90,55,56,3,140,55,227,228,174,55,177,166,213,55,108,36,0,56,146,101,23,56,201,150,48,56,18,184,75,56,81,201,104,56,94,229,131,56,29,94,148,56,229,206,165,56,167,55,184,56,128,152,203,56,85,241,223,56,36,66,245,56,126,197,5,57,238,101,17,57,99,130,29,57,207,26,42,57,63,47,55,57,179,191,68,57,30,204,82,57,141,84,97,57,243,88,112,57,94,217,127,57,227,234,135,57,18,39,144,57,64,161,152,57,105,89,161,57,146,79,170,57,181,131,179,57,215,245,188,57,245,165,198,57,14,148,208,57,34,192,218,57,46,42,229,57,57,210,239,57,60,184,250,57,27,238,2,58,22,159,8,58,13,111,14,58,0,94,20,58,239,107,26,58,218,152,32,58,192,228,38,58,161,79,45,58,124,217,51,58,83,130,58,58,37,74,65,58,240,48,72,58,182,54,79,58,116,91,86,58,45,159,93,58,222,1,101,58,136,131,108,58,42,36,116,58,196,227,123,58,44,225,129,58,241,223,133,58,49,238,137,58,238,11,142,58,37,57,146,58,215,117,150,58,5,194,154,58,174,29,159,58,209,136,163,58,110,3,168,58,134,141,172,58,24,39,177,58,36,208,181,58,169,136,186,58,169,80,191,58,33,40,196,58,19,15,201,58,126,5,206,58,98,11,211,58,191,32,216,58,148,69,221,58,225,121,226,58,166,189,231,58,227,16,237,58,152,115,242,58,196,229,247,58,103,103,253,58,65,124,1,59,137,76,4,59,141,36,7,59,76,4,10,59,198,235,12,59,251,218,15,59,235,209,18,59,149,208,21,59,251,214,24,59,26,229,27,59,244,250,30,59,136,24,34,59,215,61,37,59,223,106,40,59,161,159,43,59,29,220,46,59,83,32,50,59,66,108,53,59,234,191,56,59,76,27,60,59,103,126,63,59,59,233,66,59,199,91,70,59,12,214,73,59,10,88,77,59,193,225,80,59,48,115,84,59,86,12,88,59,53,173,91,59,204,85,95,59,26,6,99,59,32,190,102,59,222,125,106,59,82,69,110,59,127,20,114,59,97,235,117,59,251,201,121,59,76,176,125,59,41,207,128,59,8,202,130,59,194,200,132,59], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+10240);
/* memory initializer */ allocate([87,203,134,59,198,209,136,59,17,220,138,59,55,234,140,59,55,252,142,59,18,18,145,59,199,43,147,59,87,73,149,59,194,106,151,59,6,144,153,59,37,185,155,59,30,230,157,59,241,22,160,59,158,75,162,59,37,132,164,59,134,192,166,59,192,0,169,59,212,68,171,59,193,140,173,59,137,216,175,59,41,40,178,59,163,123,180,59,245,210,182,59,33,46,185,59,38,141,187,59,4,240,189,59,186,86,192,59,73,193,194,59,177,47,197,59,242,161,199,59,10,24,202,59,251,145,204,59,196,15,207,59,102,145,209,59,223,22,212,59,49,160,214,59,90,45,217,59,91,190,219,59,51,83,222,59,227,235,224,59,107,136,227,59,201,40,230,59,255,204,232,59,12,117,235,59,240,32,238,59,171,208,240,59,61,132,243,59,165,59,246,59,228,246,248,59,250,181,251,59,229,120,254,59,212,159,0,60,32,5,2,60,87,108,3,60,121,213,4,60,134,64,6,60,126,173,7,60,96,28,9,60,45,141,10,60,229,255,11,60,136,116,13,60,21,235,14,60,141,99,16,60,239,221,17,60,59,90,19,60,114,216,20,60,147,88,22,60,158,218,23,60,147,94,25,60,115,228,26,60,60,108,28,60,240,245,29,60,141,129,31,60,20,15,33,60,133,158,34,60,224,47,36,60,36,195,37,60,82,88,39,60,105,239,40,60,106,136,42,60,84,35,44,60,40,192,45,60,229,94,47,60,139,255,48,60,26,162,50,60,146,70,52,60,243,236,53,60,61,149,55,60,112,63,57,60,140,235,58,60,145,153,60,60,126,73,62,60,84,251,63,60,18,175,65,60,185,100,67,60,72,28,69,60,192,213,70,60,31,145,72,60,103,78,74,60,151,13,76,60,175,206,77,60,176,145,79,60,152,86,81,60,103,29,83,60,31,230,84,60,190,176,86,60,69,125,88,60,179,75,90,60,9,28,92,60,71,238,93,60,107,194,95,60,119,152,97,60,106,112,99,60,68,74,101,60,5,38,103,60,173,3,105,60,60,227,106,60,178,196,108,60,14,168,110,60,81,141,112,60,123,116,114,60,139,93,116,60,130,72,118,60,95,53,120,60,34,36,122,60,203,20,124,60,90,7,126,60,208,251,127,60,22,249,128,60,54,245,129,60,74,242,130,60,80,240,131,60,73,239,132,60,53,239,133,60,19,240,134,60,229,241,135,60,169,244,136,60,95,248,137,60,8,253,138,60,164,2,140,60,50,9,141,60,178,16,142,60,37,25,143,60,139,34,144,60,226,44,145,60,44,56,146,60,104,68,147,60,150,81,148,60,182,95,149,60,201,110,150,60,205,126,151,60,196,143,152,60,172,161,153,60,135,180,154,60,83,200,155,60,17,221,156,60,193,242,157,60,98,9,159,60,245,32,160,60,122,57,161,60,241,82,162,60,89,109,163,60,178,136,164,60,253,164,165,60,57,194,166,60,103,224,167,60,134,255,168,60,151,31,170,60,152,64,171,60,139,98,172,60,111,133,173,60,68,169,174,60,10,206,175,60,193,243,176,60,105,26,178,60,2,66,179,60,139,106,180,60,6,148,181,60,113,190,182,60,205,233,183,60,26,22,185,60,87,67,186,60,133,113,187,60,163,160,188,60,177,208,189,60,177,1,191,60,160,51,192,60,128,102,193,60,80,154,194,60,16,207,195,60,193,4,197,60,97,59,198,60,242,114,199,60,114,171,200,60,227,228,201,60,67,31,203,60,147,90,204,60,211,150,205,60,3,212,206,60,34,18,208,60,49,81,209,60,48,145,210,60,30,210,211,60,252,19,213,60,201,86,214,60,133,154,215,60,49,223,216,60,204,36,218,60,86,107,219,60,208,178,220,60,56,251,221,60,144,68,223,60,214,142,224,60,12,218,225,60,48,38,227,60,67,115,228,60,69,193,229,60,54,16,231,60,21,96,232,60,227,176,233,60,160,2,235,60,75,85,236,60,228,168,237,60,108,253,238,60,226,82,240,60,70,169,241,60,153,0,243,60,218,88,244,60,8,178,245,60,37,12,247,60,48,103,248,60,41,195,249,60,15,32,251,60,228,125,252,60,166,220,253,60,85,60,255,60,121,78,0,61,63,255,0,61,123,176,1,61,46,98,2,61,88,20,3,61,248,198,3,61,15,122,4,61,156,45,5,61,161,225,5,61,27,150,6,61,12,75,7,61,116,0,8,61,82,182,8,61,167,108,9,61,113,35,10,61,179,218,10,61,106,146,11,61,152,74,12,61,60,3,13,61,87,188,13,61,231,117,14,61,238,47,15,61,107,234,15,61,94,165,16,61,199,96,17,61,166,28,18,61,251,216,18,61,198,149,19,61,7,83,20,61,190,16,21,61,234,206,21,61,141,141,22,61,165,76,23,61,52,12,24,61,56,204,24,61,177,140,25,61,161,77,26,61,6,15,27,61,224,208,27,61,48,147,28,61,246,85,29,61,49,25,30,61,226,220,30,61,8,161,31,61,164,101,32,61,181,42,33,61,59,240,33,61,55,182,34,61,168,124,35,61,142,67,36,61,233,10,37,61,186,210,37,61,255,154,38,61,186,99,39,61,234,44,40,61,143,246,40,61,168,192,41,61,55,139,42,61,59,86,43,61,180,33,44,61,161,237,44,61,4,186,45,61,219,134,46,61,38,84,47,61,231,33,48,61,28,240,48,61,198,190,49,61,229,141,50,61,120,93,51,61,127,45,52,61,251,253,52,61,236,206,53,61,81,160,54,61,42,114,55,61,120,68,56,61,58,23,57,61,112,234,57,61,27,190,58,61,58,146,59,61,204,102,60,61,211,59,61,61,79,17,62,61,62,231,62,61,161,189,63,61,120,148,64,61,195,107,65,61,130,67,66,61,181,27,67,61,92,244,67,61,118,205,68,61,4,167,69,61,6,129,70,61,124,91,71,61,101,54,72,61,194,17,73,61,146,237,73,61,214,201,74,61,141,166,75,61,184,131,76,61,86,97,77,61,104,63,78,61,236,29,79,61,229,252,79,61,80,220,80,61,46,188,81,61,128,156,82,61,69,125,83,61,125,94,84,61,40,64,85,61,69,34,86,61,214,4,87,61,218,231,87,61,81,203,88,61,58,175,89,61,150,147,90,61,101,120,91,61,167,93,92,61,91,67,93,61,130,41,94,61,28,16,95,61,40,247,95,61,167,222,96,61,152,198,97,61,251,174,98,61,209,151,99,61,25,129,100,61,212,106,101,61,0,85,102,61,159,63,103,61,176,42,104,61,51,22,105,61,41,2,106,61,144,238,106,61,105,219,107,61,180,200,108,61,113,182,109,61,160,164,110,61,65,147,111,61,84,130,112,61,216,113,113,61,206,97,114,61,54,82,115,61,15,67,116,61,89,52,117,61,22,38,118,61,67,24,119,61,226,10,120,61,243,253,120,61,117,241,121,61,104,229,122,61,204,217,123,61,162,206,124,61,232,195,125,61,160,185,126,61,201,175,127,61,49,83,128,61,183,206,128,61,117,74,129,61,107,198,129,61,154,66,130,61,1,191,130,61,160,59,131,61,120,184,131,61,136,53,132,61,209,178,132,61,81,48,133,61,10,174,133,61,251,43,134,61,37,170,134,61,134,40,135,61,32,167,135,61,242,37,136,61,252,164,136,61,62,36,137,61,184,163,137,61,106,35,138,61,84,163,138,61,118,35,139,61,209,163,139,61,99,36,140,61,45,165,140,61,46,38,141,61,104,167,141,61,218,40,142,61,131,170,142,61,100,44,143,61,125,174,143,61,206,48,144,61,86,179,144,61,23,54,145,61,14,185,145,61,62,60,146,61,165,191,146,61,67,67,147,61,26,199,147,61,39,75,148,61,109,207,148,61,234,83,149,61,158,216,149,61,138,93,150,61,173,226,150,61,7,104,151,61,153,237,151,61,98,115,152,61,99,249,152,61,155,127,153,61,10,6,154,61,176,140,154,61,142,19,155,61,163,154,155,61,239,33,156,61,114,169,156,61,44,49,157,61,29,185,157,61,69,65,158,61,165,201,158,61,59,82,159,61,8,219,159,61,13,100,160,61,72,237,160,61,186,118,161,61,99,0,162,61,67,138,162,61,90,20,163,61,167,158,163,61,43,41,164,61,230,179,164,61,216,62,165,61,0,202,165,61,95,85,166,61,245,224,166,61,193,108,167,61,196,248,167,61,254,132,168,61,110,17,169,61,20,158,169,61,241,42,170,61,4,184,170,61,78,69,171,61,206,210,171,61,133,96,172,61,113,238,172,61,149,124,173,61,238,10,174,61,126,153,174,61,67,40,175,61,63,183,175,61,114,70,176,61,218,213,176,61,120,101,177,61,77,245,177,61,88,133,178,61,152,21,179,61,15,166,179,61,187,54,180,61,158,199,180,61,182,88,181,61,4,234,181,61,137,123,182,61,67,13,183,61,50,159,183,61,88,49,184,61,179,195,184,61,68,86,185,61,11,233,185,61,7,124,186,61,57,15,187,61,160,162,187,61,61,54,188,61,16,202,188,61,24,94,189,61,85,242,189,61,200,134,190,61,112,27,191,61,78,176,191,61,97,69,192,61,170,218,192,61,39,112,193,61,218,5,194,61,194,155,194,61,224,49,195,61,50,200,195,61,186,94,196,61,119,245,196,61,104,140,197,61,143,35,198,61,235,186,198,61,124,82,199,61,66,234,199,61,61,130,200,61,108,26,201,61,209,178,201,61,106,75,202,61,57,228,202,61,59,125,203,61,115,22,204,61,224,175,204,61,129,73,205,61,86,227,205,61,97,125,206,61,159,23,207,61,19,178,207,61,187,76,208,61,151,231,208,61,168,130,209,61,237,29,210,61,103,185,210,61,21,85,211,61,248,240,211,61,14,141,212,61,89,41,213,61,216,197,213,61,140,98,214,61,115,255,214,61,143,156,215,61,223,57,216,61,99,215,216,61,27,117,217,61,7,19,218,61,38,177,218,61,122,79,219,61,2,238,219,61,189,140,220,61,173,43,221,61,208,202,221,61,39,106,222,61,178,9,223,61,112,169,223,61,98,73,224,61,136,233,224,61,226,137,225,61,111,42,226,61,47,203,226,61,35,108,227,61,74,13,228,61,165,174,228,61,52,80,229,61,245,241,229,61,234,147,230,61,19,54,231,61,110,216,231,61,253,122,232,61,191,29,233,61,180,192,233,61,221,99,234,61,56,7,235,61,199,170,235,61,136,78,236,61,125,242,236,61,164,150,237,61,255,58,238,61,140,223,238,61,76,132,239,61,63,41,240,61,101,206,240,61,189,115,241,61,73,25,242,61,7,191,242,61,247,100,243,61,26,11,244,61,112,177,244,61,248,87,245,61,179,254,245,61,160,165,246,61,192,76,247,61,18,244,247,61,151,155,248,61,77,67,249,61,55,235,249,61,82,147,250,61,159,59,251,61,31,228,251,61,209,140,252,61,181,53,253,61,203,222,253,61,19,136,254,61,141,49,255,61,57,219,255,61,140,66,0,62,148,151,0,62,181,236,0,62,238,65,1,62,65,151,1,62,173,236,1,62,49,66,2,62,206,151,2,62,132,237,2,62,83,67,3,62,59,153,3,62,59,239,3,62,84,69,4,62,134,155,4,62,209,241,4,62,52,72,5,62,176,158,5,62,68,245,5,62,242,75,6,62,183,162,6,62,150,249,6,62,141,80,7,62,156,167,7,62,196,254,7,62,5,86,8,62,94,173,8,62,207,4,9,62,89,92,9,62,252,179,9,62,183,11,10,62,138,99,10,62,118,187,10,62,122,19,11,62,150,107,11,62,203,195,11,62,24,28,12,62,125,116,12,62,250,204,12,62,144,37,13,62,62,126,13,62,4,215,13,62,227,47,14,62,217,136,14,62,232,225,14,62,15,59,15,62,78,148,15,62,165,237,15,62,20,71,16,62,155,160,16,62,58,250,16,62,241,83,17,62,193,173,17,62,168,7,18,62,167,97,18,62,190,187,18,62,237,21,19,62,51,112,19,62,146,202,19,62,9,37,20,62,151,127,20,62,61,218,20,62,251,52,21,62,209,143,21,62,190,234,21,62,195,69,22,62,224,160,22,62,21,252,22,62,97,87,23,62,197,178,23,62,64,14,24,62,211,105,24,62,126,197,24,62,64,33,25,62,26,125,25,62,11,217,25,62,20,53,26,62,52,145,26,62,108,237,26,62,187,73,27,62,34,166,27,62,160,2,28,62,53,95,28,62,226,187,28,62,166,24,29,62,129,117,29,62,116,210,29,62,126,47,30,62,159,140,30,62,215,233,30,62,39,71,31,62,141,164,31,62,11,2,32,62,160,95,32,62,76,189,32,62,16,27,33,62,234,120,33,62,219,214,33,62,228,52,34,62,3,147,34,62,58,241,34,62,135,79,35,62,235,173,35,62,103,12,36,62,249,106,36,62,162,201,36,62,98,40,37,62,56,135,37,62,38,230,37,62,42,69,38,62,69,164,38,62,119,3,39,62,192,98,39,62,31,194,39,62,149,33,40,62,33,129,40,62,197,224,40,62,126,64,41,62,79,160,41,62,54,0,42,62,51,96,42,62,72,192,42,62,114,32,43,62,179,128,43,62,11,225,43,62,121,65,44,62,253,161,44,62,152,2,45,62,73,99,45,62,16,196,45,62,238,36,46,62,226,133,46,62,237,230,46,62,13,72,47,62,68,169,47,62,145,10,48,62,245,107,48,62,110,205,48,62,254,46,49,62,163,144,49,62,95,242,49,62,49,84,50,62,25,182,50,62,23,24,51,62,43,122,51,62,85,220,51,62,148,62,52,62,234,160,52,62,86,3,53,62,216,101,53,62,111,200,53,62,28,43,54,62,223,141,54,62,184,240,54,62,167,83,55,62,171,182,55,62,197,25,56,62,245,124,56,62,59,224,56,62,150,67,57,62,7,167,57,62,141,10,58,62,41,110,58,62,219,209,58,62,162,53,59,62,126,153,59,62,112,253,59,62,120,97,60,62,149,197,60,62,199,41,61,62,15,142,61,62,108,242,61,62,222,86,62,62,102,187,62,62,3,32,63,62,181,132,63,62,125,233,63,62,90,78,64,62,75,179,64,62,83,24,65,62,111,125,65,62,160,226,65,62,231,71,66,62,66,173,66,62,179,18,67,62,57,120,67,62,211,221,67,62,131,67,68,62,71,169,68,62,33,15,69,62,15,117,69,62,18,219,69,62,42,65,70,62,87,167,70,62,153,13,71,62,240,115,71,62,91,218,71,62,219,64,72,62,111,167,72,62,25,14,73,62,215,116,73,62,169,219,73,62,144,66,74,62,140,169,74,62,157,16,75,62,193,119,75,62,251,222,75,62,73,70,76,62,171,173,76,62,34,21,77,62,173,124,77,62,76,228,77,62,0,76,78,62,200,179,78,62,164,27,79,62,149,131,79,62,154,235,79,62,179,83,80,62,225,187,80,62,34,36,81,62,120,140,81,62,225,244,81,62,95,93,82,62,241,197,82,62,151,46,83,62,81,151,83,62,31,0,84,62,1,105,84,62,247,209,84,62,0,59,85,62,30,164,85,62,79,13,86,62,149,118,86,62,238,223,86,62,91,73,87,62,219,178,87,62,112,28,88,62,24,134,88,62,211,239,88,62,163,89,89,62,134,195,89,62,124,45,90,62,134,151,90,62,164,1,91,62,213,107,91,62,26,214,91,62,114,64,92,62,221,170,92,62,92,21,93,62,239,127,93,62,148,234,93,62,77,85,94,62,26,192,94,62,249,42,95,62,236,149,95,62,242,0,96,62,11,108,96,62,55,215,96,62,119,66,97,62,202,173,97,62,47,25,98,62,168,132,98,62,52,240,98,62,210,91,99,62,132,199,99,62,73,51,100,62,32,159,100,62,11,11,101,62,8,119,101,62,24,227,101,62,59,79,102,62,113,187,102,62,186,39,103,62,21,148,103,62,131,0,104,62,3,109,104,62,151,217,104,62,60,70,105,62,245,178,105,62,192,31,106,62,157,140,106,62,141,249,106,62,144,102,107,62,165,211,107,62,204,64,108,62,6,174,108,62,82,27,109,62,176,136,109,62,33,246,109,62,164,99,110,62,57,209,110,62,225,62,111,62,154,172,111,62,102,26,112,62,68,136,112,62,52,246,112,62,55,100,113,62,75,210,113,62,113,64,114,62,169,174,114,62,243,28,115,62,80,139,115,62,190,249,115,62,61,104,116,62,207,214,116,62,115,69,117,62,40,180,117,62,239,34,118,62,200,145,118,62,179,0,119,62,175,111,119,62,189,222,119,62,221,77,120,62,14,189,120,62,80,44,121,62,165,155,121,62,10,11,122,62,130,122,122,62,10,234,122,62,164,89,123,62,80,201,123,62,13,57,124,62,219,168,124,62,186,24,125,62,171,136,125,62,173,248,125,62,192,104,126,62,228,216,126,62,26,73,127,62,96,185,127,62,220,20,128,62,16,77,128,62,77,133,128,62,147,189,128,62,225,245,128,62,55,46,129,62,150,102,129,62,253,158,129,62,109,215,129,62,229,15,130,62,102,72,130,62,238,128,130,62,128,185,130,62,25,242,130,62,187,42,131,62,102,99,131,62,24,156,131,62,211,212,131,62,150,13,132,62,98,70,132,62,53,127,132,62,17,184,132,62,245,240,132,62,226,41,133,62,214,98,133,62,211,155,133,62,216,212,133,62,229,13,134,62,250,70,134,62,23,128,134,62,61,185,134,62,106,242,134,62,160,43,135,62,221,100,135,62,35,158,135,62,112,215,135,62,198,16,136,62,35,74,136,62,137,131,136,62,247,188,136,62,108,246,136,62,233,47,137,62,111,105,137,62,252,162,137,62,145,220,137,62,46,22,138,62,211,79,138,62,127,137,138,62,52,195,138,62,240,252,138,62,180,54,139,62,128,112,139,62,84,170,139,62,47,228,139,62,18,30,140,62,253,87,140,62,239,145,140,62,233,203,140,62,235,5,141,62,245,63,141,62,6,122,141,62,31,180,141,62,63,238,141,62,103,40,142,62,150,98,142,62,205,156,142,62,12,215,142,62,82,17,143,62,159,75,143,62,245,133,143,62,81,192,143,62,181,250,143,62,33,53,144,62,147,111,144,62,14,170,144,62,143,228,144,62,25,31,145,62,169,89,145,62,65,148,145,62,224,206,145,62,134,9,146,62,52,68,146,62,233,126,146,62,165,185,146,62,105,244,146,62,52,47,147,62,6,106,147,62,223,164,147,62,191,223,147,62,167,26,148,62,150,85,148,62,139,144,148,62,136,203,148,62,140,6,149,62,152,65,149,62,170,124,149,62,195,183,149,62,227,242,149,62,11,46,150,62,57,105,150,62,111,164,150,62,171,223,150,62,238,26,151,62,56,86,151,62,138,145,151,62,226,204,151,62,65,8,152,62,167,67,152,62,19,127,152,62,135,186,152,62,1,246,152,62,130,49,153,62,10,109,153,62,153,168,153,62,47,228,153,62,203,31,154,62,110,91,154,62,24,151,154,62,200,210,154,62,127,14,155,62,61,74,155,62,2,134,155,62,205,193,155,62,158,253,155,62,119,57,156,62,85,117,156,62,59,177,156,62,39,237,156,62,25,41,157,62,18,101,157,62,18,161,157,62,24,221,157,62,36,25,158,62,55,85,158,62,80,145,158,62,112,205,158,62,150,9,159,62,195,69,159,62,246,129,159,62,47,190,159,62,111,250,159,62,180,54,160,62,1,115,160,62,83,175,160,62,172,235,160,62,11,40,161,62,112,100,161,62,219,160,161,62,77,221,161,62,196,25,162,62,66,86,162,62,198,146,162,62,81,207,162,62,225,11,163,62,119,72,163,62,20,133,163,62,182,193,163,62,95,254,163,62,13,59,164,62,194,119,164,62,125,180,164,62,61,241,164,62,4,46,165,62,208,106,165,62,162,167,165,62,123,228,165,62,89,33,166,62,61,94,166,62,39,155,166,62,23,216,166,62,12,21,167,62,7,82,167,62,8,143,167,62,15,204,167,62,28,9,168,62,46,70,168,62,70,131,168,62,100,192,168,62,136,253,168,62,177,58,169,62,223,119,169,62,20,181,169,62,78,242,169,62,141,47,170,62,211,108,170,62,29,170,170,62,109,231,170,62,195,36,171,62,31,98,171,62,127,159,171,62,230,220,171,62,81,26,172,62,194,87,172,62,57,149,172,62,181,210,172,62,54,16,173,62,189,77,173,62,73,139,173,62,218,200,173,62,113,6,174,62,13,68,174,62,174,129,174,62,85,191,174,62,0,253,174,62,177,58,175,62,103,120,175,62,35,182,175,62,227,243,175,62,169,49,176,62,116,111,176,62,68,173,176,62,25,235,176,62,243,40,177,62,210,102,177,62,182,164,177,62,160,226,177,62,142,32,178,62,129,94,178,62,121,156,178,62,119,218,178,62,121,24,179,62,128,86,179,62,140,148,179,62,157,210,179,62,178,16,180,62,205,78,180,62,236,140,180,62,16,203,180,62,57,9,181,62,103,71,181,62,154,133,181,62,209,195,181,62,13,2,182,62,78,64,182,62,147,126,182,62,221,188,182,62,44,251,182,62,127,57,183,62,215,119,183,62,52,182,183,62,149,244,183,62,251,50,184,62,101,113,184,62,212,175,184,62,71,238,184,62,191,44,185,62,59,107,185,62,188,169,185,62,65,232,185,62,202,38,186,62,88,101,186,62,235,163,186,62,129,226,186,62,28,33,187,62,188,95,187,62,95,158,187,62,7,221,187,62,180,27,188,62,100,90,188,62,25,153,188,62,210,215,188,62,143,22,189,62,80,85,189,62,22,148,189,62,223,210,189,62,173,17,190,62,127,80,190,62,85,143,190,62,47,206,190,62,13,13,191,62,239,75,191,62,213,138,191,62,191,201,191,62,173,8,192,62,159,71,192,62,149,134,192,62,143,197,192,62,141,4,193,62,143,67,193,62,148,130,193,62,158,193,193,62,171,0,194,62,188,63,194,62,209,126,194,62,234,189,194,62,6,253,194,62,38,60,195,62,74,123,195,62,113,186,195,62,157,249,195,62,204,56,196,62,254,119,196,62,52,183,196,62,110,246,196,62,171,53,197,62,236,116,197,62,49,180,197,62,121,243,197,62,196,50,198,62,19,114,198,62,102,177,198,62,188,240,198,62,21,48,199,62,114,111,199,62,210,174,199,62,54,238,199,62,157,45,200,62,7,109,200,62,117,172,200,62,230,235,200,62,90,43,201,62,209,106,201,62,76,170,201,62,202,233,201,62,75,41,202,62,208,104,202,62,88,168,202,62,226,231,202,62,112,39,203,62,1,103,203,62,149,166,203,62,45,230,203,62,199,37,204,62,100,101,204,62,4,165,204,62,168,228,204,62,78,36,205,62,248,99,205,62,164,163,205,62,83,227,205,62,5,35,206,62,186,98,206,62,114,162,206,62,45,226,206,62,234,33,207,62,171,97,207,62,110,161,207,62,52,225,207,62,253,32,208,62,200,96,208,62,150,160,208,62,103,224,208,62,59,32,209,62,17,96,209,62,234,159,209,62,198,223,209,62,164,31,210,62,133,95,210,62,104,159,210,62,78,223,210,62,55,31,211,62,33,95,211,62,15,159,211,62,255,222,211,62,241,30,212,62,230,94,212,62,221,158,212,62,215,222,212,62,211,30,213,62,209,94,213,62,210,158,213,62,213,222,213,62,219,30,214,62,226,94,214,62,236,158,214,62,248,222,214,62,7,31,215,62,24,95,215,62,42,159,215,62,63,223,215,62,87,31,216,62,112,95,216,62,139,159,216,62,169,223,216,62,200,31,217,62,234,95,217,62,14,160,217,62,51,224,217,62,91,32,218,62,133,96,218,62,176,160,218,62,222,224,218,62,13,33,219,62,63,97,219,62,114,161,219,62,167,225,219,62,222,33,220,62,23,98,220,62,82,162,220,62,142,226,220,62,204,34,221,62,12,99,221,62,78,163,221,62,146,227,221,62,215,35,222,62,29,100,222,62,102,164,222,62,176,228,222,62,252,36,223,62,73,101,223,62,152,165,223,62,232,229,223,62,58,38,224,62,142,102,224,62,227,166,224,62,57,231,224,62,145,39,225,62,234,103,225,62,69,168,225,62,161,232,225,62,255,40,226,62,94,105,226,62,190,169,226,62,32,234,226,62,131,42,227,62,231,106,227,62,76,171,227,62,179,235,227,62,27,44,228,62,132,108,228,62,238,172,228,62,90,237,228,62,199,45,229,62,52,110,229,62,163,174,229,62,19,239,229,62,133,47,230,62,247,111,230,62,106,176,230,62,222,240,230,62,83,49,231,62,202,113,231,62,65,178,231,62,185,242,231,62,50,51,232,62,172,115,232,62,38,180,232,62,162,244,232,62,31,53,233,62,156,117,233,62,26,182,233,62,153,246,233,62,25,55,234,62,153,119,234,62,26,184,234,62,156,248,234,62,31,57,235,62,162,121,235,62,38,186,235,62,170,250,235,62,47,59,236,62,181,123,236,62,59,188,236,62,194,252,236,62,73,61,237,62,209,125,237,62,89,190,237,62,226,254,237,62,107,63,238,62,245,127,238,62,127,192,238,62,10,1,239,62,149,65,239,62,32,130,239,62,171,194,239,62,55,3,240,62,196,67,240,62,80,132,240,62,221,196,240,62,106,5,241,62,247,69,241,62,132,134,241,62,18,199,241,62,160,7,242,62,45,72,242,62,187,136,242,62,74,201,242,62,216,9,243,62,102,74,243,62,244,138,243,62,131,203,243,62,17,12,244,62,159,76,244,62,46,141,244,62,188,205,244,62,74,14,245,62,216,78,245,62,102,143,245,62,244,207,245,62,129,16,246,62,15,81,246,62,156,145,246,62,41,210,246,62,182,18,247,62,67,83,247,62,207,147,247,62,91,212,247,62,231,20,248,62,115,85,248,62,254,149,248,62,136,214,248,62,19,23,249,62,157,87,249,62,38,152,249,62,175,216,249,62,56,25,250,62,192,89,250,62,72,154,250,62,207,218,250,62,86,27,251,62,220,91,251,62,97,156,251,62,230,220,251,62,106,29,252,62,238,93,252,62,113,158,252,62,243,222,252,62,117,31,253,62,245,95,253,62,118,160,253,62,245,224,253,62,116,33,254,62,241,97,254,62,110,162,254,62,235,226,254,62,102,35,255,62,224,99,255,62,90,164,255,62,211,228,255,62,165,18,0,63,225,50,0,63,27,83,0,63,86,115,0,63,144,147,0,63,201,179,0,63,2,212,0,63,58,244,0,63,114,20,1,63,169,52,1,63,224,84,1,63,22,117,1,63,76,149,1,63,129,181,1,63,181,213,1,63,233,245,1,63,28,22,2,63,78,54,2,63,128,86,2,63,178,118,2,63,226,150,2,63,18,183,2,63,65,215,2,63,112,247,2,63,157,23,3,63,203,55,3,63,247,87,3,63,35,120,3,63,78,152,3,63,120,184,3,63,161,216,3,63,202,248,3,63,242,24,4,63,25,57,4,63,63,89,4,63,101,121,4,63,137,153,4,63,173,185,4,63,208,217,4,63,243,249,4,63,20,26,5,63,52,58,5,63,84,90,5,63,115,122,5,63,145,154,5,63,173,186,5,63,202,218,5,63,229,250,5,63,255,26,6,63,24,59,6,63,48,91,6,63,72,123,6,63,94,155,6,63,116,187,6,63,136,219,6,63,155,251,6,63,174,27,7,63,191,59,7,63,208,91,7,63,223,123,7,63,237,155,7,63,250,187,7,63,7,220,7,63,18,252,7,63,28,28,8,63,37,60,8,63,44,92,8,63,51,124,8,63,57,156,8,63,61,188,8,63,64,220,8,63,67,252,8,63,68,28,9,63,68,60,9,63,66,92,9,63,64,124,9,63,60,156,9,63,55,188,9,63,49,220,9,63,41,252,9,63,33,28,10,63,23,60,10,63,12,92,10,63,255,123,10,63,242,155,10,63,227,187,10,63,211,219,10,63,193,251,10,63,174,27,11,63,154,59,11,63,133,91,11,63,110,123,11,63,86,155,11,63,60,187,11,63,33,219,11,63,5,251,11,63,231,26,12,63,200,58,12,63,168,90,12,63,134,122,12,63,98,154,12,63,62,186,12,63,23,218,12,63,240,249,12,63,199,25,13,63,156,57,13,63,112,89,13,63,66,121,13,63,19,153,13,63,227,184,13,63,176,216,13,63,125,248,13,63,72,24,14,63,17,56,14,63,216,87,14,63,159,119,14,63,99,151,14,63,38,183,14,63,232,214,14,63,167,246,14,63,101,22,15,63,34,54,15,63,221,85,15,63,150,117,15,63,78,149,15,63,4,181,15,63,184,212,15,63,106,244,15,63,27,20,16,63,202,51,16,63,120,83,16,63,36,115,16,63,206,146,16,63,118,178,16,63,28,210,16,63,193,241,16,63,100,17,17,63,6,49,17,63,165,80,17,63,67,112,17,63,223,143,17,63,121,175,17,63,17,207,17,63,167,238,17,63,60,14,18,63,206,45,18,63,95,77,18,63,238,108,18,63,123,140,18,63,7,172,18,63,144,203,18,63,23,235,18,63,157,10,19,63,32,42,19,63,162,73,19,63,34,105,19,63,159,136,19,63,27,168,19,63,149,199,19,63,13,231,19,63,131,6,20,63,247,37,20,63,104,69,20,63,216,100,20,63,70,132,20,63,178,163,20,63,27,195,20,63,131,226,20,63,233,1,21,63,76,33,21,63,174,64,21,63,13,96,21,63,106,127,21,63,197,158,21,63,31,190,21,63,117,221,21,63,202,252,21,63,29,28,22,63,109,59,22,63,188,90,22,63,8,122,22,63,82,153,22,63,153,184,22,63,223,215,22,63,34,247,22,63,100,22,23,63,162,53,23,63,223,84,23,63,26,116,23,63,82,147,23,63,136,178,23,63,187,209,23,63,237,240,23,63,28,16,24,63,73,47,24,63,115,78,24,63,155,109,24,63,193,140,24,63,228,171,24,63,6,203,24,63,36,234,24,63,65,9,25,63,91,40,25,63,115,71,25,63,136,102,25,63,155,133,25,63,171,164,25,63,185,195,25,63,197,226,25,63,206,1,26,63,213,32,26,63,217,63,26,63,219,94,26,63,218,125,26,63,215,156,26,63,210,187,26,63,202,218,26,63,191,249,26,63,178,24,27,63,162,55,27,63,144,86,27,63,123,117,27,63,100,148,27,63,74,179,27,63,46,210,27,63,15,241,27,63,237,15,28,63,201,46,28,63,162,77,28,63,121,108,28,63,77,139,28,63,31,170,28,63,237,200,28,63,185,231,28,63,131,6,29,63,74,37,29,63,14,68,29,63,207,98,29,63,142,129,29,63,74,160,29,63,3,191,29,63,186,221,29,63,110,252,29,63,31,27,30,63,205,57,30,63,121,88,30,63,34,119,30,63,200,149,30,63,107,180,30,63,12,211,30,63,170,241,30,63,69,16,31,63,221,46,31,63,114,77,31,63,5,108,31,63,148,138,31,63,33,169,31,63,171,199,31,63,50,230,31,63,182,4,32,63,56,35,32,63,182,65,32,63,50,96,32,63,170,126,32,63,32,157,32,63,147,187,32,63,3,218,32,63,112,248,32,63,218,22,33,63,65,53,33,63,165,83,33,63,6,114,33,63,100,144,33,63,191,174,33,63,23,205,33,63,108,235,33,63,190,9,34,63,13,40,34,63,89,70,34,63,162,100,34,63,232,130,34,63,43,161,34,63,107,191,34,63,167,221,34,63,225,251,34,63,24,26,35,63,75,56,35,63,123,86,35,63,168,116,35,63,211,146,35,63,249,176,35,63,29,207,35,63,62,237,35,63,91,11,36,63,118,41,36,63,141,71,36,63,161,101,36,63,177,131,36,63,191,161,36,63,201,191,36,63,208,221,36,63,212,251,36,63,213,25,37,63,210,55,37,63,204,85,37,63,195,115,37,63,183,145,37,63,167,175,37,63,148,205,37,63,126,235,37,63,101,9,38,63,72,39,38,63,40,69,38,63,4,99,38,63,221,128,38,63,179,158,38,63,134,188,38,63,85,218,38,63,33,248,38,63,233,21,39,63,174,51,39,63,112,81,39,63,46,111,39,63,233,140,39,63,160,170,39,63,84,200,39,63,4,230,39,63,178,3,40,63,91,33,40,63,1,63,40,63,164,92,40,63,67,122,40,63,223,151,40,63,120,181,40,63,12,211,40,63,158,240,40,63,43,14,41,63,182,43,41,63,60,73,41,63,192,102,41,63,63,132,41,63,187,161,41,63,52,191,41,63,169,220,41,63,26,250,41,63,136,23,42,63,242,52,42,63,89,82,42,63,188,111,42,63,28,141,42,63,119,170,42,63,208,199,42,63,36,229,42,63,117,2,43,63,194,31,43,63,12,61,43,63,82,90,43,63,148,119,43,63,211,148,43,63,14,178,43,63,69,207,43,63,120,236,43,63,168,9,44,63,212,38,44,63,252,67,44,63,33,97,44,63,66,126,44,63,95,155,44,63,120,184,44,63,142,213,44,63,159,242,44,63,173,15,45,63,184,44,45,63,190,73,45,63,193,102,45,63,191,131,45,63,186,160,45,63,177,189,45,63,165,218,45,63,148,247,45,63,128,20,46,63,103,49,46,63,75,78,46,63,43,107,46,63,7,136,46,63,224,164,46,63,180,193,46,63,132,222,46,63,81,251,46,63,26,24,47,63,222,52,47,63,159,81,47,63,92,110,47,63,21,139,47,63,202,167,47,63,123,196,47,63,40,225,47,63,209,253,47,63,118,26,48,63,23,55,48,63,180,83,48,63,77,112,48,63,226,140,48,63,115,169,48,63,0,198,48,63,137,226,48,63,14,255,48,63,142,27,49,63,11,56,49,63,132,84,49,63,248,112,49,63,105,141,49,63,214,169,49,63,62,198,49,63,162,226,49,63,2,255,49,63,95,27,50,63,182,55,50,63,10,84,50,63,90,112,50,63,166,140,50,63,237,168,50,63,48,197,50,63,111,225,50,63,170,253,50,63,225,25,51,63,19,54,51,63,66,82,51,63,108,110,51,63,146,138,51,63,180,166,51,63,209,194,51,63,234,222,51,63,0,251,51,63,16,23,52,63,29,51,52,63,37,79,52,63,41,107,52,63,41,135,52,63,37,163,52,63,28,191,52,63,15,219,52,63,253,246,52,63,232,18,53,63,206,46,53,63,176,74,53,63,141,102,53,63,102,130,53,63,59,158,53,63,11,186,53,63,215,213,53,63,159,241,53,63,98,13,54,63,33,41,54,63,220,68,54,63,146,96,54,63,68,124,54,63,241,151,54,63,154,179,54,63,63,207,54,63,223,234,54,63,123,6,55,63,18,34,55,63,165,61,55,63,52,89,55,63,190,116,55,63,67,144,55,63,196,171,55,63,65,199,55,63,185,226,55,63,45,254,55,63,156,25,56,63,7,53,56,63,109,80,56,63,207,107,56,63,44,135,56,63,133,162,56,63,217,189,56,63,40,217,56,63,115,244,56,63,186,15,57,63,252,42,57,63,57,70,57,63,114,97,57,63,166,124,57,63,214,151,57,63,1,179,57,63,40,206,57,63,74,233,57,63,103,4,58,63,128,31,58,63,148,58,58,63,163,85,58,63,174,112,58,63,180,139,58,63,182,166,58,63,179,193,58,63,171,220,58,63,159,247,58,63,142,18,59,63,120,45,59,63,94,72,59,63,63,99,59,63,27,126,59,63,243,152,59,63,197,179,59,63,148,206,59,63,93,233,59,63,34,4,60,63,226,30,60,63,157,57,60,63,84,84,60,63,5,111,60,63,178,137,60,63,91,164,60,63,254,190,60,63,157,217,60,63,55,244,60,63,204,14,61,63,93,41,61,63,232,67,61,63,111,94,61,63,241,120,61,63,110,147,61,63,231,173,61,63,91,200,61,63,201,226,61,63,51,253,61,63,152,23,62,63,249,49,62,63,84,76,62,63,171,102,62,63,252,128,62,63,73,155,62,63,145,181,62,63,212,207,62,63,19,234,62,63,76,4,63,63,128,30,63,63,176,56,63,63,219,82,63,63,0,109,63,63,33,135,63,63,61,161,63,63,84,187,63,63,102,213,63,63,115,239,63,63,123,9,64,63,127,35,64,63,125,61,64,63,118,87,64,63,106,113,64,63,90,139,64,63,68,165,64,63,42,191,64,63,10,217,64,63,229,242,64,63,188,12,65,63,141,38,65,63,90,64,65,63,33,90,65,63,228,115,65,63,161,141,65,63,89,167,65,63,13,193,65,63,187,218,65,63,100,244,65,63,8,14,66,63,167,39,66,63,65,65,66,63,214,90,66,63,102,116,66,63,241,141,66,63,119,167,66,63,248,192,66,63,115,218,66,63,234,243,66,63,91,13,67,63,199,38,67,63,47,64,67,63,145,89,67,63,238,114,67,63,69,140,67,63,152,165,67,63,230,190,67,63,46,216,67,63,113,241,67,63,175,10,68,63,232,35,68,63,28,61,68,63,75,86,68,63,116,111,68,63,153,136,68,63,184,161,68,63,210,186,68,63,230,211,68,63,246,236,68,63,0,6,69,63,5,31,69,63,5,56,69,63,0,81,69,63,245,105,69,63,230,130,69,63,209,155,69,63,182,180,69,63,151,205,69,63,114,230,69,63,72,255,69,63,25,24,70,63,229,48,70,63,171,73,70,63,108,98,70,63,40,123,70,63,222,147,70,63,143,172,70,63,59,197,70,63,226,221,70,63,131,246,70,63,31,15,71,63,182,39,71,63,71,64,71,63,211,88,71,63,90,113,71,63,220,137,71,63,88,162,71,63,207,186,71,63,64,211,71,63,172,235,71,63,19,4,72,63,116,28,72,63,209,52,72,63,39,77,72,63,121,101,72,63,197,125,72,63,11,150,72,63,77,174,72,63,137,198,72,63,191,222,72,63,240,246,72,63,28,15,73,63,66,39,73,63,99,63,73,63,127,87,73,63,149,111,73,63,166,135,73,63,177,159,73,63,183,183,73,63,183,207,73,63,178,231,73,63,168,255,73,63,152,23,74,63,131,47,74,63,104,71,74,63,72,95,74,63,34,119,74,63,247,142,74,63,199,166,74,63,145,190,74,63,85,214,74,63,20,238,74,63,206,5,75,63,130,29,75,63,49,53,75,63,218,76,75,63,126,100,75,63,28,124,75,63,181,147,75,63,72,171,75,63,213,194,75,63,93,218,75,63,224,241,75,63,93,9,76,63,213,32,76,63,71,56,76,63,179,79,76,63,26,103,76,63,124,126,76,63,216,149,76,63,46,173,76,63,127,196,76,63,202,219,76,63,16,243,76,63,80,10,77,63,139,33,77,63,192,56,77,63,240,79,77,63,26,103,77,63,62,126,77,63,93,149,77,63,118,172,77,63,137,195,77,63,151,218,77,63,160,241,77,63,163,8,78,63,160,31,78,63,151,54,78,63,137,77,78,63,118,100,78,63,93,123,78,63,62,146,78,63,25,169,78,63,239,191,78,63,192,214,78,63,138,237,78,63,79,4,79,63,15,27,79,63,201,49,79,63,125,72,79,63,43,95,79,63,212,117,79,63,119,140,79,63,21,163,79,63,172,185,79,63,63,208,79,63,203,230,79,63,82,253,79,63,211,19,80,63,79,42,80,63,197,64,80,63,53,87,80,63,159,109,80,63,4,132,80,63,99,154,80,63,189,176,80,63,16,199,80,63,94,221,80,63,167,243,80,63,233,9,81,63,38,32,81,63,93,54,81,63,143,76,81,63,187,98,81,63,225,120,81,63,1,143,81,63,28,165,81,63,48,187,81,63,64,209,81,63,73,231,81,63,77,253,81,63,75,19,82,63,67,41,82,63,53,63,82,63,34,85,82,63,9,107,82,63,234,128,82,63,198,150,82,63,155,172,82,63,107,194,82,63,53,216,82,63,250,237,82,63,185,3,83,63,113,25,83,63,37,47,83,63,210,68,83,63,121,90,83,63,27,112,83,63,183,133,83,63,77,155,83,63,222,176,83,63,104,198,83,63,237,219,83,63,108,241,83,63,230,6,84,63,89,28,84,63,199,49,84,63,46,71,84,63,145,92,84,63,237,113,84,63,67,135,84,63,148,156,84,63,223,177,84,63,35,199,84,63,99,220,84,63,156,241,84,63,207,6,85,63,253,27,85,63,37,49,85,63,71,70,85,63,99,91,85,63,121,112,85,63,138,133,85,63,149,154,85,63,153,175,85,63,152,196,85,63,146,217,85,63,133,238,85,63,114,3,86,63,90,24,86,63,60,45,86,63,24,66,86,63,238,86,86,63,190,107,86,63,136,128,86,63,76,149,86,63,11,170,86,63,196,190,86,63,118,211,86,63,35,232,86,63,203,252,86,63,108,17,87,63,7,38,87,63,156,58,87,63,44,79,87,63,182,99,87,63,58,120,87,63,183,140,87,63,47,161,87,63,162,181,87,63,14,202,87,63,116,222,87,63,213,242,87,63,47,7,88,63,132,27,88,63,211,47,88,63,28,68,88,63,95,88,88,63,156,108,88,63,211,128,88,63,4,149,88,63,47,169,88,63,85,189,88,63,116,209,88,63,142,229,88,63,162,249,88,63,175,13,89,63,183,33,89,63,185,53,89,63,181,73,89,63,171,93,89,63,155,113,89,63,134,133,89,63,106,153,89,63,72,173,89,63,33,193,89,63,243,212,89,63,192,232,89,63,135,252,89,63,71,16,90,63,2,36,90,63,183,55,90,63,102,75,90,63,15,95,90,63,178,114,90,63,79,134,90,63,230,153,90,63,119,173,90,63,3,193,90,63,136,212,90,63,7,232,90,63,129,251,90,63,244,14,91,63,98,34,91,63,201,53,91,63,43,73,91,63,135,92,91,63,220,111,91,63,44,131,91,63,118,150,91,63,186,169,91,63,248,188,91,63,47,208,91,63,97,227,91,63,141,246,91,63,179,9,92,63,212,28,92,63,238,47,92,63,2,67,92,63,16,86,92,63,24,105,92,63,26,124,92,63,23,143,92,63,13,162,92,63,253,180,92,63,232,199,92,63,204,218,92,63,171,237,92,63,131,0,93,63,86,19,93,63,34,38,93,63,233,56,93,63,169,75,93,63,100,94,93,63,24,113,93,63,199,131,93,63,112,150,93,63,18,169,93,63,175,187,93,63,70,206,93,63,215,224,93,63,97,243,93,63,230,5,94,63,101,24,94,63,222,42,94,63,81,61,94,63,190,79,94,63,36,98,94,63,133,116,94,63,224,134,94,63,53,153,94,63,132,171,94,63,205,189,94,63,16,208,94,63,77,226,94,63,132,244,94,63,181,6,95,63,224,24,95,63,5,43,95,63,36,61,95,63,61,79,95,63,80,97,95,63,93,115,95,63,101,133,95,63,102,151,95,63,97,169,95,63,86,187,95,63,69,205,95,63,46,223,95,63,18,241,95,63,239,2,96,63,198,20,96,63,151,38,96,63,98,56,96,63,40,74,96,63,231,91,96,63,160,109,96,63,84,127,96,63,1,145,96,63,168,162,96,63,73,180,96,63,229,197,96,63,122,215,96,63,10,233,96,63,147,250,96,63,22,12,97,63,148,29,97,63,11,47,97,63,125,64,97,63,232,81,97,63,77,99,97,63,173,116,97,63,6,134,97,63,90,151,97,63,167,168,97,63,239,185,97,63,48,203,97,63,108,220,97,63,162,237,97,63,209,254,97,63,251,15,98,63,30,33,98,63,60,50,98,63,84,67,98,63,101,84,98,63,113,101,98,63,119,118,98,63,119,135,98,63,112,152,98,63,100,169,98,63,82,186,98,63,58,203,98,63,28,220,98,63,247,236,98,63,205,253,98,63,157,14,99,63,103,31,99,63,43,48,99,63,233,64,99,63,161,81,99,63,83,98,99,63,255,114,99,63,165,131,99,63,69,148,99,63,224,164,99,63,116,181,99,63,2,198,99,63,138,214,99,63,13,231,99,63,137,247,99,63,255,7,100,63,112,24,100,63,218,40,100,63,62,57,100,63,157,73,100,63,246,89,100,63,72,106,100,63,149,122,100,63,219,138,100,63,28,155,100,63,87,171,100,63,140,187,100,63,186,203,100,63,227,219,100,63,6,236,100,63,35,252,100,63,58,12,101,63,75,28,101,63,86,44,101,63,91,60,101,63,91,76,101,63,84,92,101,63,71,108,101,63,53,124,101,63,28,140,101,63,254,155,101,63,217,171,101,63,175,187,101,63,126,203,101,63,72,219,101,63,12,235,101,63,202,250,101,63,130,10,102,63,52,26,102,63,224,41,102,63,134,57,102,63,38,73,102,63,193,88,102,63,85,104,102,63,227,119,102,63,108,135,102,63,238,150,102,63,107,166,102,63,226,181,102,63,83,197,102,63,190,212,102,63,35,228,102,63,130,243,102,63,219,2,103,63,46,18,103,63,124,33,103,63,195,48,103,63,5,64,103,63,64,79,103,63,118,94,103,63,166,109,103,63,208,124,103,63,244,139,103,63,18,155,103,63,42,170,103,63,61,185,103,63,73,200,103,63,80,215,103,63,80,230,103,63,75,245,103,63,64,4,104,63,47,19,104,63,24,34,104,63,251,48,104,63,217,63,104,63,176,78,104,63,130,93,104,63,78,108,104,63,20,123,104,63,212,137,104,63,142,152,104,63,66,167,104,63,240,181,104,63,153,196,104,63,60,211,104,63,217,225,104,63,112,240,104,63,1,255,104,63,140,13,105,63,17,28,105,63,145,42,105,63,11,57,105,63,127,71,105,63,237,85,105,63,85,100,105,63,183,114,105,63,20,129,105,63,106,143,105,63,187,157,105,63,6,172,105,63,75,186,105,63,139,200,105,63,196,214,105,63,248,228,105,63,38,243,105,63,78,1,106,63,112,15,106,63,141,29,106,63,163,43,106,63,180,57,106,63,191,71,106,63,196,85,106,63,196,99,106,63,189,113,106,63,177,127,106,63], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+20480);
/* memory initializer */ allocate([159,141,106,63,135,155,106,63,106,169,106,63,70,183,106,63,29,197,106,63,238,210,106,63,186,224,106,63,127,238,106,63,63,252,106,63,249,9,107,63,173,23,107,63,91,37,107,63,4,51,107,63,167,64,107,63,68,78,107,63,219,91,107,63,109,105,107,63,249,118,107,63,127,132,107,63,255,145,107,63,122,159,107,63,238,172,107,63,94,186,107,63,199,199,107,63,42,213,107,63,136,226,107,63,224,239,107,63,51,253,107,63,128,10,108,63,198,23,108,63,8,37,108,63,67,50,108,63,121,63,108,63,169,76,108,63,211,89,108,63,248,102,108,63,23,116,108,63,48,129,108,63,68,142,108,63,82,155,108,63,90,168,108,63,92,181,108,63,89,194,108,63,80,207,108,63,65,220,108,63,45,233,108,63,19,246,108,63,243,2,109,63,206,15,109,63,163,28,109,63,114,41,109,63,60,54,109,63,0,67,109,63,190,79,109,63,119,92,109,63,42,105,109,63,215,117,109,63,127,130,109,63,33,143,109,63,189,155,109,63,84,168,109,63,229,180,109,63,113,193,109,63,247,205,109,63,119,218,109,63,242,230,109,63,103,243,109,63,214,255,109,63,64,12,110,63,164,24,110,63,3,37,110,63,91,49,110,63,175,61,110,63,253,73,110,63,69,86,110,63,135,98,110,63,196,110,110,63,252,122,110,63,45,135,110,63,90,147,110,63,128,159,110,63,161,171,110,63,189,183,110,63,211,195,110,63,227,207,110,63,238,219,110,63,243,231,110,63,243,243,110,63,237,255,110,63,226,11,111,63,209,23,111,63,186,35,111,63,158,47,111,63,125,59,111,63,85,71,111,63,41,83,111,63,247,94,111,63,191,106,111,63,130,118,111,63,63,130,111,63,247,141,111,63,169,153,111,63,86,165,111,63,253,176,111,63,159,188,111,63,59,200,111,63,210,211,111,63,99,223,111,63,239,234,111,63,117,246,111,63,246,1,112,63,114,13,112,63,231,24,112,63,88,36,112,63,195,47,112,63,40,59,112,63,137,70,112,63,227,81,112,63,56,93,112,63,136,104,112,63,210,115,112,63,23,127,112,63,87,138,112,63,145,149,112,63,197,160,112,63,244,171,112,63,30,183,112,63,66,194,112,63,97,205,112,63,123,216,112,63,143,227,112,63,157,238,112,63,167,249,112,63,171,4,113,63,169,15,113,63,162,26,113,63,150,37,113,63,132,48,113,63,109,59,113,63,81,70,113,63,47,81,113,63,8,92,113,63,219,102,113,63,170,113,113,63,114,124,113,63,54,135,113,63,244,145,113,63,173,156,113,63,96,167,113,63,14,178,113,63,183,188,113,63,91,199,113,63,249,209,113,63,146,220,113,63,37,231,113,63,179,241,113,63,60,252,113,63,192,6,114,63,62,17,114,63,183,27,114,63,43,38,114,63,154,48,114,63,3,59,114,63,103,69,114,63,197,79,114,63,31,90,114,63,115,100,114,63,194,110,114,63,11,121,114,63,79,131,114,63,143,141,114,63,200,151,114,63,253,161,114,63,44,172,114,63,87,182,114,63,123,192,114,63,155,202,114,63,182,212,114,63,203,222,114,63,219,232,114,63,230,242,114,63,235,252,114,63,236,6,115,63,231,16,115,63,221,26,115,63,206,36,115,63,186,46,115,63,160,56,115,63,130,66,115,63,94,76,115,63,53,86,115,63,7,96,115,63,212,105,115,63,155,115,115,63,94,125,115,63,27,135,115,63,211,144,115,63,134,154,115,63,52,164,115,63,221,173,115,63,128,183,115,63,31,193,115,63,184,202,115,63,77,212,115,63,220,221,115,63,102,231,115,63,235,240,115,63,107,250,115,63,230,3,116,63,92,13,116,63,204,22,116,63,56,32,116,63,159,41,116,63,0,51,116,63,93,60,116,63,180,69,116,63,6,79,116,63,84,88,116,63,156,97,116,63,223,106,116,63,29,116,116,63,87,125,116,63,139,134,116,63,186,143,116,63,228,152,116,63,9,162,116,63,41,171,116,63,68,180,116,63,91,189,116,63,108,198,116,63,120,207,116,63,127,216,116,63,129,225,116,63,127,234,116,63,119,243,116,63,106,252,116,63,89,5,117,63,66,14,117,63,38,23,117,63,6,32,117,63,225,40,117,63,182,49,117,63,135,58,117,63,83,67,117,63,26,76,117,63,220,84,117,63,153,93,117,63,81,102,117,63,4,111,117,63,179,119,117,63,92,128,117,63,1,137,117,63,160,145,117,63,59,154,117,63,209,162,117,63,98,171,117,63,239,179,117,63,118,188,117,63,249,196,117,63,118,205,117,63,239,213,117,63,99,222,117,63,210,230,117,63,61,239,117,63,162,247,117,63,3,0,118,63,95,8,118,63,182,16,118,63,8,25,118,63,86,33,118,63,159,41,118,63,227,49,118,63,34,58,118,63,92,66,118,63,146,74,118,63,195,82,118,63,239,90,118,63,22,99,118,63,57,107,118,63,86,115,118,63,112,123,118,63,132,131,118,63,148,139,118,63,158,147,118,63,165,155,118,63,166,163,118,63,163,171,118,63,155,179,118,63,142,187,118,63,125,195,118,63,103,203,118,63,76,211,118,63,45,219,118,63,9,227,118,63,224,234,118,63,178,242,118,63,128,250,118,63,74,2,119,63,14,10,119,63,206,17,119,63,137,25,119,63,64,33,119,63,242,40,119,63,160,48,119,63,72,56,119,63,237,63,119,63,140,71,119,63,39,79,119,63,190,86,119,63,79,94,119,63,220,101,119,63,101,109,119,63,233,116,119,63,105,124,119,63,228,131,119,63,90,139,119,63,204,146,119,63,57,154,119,63,162,161,119,63,6,169,119,63,101,176,119,63,192,183,119,63,23,191,119,63,105,198,119,63,182,205,119,63,255,212,119,63,68,220,119,63,132,227,119,63,191,234,119,63,246,241,119,63,41,249,119,63,87,0,120,63,129,7,120,63,166,14,120,63,198,21,120,63,227,28,120,63,250,35,120,63,14,43,120,63,28,50,120,63,39,57,120,63,45,64,120,63,46,71,120,63,44,78,120,63,36,85,120,63,25,92,120,63,9,99,120,63,244,105,120,63,219,112,120,63,190,119,120,63,156,126,120,63,118,133,120,63,76,140,120,63,29,147,120,63,234,153,120,63,179,160,120,63,119,167,120,63,55,174,120,63,242,180,120,63,169,187,120,63,92,194,120,63,11,201,120,63,181,207,120,63,91,214,120,63,252,220,120,63,154,227,120,63,51,234,120,63,199,240,120,63,88,247,120,63,228,253,120,63,108,4,121,63,240,10,121,63,111,17,121,63,234,23,121,63,97,30,121,63,211,36,121,63,66,43,121,63,172,49,121,63,18,56,121,63,116,62,121,63,209,68,121,63,42,75,121,63,127,81,121,63,208,87,121,63,29,94,121,63,101,100,121,63,170,106,121,63,234,112,121,63,38,119,121,63,93,125,121,63,145,131,121,63,193,137,121,63,236,143,121,63,19,150,121,63,54,156,121,63,85,162,121,63,112,168,121,63,134,174,121,63,153,180,121,63,167,186,121,63,178,192,121,63,184,198,121,63,186,204,121,63,184,210,121,63,178,216,121,63,168,222,121,63,154,228,121,63,135,234,121,63,113,240,121,63,87,246,121,63,56,252,121,63,22,2,122,63,239,7,122,63,197,13,122,63,150,19,122,63,100,25,122,63,45,31,122,63,243,36,122,63,180,42,122,63,113,48,122,63,43,54,122,63,224,59,122,63,146,65,122,63,63,71,122,63,233,76,122,63,142,82,122,63,48,88,122,63,206,93,122,63,103,99,122,63,253,104,122,63,143,110,122,63,29,116,122,63,167,121,122,63,45,127,122,63,175,132,122,63,45,138,122,63,168,143,122,63,30,149,122,63,145,154,122,63,255,159,122,63,106,165,122,63,209,170,122,63,52,176,122,63,147,181,122,63,239,186,122,63,70,192,122,63,154,197,122,63,234,202,122,63,54,208,122,63,126,213,122,63,194,218,122,63,3,224,122,63,64,229,122,63,121,234,122,63,174,239,122,63,223,244,122,63,13,250,122,63,55,255,122,63,93,4,123,63,127,9,123,63,157,14,123,63,184,19,123,63,207,24,123,63,227,29,123,63,242,34,123,63,254,39,123,63,6,45,123,63,10,50,123,63,11,55,123,63,8,60,123,63,1,65,123,63,247,69,123,63,233,74,123,63,215,79,123,63,193,84,123,63,168,89,123,63,139,94,123,63,107,99,123,63,71,104,123,63,31,109,123,63,243,113,123,63,196,118,123,63,146,123,123,63,91,128,123,63,33,133,123,63,228,137,123,63,163,142,123,63,94,147,123,63,22,152,123,63,202,156,123,63,122,161,123,63,39,166,123,63,208,170,123,63,118,175,123,63,24,180,123,63,183,184,123,63,82,189,123,63,233,193,123,63,125,198,123,63,14,203,123,63,155,207,123,63,36,212,123,63,170,216,123,63,45,221,123,63,172,225,123,63,39,230,123,63,159,234,123,63,19,239,123,63,132,243,123,63,242,247,123,63,92,252,123,63,195,0,124,63,38,5,124,63,133,9,124,63,226,13,124,63,58,18,124,63,144,22,124,63,226,26,124,63,48,31,124,63,123,35,124,63,195,39,124,63,7,44,124,63,72,48,124,63,134,52,124,63,192,56,124,63,247,60,124,63,42,65,124,63,90,69,124,63,135,73,124,63,176,77,124,63,214,81,124,63,249,85,124,63,24,90,124,63,52,94,124,63,77,98,124,63,98,102,124,63,116,106,124,63,131,110,124,63,142,114,124,63,150,118,124,63,155,122,124,63,157,126,124,63,155,130,124,63,150,134,124,63,142,138,124,63,130,142,124,63,116,146,124,63,98,150,124,63,77,154,124,63,52,158,124,63,24,162,124,63,249,165,124,63,215,169,124,63,178,173,124,63,137,177,124,63,94,181,124,63,47,185,124,63,253,188,124,63,199,192,124,63,143,196,124,63,83,200,124,63,20,204,124,63,211,207,124,63,141,211,124,63,69,215,124,63,250,218,124,63,171,222,124,63,90,226,124,63,5,230,124,63,173,233,124,63,82,237,124,63,244,240,124,63,147,244,124,63,46,248,124,63,199,251,124,63,93,255,124,63,239,2,125,63,127,6,125,63,11,10,125,63,148,13,125,63,27,17,125,63,158,20,125,63,30,24,125,63,155,27,125,63,21,31,125,63,140,34,125,63,0,38,125,63,114,41,125,63,224,44,125,63,75,48,125,63,179,51,125,63,24,55,125,63,122,58,125,63,217,61,125,63,54,65,125,63,143,68,125,63,229,71,125,63,56,75,125,63,137,78,125,63,214,81,125,63,33,85,125,63,104,88,125,63,173,91,125,63,239,94,125,63,46,98,125,63,106,101,125,63,163,104,125,63,217,107,125,63,12,111,125,63,61,114,125,63,106,117,125,63,149,120,125,63,189,123,125,63,226,126,125,63,4,130,125,63,36,133,125,63,64,136,125,63,90,139,125,63,112,142,125,63,133,145,125,63,150,148,125,63,164,151,125,63,176,154,125,63,185,157,125,63,191,160,125,63,194,163,125,63,194,166,125,63,192,169,125,63,187,172,125,63,179,175,125,63,168,178,125,63,155,181,125,63,139,184,125,63,120,187,125,63,99,190,125,63,74,193,125,63,48,196,125,63,18,199,125,63,241,201,125,63,206,204,125,63,169,207,125,63,128,210,125,63,85,213,125,63,39,216,125,63,247,218,125,63,196,221,125,63,142,224,125,63,85,227,125,63,26,230,125,63,220,232,125,63,156,235,125,63,89,238,125,63,19,241,125,63,203,243,125,63,128,246,125,63,51,249,125,63,227,251,125,63,144,254,125,63,59,1,126,63,227,3,126,63,137,6,126,63,44,9,126,63,204,11,126,63,106,14,126,63,6,17,126,63,158,19,126,63,53,22,126,63,200,24,126,63,90,27,126,63,232,29,126,63,116,32,126,63,254,34,126,63,133,37,126,63,10,40,126,63,140,42,126,63,12,45,126,63,137,47,126,63,4,50,126,63,124,52,126,63,242,54,126,63,101,57,126,63,214,59,126,63,68,62,126,63,176,64,126,63,26,67,126,63,129,69,126,63,230,71,126,63,72,74,126,63,168,76,126,63,5,79,126,63,96,81,126,63,185,83,126,63,15,86,126,63,99,88,126,63,181,90,126,63,4,93,126,63,81,95,126,63,155,97,126,63,227,99,126,63,41,102,126,63,108,104,126,63,173,106,126,63,236,108,126,63,40,111,126,63,98,113,126,63,154,115,126,63,208,117,126,63,3,120,126,63,51,122,126,63,98,124,126,63,142,126,126,63,184,128,126,63,224,130,126,63,5,133,126,63,40,135,126,63,73,137,126,63,104,139,126,63,132,141,126,63,159,143,126,63,183,145,126,63,204,147,126,63,224,149,126,63,241,151,126,63,0,154,126,63,13,156,126,63,24,158,126,63,32,160,126,63,38,162,126,63,42,164,126,63,44,166,126,63,44,168,126,63,41,170,126,63,37,172,126,63,30,174,126,63,21,176,126,63,10,178,126,63,253,179,126,63,238,181,126,63,220,183,126,63,201,185,126,63,179,187,126,63,155,189,126,63,129,191,126,63,101,193,126,63,71,195,126,63,39,197,126,63,5,199,126,63,224,200,126,63,186,202,126,63,145,204,126,63,103,206,126,63,58,208,126,63,12,210,126,63,219,211,126,63,168,213,126,63,115,215,126,63,61,217,126,63,4,219,126,63,201,220,126,63,140,222,126,63,77,224,126,63,12,226,126,63,202,227,126,63,133,229,126,63,62,231,126,63,245,232,126,63,170,234,126,63,94,236,126,63,15,238,126,63,190,239,126,63,108,241,126,63,23,243,126,63,193,244,126,63,104,246,126,63,14,248,126,63,178,249,126,63,84,251,126,63,243,252,126,63,145,254,126,63,46,0,127,63,200,1,127,63,96,3,127,63,247,4,127,63,139,6,127,63,30,8,127,63,175,9,127,63,62,11,127,63,203,12,127,63,86,14,127,63,223,15,127,63,103,17,127,63,237,18,127,63,112,20,127,63,242,21,127,63,115,23,127,63,241,24,127,63,110,26,127,63,233,27,127,63,98,29,127,63,217,30,127,63,78,32,127,63,194,33,127,63,52,35,127,63,164,36,127,63,18,38,127,63,127,39,127,63,234,40,127,63,83,42,127,63,186,43,127,63,32,45,127,63,131,46,127,63,230,47,127,63,70,49,127,63,165,50,127,63,2,52,127,63,93,53,127,63,182,54,127,63,14,56,127,63,100,57,127,63,185,58,127,63,12,60,127,63,93,61,127,63,172,62,127,63,250,63,127,63,70,65,127,63,145,66,127,63,217,67,127,63,33,69,127,63,102,70,127,63,170,71,127,63,236,72,127,63,45,74,127,63,108,75,127,63,169,76,127,63,229,77,127,63,31,79,127,63,88,80,127,63,143,81,127,63,196,82,127,63,248,83,127,63,42,85,127,63,91,86,127,63,138,87,127,63,184,88,127,63,228,89,127,63,14,91,127,63,55,92,127,63,94,93,127,63,132,94,127,63,169,95,127,63,203,96,127,63,237,97,127,63,12,99,127,63,42,100,127,63,71,101,127,63,98,102,127,63,124,103,127,63,148,104,127,63,171,105,127,63,192,106,127,63,212,107,127,63,230,108,127,63,247,109,127,63,6,111,127,63,20,112,127,63,33,113,127,63,44,114,127,63,53,115,127,63,61,116,127,63,68,117,127,63,73,118,127,63,77,119,127,63,79,120,127,63,80,121,127,63,80,122,127,63,78,123,127,63,75,124,127,63,70,125,127,63,64,126,127,63,57,127,127,63,48,128,127,63,38,129,127,63,27,130,127,63,14,131,127,63,0,132,127,63,240,132,127,63,223,133,127,63,205,134,127,63,185,135,127,63,164,136,127,63,142,137,127,63,118,138,127,63,93,139,127,63,67,140,127,63,40,141,127,63,11,142,127,63,237,142,127,63,205,143,127,63,173,144,127,63,139,145,127,63,103,146,127,63,67,147,127,63,29,148,127,63,246,148,127,63,205,149,127,63,164,150,127,63,121,151,127,63,77,152,127,63,31,153,127,63,241,153,127,63,193,154,127,63,144,155,127,63,93,156,127,63,42,157,127,63,245,157,127,63,191,158,127,63,136,159,127,63,79,160,127,63,22,161,127,63,219,161,127,63,159,162,127,63,98,163,127,63,36,164,127,63,228,164,127,63,163,165,127,63,98,166,127,63,31,167,127,63,219,167,127,63,149,168,127,63,79,169,127,63,7,170,127,63,190,170,127,63,117,171,127,63,42,172,127,63,221,172,127,63,144,173,127,63,66,174,127,63,242,174,127,63,162,175,127,63,80,176,127,63,253,176,127,63,169,177,127,63,85,178,127,63,254,178,127,63,167,179,127,63,79,180,127,63,246,180,127,63,156,181,127,63,64,182,127,63,228,182,127,63,134,183,127,63,40,184,127,63,200,184,127,63,103,185,127,63,6,186,127,63,163,186,127,63,63,187,127,63,219,187,127,63,117,188,127,63,14,189,127,63,166,189,127,63,61,190,127,63,212,190,127,63,105,191,127,63,253,191,127,63,144,192,127,63,34,193,127,63,180,193,127,63,68,194,127,63,211,194,127,63,98,195,127,63,239,195,127,63,123,196,127,63,7,197,127,63,145,197,127,63,27,198,127,63,163,198,127,63,43,199,127,63,178,199,127,63,56,200,127,63,189,200,127,63,65,201,127,63,196,201,127,63,70,202,127,63,199,202,127,63,71,203,127,63,199,203,127,63,69,204,127,63,195,204,127,63,64,205,127,63,187,205,127,63,54,206,127,63,177,206,127,63,42,207,127,63,162,207,127,63,26,208,127,63,144,208,127,63,6,209,127,63,123,209,127,63,239,209,127,63,98,210,127,63,213,210,127,63,70,211,127,63,183,211,127,63,39,212,127,63,150,212,127,63,4,213,127,63,114,213,127,63,222,213,127,63,74,214,127,63,181,214,127,63,32,215,127,63,137,215,127,63,242,215,127,63,89,216,127,63,192,216,127,63,39,217,127,63,140,217,127,63,241,217,127,63,85,218,127,63,184,218,127,63,27,219,127,63,124,219,127,63,221,219,127,63,61,220,127,63,157,220,127,63,251,220,127,63,89,221,127,63,183,221,127,63,19,222,127,63,111,222,127,63,202,222,127,63,36,223,127,63,126,223,127,63,215,223,127,63,47,224,127,63,134,224,127,63,221,224,127,63,51,225,127,63,137,225,127,63,221,225,127,63,49,226,127,63,133,226,127,63,215,226,127,63,41,227,127,63,122,227,127,63,203,227,127,63,27,228,127,63,106,228,127,63,185,228,127,63,7,229,127,63,84,229,127,63,161,229,127,63,237,229,127,63,56,230,127,63,131,230,127,63,205,230,127,63,23,231,127,63,96,231,127,63,168,231,127,63,239,231,127,63,54,232,127,63,125,232,127,63,195,232,127,63,8,233,127,63,76,233,127,63,144,233,127,63,212,233,127,63,23,234,127,63,89,234,127,63,154,234,127,63,219,234,127,63,28,235,127,63,92,235,127,63,155,235,127,63,218,235,127,63,24,236,127,63,86,236,127,63,147,236,127,63,207,236,127,63,11,237,127,63,71,237,127,63,130,237,127,63,188,237,127,63,246,237,127,63,47,238,127,63,104,238,127,63,160,238,127,63,216,238,127,63,15,239,127,63,69,239,127,63,123,239,127,63,177,239,127,63,230,239,127,63,27,240,127,63,79,240,127,63,130,240,127,63,182,240,127,63,232,240,127,63,26,241,127,63,76,241,127,63,125,241,127,63,174,241,127,63,222,241,127,63,14,242,127,63,61,242,127,63,108,242,127,63,154,242,127,63,200,242,127,63,245,242,127,63,34,243,127,63,79,243,127,63,123,243,127,63,166,243,127,63,209,243,127,63,252,243,127,63,38,244,127,63,80,244,127,63,121,244,127,63,162,244,127,63,203,244,127,63,243,244,127,63,27,245,127,63,66,245,127,63,105,245,127,63,143,245,127,63,181,245,127,63,219,245,127,63,0,246,127,63,37,246,127,63,73,246,127,63,109,246,127,63,145,246,127,63,180,246,127,63,215,246,127,63,250,246,127,63,28,247,127,63,62,247,127,63,95,247,127,63,128,247,127,63,160,247,127,63,193,247,127,63,225,247,127,63,0,248,127,63,31,248,127,63,62,248,127,63,93,248,127,63,123,248,127,63,152,248,127,63,182,248,127,63,211,248,127,63,240,248,127,63,12,249,127,63,40,249,127,63,68,249,127,63,95,249,127,63,122,249,127,63,149,249,127,63,175,249,127,63,202,249,127,63,227,249,127,63,253,249,127,63,22,250,127,63,47,250,127,63,71,250,127,63,96,250,127,63,120,250,127,63,143,250,127,63,166,250,127,63,190,250,127,63,212,250,127,63,235,250,127,63,1,251,127,63,23,251,127,63,44,251,127,63,66,251,127,63,87,251,127,63,108,251,127,63,128,251,127,63,148,251,127,63,168,251,127,63,188,251,127,63,208,251,127,63,227,251,127,63,246,251,127,63,8,252,127,63,27,252,127,63,45,252,127,63,63,252,127,63,81,252,127,63,98,252,127,63,115,252,127,63,132,252,127,63,149,252,127,63,165,252,127,63,182,252,127,63,198,252,127,63,213,252,127,63,229,252,127,63,244,252,127,63,3,253,127,63,18,253,127,63,33,253,127,63,47,253,127,63,62,253,127,63,76,253,127,63,89,253,127,63,103,253,127,63,116,253,127,63,130,253,127,63,143,253,127,63,155,253,127,63,168,253,127,63,181,253,127,63,193,253,127,63,205,253,127,63,217,253,127,63,228,253,127,63,240,253,127,63,251,253,127,63,6,254,127,63,17,254,127,63,28,254,127,63,38,254,127,63,49,254,127,63,59,254,127,63,69,254,127,63,79,254,127,63,89,254,127,63,98,254,127,63,108,254,127,63,117,254,127,63,126,254,127,63,135,254,127,63,144,254,127,63,152,254,127,63,161,254,127,63,169,254,127,63,177,254,127,63,185,254,127,63,193,254,127,63,201,254,127,63,208,254,127,63,216,254,127,63,223,254,127,63,230,254,127,63,237,254,127,63,244,254,127,63,251,254,127,63,2,255,127,63,8,255,127,63,14,255,127,63,21,255,127,63,27,255,127,63,33,255,127,63,39,255,127,63,45,255,127,63,50,255,127,63,56,255,127,63,61,255,127,63,67,255,127,63,72,255,127,63,77,255,127,63,82,255,127,63,87,255,127,63,92,255,127,63,96,255,127,63,101,255,127,63,105,255,127,63,110,255,127,63,114,255,127,63,118,255,127,63,122,255,127,63,126,255,127,63,130,255,127,63,134,255,127,63,138,255,127,63,142,255,127,63,145,255,127,63,149,255,127,63,152,255,127,63,155,255,127,63,159,255,127,63,162,255,127,63,165,255,127,63,168,255,127,63,171,255,127,63,174,255,127,63,176,255,127,63,179,255,127,63,182,255,127,63,184,255,127,63,187,255,127,63,189,255,127,63,192,255,127,63,194,255,127,63,196,255,127,63,198,255,127,63,201,255,127,63,203,255,127,63,205,255,127,63,207,255,127,63,209,255,127,63,210,255,127,63,212,255,127,63,214,255,127,63,216,255,127,63,217,255,127,63,219,255,127,63,220,255,127,63,222,255,127,63,223,255,127,63,225,255,127,63,226,255,127,63,227,255,127,63,229,255,127,63,230,255,127,63,231,255,127,63,232,255,127,63,233,255,127,63,234,255,127,63,235,255,127,63,236,255,127,63,237,255,127,63,238,255,127,63,239,255,127,63,240,255,127,63,241,255,127,63,241,255,127,63,242,255,127,63,243,255,127,63,244,255,127,63,244,255,127,63,245,255,127,63,246,255,127,63,246,255,127,63,247,255,127,63,247,255,127,63,248,255,127,63,248,255,127,63,249,255,127,63,249,255,127,63,250,255,127,63,250,255,127,63,250,255,127,63,251,255,127,63,251,255,127,63,251,255,127,63,252,255,127,63,252,255,127,63,252,255,127,63,253,255,127,63,253,255,127,63,253,255,127,63,253,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,254,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,255,255,127,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,76,194,0,0,80,194,0,0,84,194,0,0,88,194,0,0,92,194,0,0,96,194,0,0,100,194,0,0,104,194,0,0,108,194,0,0,112,194,0,0,116,194,0,0,120,194,0,0,124,194,0,0,128,194,0,0,130,194,0,0,132,194,0,0,134,194,0,0,136,194,0,0,138,194,0,0,140,194,0,0,142,194,0,0,144,194,0,0,146,194,0,0,148,194,0,0,150,194,0,0,152,194,0,0,154,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,164,194,0,0,166,194,0,0,168,194,0,0,170,194,0,0,172,194,0,0,174,194,0,0,176,194,0,0,176,194,0,0,178,194,0,0,178,194,0,0,180,194,0,0,182,194,0,0,182,194,0,0,184,194,0,0,186,194,0,0,188,194,0,0,190,194,0,0,192,194,0,0,192,194,0,0,194,194,0,0,196,194,0,0,196,194,0,0,198,194,0,0,198,194,0,0,200,194,0,0,200,194,0,0,202,194,0,0,204,194,0,0,206,194,0,0,208,194,0,0,212,194,0,0,214,194,0,0,214,194,0,0,214,194,0,0,214,194,0,0,210,194,0,0,206,194,0,0,204,194,0,0,202,194,0,0,198,194,0,0,196,194,0,0,192,194,0,0,190,194,0,0,190,194,0,0,192,194,0,0,194,194,0,0,192,194,0,0,190,194,0,0,186,194,0,0,180,194,0,0,160,194,0,0,140,194,0,0,72,194,0,0,32,194,0,0,240,193,0,0,240,193,0,0,240,193,0,0,240,193,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,112,194,0,0,120,194,0,0,120,194,0,0,130,194,0,0,146,194,0,0,138,194,0,0,136,194,0,0,136,194,0,0,134,194,0,0,140,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,150,194,0,0,158,194,0,0,158,194,0,0,160,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,84,194,0,0,116,194,0,0,132,194,0,0,132,194,0,0,136,194,0,0,134,194,0,0,140,194,0,0,152,194,0,0,152,194,0,0,144,194,0,0,146,194,0,0,150,194,0,0,152,194,0,0,156,194,0,0,158,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,20,194,0,0,24,194,0,0,32,194,0,0,40,194,0,0,56,194,0,0,64,194,0,0,84,194,0,0,92,194,0,0,120,194,0,0,130,194,0,0,104,194,0,0,96,194,0,0,96,194,0,0,116,194,0,0,112,194,0,0,130,194,0,0,134,194,0,0,138,194,0,0,142,194,0,0,154,194,0,0,154,194,0,0,156,194,0,0,160,194,0,0,164,194,0,0,168,194,0,0,176,194,0,0,186,194,0,0,196,194,0,0,212,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,208,193,0,0,216,193,0,0,232,193,0,0,0,194,0,0,24,194,0,0,64,194,0,0,80,194,0,0,80,194,0,0,72,194,0,0,64,194,0,0,64,194,0,0,76,194,0,0,80,194,0,0,88,194,0,0,112,194,0,0,134,194,0,0,134,194,0,0,132,194,0,0,136,194,0,0,138,194,0,0,146,194,0,0,146,194,0,0,152,194,0,0,160,194,0,0,162,194,0,0,162,194,0,0,170,194,0,0,170,194,0,0,172,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,128,193,0,0,136,193,0,0,152,193,0,0,160,193,0,0,176,193,0,0,208,193,0,0,224,193,0,0,248,193,0,0,32,194,0,0,60,194,0,0,28,194,0,0,28,194,0,0,32,194,0,0,40,194,0,0,44,194,0,0,60,194,0,0,76,194,0,0,100,194,0,0,80,194,0,0,92,194,0,0,92,194,0,0,112,194,0,0,104,194,0,0,120,194,0,0,124,194,0,0,140,194,0,0,134,194,0,0,138,194,0,0,144,194,0,0,146,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,166,194,0,0,174,194,0,0,180,194,0,0,188,194,0,0,196,194,0,0,208,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,0,193,0,0,32,193,0,0,48,193,0,0,112,193,0,0,152,193,0,0,200,193,0,0,240,193,0,0,8,194,0,0,248,193,0,0,240,193,0,0,248,193,0,0,232,193,0,0,0,194,0,0,12,194,0,0,40,194,0,0,64,194,0,0,40,194,0,0,48,194,0,0,56,194,0,0,72,194,0,0,72,194,0,0,76,194,0,0,80,194,0,0,108,194,0,0,88,194,0,0,92,194,0,0,92,194,0,0,104,194,0,0,120,194,0,0,124,194,0,0,132,194,0,0,144,194,0,0,146,194,0,0,152,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,160,194,0,0,162,194,0,0,168,194,0,0,176,194,0,0,180,194,0,0,188,194,0,0,196,194,0,0,202,194,0,0,212,194,0,0,220,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,134,194,0,0,134,194,0,0,134,194,0,0,152,194,0,0,144,194,0,0,142,194,0,0,148,194,0,0,152,194,0,0,152,194,0,0,150,194,0,0,156,194,0,0,158,194,0,0,158,194,0,0,162,194,0,0,166,194,0,0,172,194,0,0,178,194,0,0,186,194,0,0,194,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,64,194,0,0,76,194,0,0,92,194,0,0,108,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,134,194,0,0,132,194,0,0,136,194,0,0,138,194,0,0,140,194,0,0,148,194,0,0,158,194,0,0,154,194,0,0,154,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,164,194,0,0,168,194,0,0,172,194,0,0,176,194,0,0,182,194,0,0,190,194,0,0,200,194,0,0,216,194,0,0,232,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,20,194,0,0,20,194,0,0,36,194,0,0,48,194,0,0,64,194,0,0,76,194,0,0,104,194,0,0,120,194,0,0,112,194,0,0,100,194,0,0,108,194,0,0,108,194,0,0,112,194,0,0,124,194,0,0,130,194,0,0,144,194,0,0,142,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,154,194,0,0,152,194,0,0,156,194,0,0,162,194,0,0,162,194,0,0,160,194,0,0,166,194,0,0,172,194,0,0,182,194,0,0,192,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,240,193,0,0,0,194,0,0,0,194,0,0,4,194,0,0,12,194,0,0,36,194,0,0,68,194,0,0,72,194,0,0,68,194,0,0,60,194,0,0,64,194,0,0,64,194,0,0,80,194,0,0,76,194,0,0,100,194,0,0,130,194,0,0,116,194,0,0,108,194,0,0,116,194,0,0,128,194,0,0,138,194,0,0,140,194,0,0,148,194,0,0,154,194,0,0,154,194,0,0,156,194,0,0,162,194,0,0,168,194,0,0,170,194,0,0,174,194,0,0,180,194,0,0,184,194,0,0,192,194,0,0,200,194,0,0,214,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,152,193,0,0,160,193,0,0,168,193,0,0,184,193,0,0,216,193,0,0,240,193,0,0,12,194,0,0,16,194,0,0,36,194,0,0,56,194,0,0,48,194,0,0,40,194,0,0,32,194,0,0,36,194,0,0,36,194,0,0,44,194,0,0,64,194,0,0,92,194,0,0,84,194,0,0,80,194,0,0,84,194,0,0,96,194,0,0,108,194,0,0,104,194,0,0,112,194,0,0,134,194,0,0,132,194,0,0,138,194,0,0,142,194,0,0,144,194,0,0,150,194,0,0,158,194,0,0,162,194,0,0,168,194,0,0,174,194,0,0,180,194,0,0,186,194,0,0,194,194,0,0,202,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,16,193,0,0,48,193,0,0,64,193,0,0,64,193,0,0,112,193,0,0,128,193,0,0,160,193,0,0,184,193,0,0,240,193,0,0,20,194,0,0,8,194,0,0,4,194,0,0,8,194,0,0,248,193,0,0,0,194,0,0,0,194,0,0,24,194,0,0,60,194,0,0,48,194,0,0,36,194,0,0,32,194,0,0,60,194,0,0,68,194,0,0,56,194,0,0,56,194,0,0,104,194,0,0,72,194,0,0,72,194,0,0,88,194,0,0,104,194,0,0,120,194,0,0,128,194,0,0,134,194,0,0,134,194,0,0,140,194,0,0,144,194,0,0,152,194,0,0,158,194,0,0,166,194,0,0,174,194,0,0,182,194,0,0,192,194,0,0,200,194,0,0,208,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,124,194,0,0,128,194,0,0,132,194,0,0,134,194,0,0,132,194,0,0,136,194,0,0,150,194,0,0,144,194,0,0,152,194,0,0,150,194,0,0,152,194,0,0,156,194,0,0,158,194,0,0,164,194,0,0,168,194,0,0,170,194,0,0,180,194,0,0,188,194,0,0,202,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,108,194,0,0,112,194,0,0,112,194,0,0,116,194,0,0,124,194,0,0,132,194,0,0,142,194,0,0,136,194,0,0,140,194,0,0,140,194,0,0,142,194,0,0,144,194,0,0,144,194,0,0,150,194,0,0,162,194,0,0,156,194,0,0,158,194,0,0,164,194,0,0,166,194,0,0,172,194,0,0,180,194,0,0,194,194,0,0,206,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,84,194,0,0,88,194,0,0,92,194,0,0,100,194,0,0,96,194,0,0,100,194,0,0,92,194,0,0,116,194,0,0,130,194,0,0,112,194,0,0,112,194,0,0,120,194,0,0,124,194,0,0,124,194,0,0,132,194,0,0,136,194,0,0,148,194,0,0,146,194,0,0,150,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,160,194,0,0,164,194,0,0,170,194,0,0,180,194,0,0,192,194,0,0,202,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,56,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,60,194,0,0,64,194,0,0,76,194,0,0,100,194,0,0,76,194,0,0,68,194,0,0,72,194,0,0,76,194,0,0,84,194,0,0,88,194,0,0,108,194,0,0,132,194,0,0,112,194,0,0,120,194,0,0,134,194,0,0,134,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,152,194,0,0,156,194,0,0,162,194,0,0,170,194,0,0,176,194,0,0,188,194,0,0,194,194,0,0,208,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,16,194,0,0,28,194,0,0,36,194,0,0,40,194,0,0,40,194,0,0,28,194,0,0,24,194,0,0,36,194,0,0,44,194,0,0,80,194,0,0,48,194,0,0,32,194,0,0,28,194,0,0,20,194,0,0,20,194,0,0,32,194,0,0,60,194,0,0,88,194,0,0,72,194,0,0,64,194,0,0,72,194,0,0,92,194,0,0,116,194,0,0,108,194,0,0,120,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,138,194,0,0,138,194,0,0,146,194,0,0,148,194,0,0,148,194,0,0,150,194,0,0,154,194,0,0,158,194,0,0,164,194,0,0,174,194,0,0,182,194,0,0,190,194,0,0,200,194,0,0,216,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,224,193,0,0,208,193,0,0,192,193,0,0,176,193,0,0,160,193,0,0,160,193,0,0,184,193,0,0,232,193,0,0,240,193,0,0,248,193,0,0,224,193,0,0,216,193,0,0,224,193,0,0,224,193,0,0,224,193,0,0,12,194,0,0,32,194,0,0,4,194,0,0,0,194,0,0,232,193,0,0,240,193,0,0,240,193,0,0,240,193,0,0,20,194,0,0,52,194,0,0,36,194,0,0,20,194,0,0,24,194,0,0,52,194,0,0,60,194,0,0,60,194,0,0,64,194,0,0,84,194,0,0,68,194,0,0,64,194,0,0,72,194,0,0,68,194,0,0,68,194,0,0,76,194,0,0,80,194,0,0,104,194,0,0,96,194,0,0,100,194,0,0,96,194,0,0,112,194,0,0,116,194,0,0,120,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,156,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,212,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,200,194,0,0,190,194,0,0,182,194,0,0,174,194,0,0,166,194,0,0,160,194,0,0,156,194,0,0,152,194,0,0,156,194,0,0,156,194,0,0,162,194,0,0,166,194,0,0,170,194,0,0,172,194,0,0,170,194,0,0,172,194,0,0,174,194,0,0,180,194,0,0,194,194,0,0,214,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+30720);
/* memory initializer */ allocate([0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,162,194,0,0,154,194,0,0,146,194,0,0,140,194,0,0,134,194,0,0,134,194,0,0,136,194,0,0,150,194,0,0,146,194,0,0,140,194,0,0,138,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,158,194,0,0,168,194,0,0,166,194,0,0,168,194,0,0,172,194,0,0,176,194,0,0,178,194,0,0,178,194,0,0,186,194,0,0,196,194,0,0,210,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,152,194,0,0,142,194,0,0,136,194,0,0,136,194,0,0,130,194,0,0,124,194,0,0,124,194,0,0,120,194,0,0,120,194,0,0,128,194,0,0,130,194,0,0,128,194,0,0,116,194,0,0,120,194,0,0,124,194,0,0,128,194,0,0,132,194,0,0,136,194,0,0,146,194,0,0,146,194,0,0,148,194,0,0,150,194,0,0,152,194,0,0,162,194,0,0,166,194,0,0,170,194,0,0,176,194,0,0,178,194,0,0,184,194,0,0,190,194,0,0,200,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,160,194,0,0,150,194,0,0,142,194,0,0,136,194,0,0,130,194,0,0,124,194,0,0,120,194,0,0,116,194,0,0,116,194,0,0,116,194,0,0,116,194,0,0,108,194,0,0,96,194,0,0,100,194,0,0,84,194,0,0,72,194,0,0,104,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,80,194,0,0,84,194,0,0,88,194,0,0,104,194,0,0,134,194,0,0,124,194,0,0,134,194,0,0,136,194,0,0,144,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,162,194,0,0,164,194,0,0,170,194,0,0,178,194,0,0,180,194,0,0,186,194,0,0,194,194,0,0,202,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,130,194,0,0,116,194,0,0,108,194,0,0,100,194,0,0,96,194,0,0,92,194,0,0,92,194,0,0,96,194,0,0,96,194,0,0,100,194,0,0,92,194,0,0,84,194,0,0,80,194,0,0,60,194,0,0,48,194,0,0,48,194,0,0,72,194,0,0,48,194,0,0,36,194,0,0,28,194,0,0,28,194,0,0,40,194,0,0,32,194,0,0,56,194,0,0,76,194,0,0,68,194,0,0,72,194,0,0,84,194,0,0,88,194,0,0,124,194,0,0,112,194,0,0,116,194,0,0,120,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,140,194,0,0,146,194,0,0,148,194,0,0,150,194,0,0,152,194,0,0,150,194,0,0,158,194,0,0,170,194,0,0,178,194,0,0,182,194,0,0,192,194,0,0,204,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,80,194,0,0,72,194,0,0,68,194,0,0,68,194,0,0,64,194,0,0,64,194,0,0,64,194,0,0,68,194,0,0,72,194,0,0,72,194,0,0,68,194,0,0,56,194,0,0,44,194,0,0,28,194,0,0,12,194,0,0,4,194,0,0,24,194,0,0,16,194,0,0,0,194,0,0,232,193,0,0,0,194,0,0,0,194,0,0,0,194,0,0,12,194,0,0,48,194,0,0,28,194,0,0,24,194,0,0,24,194,0,0,56,194,0,0,72,194,0,0,52,194,0,0,56,194,0,0,84,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,88,194,0,0,88,194,0,0,84,194,0,0,84,194,0,0,96,194,0,0,100,194,0,0,108,194,0,0,132,194,0,0,140,194,0,0,144,194,0,0,148,194,0,0,158,194,0,0,166,194,0,0,170,194,0,0,180,194,0,0,194,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,172,194,0,0,160,194,0,0,150,194,0,0,150,194,0,0,158,194,0,0,160,194,0,0,158,194,0,0,160,194,0,0,162,194,0,0,164,194,0,0,176,194,0,0,190,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,176,194,0,0,166,194,0,0,158,194,0,0,156,194,0,0,150,194,0,0,142,194,0,0,134,194,0,0,136,194,0,0,146,194,0,0,146,194,0,0,144,194,0,0,146,194,0,0,150,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,202,194,0,0,192,194,0,0,180,194,0,0,172,194,0,0,162,194,0,0,154,194,0,0,146,194,0,0,138,194,0,0,132,194,0,0,116,194,0,0,120,194,0,0,132,194,0,0,128,194,0,0,120,194,0,0,130,194,0,0,132,194,0,0,140,194,0,0,144,194,0,0,152,194,0,0,162,194,0,0,160,194,0,0,168,194,0,0,180,194,0,0,190,194,0,0,204,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,206,194,0,0,194,194,0,0,184,194,0,0,176,194,0,0,166,194,0,0,158,194,0,0,148,194,0,0,140,194,0,0,132,194,0,0,108,194,0,0,84,194,0,0,104,194,0,0,120,194,0,0,92,194,0,0,88,194,0,0,88,194,0,0,88,194,0,0,104,194,0,0,116,194,0,0,120,194,0,0,144,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,156,194,0,0,160,194,0,0,162,194,0,0,160,194,0,0,166,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,150,194,0,0,140,194,0,0,132,194,0,0,120,194,0,0,96,194,0,0,64,194,0,0,48,194,0,0,64,194,0,0,56,194,0,0,56,194,0,0,44,194,0,0,56,194,0,0,64,194,0,0,64,194,0,0,76,194,0,0,104,194,0,0,104,194,0,0,108,194,0,0,112,194,0,0,120,194,0,0,120,194,0,0,116,194,0,0,116,194,0,0,130,194,0,0,128,194,0,0,130,194,0,0,136,194,0,0,140,194,0,0,148,194,0,0,150,194,0,0,156,194,0,0,162,194,0,0,172,194,0,0,190,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,150,194,0,0,140,194,0,0,130,194,0,0,116,194,0,0,92,194,0,0,68,194,0,0,28,194,0,0,4,194,0,0,32,194,0,0,12,194,0,0,0,194,0,0,24,194,0,0,32,194,0,0,4,194,0,0,12,194,0,0,20,194,0,0,56,194,0,0,36,194,0,0,52,194,0,0,48,194,0,0,56,194,0,0,40,194,0,0,52,194,0,0,56,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,88,194,0,0,88,194,0,0,92,194,0,0,100,194,0,0,120,194,0,0,128,194,0,0,132,194,0,0,136,194,0,0,140,194,0,0,152,194,0,0,162,194,0,0,180,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,180,194,0,0,170,194,0,0,164,194,0,0,166,194,0,0,160,194,0,0,156,194,0,0,168,194,0,0,158,194,0,0,160,194,0,0,166,194,0,0,174,194,0,0,178,194,0,0,182,194,0,0,186,194,0,0,198,194,0,0,212,194,0,0,234,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,150,194,0,0,140,194,0,0,136,194,0,0,148,194,0,0,144,194,0,0,148,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,170,194,0,0,174,194,0,0,184,194,0,0,178,194,0,0,182,194,0,0,190,194,0,0,200,194,0,0,212,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,180,194,0,0,166,194,0,0,150,194,0,0,142,194,0,0,124,194,0,0,128,194,0,0,134,194,0,0,120,194,0,0,128,194,0,0,134,194,0,0,140,194,0,0,146,194,0,0,154,194,0,0,162,194,0,0,168,194,0,0,166,194,0,0,170,194,0,0,178,194,0,0,180,194,0,0,186,194,0,0,196,194,0,0,208,194,0,0,218,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,206,194,0,0,192,194,0,0,176,194,0,0,162,194,0,0,150,194,0,0,136,194,0,0,104,194,0,0,88,194,0,0,96,194,0,0,88,194,0,0,96,194,0,0,96,194,0,0,104,194,0,0,112,194,0,0,124,194,0,0,132,194,0,0,148,194,0,0,138,194,0,0,144,194,0,0,144,194,0,0,150,194,0,0,148,194,0,0,154,194,0,0,162,194,0,0,162,194,0,0,164,194,0,0,168,194,0,0,174,194,0,0,186,194,0,0,192,194,0,0,198,194,0,0,208,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,204,194,0,0,192,194,0,0,182,194,0,0,170,194,0,0,160,194,0,0,148,194,0,0,136,194,0,0,112,194,0,0,76,194,0,0,56,194,0,0,64,194,0,0,56,194,0,0,44,194,0,0,52,194,0,0,60,194,0,0,60,194,0,0,68,194,0,0,64,194,0,0,96,194,0,0,84,194,0,0,92,194,0,0,104,194,0,0,100,194,0,0,124,194,0,0,104,194,0,0,112,194,0,0,132,194,0,0,128,194,0,0,134,194,0,0,140,194,0,0,140,194,0,0,148,194,0,0,154,194,0,0,168,194,0,0,172,194,0,0,178,194,0,0,182,194,0,0,186,194,0,0,188,194,0,0,202,194,0,0,218,194,0,0,236,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,176,194,0,0,166,194,0,0,156,194,0,0,146,194,0,0,136,194,0,0,112,194,0,0,84,194,0,0,48,194,0,0,12,194,0,0,24,194,0,0,24,194,0,0,8,194,0,0,8,194,0,0,16,194,0,0,32,194,0,0,36,194,0,0,48,194,0,0,76,194,0,0,52,194,0,0,56,194,0,0,60,194,0,0,56,194,0,0,88,194,0,0,72,194,0,0,68,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,76,194,0,0,88,194,0,0,100,194,0,0,104,194,0,0,112,194,0,0,132,194,0,0,132,194,0,0,132,194,0,0,128,194,0,0,130,194,0,0,136,194,0,0,154,194,0,0,164,194,0,0,174,194,0,0,190,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,204,194,0,0,194,194,0,0,184,194,0,0,174,194,0,0,166,194,0,0,156,194,0,0,150,194,0,0,164,194,0,0,158,194,0,0,166,194,0,0,170,194,0,0,178,194,0,0,184,194,0,0,190,194,0,0,196,194,0,0,202,194,0,0,210,194,0,0,218,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,172,194,0,0,162,194,0,0,156,194,0,0,148,194,0,0,138,194,0,0,148,194,0,0,148,194,0,0,152,194,0,0,158,194,0,0,166,194,0,0,168,194,0,0,172,194,0,0,178,194,0,0,184,194,0,0,194,194,0,0,186,194,0,0,200,194,0,0,206,194,0,0,214,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,174,194,0,0,166,194,0,0,160,194,0,0,150,194,0,0,138,194,0,0,112,194,0,0,132,194,0,0,132,194,0,0,136,194,0,0,140,194,0,0,148,194,0,0,156,194,0,0,158,194,0,0,162,194,0,0,162,194,0,0,166,194,0,0,168,194,0,0,174,194,0,0,186,194,0,0,192,194,0,0,198,194,0,0,206,194,0,0,214,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,178,194,0,0,170,194,0,0,164,194,0,0,156,194,0,0,142,194,0,0,120,194,0,0,92,194,0,0,104,194,0,0,104,194,0,0,88,194,0,0,88,194,0,0,92,194,0,0,108,194,0,0,116,194,0,0,120,194,0,0,140,194,0,0,132,194,0,0,132,194,0,0,134,194,0,0,140,194,0,0,144,194,0,0,150,194,0,0,156,194,0,0,168,194,0,0,168,194,0,0,168,194,0,0,176,194,0,0,182,194,0,0,180,194,0,0,190,194,0,0,196,194,0,0,204,194,0,0,206,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,188,194,0,0,180,194,0,0,174,194,0,0,164,194,0,0,158,194,0,0,146,194,0,0,134,194,0,0,104,194,0,0,60,194,0,0,72,194,0,0,52,194,0,0,36,194,0,0,52,194,0,0,64,194,0,0,48,194,0,0,48,194,0,0,68,194,0,0,88,194,0,0,76,194,0,0,64,194,0,0,60,194,0,0,68,194,0,0,72,194,0,0,76,194,0,0,100,194,0,0,104,194,0,0,112,194,0,0,124,194,0,0,138,194,0,0,140,194,0,0,138,194,0,0,142,194,0,0,148,194,0,0,156,194,0,0,164,194,0,0,180,194,0,0,190,194,0,0,202,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,202,194,0,0,194,194,0,0,186,194,0,0,180,194,0,0,170,194,0,0,160,194,0,0,154,194,0,0,144,194,0,0,130,194,0,0,96,194,0,0,64,194,0,0,20,194,0,0,32,194,0,0,16,194,0,0,8,194,0,0,32,194,0,0,72,194,0,0,60,194,0,0,24,194,0,0,36,194,0,0,60,194,0,0,24,194,0,0,12,194,0,0,28,194,0,0,24,194,0,0,44,194,0,0,32,194,0,0,52,194,0,0,72,194,0,0,52,194,0,0,48,194,0,0,60,194,0,0,72,194,0,0,92,194,0,0,64,194,0,0,64,194,0,0,80,194,0,0,132,194,0,0,140,194,0,0,152,194,0,0,164,194,0,0,180,194,0,0,194,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,172,194,0,0,158,194,0,0,152,194,0,0,166,194,0,0,162,194,0,0,170,194,0,0,174,194,0,0,178,194,0,0,186,194,0,0,196,194,0,0,204,194,0,0,214,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,172,194,0,0,158,194,0,0,142,194,0,0,154,194,0,0,148,194,0,0,154,194,0,0,158,194,0,0,162,194,0,0,168,194,0,0,170,194,0,0,180,194,0,0,184,194,0,0,186,194,0,0,184,194,0,0,196,194,0,0,202,194,0,0,216,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,206,194,0,0,196,194,0,0,186,194,0,0,174,194,0,0,156,194,0,0,136,194,0,0,130,194,0,0,132,194,0,0,120,194,0,0,130,194,0,0,134,194,0,0,140,194,0,0,146,194,0,0,150,194,0,0,156,194,0,0,164,194,0,0,164,194,0,0,166,194,0,0,168,194,0,0,182,194,0,0,186,194,0,0,196,194,0,0,204,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,164,194,0,0,148,194,0,0,120,194,0,0,100,194,0,0,104,194,0,0,96,194,0,0,76,194,0,0,80,194,0,0,80,194,0,0,88,194,0,0,88,194,0,0,104,194,0,0,132,194,0,0,108,194,0,0,112,194,0,0,124,194,0,0,132,194,0,0,138,194,0,0,146,194,0,0,158,194,0,0,166,194,0,0,168,194,0,0,160,194,0,0,162,194,0,0,162,194,0,0,164,194,0,0,176,194,0,0,184,194,0,0,196,194,0,0,210,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,204,194,0,0,194,194,0,0,184,194,0,0,168,194,0,0,158,194,0,0,138,194,0,0,100,194,0,0,60,194,0,0,80,194,0,0,60,194,0,0,48,194,0,0,52,194,0,0,72,194,0,0,80,194,0,0,40,194,0,0,40,194,0,0,84,194,0,0,44,194,0,0,44,194,0,0,64,194,0,0,76,194,0,0,96,194,0,0,92,194,0,0,80,194,0,0,100,194,0,0,108,194,0,0,116,194,0,0,120,194,0,0,134,194,0,0,142,194,0,0,156,194,0,0,166,194,0,0,172,194,0,0,188,194,0,0,196,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,190,194,0,0,180,194,0,0,168,194,0,0,156,194,0,0,140,194,0,0,116,194,0,0,76,194,0,0,36,194,0,0,32,194,0,0,24,194,0,0,32,194,0,0,56,194,0,0,80,194,0,0,76,194,0,0,36,194,0,0,32,194,0,0,56,194,0,0,32,194,0,0,24,194,0,0,24,194,0,0,36,194,0,0,56,194,0,0,36,194,0,0,56,194,0,0,60,194,0,0,44,194,0,0,44,194,0,0,52,194,0,0,36,194,0,0,52,194,0,0,96,194,0,0,134,194,0,0,136,194,0,0,166,194,0,0,174,194,0,0,180,194,0,0,190,194,0,0,204,194,0,0,214,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,218,194,0,0,210,194,0,0,202,194,0,0,192,194,0,0,182,194,0,0,168,194,0,0,154,194,0,0,164,194,0,0,164,194,0,0,170,194,0,0,178,194,0,0,188,194,0,0,200,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,206,194,0,0,196,194,0,0,184,194,0,0,170,194,0,0,160,194,0,0,142,194,0,0,150,194,0,0,144,194,0,0,152,194,0,0,160,194,0,0,168,194,0,0,172,194,0,0,178,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,208,194,0,0,202,194,0,0,194,194,0,0,184,194,0,0,176,194,0,0,168,194,0,0,160,194,0,0,128,194,0,0,132,194,0,0,124,194,0,0,128,194,0,0,132,194,0,0,138,194,0,0,146,194,0,0,154,194,0,0,166,194,0,0,166,194,0,0,172,194,0,0,182,194,0,0,196,194,0,0,208,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,208,194,0,0,202,194,0,0,194,194,0,0,184,194,0,0,180,194,0,0,168,194,0,0,148,194,0,0,100,194,0,0,104,194,0,0,80,194,0,0,92,194,0,0,88,194,0,0,72,194,0,0,80,194,0,0,72,194,0,0,80,194,0,0,124,194,0,0,120,194,0,0,138,194,0,0,152,194,0,0,154,194,0,0,156,194,0,0,156,194,0,0,158,194,0,0,164,194,0,0,176,194,0,0,188,194,0,0,200,194,0,0,212,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,204,194,0,0,196,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,166,194,0,0,156,194,0,0,140,194,0,0,72,194,0,0,72,194,0,0,36,194,0,0,48,194,0,0,68,194,0,0,60,194,0,0,72,194,0,0,72,194,0,0,48,194,0,0,92,194,0,0,56,194,0,0,60,194,0,0,64,194,0,0,64,194,0,0,88,194,0,0,68,194,0,0,68,194,0,0,104,194,0,0,120,194,0,0,142,194,0,0,162,194,0,0,174,194,0,0,184,194,0,0,194,194,0,0,204,194,0,0,216,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,212,194,0,0,204,194,0,0,196,194,0,0,190,194,0,0,180,194,0,0,170,194,0,0,166,194,0,0,156,194,0,0,140,194,0,0,52,194,0,0,44,194,0,0,36,194,0,0,60,194,0,0,72,194,0,0,76,194,0,0,72,194,0,0,68,194,0,0,52,194,0,0,60,194,0,0,36,194,0,0,48,194,0,0,36,194,0,0,28,194,0,0,44,194,0,0,24,194,0,0,20,194,0,0,32,194,0,0,36,194,0,0,48,194,0,0,72,194,0,0,104,194,0,0,130,194,0,0,146,194,0,0,158,194,0,0,170,194,0,0,184,194,0,0,194,194,0,0,202,194,0,0,210,194,0,0,218,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,200,194,0,0,190,194,0,0,174,194,0,0,162,194,0,0,170,194,0,0,166,194,0,0,176,194,0,0,186,194,0,0,200,194,0,0,214,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,202,194,0,0,190,194,0,0,176,194,0,0,166,194,0,0,152,194,0,0,146,194,0,0,144,194,0,0,158,194,0,0,168,194,0,0,180,194,0,0,190,194,0,0,200,194,0,0,210,194,0,0,220,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,208,194,0,0,196,194,0,0,184,194,0,0,174,194,0,0,162,194,0,0,140,194,0,0,130,194,0,0,120,194,0,0,134,194,0,0,142,194,0,0,148,194,0,0,160,194,0,0,170,194,0,0,182,194,0,0,190,194,0,0,198,194,0,0,206,194,0,0,216,194,0,0,222,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,206,194,0,0,194,194,0,0,180,194,0,0,170,194,0,0,152,194,0,0,112,194,0,0,96,194,0,0,88,194,0,0,112,194,0,0,120,194,0,0,116,194,0,0,96,194,0,0,124,194,0,0,130,194,0,0,146,194,0,0,148,194,0,0,154,194,0,0,150,194,0,0,156,194,0,0,162,194,0,0,172,194,0,0,174,194,0,0,176,194,0,0,182,194,0,0,188,194,0,0,196,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,194,194,0,0,184,194,0,0,172,194,0,0,162,194,0,0,158,194,0,0,140,194,0,0,100,194,0,0,76,194,0,0,60,194,0,0,76,194,0,0,104,194,0,0,112,194,0,0,96,194,0,0,84,194,0,0,72,194,0,0,104,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,84,194,0,0,92,194,0,0,128,194,0,0,138,194,0,0,142,194,0,0,170,194,0,0,164,194,0,0,156,194,0,0,162,194,0,0,170,194,0,0,190,194,0,0,204,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,200,194,0,0,194,194,0,0,184,194,0,0,170,194,0,0,166,194,0,0,158,194,0,0,144,194,0,0,68,194,0,0,32,194,0,0,44,194,0,0,44,194,0,0,88,194,0,0,96,194,0,0,76,194,0,0,72,194,0,0,32,194,0,0,44,194,0,0,24,194,0,0,16,194,0,0,12,194,0,0,20,194,0,0,24,194,0,0,20,194,0,0,48,194,0,0,88,194,0,0,112,194,0,0,100,194,0,0,112,194,0,0,140,194,0,0,150,194,0,0,168,194,0,0,184,194,0,0,206,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,204,194,0,0,190,194,0,0,178,194,0,0,164,194,0,0,166,194,0,0,168,194,0,0,180,194,0,0,184,194,0,0,198,194,0,0,214,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,202,194,0,0,190,194,0,0,178,194,0,0,166,194,0,0,144,194,0,0,148,194,0,0,156,194,0,0,170,194,0,0,176,194,0,0,176,194,0,0,180,194,0,0,184,194,0,0,196,194,0,0,210,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,218,194,0,0,206,194,0,0,194,194,0,0,186,194,0,0,174,194,0,0,162,194,0,0,140,194,0,0,140,194,0,0,134,194,0,0,150,194,0,0,146,194,0,0,152,194,0,0,158,194,0,0,162,194,0,0,166,194,0,0,176,194,0,0,178,194,0,0,194,194,0,0,206,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,214,194,0,0,200,194,0,0,188,194,0,0,176,194,0,0,166,194,0,0,150,194,0,0,124,194,0,0,108,194,0,0,108,194,0,0,124,194,0,0,132,194,0,0,112,194,0,0,120,194,0,0,134,194,0,0,134,194,0,0,154,194,0,0,152,194,0,0,162,194,0,0,176,194,0,0,172,194,0,0,184,194,0,0,192,194,0,0,204,194,0,0,218,194,0,0,232,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,196,194,0,0,184,194,0,0,172,194,0,0,162,194,0,0,146,194,0,0,96,194,0,0,80,194,0,0,60,194,0,0,92,194,0,0,112,194,0,0,104,194,0,0,80,194,0,0,76,194,0,0,52,194,0,0,68,194,0,0,72,194,0,0,84,194,0,0,88,194,0,0,116,194,0,0,142,194,0,0,140,194,0,0,138,194,0,0,156,194,0,0,158,194,0,0,174,194,0,0,180,194,0,0,192,194,0,0,208,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+40960);
/* memory initializer */ allocate([0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,206,194,0,0,192,194,0,0,180,194,0,0,172,194,0,0,156,194,0,0,140,194,0,0,76,194,0,0,40,194,0,0,60,194,0,0,64,194,0,0,92,194,0,0,88,194,0,0,88,194,0,0,84,194,0,0,40,194,0,0,12,194,0,0,224,193,0,0,4,194,0,0,24,194,0,0,20,194,0,0,48,194,0,0,60,194,0,0,68,194,0,0,88,194,0,0,124,194,0,0,136,194,0,0,156,194,0,0,164,194,0,0,178,194,0,0,188,194,0,0,198,194,0,0,208,194,0,0,218,194,0,0,228,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,180,194,0,0,158,194,0,0,170,194,0,0,162,194,0,0,164,194,0,0,164,194,0,0,178,194,0,0,188,194,0,0,198,194,0,0,206,194,0,0,218,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,194,194,0,0,170,194,0,0,144,194,0,0,148,194,0,0,140,194,0,0,140,194,0,0,140,194,0,0,152,194,0,0,170,194,0,0,182,194,0,0,186,194,0,0,194,194,0,0,206,194,0,0,218,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,224,194,0,0,186,194,0,0,162,194,0,0,136,194,0,0,120,194,0,0,112,194,0,0,112,194,0,0,100,194,0,0,124,194,0,0,140,194,0,0,154,194,0,0,164,194,0,0,180,194,0,0,186,194,0,0,196,194,0,0,208,194,0,0,218,194,0,0,226,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,226,194,0,0,200,194,0,0,186,194,0,0,168,194,0,0,124,194,0,0,104,194,0,0,64,194,0,0,84,194,0,0,88,194,0,0,80,194,0,0,80,194,0,0,100,194,0,0,128,194,0,0,132,194,0,0,152,194,0,0,166,194,0,0,162,194,0,0,170,194,0,0,170,194,0,0,180,194,0,0,190,194,0,0,196,194,0,0,202,194,0,0,206,194,0,0,212,194,0,0,216,194,0,0,222,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,210,194,0,0,190,194,0,0,172,194,0,0,148,194,0,0,84,194,0,0,72,194,0,0,24,194,0,0,44,194,0,0,68,194,0,0,44,194,0,0,40,194,0,0,28,194,0,0,28,194,0,0,56,194,0,0,80,194,0,0,100,194,0,0,96,194,0,0,144,194,0,0,138,194,0,0,148,194,0,0,162,194,0,0,174,194,0,0,184,194,0,0,188,194,0,0,194,194,0,0,198,194,0,0,204,194,0,0,210,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,216,194,0,0,198,194,0,0,180,194,0,0,152,194,0,0,132,194,0,0,52,194,0,0,44,194,0,0,36,194,0,0,48,194,0,0,60,194,0,0,44,194,0,0,60,194,0,0,32,194,0,0,240,193,0,0,248,193,0,0,248,193,0,0,28,194,0,0,4,194,0,0,32,194,0,0,36,194,0,0,44,194,0,0,84,194,0,0,108,194,0,0,140,194,0,0,146,194,0,0,154,194,0,0,158,194,0,0,164,194,0,0,168,194,0,0,174,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,182,194,0,0,152,194,0,0,150,194,0,0,170,194,0,0,186,194,0,0,196,194,0,0,208,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,182,194,0,0,140,194,0,0,140,194,0,0,150,194,0,0,172,194,0,0,178,194,0,0,188,194,0,0,196,194,0,0,202,194,0,0,212,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,190,194,0,0,160,194,0,0,112,194,0,0,130,194,0,0,128,194,0,0,148,194,0,0,166,194,0,0,176,194,0,0,182,194,0,0,190,194,0,0,198,194,0,0,206,194,0,0,214,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,190,194,0,0,160,194,0,0,104,194,0,0,92,194,0,0,68,194,0,0,132,194,0,0,136,194,0,0,142,194,0,0,156,194,0,0,156,194,0,0,160,194,0,0,176,194,0,0,170,194,0,0,178,194,0,0,194,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,190,194,0,0,160,194,0,0,84,194,0,0,80,194,0,0,36,194,0,0,108,194,0,0,108,194,0,0,68,194,0,0,104,194,0,0,96,194,0,0,124,194,0,0,172,194,0,0,158,194,0,0,180,194,0,0,186,194,0,0,196,194,0,0,206,194,0,0,214,194,0,0,224,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,194,194,0,0,182,194,0,0,146,194,0,0,52,194,0,0,32,194,0,0,4,194,0,0,84,194,0,0,116,194,0,0,68,194,0,0,88,194,0,0,72,194,0,0,72,194,0,0,112,194,0,0,80,194,0,0,134,194,0,0,148,194,0,0,162,194,0,0,184,194,0,0,192,194,0,0,200,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,226,194,0,0,212,194,0,0,198,194,0,0,184,194,0,0,154,194,0,0,160,194,0,0,176,194,0,0,194,194,0,0,212,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,232,194,0,0,218,194,0,0,204,194,0,0,190,194,0,0,178,194,0,0,148,194,0,0,144,194,0,0,176,194,0,0,174,194,0,0,190,194,0,0,204,194,0,0,218,194,0,0,232,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,232,194,0,0,218,194,0,0,204,194,0,0,190,194,0,0,178,194,0,0,150,194,0,0,132,194,0,0,148,194,0,0,154,194,0,0,156,194,0,0,172,194,0,0,174,194,0,0,180,194,0,0,192,194,0,0,210,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,230,194,0,0,216,194,0,0,202,194,0,0,188,194,0,0,176,194,0,0,132,194,0,0,96,194,0,0,116,194,0,0,140,194,0,0,130,194,0,0,156,194,0,0,144,194,0,0,166,194,0,0,168,194,0,0,186,194,0,0,196,194,0,0,210,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,210,194,0,0,190,194,0,0,178,194,0,0,164,194,0,0,100,194,0,0,80,194,0,0,80,194,0,0,108,194,0,0,96,194,0,0,108,194,0,0,104,194,0,0,138,194,0,0,134,194,0,0,176,194,0,0,164,194,0,0,164,194,0,0,178,194,0,0,188,194,0,0,200,194,0,0,216,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,202,194,0,0,192,194,0,0,180,194,0,0,166,194,0,0,154,194,0,0,88,194,0,0,44,194,0,0,24,194,0,0,72,194,0,0,64,194,0,0,80,194,0,0,64,194,0,0,40,194,0,0,40,194,0,0,76,194,0,0,80,194,0,0,84,194,0,0,108,194,0,0,130,194,0,0,142,194,0,0,156,194,0,0,170,194,0,0,190,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,210,194,0,0,172,194,0,0,136,194,0,0,156,194,0,0,158,194,0,0,180,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,210,194,0,0,172,194,0,0,132,194,0,0,146,194,0,0,154,194,0,0,176,194,0,0,192,194,0,0,210,194,0,0,230,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,210,194,0,0,184,194,0,0,160,194,0,0,116,194,0,0,128,194,0,0,136,194,0,0,160,194,0,0,174,194,0,0,184,194,0,0,200,194,0,0,220,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,240,194,0,0,208,194,0,0,182,194,0,0,158,194,0,0,80,194,0,0,112,194,0,0,88,194,0,0,128,194,0,0,138,194,0,0,154,194,0,0,160,194,0,0,164,194,0,0,168,194,0,0,170,194,0,0,174,194,0,0,176,194,0,0,180,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,236,194,0,0,200,194,0,0,174,194,0,0,154,194,0,0,68,194,0,0,72,194,0,0,48,194,0,0,104,194,0,0,116,194,0,0,116,194,0,0,134,194,0,0,130,194,0,0,120,194,0,0,120,194,0,0,120,194,0,0,130,194,0,0,136,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,230,194,0,0,196,194,0,0,168,194,0,0,120,194,0,0,68,194,0,0,48,194,0,0,24,194,0,0,56,194,0,0,68,194,0,0,68,194,0,0,56,194,0,0,28,194,0,0,20,194,0,0,28,194,0,0,32,194,0,0,40,194,0,0,44,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,176,194,0,0,148,194,0,0,154,194,0,0,164,194,0,0,164,194,0,0,170,194,0,0,180,194,0,0,188,194,0,0,198,194,0,0,208,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,176,194,0,0,132,194,0,0,140,194,0,0,162,194,0,0,160,194,0,0,162,194,0,0,168,194,0,0,176,194,0,0,182,194,0,0,186,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,176,194,0,0,116,194,0,0,124,194,0,0,140,194,0,0,142,194,0,0,148,194,0,0,154,194,0,0,160,194,0,0,166,194,0,0,170,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,172,194,0,0,120,194,0,0,124,194,0,0,120,194,0,0,120,194,0,0,104,194,0,0,80,194,0,0,72,194,0,0,72,194,0,0,80,194,0,0,88,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,236,194,0,0,216,194,0,0,168,194,0,0,84,194,0,0,72,194,0,0,72,194,0,0,72,194,0,0,92,194,0,0,60,194,0,0,52,194,0,0,32,194,0,0,32,194,0,0,32,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,236,194,0,0,200,194,0,0,146,194,0,0,44,194,0,0,20,194,0,0,40,194,0,0,44,194,0,0,84,194,0,0,24,194,0,0,20,194,0,0,12,194,0,0,12,194,0,0,24,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,182,194,0,0,168,194,0,0,148,194,0,0,160,194,0,0,160,194,0,0,160,194,0,0,160,194,0,0,160,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,182,194,0,0,168,194,0,0,148,194,0,0,136,194,0,0,136,194,0,0,136,194,0,0,136,194,0,0,136,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,172,194,0,0,156,194,0,0,140,194,0,0,112,194,0,0,52,194,0,0,240,193,0,0,168,193,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,174,194,0,0,156,194,0,0,134,194,0,0,64,194,0,0,24,194,0,0,232,193,0,0,168,193,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,172,194,0,0,138,194,0,0,96,194,0,0,52,194,0,0,12,194,0,0,4,194,0,0,232,193,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,0,220,194,0,0,200,194,0,0,166,194,0,0,142,194,0,0,64,194,0,0,216,193,0,0,24,194,0,0,20,194,0,0,8,194,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,0,192,121,196,212,236,0,0,184,232,0,0,240,236,0,0,16,237,0,0,48,237,0,0,4,0,0,0,2,0,0,0,3,0,0,0,5,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,62,180,228,51,9,145,243,51,139,178,1,52,60,32,10,52,35,26,19,52,96,169,28,52,167,215,38,52,75,175,49,52,80,59,61,52,112,135,73,52,35,160,86,52,184,146,100,52,85,109,115,52,136,159,129,52,252,11,138,52,147,4,147,52,105,146,156,52,50,191,166,52,63,149,177,52,147,31,189,52,228,105,201,52,173,128,214,52,54,113,228,52,166,73,243,52,136,140,1,53,192,247,9,53,6,239,18,53,118,123,28,53,192,166,38,53,55,123,49,53,218,3,61,53,94,76,73,53,59,97,86,53,185,79,100,53,252,37,115,53,138,121,129,53,134,227,137,53,124,217,146,53,133,100,156,53,82,142,166,53,51,97,177,53,37,232,188,53,220,46,201,53,206,65,214,53,65,46,228,53,87,2,243,53,143,102,1,54,79,207,9,54,245,195,18,54,152,77,28,54,232,117,38,54,50,71,49,54,116,204,60,54,94,17,73,54,101,34,86,54,206,12,100,54,184,222,114,54,151,83,129,54,28,187,137,54,114,174,146,54,175,54,156,54,129,93,166,54,53,45,177,54,199,176,188,54,228,243,200,54,1,3,214,54,96,235,227,54,30,187,242,54,162,64,1,55,235,166,9,55,241,152,18,55,201,31,28,55,30,69,38,55,61,19,49,55,30,149,60,55,111,214,72,55,162,227,85,55,247,201,99,55,137,151,114,55,175,45,129,55,190,146,137,55,116,131,146,55,230,8,156,55,190,44,166,55,71,249,176,55,121,121,188,55,254,184,200,55,71,196,213,55,146,168,227,55,248,115,242,55,192,26,1,56,147,126,9,56,249,109,18,56,6,242,27,56,98,20,38,56,86,223,48,56,216,93,60,56,146,155,72,56,242,164,85,56,51,135,99,56,110,80,114,56,211,7,129,56,107,106,137,56,130,88,146,56,42,219,155,56,9,252,165,56,104,197,176,56,59,66,188,56,41,126,200,56,160,133,213,56,217,101,227,56,232,44,242,56,233,244,0,57,70,86,9,57,14,67,18,57,81,196,27,57,181,227,37,57,127,171,48,57,162,38,60,57,197,96,72,57,83,102,85,57,131,68,99,57,104,9,114,57,1,226,128,57,36,66,137,57,157,45,146,57,123,173,155,57,99,203,165,57,153,145,176,57,13,11,188,57,102,67,200,57,11,71,213,57,50,35,227,57,237,229,241,57,29,207,0,58,5,46,9,58,48,24,18,58,169,150,27,58,21,179,37,58,183,119,48,58,124,239,59,58,10,38,72,58,199,39,85,58,230,1,99,58,120,194,113,58,59,188,128,58,233,25,137,58,198,2,146,58,219,127,155,58,203,154,165,58,216,93,176,58,239,211,187,58,179,8,200,58,136,8,213,58,159,224,226,58,7,159,241,58,92,169,0,59,208,5,9,59,94,237,17,59,15,105,27,59,132,130,37,59,253,67,48,59,103,184,59,59,97,235,71,59,77,233,84,59,93,191,98,59,156,123,113,59,127,150,128,59,186,241,136,59,249,215,145,59,71,82,155,59,65,106,165,59,39,42,176,59,226,156,187,59,18,206,199,59,23,202,212,59,32,158,226,59,53,88,241,59,166,131,0,60,167,221,8,60,152,194,17,60,130,59,27,60,1,82,37,60,84,16,48,60,97,129,59,60,200,176,71,60,229,170,84,60,232,124,98,60,212,52,113,60,207,112,128,60,150,201,136,60,58,173,145,60,192,36,155,60,197,57,165,60,133,246,175,60,229,101,187,60,130,147,199,60,185,139,212,60,180,91,226,60,121,17,241,60,251,93,0,61,137,181,8,61,223,151,17,61,2,14,27,61,141,33,37,61,185,220,47,61,109,74,59,61,64,118,71,61,145,108,84,61,133,58,98,61,34,238,112,61,42,75,128,61,127,161,136,61,136,130,145,61,72,247,154,61,88,9,165,61,242,194,175,61,248,46,187,61,3,89,199,61,109,77,212,61,92,25,226,61,209,202,240,61,91,56,0,62,119,141,8,62,51,109,17,62,144,224,26,62,39,241,36,62,46,169,47,62,135,19,59,62,202,59,71,62,77,46,84,62,55,248,97,62,132,167,112,62,143,37,128,62,115,121,136,62,226,87,145,62,220,201,154,62,249,216,164,62,109,143,175,62,27,248,186,62,149,30,199,62,51,15,212,62,23,215,225,62,61,132,240,62,198,18,0,63,114,101,8,63,147,66,17,63,43,179,26,63,206,192,36,63,177,117,47,63,178,220,58,63,101,1,71,63,29,240,83,63,251,181,97,63,251,96,112,63,0,0,128,63,0,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,19,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,19,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,11,0,0,0,112,9,0,0,112,3,0,0,2,0,0,0,64,156,0,0,80,195,0,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,232,4,0,0,152,253,0,0,72,5,0,0,16,38,2,0,4,10,1,0,48,10,1,0,2,0,0,0,196,227,1,0,80,49,2,0,112,237,0,0,84,238,0,0,240,238,0,0,140,239,0,0,40,240,0,0,196,240,0,0,96,241,0,0,252,241,0,0,152,242,0,0,52,243,0,0,208,243,0,0,108,244,0,0,8,245,0,0,164,245,0,0,64,246,0,0,220,246,0,0,120,247,0,0,0,0,0,0,11,0,0,0,16,9,0,0,112,3,0,0,6,0,0,0,64,156,0,0,112,17,1,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,232,4,0,0,152,253,0,0,72,5,0,0,16,38,2,0,4,10,1,0,48,10,1,0,3,0,0,0,196,227,1,0,136,201,2,0,11,0,0,0,176,8,0,0,112,3,0,0,255,255,255,255,64,156,0,0,80,195,0,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,232,4,0,0,152,253,0,0,72,5,0,0,16,38,2,0,4,10,1,0,48,10,1,0,2,0,0,0,196,227,1,0,208,227,1,0,11,0,0,0,80,8,0,0,112,3,0,0,2,0,0,0,144,101,0,0,64,156,0,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,240,7], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+51200);
/* memory initializer */ allocate([152,253,0,0,72,5,0,0,16,38,2,0,4,10,1,0,48,10,1,0,2,0,0,0,196,227,1,0,80,49,2,0,11,0,0,0,144,7,0,0,112,3,0,0,255,255,255,255,144,101,0,0,64,156,0,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,240,7,0,0,152,253,0,0,72,5,0,0,0,0,0,0,4,10,1,0,48,10,1,0,2,0,0,0,196,227,1,0,208,227,1,0,3,0,0,0,112,7,0,0,112,6,0,0,2,0,0,0,56,74,0,0,144,101,0,0,72,153,2,0,84,153,2,0,96,153,2,0,88,248,0,0,136,248,0,0,176,153,2,0,176,153,2,0,176,153,2,0,192,154,2,0,240,154,2,0,32,158,2,0,32,158,2,0,80,161,2,0,0,252,0,0,48,252,0,0,144,6,0,0,144,6,0,0,128,164,2,0,128,164,2,0,140,164,2,0,140,164,2,0,176,6,0,0,156,164,2,0,172,164,2,0,80,7,0,0,152,253,0,0,240,6,0,0,188,164,2,0,4,10,1,0,48,10,1,0,2,0,0,0,124,168,2,0,172,184,2,0,3,0,0,0,48,7,0,0,112,6,0,0,255,255,255,255,56,74,0,0,144,101,0,0,72,153,2,0,84,153,2,0,96,153,2,0,88,248,0,0,136,248,0,0,176,153,2,0,176,153,2,0,176,153,2,0,192,154,2,0,240,154,2,0,32,158,2,0,32,158,2,0,80,161,2,0,0,252,0,0,48,252,0,0,144,6,0,0,144,6,0,0,128,164,2,0,128,164,2,0,140,164,2,0,140,164,2,0,176,6,0,0,156,164,2,0,172,164,2,0,80,7,0,0,152,253,0,0,240,6,0,0,188,164,2,0,4,10,1,0,48,10,1,0,2,0,0,0,124,168,2,0,132,168,2,0,3,0,0,0,16,7,0,0,112,6,0,0,2,0,0,0,152,58,0,0,56,74,0,0,72,153,2,0,84,153,2,0,96,153,2,0,88,248,0,0,136,248,0,0,176,153,2,0,176,153,2,0,176,153,2,0,192,154,2,0,240,154,2,0,32,158,2,0,32,158,2,0,80,161,2,0,0,252,0,0,48,252,0,0,144,6,0,0,144,6,0,0,128,164,2,0,128,164,2,0,140,164,2,0,140,164,2,0,176,6,0,0,156,164,2,0,172,164,2,0,208,6,0,0,152,253,0,0,240,6,0,0,188,164,2,0,4,10,1,0,48,10,1,0,2,0,0,0,124,168,2,0,172,184,2,0,3,0,0,0,80,6,0,0,112,6,0,0,255,255,255,255,152,58,0,0,56,74,0,0,72,153,2,0,84,153,2,0,96,153,2,0,88,248,0,0,136,248,0,0,176,153,2,0,176,153,2,0,176,153,2,0,192,154,2,0,240,154,2,0,32,158,2,0,32,158,2,0,80,161,2,0,0,252,0,0,48,252,0,0,144,6,0,0,144,6,0,0,128,164,2,0,128,164,2,0,140,164,2,0,140,164,2,0,176,6,0,0,156,164,2,0,172,164,2,0,208,6,0,0,152,253,0,0,240,6,0,0,188,164,2,0,4,10,1,0,48,10,1,0,2,0,0,0,124,168,2,0,132,168,2,0,2,0,0,0,56,6,0,0,240,5,0,0,2,0,0,0,40,35,0,0,152,58,0,0,200,149,2,0,200,149,2,0,208,149,2,0,88,248,0,0,136,248,0,0,12,150,2,0,0,0,0,0,12,150,2,0,132,249,0,0,216,150,2,0,216,150,2,0,0,0,0,0,0,0,0,0,0,252,0,0,48,252,0,0,24,3,0,0,0,0,0,0,112,253,0,0,112,253,0,0,120,253,0,0,120,253,0,0,8,6,0,0,128,253,0,0,140,253,0,0,32,6,0,0,152,253,0,0,88,3,0,0,52,7,1,0,4,10,1,0,48,10,1,0,1,0,0,0,60,153,2,0,28,131,1,0,2,0,0,0,216,5,0,0,240,5,0,0,255,255,255,255,40,35,0,0,152,58,0,0,200,149,2,0,200,149,2,0,208,149,2,0,88,248,0,0,136,248,0,0,12,150,2,0,0,0,0,0,12,150,2,0,132,249,0,0,216,150,2,0,216,150,2,0,0,0,0,0,0,0,0,0,0,252,0,0,48,252,0,0,24,3,0,0,0,0,0,0,112,253,0,0,112,253,0,0,120,253,0,0,120,253,0,0,8,6,0,0,128,253,0,0,140,253,0,0,32,6,0,0,152,253,0,0,88,3,0,0,52,7,1,0,4,10,1,0,48,10,1,0,1,0,0,0,60,153,2,0,84,58,1,0,2,0,0,0,192,5,0,0,0,3,0,0,2,0,0,0,64,31,0,0,40,35,0,0,20,248,0,0,20,248,0,0,28,248,0,0,88,248,0,0,136,248,0,0,184,248,0,0,0,0,0,0,184,248,0,0,132,249,0,0,156,249,0,0,156,249,0,0,0,0,0,0,0,0,0,0,0,252,0,0,48,252,0,0,24,3,0,0,0,0,0,0,112,253,0,0,112,253,0,0,120,253,0,0,120,253,0,0,48,3,0,0,128,253,0,0,140,253,0,0,64,3,0,0,152,253,0,0,88,3,0,0,52,7,1,0,4,10,1,0,48,10,1,0,1,0,0,0,80,58,1,0,28,131,1,0,2,0,0,0,168,5,0,0,0,3,0,0,255,255,255,255,64,31,0,0,40,35,0,0,20,248,0,0,20,248,0,0,28,248,0,0,88,248,0,0,136,248,0,0,184,248,0,0,0,0,0,0,184,248,0,0,132,249,0,0,156,249,0,0,156,249,0,0,0,0,0,0,0,0,0,0,0,252,0,0,48,252,0,0,24,3,0,0,0,0,0,0,112,253,0,0,112,253,0,0,120,253,0,0,120,253,0,0,48,3,0,0,128,253,0,0,140,253,0,0,64,3,0,0,152,253,0,0,88,3,0,0,52,7,1,0,4,10,1,0,48,10,1,0,1,0,0,0,80,58,1,0,84,58,1,0,11,0,0,0,160,2,0,0,112,3,0,0,2,0,0,0,80,195,0,0,64,13,3,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,232,4,0,0,152,253,0,0,72,5,0,0,16,38,2,0,4,10,1,0,48,10,1,0,2,0,0,0,196,227,1,0,80,49,2,0,11,0,0,0,160,2,0,0,112,3,0,0,255,255,255,255,80,195,0,0,64,13,3,0,220,176,1,0,8,177,1,0,52,177,1,0,88,248,0,0,136,248,0,0,36,178,1,0,84,181,1,0,36,178,1,0,132,184,1,0,180,184,1,0,68,194,1,0,212,203,1,0,100,213,1,0,0,252,0,0,244,222,1,0,208,3,0,0,48,4,0,0,180,226,1,0,224,226,1,0,12,227,1,0,56,227,1,0,144,4,0,0,100,227,1,0,148,227,1,0,232,4,0,0,152,253,0,0,72,5,0,0,0,0,0,0,4,10,1,0,48,10,1,0,2,0,0,0,196,227,1,0,208,227,1,0,2,0,0,0,160,2,0,0,0,3,0,0,2,0,0,0,0,0,0,0,64,31,0,0,20,248,0,0,20,248,0,0,28,248,0,0,88,248,0,0,136,248,0,0,184,248,0,0,0,0,0,0,184,248,0,0,132,249,0,0,156,249,0,0,156,249,0,0,0,0,0,0,0,0,0,0,0,252,0,0,48,252,0,0,24,3,0,0,0,0,0,0,112,253,0,0,112,253,0,0,120,253,0,0,120,253,0,0,48,3,0,0,128,253,0,0,140,253,0,0,64,3,0,0,152,253,0,0,88,3,0,0,52,7,1,0,4,10,1,0,48,10,1,0,1,0,0,0,80,58,1,0,28,131,1,0,2,0,0,0,160,2,0,0,0,3,0,0,255,255,255,255,0,0,0,0,64,31,0,0,20,248,0,0,20,248,0,0,28,248,0,0,88,248,0,0,136,248,0,0,184,248,0,0,0,0,0,0,184,248,0,0,132,249,0,0,156,249,0,0,156,249,0,0,0,0,0,0,0,0,0,0,0,252,0,0,48,252,0,0,24,3,0,0,0,0,0,0,112,253,0,0,112,253,0,0,120,253,0,0,120,253,0,0,48,3,0,0,128,253,0,0,140,253,0,0,64,3,0,0,152,253,0,0,88,3,0,0,52,7,1,0,4,10,1,0,48,10,1,0,1,0,0,0,80,58,1,0,84,58,1,0,0,2,0,0,0,2,0,0,32,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,242,255,255,255,0,0,0,0,0,0,0,0,90,0,0,0,90,0,0,0,95,0,0,0,95,0,0,0,95,0,0,0,95,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,105,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,232,255,255,255,226,255,255,255,216,255,255,255,216,255,255,255,211,255,255,255,211,255,255,255,211,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,10,0,0,0,10,0,0,0,255,255,255,255,10,0,0,0,10,0,0,0,255,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,236,255,255,255,236,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,226,255,255,255,216,255,255,255,216,255,255,255,211,255,255,255,211,255,255,255,211,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,14,0,0,0,14,0,0,0,15,0,0,0,15,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,64,0,0,0,64,0,0,0,8,0,0,0,8,0,0,0,156,255,255,255,156,255,255,255,151,255,255,255,126,255,255,255,126,255,255,255,116,255,255,255,8,0,0,0,0,0,160,65,0,0,96,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,112,194,0,0,240,193,0,0,32,194,0,0,32,194,0,0,32,194,0,0,32,194,0,0,32,194,0,0,0,64,0,0,150,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,96,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,194,0,0,240,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,200,193,0,0,0,64,0,0,160,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,64,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,160,193,0,0,160,193,0,0,112,193,0,0,112,193,0,0,112,193,0,0,112,193,0,0,112,193,0,0,0,0,0,0,160,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,32,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,160,193,0,0,112,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,0,0,0,0,160,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,32,65,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,112,193,0,0,112,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,64,193,0,0,0,0,0,0,170,194,0,0,192,192,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,112,114,1,0,132,114,1,0,152,114,1,0,184,114,1,0,216,114,1,0,8,115,1,0,56,115,1,0,76,115,1,0,136,115,1,0,196,115,1,0,136,85,8,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,128,0,0,0,33,0,0,0,8,0,0,0,16,0,0,0,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,66,0,0,0,16,0,0,0,32,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,1,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,128,0,0,0,14,0,0,0,4,0,0,0,58,0,0,0,2,0,0,0,8,0,0,0,28,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+61440);
/* memory initializer */ allocate([2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,5,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,28,0,0,0,8,0,0,0,116,0,0,0,4,0,0,0,16,0,0,0,56,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,1,0,0,4,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,128,0,0,0,8,0,0,0,33,0,0,0,4,0,0,0,16,0,0,0,70,0,0,0,2,0,0,0,6,0,0,0,12,0,0,0,23,0,0,0,46,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,128,0,0,0,12,0,0,0,46,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,23,0,0,0,33,0,0,0,70,0,0,0,2,0,0,0,6,0,0,0,10,0,0,0,14,0,0,0,19,0,0,0,28,0,0,0,39,0,0,0,58,0,0,0,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,128,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,66,0,0,0,16,0,0,0,32,0,0,0,140,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,1,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,4,0,0,93,0,0,0,23,0,0,0,116,1,0,0,6,0,0,0,46,0,0,0,186,0,0,0,238,2,0,0,14,0,0,0,33,0,0,0,65,0,0,0,130,0,0,0,4,1,0,0,44,2,0,0,3,0,0,0,10,0,0,0,18,0,0,0,28,0,0,0,39,0,0,0,55,0,0,0,79,0,0,0,111,0,0,0,158,0,0,0,220,0,0,0,56,1,0,0,208,1,0,0,138,2,0,0,82,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,64,64,0,0,144,65,0,4,0,0,8,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,4,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,12,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,8,0,0,186,0,0,0,46,0,0,0,232,2,0,0,12,0,0,0,92,0,0,0,116,1,0,0,220,5,0,0,28,0,0,0,66,0,0,0,130,0,0,0,4,1,0,0,8,2,0,0,88,4,0,0,6,0,0,0,20,0,0,0,36,0,0,0,56,0,0,0,78,0,0,0,110,0,0,0,158,0,0,0,222,0,0,0,60,1,0,0,184,1,0,0,112,2,0,0,160,3,0,0,20,5,0,0,164,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,64,64,0,0,144,65,0,8,0,0,6,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,6,0,0,0,7,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,9,0,0,0,10,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,46,0,0,0,186,0,0,0,16,0,0,0,33,0,0,0,65,0,0,0,93,0,0,0,130,0,0,0,22,1,0,0,7,0,0,0,23,0,0,0,39,0,0,0,55,0,0,0,79,0,0,0,110,0,0,0,156,0,0,0,232,0,0,0,104,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,66,0,0,240,65,0,0,250,67,0,0,128,63,0,0,144,65,10,0,0,0,104,114,1,0,100,58,1,0,116,83,1,0,100,58,1,0,148,83,1,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+71688);
/* memory initializer */ allocate([1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+83684);
/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+84712);
/* memory initializer */ allocate([1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,168,110,1,0,168,110,1,0,208,110,1,0,208,110,1,0,1,0,0,0,0,0,0,0,32,0,0,0,180,83,1,0,204,94,1,0,204,94,1,0,244,94,1,0,244,94,1,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+86892);
/* memory initializer */ allocate([1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,16,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,30,0,0,0,255,255,255,255,50,0,0,0,255,255,255,255,80,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,14,121,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,180,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,220,95,1,0,0,0,0,0,0,0,0,0,0,0,0,0,4,96,1,0,0,0,0,0,0,0,0,0,0,0,0,0,44,96,1,0,0,0,0,0,0,0,0,0,0,0,0,0,84,96,1,0,0,0,0,0,0,0,0,0,0,0,0,0,124,96,1,0,0,0,0,0,164,96,1,0,204,96,1,0,0,0,0,0,0,0,0,0,244,96,1,0,28,97,1,0,0,0,0,0,0,0,0,0,68,97,1,0,108,97,1,0,148,97,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,189,120,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,132,99,1,0,0,0,0,0,4,0,0,0,81,0,0,0,108,120,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,120,99,1,0,0,0,0,0,4,0,0,0,113,2,0,0,251,117,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,100,99,1,0,0,0,0,0,4,0,0,0,113,2,0,0,138,115,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,80,99,1,0,0,0,0,0,2,0,0,0,81,0,0,0,57,115,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,44,99,1,0,0,0,0,0,2,0,0,0,81,0,0,0,232,114,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,8,99,1,0,0,0,0,0,4,0,0,0,81,0,0,0,151,114,3,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,252,98,1,0,0,0,0,0,2,0,0,0,121,0,0,0,30,114,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,208,98,1,0,0,0,0,0,2,0,0,0,121,0,0,0,165,113,3,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,164,98,1,0,0,0,0,0,2,0,0,0,121,0,0,0,44,113,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,120,98,1,0,0,0,0,0,2,0,0,0,225,0,0,0,75,112,3,0,1,0,0,0,0,228,91,225,0,224,255,96,4,0,0,0,0,0,0,0,60,98,1,0,0,0,0,0,2,0,0,0,225,0,0,0,106,111,3,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,0,98,1,0,0,0,0,0,2,0,0,0,33,1,0,0,73,110,3,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,188,97,1,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,8,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+89288);
/* memory initializer */ allocate([1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,25,0,0,0,255,255,255,255,45,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,244,130,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,111,1,0,0,0,0,0,0,0,0,0,0,0,0,0,184,111,1,0,0,0,0,0,0,0,0,0,0,0,0,0,224,111,1,0,0,0,0,0,0,0,0,0,0,0,0,0,8,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,48,112,1,0,0,0,0,0,88,112,1,0,128,112,1,0,0,0,0,0,0,0,0,0,168,112,1,0,208,112,1,0,248,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,163,130,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,92,114,1,0,0,0,0,0,4,0,0,0,81,0,0,0,82,130,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,80,114,1,0,0,0,0,0,4,0,0,0,113,2,0,0,225,127,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,60,114,1,0,0,0,0,0,4,0,0,0,113,2,0,0,112,125,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,40,114,1,0,0,0,0,0,2,0,0,0,81,0,0,0,31,125,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,4,114,1,0,0,0,0,0,2,0,0,0,169,0,0,0,118,124,3,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,208,113,1,0,0,0,0,0,2,0,0,0,25,0,0,0,93,124,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,188,113,1,0,0,0,0,0,4,0,0,0,81,0,0,0,12,124,3,0,1,0,0,0,0,176,19,225,0,176,19,97,2,0,0,0,0,0,0,0,176,113,1,0,0,0,0,0,2,0,0,0,225,0,0,0,43,123,3,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,116,113,1,0,0,0,0,0,2,0,0,0,185,1,0,0,114,121,3,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,32,113,1,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,6,0,0,0,6,0,0,0,84,130,1,0,124,130,1,0,164,130,1,0,204,130,1,0,244,130,1,0,140,129,1,0,180,129,1,0,220,129,1,0,4,130,1,0,44,130,1,0,76,128,1,0,116,128,1,0,156,128,1,0,196,128,1,0,236,128,1,0,20,129,1,0,60,129,1,0,100,129,1,0,12,127,1,0,52,127,1,0,92,127,1,0,132,127,1,0,172,127,1,0,212,127,1,0,252,127,1,0,36,128,1,0,44,125,1,0,84,125,1,0,124,125,1,0,164,125,1,0,204,125,1,0,244,125,1,0,28,126,1,0,68,126,1,0,108,126,1,0,148,126,1,0,188,126,1,0,228,126,1,0,76,123,1,0,116,123,1,0,156,123,1,0,196,123,1,0,236,123,1,0,20,124,1,0,60,124,1,0,100,124,1,0,140,124,1,0,180,124,1,0,220,124,1,0,4,125,1,0,132,122,1,0,172,122,1,0,212,122,1,0,252,122,1,0,36,123,1,0,44,120,1,0,84,120,1,0,124,120,1,0,164,120,1,0,204,120,1,0,244,120,1,0,28,121,1,0,68,121,1,0,108,121,1,0,148,121,1,0,188,121,1,0,228,121,1,0,12,122,1,0,52,122,1,0,92,122,1,0,212,117,1,0,252,117,1,0,36,118,1,0,76,118,1,0,116,118,1,0,156,118,1,0,196,118,1,0,236,118,1,0,20,119,1,0,60,119,1,0,100,119,1,0,140,119,1,0,180,119,1,0,220,119,1,0,4,120,1,0,244,115,1,0,28,116,1,0,68,116,1,0,108,116,1,0,148,116,1,0,188,116,1,0,228,116,1,0,12,117,1,0,52,117,1,0,92,117,1,0,132,117,1,0,172,117,1,0,1,0,0,0,8,0,0,0,92,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,28,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,220,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,92,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,60,133,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,188,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,170,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,120,132,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,248,131,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,230,131,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,180,131,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,52,131,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,244,138,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,236,138,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,236,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,172,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,44,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,12,137,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,140,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,108,136,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,236,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,218,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,168,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,40,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,22,135,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,228,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,100,134,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,16,0,0,0,148,143,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,140,143,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,140,142,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,76,142,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,204,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,172,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,44,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,12,141,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,140,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,122,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,72,140,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,200,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,182,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,132,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,4,139,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,11,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,7,144,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,253,143,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,228,143,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,164,143,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,51,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,243,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,179,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,51,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,19,147,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,147,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,129,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,79,146,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,207,145,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,189,145,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,139,145,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,11,145,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,99,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,35,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,227,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,99,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,32,0,0,0,67,150,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,195,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,177,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,127,149,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,255,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,18,0,0,0,237,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,50,0,0,0,187,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,128,0,0,0,59,148,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,47,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,47,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,38,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,13,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,205,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,196,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,171,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,107,151,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,51,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,51,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,42,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,17,154,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,209,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,9,0,0,0,200,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,175,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,111,153,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,218,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,214,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,204,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,179,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,115,155,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,65,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,61,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,51,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,25,0,0,0,26,157,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,64,0,0,0,218,156,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,131,1,0,60,156,1,0,44,131,1,0,92,156,1,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+93348);
/* memory initializer */ allocate([1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+100264);
/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+101292);
/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+103344);
/* memory initializer */ allocate([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,76,172,1,0,76,172,1,0,116,172,1,0,116,172,1,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,148,167,1,0,148,167,1,0,188,167,1,0,188,167,1,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+104500);
/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE+107920);
/* memory initializer */ allocate([4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,1,0,0,0,4,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,10,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,0,0,0,0,3,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,249,255,255,255,252,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,0,0,0,0,2,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,252,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,1,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,252,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,228,255,255,255,232,255,255,255,234,255,255,255,240,255,255,255,244,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,253,255,255,255,255,255,255,255,0,0,0,0,222,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,247,255,255,255,251,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,228,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,251,255,255,255,254,255,255,255,0,0,0,0,222,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,234,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,238,255,255,255,239,255,255,255,240,255,255,255,244,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,255,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,224,255,255,255,224,255,255,255,224,255,255,255,224,255,255,255,228,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,250,255,255,255,254,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,240,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,234,255,255,255,236,255,255,255,241,255,255,255,246,255,255,255,248,255,255,255,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,220,255,255,255,220,255,255,255,220,255,255,255,220,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,249,255,255,255,220,255,255,255,220,255,255,255,220,255,255,255,220,255,255,255,222,255,255,255,226,255,255,255,228,255,255,255,230,255,255,255,232,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,236,255,255,255,242,255,255,255,248,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,2,0,0,0,218,255,255,255,218,255,255,255,218,255,255,255,218,255,255,255,220,255,255,255,222,255,255,255,222,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,238,255,255,255,240,255,255,255,244,255,255,255,246,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,218,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,221,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,228,255,255,255,236,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,221,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,236,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,252,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,20,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,246,255,255,255,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,6,0,0,0,15,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,246,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,250,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,6,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,252,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,1,0,0,0,4,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,252,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,0,0,0,0,3,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,252,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,8,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,0,0,0,0,2,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,251,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,255,255,255,255,1,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,249,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,240,255,255,255,244,255,255,255,250,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,253,255,255,255,255,255,255,255,0,0,0,0,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,247,255,255,255,248,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,251,255,255,255,254,255,255,255,0,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,238,255,255,255,240,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,243,255,255,255,243,255,255,255,244,255,255,255,246,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,7,0,0,0,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,246,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,252,255,255,255,0,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,237,255,255,255,238,255,255,255,239,255,255,255,240,255,255,255,244,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,252,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,250,255,255,255,254,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,228,255,255,255,230,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,236,255,255,255,240,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,234,255,255,255,238,255,255,255,242,255,255,255,248,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,254,255,255,255,2,0,0,0,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,234,255,255,255,238,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,240,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,249,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,232,255,255,255,238,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,242,255,255,255,244,255,255,255,246,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,236,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,216,255,255,255,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,39,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,13,0,0,0,14,0,0,0,14,0,0,0,14,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,15,0,0,0,16,0,0,0,16,0,0,0,17,0,0,0,17,0,0,0,17,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,7,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,32,0,0,0,16,0,0,0,16,0,0,0,16,0,0,0,32,0,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,0,1,0,0,128,0,0,0,128,0,0,0,0,1,0,0,0,2,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,15,39,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,32,0,0,0,156,255,255,255,156,255,255,255,156,255,255,255,156,255,255,255,156,255,255,255,156,255,255,255,151,255,255,255,151,255,255,255,151,255,255,255,151,255,255,255,146,255,255,255,136,255,255,255,126,255,255,255,126,255,255,255,126,255,255,255,126,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,116,255,255,255,106,255,255,255,140,37,2,0,184,37,2,0,228,37,2,0,100,58,1,0,40,228,1,0,100,58,1,0,104,228,1,0,100,58,1,0,168,228,1,0,100,58,1,0,232,228,1,0,100,58,1,0,40,229,1,0,100,58,1,0,104,229,1,0,100,58,1,0,168,229,1,0,100,58,1,0,232,229,1,0,100,58,1,0,40,230,1,0,100,58,1,0,104,230,1,0,100,58,1,0,168,230,1,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,196,33,2,0,196,33,2,0,236,33,2,0,236,33,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,172,34,2,0,172,34,2,0,236,33,2,0,236,33,2,0,1,0,0,0,0,0,0,0,16,0,0,0,144,99,1,0,252,29,2,0,252,29,2,0,36,30,2,0,36,30,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,228,30,2,0,228,30,2,0,36,30,2,0,36,30,2,0,1,0,0,0,0,0,0,0,16,0,0,0,144,99,1,0,44,26,2,0,44,26,2,0,84,26,2,0,84,26,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,20,27,2,0,20,27,2,0,84,26,2,0,84,26,2,0,1,0,0,0,0,0,0,0,16,0,0,0,144,99,1,0,84,22,2,0,84,22,2,0,124,22,2,0,124,22,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,60,23,2,0,60,23,2,0,124,22,2,0,124,22,2,0,1,0,0,0,0,0,0,0,16,0,0,0,144,99,1,0,100,18,2,0,100,18,2,0,140,18,2,0,140,18,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,76,19,2,0,76,19,2,0,140,18,2,0,140,18,2,0,1,0,0,0,0,0,0,0,16,0,0,0,144,99,1,0,100,14,2,0,100,14,2,0,140,14,2,0,140,14,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,76,15,2,0,76,15,2,0,140,14,2,0,140,14,2,0,1,0,0,0,0,0,0,0,16,0,0,0,180,83,1,0,128,9,2,0,128,9,2,0,168,9,2,0,168,9,2,0,1,0,0,0,0,0,0,0,32,0,0,0,180,83,1,0,104,10,2,0,104,10,2,0,168,9,2,0,168,9,2,0,1,0,0,0,0,0,0,0,16,0,0,0,180,83,1,0,148,4,2,0,148,4,2,0,188,4,2,0,188,4,2,0,1,0,0,0,0,0,0,0,32,0,0,0,180,83,1,0,124,5,2,0,124,5,2,0,188,4,2,0,188,4,2,0,1,0,0,0,0,0,0,0,16,0,0,0,180,83,1,0,64,255,1,0,64,255,1,0,104,255,1,0,104,255,1,0,1,0,0,0,0,0,0,0,32,0,0,0,180,83,1,0,40,0,2,0,40,0,2,0,104,255,1,0,104,255,1,0,1,0,0,0,0,0,0,0,16,0,0,0,232,230,1,0,172,248,1,0,172,248,1,0,212,248,1,0,212,248,1,0,1,0,0,0,0,0,0,0,32,0,0,0,232,230,1,0,148,249,1,0,148,249,1,0,212,248,1,0,212,248,1,0,1,0,0,0,0,0,0,0,16,0,0,0,232,230,1,0,0,242,1,0,0,242,1,0,40,242,1,0,40,242,1,0,1,0,0,0,0,0,0,0,32,0,0,0,232,230,1,0,232,242,1,0,232,242,1,0,40,242,1,0,40,242,1,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+118160);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,71,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,84,240,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,243,1,0,0,0,0,0,0,0,0,0,0,0,0,0,56,243,1,0,0,0,0,0,0,0,0,0,0,0,0,0,96,243,1,0,0,0,0,0,0,0,0,0,0,0,0,0,136,243,1,0,0,0,0,0,176,243,1,0,216,243,1,0,0,0,0,0,0,0,0,0,0,244,1,0,40,244,1,0,0,0,0,0,0,0,0,0,80,244,1,0,120,244,1,0,0,0,0,0,0,0,0,0,160,244,1,0,200,244,1,0,0,0,0,0,0,0,0,0,240,244,1,0,24,245,1,0,64,245,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,249,227,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,3,240,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,160,248,1,0,0,0,0,0,4,0,0,0,113,2,0,0,146,237,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,140,248,1,0,0,0,0,0,2,0,0,0,81,0,0,0,65,237,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,104,248,1,0,0,0,0,0,2,0,0,0,33,1,0,0,32,236,3,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,36,248,1,0,0,0,0,0,4,0,0,0,81,0,0,0,207,235,3,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,24,248,1,0,0,0,0,0,2,0,0,0,121,0,0,0,86,235,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,236,247,1,0,0,0,0,0,2,0,0,0,169,0,0,0,173,234,3,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,184,247,1,0,0,0,0,0,2,0,0,0,25,0,0,0,148,234,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,164,247,1,0,0,0,0,0,2,0,0,0,169,0,0,0,235,233,3,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,112,247,1,0,0,0,0,0,2,0,0,0,121,0,0,0,114,233,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,68,247,1,0,0,0,0,0,2,0,0,0,225,0,0,0,145,232,3,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,8,247,1,0,0,0,0,0,2,0,0,0,185,1,0,0,216,230,3,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,180,246,1,0,0,0,0,0,2,0,0,0,225,0,0,0,247,229,3,0,1,0,0,0,0,117,153,225,0,24,61,97,4,0,0,0,0,0,0,0,120,246,1,0,0,0,0,0,2,0,0,0,105,1,0,0,142,228,3,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,44,246,1,0,0,0,0,0,1,0,0,0,49,0,0,0,93,228,3,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,104,245,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,131,252,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,249,1,0,0,0,0,0,0,0,0,0,0,0,0,0,228,249,1,0,0,0,0,0,0,0,0,0,0,0,0,0,12,250,1,0,0,0,0,0,0,0,0,0,0,0,0,0,52,250,1,0,0,0,0,0,92,250,1,0,132,250,1,0,0,0,0,0,0,0,0,0,172,250,1,0,212,250,1,0,0,0,0,0,0,0,0,0,252,250,1,0,36,251,1,0,0,0,0,0,0,0,0,0,76,251,1,0,116,251,1,0,0,0,0,0,0,0,0,0,156,251,1,0,196,251,1,0,236,251,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,184,240,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,50,252,3,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,52,255,1,0,0,0,0,0,4,0,0,0,113,2,0,0,193,249,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,32,255,1,0,0,0,0,0,2,0,0,0,81,0,0,0,112,249,3,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,252,254,1,0,0,0,0,0,2,0,0,0,33,1,0,0,79,248,3,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,184,254,1,0,0,0,0,0,4,0,0,0,81,0,0,0,254,247,3,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,172,254,1,0,0,0,0,0,2,0,0,0,121,0,0,0,133,247,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,128,254,1,0,0,0,0,0,2,0,0,0,169,0,0,0,220,246,3,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,76,254,1,0,0,0,0,0,2,0,0,0,25,0,0,0,195,246,3,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,56,254,1,0,0,0,0,0,2,0,0,0,169,0,0,0,26,246,3,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,4,254,1,0,0,0,0,0,2,0,0,0,121,0,0,0,161,245,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,216,253,1,0,0,0,0,0,2,0,0,0,225,0,0,0,192,244,3,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,156,253,1,0,0,0,0,0,2,0,0,0,185,1,0,0,7,243,3,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,72,253,1,0,0,0,0,0,2,0,0,0,81,0,0,0,182,242,3,0,1,0,0,0,0,24,125,225,0,24,61,97,4,0,0,0,0,0,0,0,36,253,1,0,0,0,0,0,2,0,0,0,105,1,0,0,77,241,3,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,216,252,1,0,0,0,0,0,1,0,0,0,49,0,0,0,28,241,3,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,20,252,1,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,128,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,160,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,200,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,240,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,24,1,2,0,0,0,0,0,64,1,2,0,104,1,2,0,0,0,0,0,0,0,0,0,144,1,2,0,184,1,2,0,0,0,0,0,0,0,0,0,224,1,2,0,8,2,2,0,48,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,231,252,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,47,6,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,136,4,2,0,0,0,0,0,4,0,0,0,81,0,0,0,222,5,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,124,4,2,0,0,0,0,0,4,0,0,0,113,2,0,0,109,3,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,104,4,2,0,0,0,0,0,4,0,0,0,113,2,0,0,252,0,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,84,4,2,0,0,0,0,0,2,0,0,0,81,0,0,0,171,0,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,48,4,2,0,0,0,0,0,2,0,0,0,81,0,0,0,90,0,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,12,4,2,0,0,0,0,0,4,0,0,0,81,0,0,0,9,0,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,0,4,2,0,0,0,0,0,2,0,0,0,121,0,0,0,144,255,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,212,3,2,0,0,0,0,0,2,0,0,0,121,0,0,0,23,255,3,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,168,3,2,0,0,0,0,0,2,0,0,0,121,0,0,0,158,254,3,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,124,3,2,0,0,0,0,0,2,0,0,0,121,0,0,0,37,254,3,0,1,0,0,0,0,226,120,225,0,232,51,97,4,0,0,0,0,0,0,0,80,3,2,0,0,0,0,0,2,0,0,0,169,0,0,0,124,253,3,0,1,0,0,0,0,96,18,225,0,128,184,96,4,0,0,0,0,0,0,0,28,3,2,0,0,0,0,0,1,0,0,0,49,0,0,0,75,253,3,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,88,2,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,13,18,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,204,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,244,5,2,0,0,0,0,0,0,0,0,0,0,0,0,0,28,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,68,6,2,0,0,0,0,0,0,0,0,0,0,0,0,0,108,6,2,0,0,0,0,0,148,6,2,0,188,6,2,0,0,0,0,0,0,0,0,0,228,6,2,0,12,7,2,0,0,0,0,0,0,0,0,0,52,7,2,0,92,7,2,0,132,7,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,228,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,188,17,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,116,9,2,0,0,0,0,0,4,0,0,0,81,0,0,0,107,17,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,104,9,2,0,0,0,0,0,4,0,0,0,113,2,0,0,250,14,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,84,9,2,0,0,0,0,0,4,0,0,0,113,2,0,0,137,12,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,64,9,2,0,0,0,0,0,2,0,0,0,81,0,0,0,56,12,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,28,9,2,0,0,0,0,0,2,0,0,0,81,0,0,0,231,11,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,248,8,2,0,0,0,0,0,4,0,0,0,81,0,0,0,150,11,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,236,8,2,0,0,0,0,0,2,0,0,0,121,0,0,0,29,11,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,192,8,2,0,0,0,0,0,2,0,0,0,121,0,0,0,164,10,4,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,148,8,2,0,0,0,0,0,2,0,0,0,121,0,0,0,43,10,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,104,8,2,0,0,0,0,0,2,0,0,0,225,0,0,0,74,9,4,0,1,0,0,0,0,228,91,225,0,224,255,96,4,0,0,0,0,0,0,0,44,8,2,0,0,0,0,0,2,0,0,0,225,0,0,0,105,8,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,240,7,2,0,0,0,0,0,2,0,0,0,33,1,0,0,72,7,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,172,7,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,98,29,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,184,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,224,10,2,0,0,0,0,0,0,0,0,0,0,0,0,0,8,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,48,11,2,0,0,0,0,0,0,0,0,0,0,0,0,0,88,11,2,0,0,0,0,0,128,11,2,0,168,11,2,0,0,0,0,0,0,0,0,0,208,11,2,0,248,11,2,0,0,0,0,0,0,0,0,0,32,12,2,0,72,12,2,0,112,12,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,113,18,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,17,29,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,88,14,2,0,0,0,0,0,4,0,0,0,81,0,0,0,192,28,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,76,14,2,0,0,0,0,0,4,0,0,0,113,2,0,0,79,26,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,56,14,2,0,0,0,0,0,4,0,0,0,113,2,0,0,222,23,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,36,14,2,0,0,0,0,0,2,0,0,0,81,0,0,0,141,23,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,0,14,2,0,0,0,0,0,2,0,0,0,81,0,0,0,60,23,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,220,13,2,0,0,0,0,0,4,0,0,0,81,0,0,0,235,22,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,208,13,2,0,0,0,0,0,2,0,0,0,121,0,0,0,114,22,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,164,13,2,0,0,0,0,0,2,0,0,0,121,0,0,0,249,21,4,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,120,13,2,0,0,0,0,0,2,0,0,0,121,0,0,0,128,21,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,76,13,2,0,0,0,0,0,2,0,0,0,169,0,0,0,215,20,4,0,1,0,0,0,0,232,87,225,0,224,255,96,4,0,0,0,0,0,0,0,24,13,2,0,0,0,0,0,2,0,0,0,225,0,0,0,246,19,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,220,12,2,0,0,0,0,0,2,0,0,0,33,1,0,0,213,18,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,152,12,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,72,39,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,156,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,196,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,236,15,2,0,0,0,0,0,0,0,0,0,0,0,0,0,20,16,2,0,0,0,0,0,60,16,2,0,100,16,2,0,0,0,0,0,0,0,0,0,140,16,2,0,180,16,2,0,220,16,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,198,29,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,247,38,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,88,18,2,0,0,0,0,0,4,0,0,0,81,0,0,0,166,38,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,76,18,2,0,0,0,0,0,4,0,0,0,113,2,0,0,53,36,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,56,18,2,0,0,0,0,0,4,0,0,0,113,2,0,0,196,33,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,36,18,2,0,0,0,0,0,2,0,0,0,81,0,0,0,115,33,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,0,18,2,0,0,0,0,0,2,0,0,0,169,0,0,0,202,32,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,204,17,2,0,0,0,0,0,2,0,0,0,25,0,0,0,177,32,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,184,17,2,0,0,0,0,0,2,0,0,0,169,0,0,0,8,32,4,0,1,0,0,0,0,232,87,225,0,224,255,96,4,0,0,0,0,0,0,0,132,17,2,0,0,0,0,0,2,0,0,0,225,0,0,0,39,31,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,72,17,2,0,0,0,0,0,2,0,0,0,33,1,0,0,6,30,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,4,17,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,178,48,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,156,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,196,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,236,19,2,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,2,0,0,0,0,0,60,20,2,0,100,20,2,0,0,0,0,0,0,0,0,0,140,20,2,0,180,20,2,0,220,20,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,136,39,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,97,48,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,72,22,2,0,0,0,0,0,4,0,0,0,81,0,0,0,16,48,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,60,22,2,0,0,0,0,0,4,0,0,0,113,2,0,0,159,45,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,40,22,2,0,0,0,0,0,4,0,0,0,113,2,0,0,46,43,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,20,22,2,0,0,0,0,0,2,0,0,0,81,0,0,0,221,42,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,240,21,2,0,0,0,0,0,2,0,0,0,169,0,0,0,52,42,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,188,21,2,0,0,0,0,0,2,0,0,0,25,0,0,0,27,42,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,168,21,2,0,0,0,0,0,2,0,0,0,81,0,0,0,202,41,4,0,1,0,0,0,0,224,63,225,0,224,255,96,4,0,0,0,0,0,0,0,132,21,2,0,0,0,0,0,2,0,0,0,225,0,0,0,233,40,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,72,21,2,0,0,0,0,0,2,0,0,0,33,1,0,0,200,39,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,4,21,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,108,57,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,23,2,0,0,0,0,0,0,0,0,0,0,0,0,0,140,23,2,0,0,0,0,0,0,0,0,0,0,0,0,0,180,23,2,0,0,0,0,0,0,0,0,0,0,0,0,0,220,23,2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,24,2,0,0,0,0,0,44,24,2,0,84,24,2,0,0,0,0,0,0,0,0,0,124,24,2,0,164,24,2,0,204,24,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,242,48,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,27,57,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,32,26,2,0,0,0,0,0,4,0,0,0,81,0,0,0,202,56,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,20,26,2,0,0,0,0,0,4,0,0,0,113,2,0,0,89,54,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,0,26,2,0,0,0,0,0,4,0,0,0,113,2,0,0,232,51,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,236,25,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+126972);
/* memory initializer */ allocate([2,0,0,0,81,0,0,0,151,51,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,200,25,2,0,0,0,0,0,2,0,0,0,169,0,0,0,238,50,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,148,25,2,0,0,0,0,0,2,0,0,0,25,0,0,0,213,50,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,128,25,2,0,0,0,0,0,2,0,0,0,81,0,0,0,132,50,4,0,1,0,0,0,0,32,53,225,0,32,245,96,4,0,0,0,0,0,0,0,92,25,2,0,0,0,0,0,2,0,0,0,169,0,0,0,219,49,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,40,25,2,0,0,0,0,0,2,0,0,0,169,0,0,0,50,49,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,244,24,2,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,6,66,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,27,2,0,0,0,0,0,0,0,0,0,0,0,0,0,100,27,2,0,0,0,0,0,0,0,0,0,0,0,0,0,140,27,2,0,0,0,0,0,0,0,0,0,0,0,0,0,180,27,2,0,0,0,0,0,0,0,0,0,0,0,0,0,220,27,2,0,0,0,0,0,4,28,2,0,44,28,2,0,0,0,0,0,0,0,0,0,84,28,2,0,124,28,2,0,164,28,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,172,57,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,181,65,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,240,29,2,0,0,0,0,0,4,0,0,0,81,0,0,0,100,65,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,228,29,2,0,0,0,0,0,4,0,0,0,113,2,0,0,243,62,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,208,29,2,0,0,0,0,0,4,0,0,0,113,2,0,0,130,60,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,188,29,2,0,0,0,0,0,2,0,0,0,81,0,0,0,49,60,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,152,29,2,0,0,0,0,0,2,0,0,0,169,0,0,0,136,59,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,100,29,2,0,0,0,0,0,2,0,0,0,25,0,0,0,111,59,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,80,29,2,0,0,0,0,0,2,0,0,0,49,0,0,0,62,59,4,0,1,0,0,0,0,176,31,225,0,32,245,96,3,0,0,0,0,0,0,0,52,29,2,0,0,0,0,0,2,0,0,0,169,0,0,0,149,58,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,0,29,2,0,0,0,0,0,2,0,0,0,169,0,0,0,236,57,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,204,28,2,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,224,76,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,31,2,0,0,0,0,0,0,0,0,0,0,0,0,0,52,31,2,0,0,0,0,0,0,0,0,0,0,0,0,0,92,31,2,0,0,0,0,0,0,0,0,0,0,0,0,0,132,31,2,0,0,0,0,0,0,0,0,0,0,0,0,0,172,31,2,0,0,0,0,0,212,31,2,0,252,31,2,0,0,0,0,0,0,0,0,0,36,32,2,0,76,32,2,0,116,32,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,70,66,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,143,76,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,184,33,2,0,0,0,0,0,4,0,0,0,81,0,0,0,62,76,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,172,33,2,0,0,0,0,0,4,0,0,0,113,2,0,0,205,73,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,152,33,2,0,0,0,0,0,4,0,0,0,113,2,0,0,92,71,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,132,33,2,0,0,0,0,0,2,0,0,0,81,0,0,0,11,71,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,96,33,2,0,0,0,0,0,2,0,0,0,169,0,0,0,98,70,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,44,33,2,0,0,0,0,0,2,0,0,0,25,0,0,0,73,70,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,24,33,2,0,0,0,0,0,4,0,0,0,113,2,0,0,216,67,4,0,1,0,0,0,0,32,21,225,0,32,245,96,3,0,0,0,0,0,0,0,4,33,2,0,0,0,0,0,2,0,0,0,169,0,0,0,47,67,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,208,32,2,0,0,0,0,0,2,0,0,0,169,0,0,0,134,66,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,156,32,2,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,186,87,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,212,34,2,0,0,0,0,0,0,0,0,0,0,0,0,0,252,34,2,0,0,0,0,0,0,0,0,0,0,0,0,0,36,35,2,0,0,0,0,0,0,0,0,0,0,0,0,0,76,35,2,0,0,0,0,0,0,0,0,0,0,0,0,0,116,35,2,0,0,0,0,0,156,35,2,0,196,35,2,0,0,0,0,0,0,0,0,0,236,35,2,0,20,36,2,0,60,36,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,32,77,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,105,87,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,128,37,2,0,0,0,0,0,4,0,0,0,81,0,0,0,24,87,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,116,37,2,0,0,0,0,0,4,0,0,0,113,2,0,0,167,84,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,96,37,2,0,0,0,0,0,4,0,0,0,113,2,0,0,54,82,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,76,37,2,0,0,0,0,0,2,0,0,0,81,0,0,0,229,81,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,40,37,2,0,0,0,0,0,2,0,0,0,169,0,0,0,60,81,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,244,36,2,0,0,0,0,0,2,0,0,0,25,0,0,0,35,81,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,224,36,2,0,0,0,0,0,4,0,0,0,113,2,0,0,178,78,4,0,1,0,0,0,0,32,21,225,0,32,245,96,3,0,0,0,0,0,0,0,204,36,2,0,0,0,0,0,2,0,0,0,169,0,0,0,9,78,4,0,1,0,0,0,0,128,211,224,0,0,122,96,4,0,0,0,0,0,0,0,152,36,2,0,0,0,0,0,2,0,0,0,169,0,0,0,96,77,4,0,1,0,0,0,0,0,88,224,0,0,16,96,4,0,0,0,0,0,0,0,100,36,2,0,0,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,0,0,128,63,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,224,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,64,65,0,0,72,65,0,0,80,65,0,0,88,65,0,0,96,65,0,0,104,65,0,0,112,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,0,0,128,63,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,64,65,0,0,72,65,0,0,80,65,0,0,88,65,0,0,96,65,0,0,104,65,0,0,112,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,0,0,128,63,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,6,0,0,0,6,0,0,0,5,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,64,64,0,0,128,64,0,0,128,64,0,0,160,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,128,64,0,0,128,64,0,0,160,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,192,64,0,0,192,64,0,0,192,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,32,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,2,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,64,0,0,224,64,0,0,0,65,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,32,65,0,0,32,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,64,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,44,131,1,0,168,49,2,0,44,131,1,0,232,49,2,0,44,131,1,0,40,50,2,0,44,131,1,0,104,50,2,0,44,131,1,0,168,50,2,0,44,131,1,0,232,50,2,0,44,131,1,0,40,51,2,0,44,131,1,0,104,51,2,0,44,131,1,0,168,51,2,0,44,131,1,0,232,51,2,0,44,131,1,0,40,52,2,0,2,0,0,0,0,0,0,0,32,0,0,0,96,110,2,0,104,140,2,0,144,140,2,0,184,140,2,0,120,141,2,0,2,0,0,0,0,0,0,0,32,0,0,0,96,110,2,0,56,142,2,0,96,142,2,0,184,140,2,0,120,141,2,0,2,0,0,0,0,0,0,0,16,0,0,0,96,110,2,0,8,131,2,0,48,131,2,0,88,131,2,0,24,132,2,0,2,0,0,0,0,0,0,0,32,0,0,0,96,110,2,0,216,132,2,0,0,133,2,0,88,131,2,0,24,132,2,0,2,0,0,0,0,0,0,0,16,0,0,0,96,110,2,0,120,121,2,0,160,121,2,0,200,121,2,0,136,122,2,0,2,0,0,0,0,0,0,0,32,0,0,0,96,110,2,0,72,123,2,0,112,123,2,0,200,121,2,0,136,122,2,0,2,0,0,0,0,0,0,0,16,0,0,0,124,156,1,0,92,105,2,0,92,105,2,0,132,105,2,0,132,105,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,68,106,2,0,68,106,2,0,132,105,2,0,132,105,2,0,2,0,0,0,0,0,0,0,16,0,0,0,124,156,1,0,80,100,2,0,80,100,2,0,120,100,2,0,120,100,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,56,101,2,0,56,101,2,0,120,100,2,0,120,100,2,0,2,0,0,0,0,0,0,0,16,0,0,0,124,156,1,0,52,95,2,0,52,95,2,0,92,95,2,0,92,95,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,28,96,2,0,28,96,2,0,92,95,2,0,92,95,2,0,2,0,0,0,0,0,0,0,16,0,0,0,124,156,1,0,8,90,2,0,8,90,2,0,48,90,2,0,48,90,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,240,90,2,0,240,90,2,0,48,90,2,0,48,90,2,0,2,0,0,0,0,0,0,0,16,0,0,0,104,52,2,0,124,83,2,0,124,83,2,0,164,83,2,0,164,83,2,0,2,0,0,0,0,0,0,0,32,0,0,0,104,52,2,0,100,84,2,0,100,84,2,0,164,83,2,0,164,83,2,0,2,0,0,0,0,0,0,0,16,0,0,0,104,52,2,0,240,76,2,0,240,76,2,0,24,77,2,0,24,77,2,0,2,0,0,0,0,0,0,0,32,0,0,0,104,52,2,0,216,77,2,0,216,77,2,0,24,77,2,0,24,77,2,0,2,0,0,0,0,0,0,0,16,0,0,0,104,52,2,0,60,70,2,0,60,70,2,0,100,70,2,0,100,70,2,0,2,0,0,0,0,0,0,0,32,0,0,0,104,52,2,0,36,71,2,0,36,71,2,0,100,70,2,0,100,70,2,0,2,0,0,0,0,0,0,0,16,0,0,0,104,52,2,0,128,63,2,0,128,63,2,0,168,63,2,0,168,63,2,0,2,0,0,0,0,0,0,0,32,0,0,0,104,52,2,0,104,64,2,0,104,64,2,0,168,63,2,0,168,63,2,0,0,0,0,0,255,255,255,255,255,255,255,255,10,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+137212);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,71,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,71,0,0,0,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,221,100,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,64,2,0,0,0,0,0,0,0,0,0,0,0,0,0,184,64,2,0,0,0,0,0,0,0,0,0,0,0,0,0,224,64,2,0,0,0,0,0,0,0,0,0,0,0,0,0,8,65,2,0,0,0,0,0,48,65,2,0,88,65,2,0,0,0,0,0,0,0,0,0,128,65,2,0,168,65,2,0,0,0,0,0,0,0,0,0,208,65,2,0,248,65,2,0,0,0,0,0,0,0,0,0,32,66,2,0,72,66,2,0,0,0,0,0,0,0,0,0,112,66,2,0,152,66,2,0,192,66,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,250,87,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,140,100,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,48,70,2,0,0,0,0,0,4,0,0,0,113,2,0,0,27,98,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,28,70,2,0,0,0,0,0,2,0,0,0,81,0,0,0,202,97,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,248,69,2,0,0,0,0,0,2,0,0,0,33,1,0,0,169,96,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,180,69,2,0,0,0,0,0,4,0,0,0,81,0,0,0,88,96,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,168,69,2,0,0,0,0,0,2,0,0,0,121,0,0,0,223,95,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,124,69,2,0,0,0,0,0,2,0,0,0,169,0,0,0,54,95,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,72,69,2,0,0,0,0,0,2,0,0,0,25,0,0,0,29,95,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,52,69,2,0,0,0,0,0,2,0,0,0,169,0,0,0,116,94,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,0,69,2,0,0,0,0,0,2,0,0,0,121,0,0,0,251,93,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,212,68,2,0,0,0,0,0,2,0,0,0,225,0,0,0,26,93,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,152,68,2,0,0,0,0,0,2,0,0,0,185,1,0,0,97,91,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,68,68,2,0,0,0,0,0,2,0,0,0,105,1,0,0,248,89,4,0,1,0,0,0,128,93,176,225,0,24,61,97,5,0,0,0,0,0,0,0,248,67,2,0,0,0,0,0,2,0,0,0,105,1,0,0,143,88,4,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,172,67,2,0,0,0,0,0,1,0,0,0,49,0,0,0,94,88,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,232,66,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,220,113,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,71,2,0,0,0,0,0,0,0,0,0,0,0,0,0,116,71,2,0,0,0,0,0,0,0,0,0,0,0,0,0,156,71,2,0,0,0,0,0,0,0,0,0,0,0,0,0,196,71,2,0,0,0,0,0,236,71,2,0,20,72,2,0,0,0,0,0,0,0,0,0,60,72,2,0,100,72,2,0,0,0,0,0,0,0,0,0,140,72,2,0,180,72,2,0,0,0,0,0,0,0,0,0,220,72,2,0,4,73,2,0,0,0,0,0,0,0,0,0,44,73,2,0,84,73,2,0,124,73,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,65,101,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,139,113,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,228,76,2,0,0,0,0,0,4,0,0,0,113,2,0,0,26,111,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,208,76,2,0,0,0,0,0,2,0,0,0,81,0,0,0,201,110,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,172,76,2,0,0,0,0,0,2,0,0,0,33,1,0,0,168,109,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,104,76,2,0,0,0,0,0,4,0,0,0,81,0,0,0,87,109,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,92,76,2,0,0,0,0,0,2,0,0,0,121,0,0,0,222,108,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,48,76,2,0,0,0,0,0,2,0,0,0,169,0,0,0,53,108,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,252,75,2,0,0,0,0,0,2,0,0,0,25,0,0,0,28,108,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,232,75,2,0,0,0,0,0,2,0,0,0,169,0,0,0,115,107,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,180,75,2,0,0,0,0,0,2,0,0,0,121,0,0,0,250,106,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,136,75,2,0,0,0,0,0,2,0,0,0,225,0,0,0,25,106,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,76,75,2,0,0,0,0,0,2,0,0,0,185,1,0,0,96,104,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,248,74,2,0,0,0,0,0,2,0,0,0,33,1,0,0,63,103,4,0,1,0,0,0,0,24,157,225,0,24,61,97,5,0,0,0,0,0,0,0,180,74,2,0,0,0,0,0,2,0,0,0,105,1,0,0,214,101,4,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,104,74,2,0,0,0,0,0,1,0,0,0,49,0,0,0,165,101,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,164,73,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,163,125,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,2,0,0,0,0,0,0,0,0,0,0,0,0,0,40,78,2,0,0,0,0,0,0,0,0,0,0,0,0,0,80,78,2,0,0,0,0,0,0,0,0,0,0,0,0,0,120,78,2,0,0,0,0,0,160,78,2,0,200,78,2,0,0,0,0,0,0,0,0,0,240,78,2,0,24,79,2,0,0,0,0,0,0,0,0,0,64,79,2,0,104,79,2,0,0,0,0,0,0,0,0,0,144,79,2,0,184,79,2,0,0,0,0,0,0,0,0,0,224,79,2,0,8,80,2,0,48,80,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,64,114,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,82,125,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,112,83,2,0,0,0,0,0,4,0,0,0,113,2,0,0,225,122,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,92,83,2,0,0,0,0,0,2,0,0,0,81,0,0,0,144,122,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,56,83,2,0,0,0,0,0,2,0,0,0,33,1,0,0,111,121,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,244,82,2,0,0,0,0,0,4,0,0,0,81,0,0,0,30,121,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,232,82,2,0,0,0,0,0,2,0,0,0,121,0,0,0,165,120,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,188,82,2,0,0,0,0,0,2,0,0,0,169,0,0,0,252,119,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,136,82,2,0,0,0,0,0,2,0,0,0,25,0,0,0,227,119,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,116,82,2,0,0,0,0,0,2,0,0,0,169,0,0,0,58,119,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,64,82,2,0,0,0,0,0,2,0,0,0,121,0,0,0,193,118,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,20,82,2,0,0,0,0,0,2,0,0,0,225,0,0,0,224,117,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,216,81,2,0,0,0,0,0,2,0,0,0,185,1,0,0,39,116,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,132,81,2,0,0,0,0,0,2,0,0,0,169,0,0,0,126,115,4,0,1,0,0,0,0,220,125,225,0,232,51,97,4,0,0,0,0,0,0,0,80,81,2,0,0,0,0,0,2,0,0,0,169,0,0,0,213,114,4,0,1,0,0,0,0,96,18,225,0,128,184,96,4,0,0,0,0,0,0,0,28,81,2,0,0,0,0,0,1,0,0,0,49,0,0,0,164,114,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,88,80,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,106,137,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,140,84,2,0,0,0,0,0,0,0,0,0,0,0,0,0,180,84,2,0,0,0,0,0,0,0,0,0,0,0,0,0,220,84,2,0,0,0,0,0,0,0,0,0,0,0,0,0,4,85,2,0,0,0,0,0,44,85,2,0,84,85,2,0,0,0,0,0,0,0,0,0,124,85,2,0,164,85,2,0,0,0,0,0,0,0,0,0,204,85,2,0,244,85,2,0,0,0,0,0,0,0,0,0,28,86,2,0,68,86,2,0,0,0,0,0,0,0,0,0,108,86,2,0,148,86,2,0,188,86,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,7,126,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,25,137,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,252,89,2,0,0,0,0,0,4,0,0,0,113,2,0,0,168,134,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,232,89,2,0,0,0,0,0,2,0,0,0,81,0,0,0,87,134,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,196,89,2,0,0,0,0,0,2,0,0,0,33,1,0,0,54,133,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,128,89,2,0,0,0,0,0,4,0,0,0,81,0,0,0,229,132,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,116,89,2,0,0,0,0,0,2,0,0,0,121,0,0,0,108,132,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,72,89,2,0,0,0,0,0,2,0,0,0,169,0,0,0,195,131,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,20,89,2,0,0,0,0,0,2,0,0,0,25,0,0,0,170,131,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,0,89,2,0,0,0,0,0,2,0,0,0,169,0,0,0,1,131,4,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,204,88,2,0,0,0,0,0,2,0,0,0,121,0,0,0,136,130,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,160,88,2,0,0,0,0,0,2,0,0,0,225,0,0,0,167,129,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,100,88,2,0,0,0,0,0,2,0,0,0,185,1,0,0,238,127,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,16,88,2,0,0,0,0,0,2,0,0,0,169,0,0,0,69,127,4,0,1,0,0,0,0,220,125,225,0,232,51,97,4,0,0,0,0,0,0,0,220,87,2,0,0,0,0,0,2,0,0,0,169,0,0,0,156,126,4,0,1,0,0,0,0,96,18,225,0,128,184,96,4,0,0,0,0,0,0,0,168,87,2,0,0,0,0,0,1,0,0,0,49,0,0,0,107,126,4,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,228,86,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,191,175,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,91,2,0,0,0,0,0,0,0,0,0,0,0,0,0,64,91,2,0,0,0,0,0,0,0,0,0,0,0,0,0,104,91,2,0,0,0,0,0,0,0,0,0,0,0,0,0,144,91,2,0,0,0,0,0,0,0,0,0,0,0,0,0,184,91,2,0,0,0,0,0,0,0,0,0,0,0,0,0,224,91,2,0,0,0,0,0,8,92,2,0,48,92,2,0,0,0,0,0,0,0,0,0,88,92,2,0,128,92,2,0,0,0,0,0,0,0,0,0,168,92,2,0,208,92,2,0,248,92,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,206,137,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,30,150,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,40,95,2,0,0,0,0,0,4,0,0,0,113,2,0,0,173,147,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,20,95,2,0,0,0,0,0,4,0,0,0,113,2,0,0,60,145,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,0,95,2,0,0,0,0,0,2,0,0,0,81,0,0,0,235,144,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,220,94,2,0,0,0,0,0,2,0,0,0,81,0,0,0,154,144,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,184,94,2,0,0,0,0,0,2,0,0,0,33,1,0,0,121,143,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,116,94,2,0,0,0,0,0,4,0,0,0,81,0,0,0,40,143,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,104,94,2,0,0,0,0,0,2,0,0,0,121,0,0,0,175,142,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,60,94,2,0,0,0,0,0,2,0,0,0,169,0,0,0,6,142,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,8,94,2,0,0,0,0,0,2,0,0,0,25,0,0,0,237,141,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,244,93,2,0,0,0,0,0,2,0,0,0,225,0,0,0,12,141,4,0,1,0,0,0,0,134,115,225,0,80,22,97,4,0,0,0,0,0,0,0,184,93,2,0,0,0,0,0,2,0,0,0,33,1,0,0,235,139,4,0,1,0,0,0,0,0,245,224,0,0,149,96,5,0,0,0,0,0,0,0,116,93,2,0,0,0,0,0,2,0,0,0,185,1,0,0,50,138,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,32,93,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,156,213,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,96,2,0,0,0,0,0,0,0,0,0,0,0,0,0,108,96,2,0,0,0,0,0,0,0,0,0,0,0,0,0,148,96,2,0,0,0,0,0,0,0,0,0,0,0,0,0,188,96,2,0,0,0,0,0,0,0,0,0,0,0,0,0,228,96,2,0,0,0,0,0,0,0,0,0,0,0,0,0,12,97,2,0,0,0,0,0,52,97,2,0,92,97,2,0,0,0,0,0,0,0,0,0,132,97,2,0,172,97,2,0,0,0,0,0,0,0,0,0,212,97,2,0,252,97,2,0,36,98,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,35,176,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,251,187,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,68,100,2,0,0,0,0,0,4,0,0,0,113,2,0,0,138,185,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,48,100,2,0,0,0,0,0,4,0,0,0,113,2,0,0,25,183,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,28,100,2,0,0,0,0,0,2,0,0,0,81,0,0,0,200,182,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,248,99,2,0,0,0,0,0,2,0,0,0,81,0,0,0,119,182,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,212,99,2,0,0,0,0,0,2,0,0,0,33,1,0,0,86,181,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,144,99,2,0,0,0,0,0,4,0,0,0,81,0,0,0,5,181,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,132,99,2,0,0,0,0,0,2,0,0,0,121,0,0,0,140,180,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,88,99,2,0,0,0,0,0,2,0,0,0,169,0,0,0,227,179,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,36,99,2,0,0,0,0,0,2,0,0,0,25,0,0,0,202,179,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,16,99,2,0,0,0,0,0,2,0,0,0,169,0,0,0,33,179,4,0,1,0,0,0,0,136,93,225,0,176,19,97,4,0,0,0,0,0,0,0,220,98,2,0,0,0,0,0,2,0,0,0,225,0,0,0,64,178,4,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,160,98,2,0,0,0,0,0,2,0,0,0,185,1,0,0,135,176,4,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,76,98,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,225,250,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,101,2,0,0,0,0,0,0,0,0,0,0,0,0,0,136,101,2,0,0,0,0,0,0,0,0,0,0,0,0,0,176,101,2,0,0,0,0,0,0,0,0,0,0,0,0,0,216,101,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,40,102,2,0,0,0,0,0,80,102,2,0,120,102,2,0,0,0,0,0,0,0,0,0,160,102,2,0,200,102,2,0,0,0,0,0,0,0,0,0,240,102,2,0,24,103,2,0,64,103,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,0,214,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,64,225,4,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,80,105,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+146812);
/* memory initializer */ allocate([4,0,0,0,113,2,0,0,207,222,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,60,105,2,0,0,0,0,0,4,0,0,0,113,2,0,0,94,220,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,40,105,2,0,0,0,0,0,2,0,0,0,81,0,0,0,13,220,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,4,105,2,0,0,0,0,0,2,0,0,0,81,0,0,0,188,219,4,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,224,104,2,0,0,0,0,0,2,0,0,0,33,1,0,0,155,218,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,156,104,2,0,0,0,0,0,4,0,0,0,81,0,0,0,74,218,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,144,104,2,0,0,0,0,0,2,0,0,0,121,0,0,0,209,217,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,100,104,2,0,0,0,0,0,2,0,0,0,169,0,0,0,40,217,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,48,104,2,0,0,0,0,0,2,0,0,0,25,0,0,0,15,217,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,28,104,2,0,0,0,0,0,2,0,0,0,169,0,0,0,102,216,4,0,1,0,0,0,0,232,87,225,0,224,255,96,4,0,0,0,0,0,0,0,232,103,2,0,0,0,0,0,2,0,0,0,225,0,0,0,133,215,4,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,172,103,2,0,0,0,0,0,2,0,0,0,33,1,0,0,100,214,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,104,103,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,238,31,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,106,2,0,0,0,0,0,0,0,0,0,0,0,0,0,148,106,2,0,0,0,0,0,0,0,0,0,0,0,0,0,188,106,2,0,0,0,0,0,0,0,0,0,0,0,0,0,228,106,2,0,0,0,0,0,0,0,0,0,0,0,0,0,12,107,2,0,0,0,0,0,0,0,0,0,0,0,0,0,52,107,2,0,0,0,0,0,92,107,2,0,132,107,2,0,0,0,0,0,0,0,0,0,172,107,2,0,212,107,2,0,0,0,0,0,0,0,0,0,252,107,2,0,36,108,2,0,76,108,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,69,251,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,77,6,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,84,110,2,0,0,0,0,0,4,0,0,0,113,2,0,0,220,3,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,64,110,2,0,0,0,0,0,4,0,0,0,113,2,0,0,107,1,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,44,110,2,0,0,0,0,0,2,0,0,0,81,0,0,0,26,1,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,8,110,2,0,0,0,0,0,2,0,0,0,81,0,0,0,201,0,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,228,109,2,0,0,0,0,0,2,0,0,0,33,1,0,0,168,255,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,160,109,2,0,0,0,0,0,4,0,0,0,81,0,0,0,87,255,4,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,148,109,2,0,0,0,0,0,2,0,0,0,121,0,0,0,222,254,4,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,104,109,2,0,0,0,0,0,2,0,0,0,169,0,0,0,53,254,4,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,52,109,2,0,0,0,0,0,2,0,0,0,25,0,0,0,28,254,4,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,32,109,2,0,0,0,0,0,2,0,0,0,169,0,0,0,115,253,4,0,1,0,0,0,0,184,84,225,0,160,251,96,4,0,0,0,0,0,0,0,236,108,2,0,0,0,0,0,2,0,0,0,169,0,0,0,202,252,4,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,184,108,2,0,0,0,0,0,2,0,0,0,33,1,0,0,169,251,4,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,116,108,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,9,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+157056);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,231,3,0,0,4,0,0,0,8,0,0,0,16,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,237,100,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,156,100,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,127,2,0,0,0,0,0,0,0,0,0,0,0,0,0,120,127,2,0,0,0,0,0,0,0,0,0,0,0,0,0,160,127,2,0,0,0,0,0,0,0,0,0,0,0,0,0,200,127,2,0,0,0,0,0,0,0,0,0,0,0,0,0,240,127,2,0,0,0,0,0,24,128,2,0,64,128,2,0,0,0,0,0,0,0,0,0,104,128,2,0,144,128,2,0,0,0,0,0,0,0,0,0,184,128,2,0,224,128,2,0,8,129,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,123,2,0,0,0,0,0,0,0,0,0,0,0,0,0,192,123,2,0,0,0,0,0,0,0,0,0,0,0,0,0,232,123,2,0,0,0,0,0,0,0,0,0,0,0,0,0,16,124,2,0,0,0,0,0,0,0,0,0,0,0,0,0,56,124,2,0,0,0,0,0,96,124,2,0,136,124,2,0,0,0,0,0,0,0,0,0,176,124,2,0,216,124,2,0,0,0,0,0,0,0,0,0,0,125,2,0,40,125,2,0,80,125,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,163,32,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,82,32,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,39,41,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,68,127,2,0,0,0,0,0,4,0,0,0,113,2,0,0,182,38,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,48,127,2,0,0,0,0,0,2,0,0,0,81,0,0,0,101,38,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,12,127,2,0,0,0,0,0,2,0,0,0,81,0,0,0,20,38,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,232,126,2,0,0,0,0,0,2,0,0,0,33,1,0,0,243,36,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,164,126,2,0,0,0,0,0,4,0,0,0,81,0,0,0,162,36,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,152,126,2,0,0,0,0,0,2,0,0,0,121,0,0,0,41,36,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,108,126,2,0,0,0,0,0,2,0,0,0,169,0,0,0,128,35,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,56,126,2,0,0,0,0,0,2,0,0,0,25,0,0,0,103,35,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,36,126,2,0,0,0,0,0,2,0,0,0,169,0,0,0,190,34,5,0,1,0,0,0,0,184,84,225,0,160,251,96,4,0,0,0,0,0,0,0,240,125,2,0,0,0,0,0,2,0,0,0,169,0,0,0,21,34,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,188,125,2,0,0,0,0,0,2,0,0,0,33,1,0,0,244,32,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,120,125,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,161,25,0,0,251,74,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,252,130,2,0,0,0,0,0,4,0,0,0,113,2,0,0,138,72,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,232,130,2,0,0,0,0,0,2,0,0,0,81,0,0,0,57,72,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,196,130,2,0,0,0,0,0,2,0,0,0,81,0,0,0,232,71,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,160,130,2,0,0,0,0,0,2,0,0,0,33,1,0,0,199,70,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,92,130,2,0,0,0,0,0,4,0,0,0,81,0,0,0,118,70,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,80,130,2,0,0,0,0,0,2,0,0,0,121,0,0,0,253,69,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,36,130,2,0,0,0,0,0,2,0,0,0,169,0,0,0,84,69,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,240,129,2,0,0,0,0,0,2,0,0,0,25,0,0,0,59,69,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,220,129,2,0,0,0,0,0,2,0,0,0,169,0,0,0,146,68,5,0,1,0,0,0,0,184,84,225,0,160,251,96,4,0,0,0,0,0,0,0,168,129,2,0,0,0,0,0,2,0,0,0,169,0,0,0,233,67,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,116,129,2,0,0,0,0,0,2,0,0,0,33,1,0,0,200,66,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,48,129,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,81,0,0,0,73,171,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,248,170,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,136,2,0,0,0,0,0,0,0,0,0,0,0,0,0,248,136,2,0,0,0,0,0,0,0,0,0,0,0,0,0,32,137,2,0,0,0,0,0,0,0,0,0,0,0,0,0,72,137,2,0,0,0,0,0,0,0,0,0,0,0,0,0,112,137,2,0,0,0,0,0,152,137,2,0,192,137,2,0,0,0,0,0,0,0,0,0,232,137,2,0,16,138,2,0,0,0,0,0,0,0,0,0,56,138,2,0,96,138,2,0,136,138,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,133,2,0,0,0,0,0,0,0,0,0,0,0,0,0,80,133,2,0,0,0,0,0,0,0,0,0,0,0,0,0,120,133,2,0,0,0,0,0,0,0,0,0,0,0,0,0,160,133,2,0,0,0,0,0,0,0,0,0,0,0,0,0,200,133,2,0,0,0,0,0,240,133,2,0,24,134,2,0,0,0,0,0,0,0,0,0,64,134,2,0,104,134,2,0,0,0,0,0,0,0,0,0,144,134,2,0,184,134,2,0,224,134,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,143,101,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,62,101,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,187,109,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,196,136,2,0,0,0,0,0,4,0,0,0,113,2,0,0,74,107,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,176,136,2,0,0,0,0,0,2,0,0,0,81,0,0,0,249,106,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,140,136,2,0,0,0,0,0,2,0,0,0,81,0,0,0,168,106,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,104,136,2,0,0,0,0,0,2,0,0,0,33,1,0,0,135,105,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,36,136,2,0,0,0,0,0,4,0,0,0,81,0,0,0,54,105,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,24,136,2,0,0,0,0,0,2,0,0,0,121,0,0,0,189,104,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,236,135,2,0,0,0,0,0,2,0,0,0,169,0,0,0,20,104,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,184,135,2,0,0,0,0,0,2,0,0,0,25,0,0,0,251,103,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,164,135,2,0,0,0,0,0,2,0,0,0,81,0,0,0,170,103,5,0,1,0,0,0,0,160,59,225,0,160,251,96,4,0,0,0,0,0,0,0,128,135,2,0,0,0,0,0,2,0,0,0,169,0,0,0,1,103,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,76,135,2,0,0,0,0,0,2,0,0,0,33,1,0,0,224,101,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,8,135,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,161,25,0,0,87,145,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,92,140,2,0,0,0,0,0,4,0,0,0,113,2,0,0,230,142,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,72,140,2,0,0,0,0,0,2,0,0,0,81,0,0,0,149,142,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,36,140,2,0,0,0,0,0,2,0,0,0,81,0,0,0,68,142,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,0,140,2,0,0,0,0,0,2,0,0,0,33,1,0,0,35,141,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,188,139,2,0,0,0,0,0,4,0,0,0,81,0,0,0,210,140,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,176,139,2,0,0,0,0,0,2,0,0,0,121,0,0,0,89,140,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,132,139,2,0,0,0,0,0,2,0,0,0,169,0,0,0,176,139,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,80,139,2,0,0,0,0,0,2,0,0,0,25,0,0,0,151,139,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,60,139,2,0,0,0,0,0,4,0,0,0,113,2,0,0,38,137,5,0,1,0,0,0,0,160,27,225,0,160,251,96,3,0,0,0,0,0,0,0,40,139,2,0,0,0,0,0,2,0,0,0,169,0,0,0,125,136,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,244,138,2,0,0,0,0,0,2,0,0,0,33,1,0,0,92,135,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,176,138,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,81,0,0,0,165,241,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,84,241,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,146,2,0,0,0,0,0,0,0,0,0,0,0,0,0,88,146,2,0,0,0,0,0,0,0,0,0,0,0,0,0,128,146,2,0,0,0,0,0,0,0,0,0,0,0,0,0,168,146,2,0,0,0,0,0,0,0,0,0,0,0,0,0,208,146,2,0,0,0,0,0,248,146,2,0,32,147,2,0,0,0,0,0,0,0,0,0,72,147,2,0,112,147,2,0,0,0,0,0,0,0,0,0,152,147,2,0,192,147,2,0,232,147,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,142,2,0,0,0,0,0,0,0,0,0,0,0,0,0,176,142,2,0,0,0,0,0,0,0,0,0,0,0,0,0,216,142,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,2,0,0,0,0,0,0,0,0,0,0,0,0,0,40,143,2,0,0,0,0,0,80,143,2,0,120,143,2,0,0,0,0,0,0,0,0,0,160,143,2,0,200,143,2,0,0,0,0,0,0,0,0,0,240,143,2,0,24,144,2,0,64,144,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,235,171,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,81,0,0,0,154,171,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,23,180,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,36,146,2,0,0,0,0,0,4,0,0,0,113,2,0,0,166,177,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,16,146,2,0,0,0,0,0,2,0,0,0,81,0,0,0,85,177,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,236,145,2,0,0,0,0,0,2,0,0,0,81,0,0,0,4,177,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,200,145,2,0,0,0,0,0,2,0,0,0,33,1,0,0,227,175,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,132,145,2,0,0,0,0,0,4,0,0,0,81,0,0,0,146,175,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,120,145,2,0,0,0,0,0,2,0,0,0,121,0,0,0,25,175,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,76,145,2,0,0,0,0,0,2,0,0,0,169,0,0,0,112,174,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,24,145,2,0,0,0,0,0,2,0,0,0,25,0,0,0,87,174,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,4,145,2,0,0,0,0,0,2,0,0,0,81,0,0,0,6,174,5,0,1,0,0,0,0,160,59,225,0,160,251,96,4,0,0,0,0,0,0,0,224,144,2,0,0,0,0,0,2,0,0,0,169,0,0,0,93,173,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,172,144,2,0,0,0,0,0,2,0,0,0,33,1,0,0,60,172,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,104,144,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,161,25,0,0,179,215,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,188,149,2,0,0,0,0,0,4,0,0,0,113,2,0,0,66,213,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,168,149,2,0,0,0,0,0,2,0,0,0,81,0,0,0,241,212,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,132,149,2,0,0,0,0,0,2,0,0,0,81,0,0,0,160,212,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,96,149,2,0,0,0,0,0,2,0,0,0,33,1,0,0,127,211,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,28,149,2,0,0,0,0,0,4,0,0,0,81,0,0,0,46,211,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,16,149,2,0,0,0,0,0,2,0,0,0,121,0,0,0,181,210,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,228,148,2,0,0,0,0,0,2,0,0,0,169,0,0,0,12,210,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,176,148,2,0,0,0,0,0,2,0,0,0,25,0,0,0,243,209,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,156,148,2,0,0,0,0,0,4,0,0,0,113,2,0,0,130,207,5,0,1,0,0,0,0,160,27,225,0,160,251,96,3,0,0,0,0,0,0,0,136,148,2,0,0,0,0,0,2,0,0,0,169,0,0,0,217,206,5,0,1,0,0,0,0,128,217,224,0,0,145,96,4,0,0,0,0,0,0,0,84,148,2,0,0,0,0,0,2,0,0,0,33,1,0,0,184,205,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,16,148,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,2,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,242,255,255,255,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,2,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,10,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,12,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,99,0,0,0,99,0,0,0,99,0,0,0,64,153,2,0,6,0,0,0,6,0,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,4,0,0,30,0,0,0,25,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,22,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,242,255,255,255,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,246,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,236,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,10,0,0,0,255,255,255,255,10,0,0,0,10,0,0,0,255,255,255,255,20,0,0,0,20,0,0,0,255,255,255,255,20,0,0,0,20,0,0,0,255,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,14,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,15,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,10,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,10,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,249,255,255,255,251,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,238,255,255,255,238,255,255,255,238,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,12,0,0,0,12,0,0,0,14,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,4,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,4,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+161652);
/* memory initializer */ allocate([226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,12,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,14,0,0,0,20,0,0,0,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,254,255,255,255,254,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,4,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,20,0,0,0,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,8,0,0,0,8,0,0,0,15,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,232,255,255,255,236,255,255,255,242,255,255,255,246,255,255,255,250,255,255,255,248,255,255,255,248,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,8,0,0,0,12,0,0,0,236,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,240,255,255,255,244,255,255,255,236,255,255,255,246,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,5,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,241,255,255,255,244,255,255,255,246,255,255,255,248,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,234,255,255,255,236,255,255,255,242,255,255,255,244,255,255,255,244,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,246,255,255,255,250,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,226,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,230,255,255,255,232,255,255,255,236,255,255,255,236,255,255,255,236,255,255,255,0,1,0,0,0,1,0,0,15,39,0,0,8,0,0,0,8,0,0,0,8,0,0,0,8,0,0,0,156,255,255,255,156,255,255,255,156,255,255,255,151,255,255,255,126,255,255,255,126,255,255,255,126,255,255,255,116,255,255,255,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,64,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,4,0,0,0,4,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,6,0,0,0,5,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,64,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,5,0,0,0,4,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,128,64,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,0,65,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,0,0,198,66,148,184,2,0,160,184,2,0,100,58,1,0,156,168,2,0,100,58,1,0,188,168,2,0,100,58,1,0,252,168,2,0,1,0,0,0,0,0,0,0,32,0,0,0,144,99,1,0,212,180,2,0,212,180,2,0,252,180,2,0,252,180,2,0,1,0,0,0,0,0,0,0,32,0,0,0,180,83,1,0,232,175,2,0,232,175,2,0,16,176,2,0,16,176,2,0,1,0,0,0,0,0,0,0,32,0,0,0,180,83,1,0,208,176,2,0,208,176,2,0,16,176,2,0,16,176,2,0,1,0,0,0,0,0,0,0,32,0,0,0,232,230,1,0,60,169,2,0,60,169,2,0,100,169,2,0,100,169,2,0,1,0,0,0,0,0,0,0,32,0,0,0,232,230,1,0,36,170,2,0,36,170,2,0,100,169,2,0,100,169,2,0,2,0,0,0,100,0,0,0,81,254,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,170,2,0,0,0,0,0,0,0,0,0,0,0,0,0,116,170,2,0,0,0,0,0,0,0,0,0,0,0,0,0,156,170,2,0,0,0,0,0,0,0,0,0,0,0,0,0,196,170,2,0,0,0,0,0,236,170,2,0,20,171,2,0,0,0,0,0,0,0,0,0,60,171,2,0,100,171,2,0,0,0,0,0,0,0,0,0,140,171,2,0,180,171,2,0,0,0,0,0,0,0,0,0,220,171,2,0,4,172,2,0,0,0,0,0,0,0,0,0,44,172,2,0,84,172,2,0,124,172,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,246,241,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,0,254,5,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,220,175,2,0,0,0,0,0,4,0,0,0,113,2,0,0,143,251,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,200,175,2,0,0,0,0,0,2,0,0,0,81,0,0,0,62,251,5,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,164,175,2,0,0,0,0,0,2,0,0,0,33,1,0,0,29,250,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,96,175,2,0,0,0,0,0,4,0,0,0,81,0,0,0,204,249,5,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,84,175,2,0,0,0,0,0,2,0,0,0,121,0,0,0,83,249,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,40,175,2,0,0,0,0,0,2,0,0,0,169,0,0,0,170,248,5,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,244,174,2,0,0,0,0,0,2,0,0,0,25,0,0,0,145,248,5,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,224,174,2,0,0,0,0,0,2,0,0,0,169,0,0,0,232,247,5,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,172,174,2,0,0,0,0,0,2,0,0,0,121,0,0,0,111,247,5,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,128,174,2,0,0,0,0,0,2,0,0,0,225,0,0,0,142,246,5,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,68,174,2,0,0,0,0,0,2,0,0,0,185,1,0,0,213,244,5,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,240,173,2,0,0,0,0,0,2,0,0,0,225,0,0,0,244,243,5,0,1,0,0,0,0,117,153,225,0,24,61,97,4,0,0,0,0,0,0,0,180,173,2,0,0,0,0,0,2,0,0,0,105,1,0,0,139,242,5,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,104,173,2,0,0,0,0,0,1,0,0,0,49,0,0,0,90,242,5,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,164,172,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,222,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,176,2,0,0,0,0,0,0,0,0,0,0,0,0,0,32,177,2,0,0,0,0,0,0,0,0,0,0,0,0,0,72,177,2,0,0,0,0,0,0,0,0,0,0,0,0,0,112,177,2,0,0,0,0,0,0,0,0,0,0,0,0,0,152,177,2,0,0,0,0,0,0,0,0,0,0,0,0,0,192,177,2,0,0,0,0,0,232,177,2,0,16,178,2,0,0,0,0,0,0,0,0,0,56,178,2,0,96,178,2,0,0,0,0,0,0,0,0,0,136,178,2,0,176,178,2,0,216,178,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,181,254,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,141,9,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,200,180,2,0,0,0,0,0,4,0,0,0,81,0,0,0,60,9,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,188,180,2,0,0,0,0,0,4,0,0,0,113,2,0,0,203,6,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,168,180,2,0,0,0,0,0,4,0,0,0,113,2,0,0,90,4,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,148,180,2,0,0,0,0,0,2,0,0,0,81,0,0,0,9,4,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,112,180,2,0,0,0,0,0,2,0,0,0,81,0,0,0,184,3,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,76,180,2,0,0,0,0,0,4,0,0,0,81,0,0,0,103,3,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,64,180,2,0,0,0,0,0,2,0,0,0,121,0,0,0,238,2,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,20,180,2,0,0,0,0,0,2,0,0,0,121,0,0,0,117,2,6,0,1,0,0,0,0,128,187,224,0,0,118,96,4,0,0,0,0,0,0,0,232,179,2,0,0,0,0,0,2,0,0,0,121,0,0,0,252,1,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,188,179,2,0,0,0,0,0,2,0,0,0,225,0,0,0,27,1,6,0,1,0,0,0,0,228,91,225,0,224,255,96,4,0,0,0,0,0,0,0,128,179,2,0,0,0,0,0,2,0,0,0,225,0,0,0,58,0,6,0,1,0,0,0,0,192,221,224,0,0,145,96,4,0,0,0,0,0,0,0,68,179,2,0,0,0,0,0,2,0,0,0,33,1,0,0,25,255,5,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,0,179,2,0,0,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,196,19,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,181,2,0,0,0,0,0,0,0,0,0,0,0,0,0,228,181,2,0,0,0,0,0,0,0,0,0,0,0,0,0,12,182,2,0,0,0,0,0,0,0,0,0,0,0,0,0,52,182,2,0,0,0,0,0,0,0,0,0,0,0,0,0,92,182,2,0,0,0,0,0,132,182,2,0,172,182,2,0,0,0,0,0,0,0,0,0,212,182,2,0,252,182,2,0,36,183,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,115,19,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,136,184,2,0,0,0,0,0,4,0,0,0,81,0,0,0,34,19,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,124,184,2,0,0,0,0,0,4,0,0,0,113,2,0,0,177,16,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,104,184,2,0,0,0,0,0,4,0,0,0,113,2,0,0,64,14,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,84,184,2,0,0,0,0,0,2,0,0,0,81,0,0,0,239,13,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,48,184,2,0,0,0,0,0,2,0,0,0,169,0,0,0,70,13,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,252,183,2,0,0,0,0,0,2,0,0,0,25,0,0,0,45,13,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,232,183,2,0,0,0,0,0,4,0,0,0,81,0,0,0,220,12,6,0,1,0,0,0,0,176,19,225,0,176,19,97,2,0,0,0,0,0,0,0,220,183,2,0,0,0,0,0,2,0,0,0,225,0,0,0,251,11,6,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,160,183,2,0,0,0,0,0,2,0,0,0,185,1,0,0,66,10,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,76,183,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,9,0,0,0,3,0,0,0,3,0,0,0,9,0,0,0,9,0,0,0,9,0,0,0,44,131,1,0,196,184,2,0,44,131,1,0,228,184,2,0,44,131,1,0,36,185,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,248,196,2,0,248,196,2,0,32,197,2,0,32,197,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,24,192,2,0,24,192,2,0,64,192,2,0,64,192,2,0,2,0,0,0,0,0,0,0,32,0,0,0,124,156,1,0,0,193,2,0,0,193,2,0,64,192,2,0,64,192,2,0,2,0,0,0,0,0,0,0,32,0,0,0,104,52,2,0,100,185,2,0,100,185,2,0,140,185,2,0,140,185,2,0,2,0,0,0,0,0,0,0,32,0,0,0,104,52,2,0,76,186,2,0,76,186,2,0,140,185,2,0,140,185,2,0,2,0,0,0,100,0,0,0,159,32,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,186,2,0,0,0,0,0,0,0,0,0,0,0,0,0,156,186,2,0,0,0,0,0,0,0,0,0,0,0,0,0,196,186,2,0,0,0,0,0,0,0,0,0,0,0,0,0,236,186,2,0,0,0,0,0,20,187,2,0,60,187,2,0,0,0,0,0,0,0,0,0,100,187,2,0,140,187,2,0,0,0,0,0,0,0,0,0,180,187,2,0,220,187,2,0,0,0,0,0,0,0,0,0,4,188,2,0,44,188,2,0,0,0,0,0,0,0,0,0,84,188,2,0,124,188,2,0,164,188,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,4,20,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,81,0,0,0,78,32,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,12,192,2,0,0,0,0,0,4,0,0,0,113,2,0,0,221,29,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,248,191,2,0,0,0,0,0,2,0,0,0,81,0,0,0,140,29,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,212,191,2,0,0,0,0,0,2,0,0,0,33,1,0,0,107,28,6,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,144,191,2,0,0,0,0,0,4,0,0,0,81,0,0,0,26,28,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,132,191,2,0,0,0,0,0,2,0,0,0,121,0,0,0,161,27,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,88,191,2,0,0,0,0,0,2,0,0,0,169,0,0,0,248,26,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,36,191,2,0,0,0,0,0,2,0,0,0,25,0,0,0,223,26,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,16,191,2,0,0,0,0,0,2,0,0,0,169,0,0,0,54,26,6,0,1,0,0,0,0,128,208,224,0,0,118,96,4,0,0,0,0,0,0,0,220,190,2,0,0,0,0,0,2,0,0,0,121,0,0,0,189,25,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,176,190,2,0,0,0,0,0,2,0,0,0,225,0,0,0,220,24,6,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,116,190,2,0,0,0,0,0,2,0,0,0,185,1,0,0,35,23,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,32,190,2,0,0,0,0,0,2,0,0,0,33,1,0,0,2,22,6,0,1,0,0,0,0,24,157,225,0,24,61,97,5,0,0,0,0,0,0,0,220,189,2,0,0,0,0,0,2,0,0,0,105,1,0,0,153,20,6,0,1,0,0,0,0,144,27,225,0,128,184,96,5,0,0,0,0,0,0,0,144,189,2,0,0,0,0,0,1,0,0,0,49,0,0,0,104,20,6,0,1,0,0,0,0,0,152,224,0,0,16,96,6,0,0,0,0,0,0,0,204,188,2,0,0,0,0,0,24,0,0,0,23,0,0,0,25,0,0,0,22,0,0,0,26,0,0,0,21,0,0,0,27,0,0,0,20,0,0,0,28,0,0,0,19,0,0,0,29,0,0,0,18,0,0,0,30,0,0,0,17,0,0,0,31,0,0,0,16,0,0,0,32,0,0,0,15,0,0,0,33,0,0,0,14,0,0,0,34,0,0,0,13,0,0,0,35,0,0,0,12,0,0,0,36,0,0,0,11,0,0,0,37,0,0,0,10,0,0,0,38,0,0,0,9,0,0,0,39,0,0,0,8,0,0,0,40,0,0,0,7,0,0,0,41,0,0,0,6,0,0,0,42,0,0,0,5,0,0,0,43,0,0,0,4,0,0,0,44,0,0,0,3,0,0,0,45,0,0,0,2,0,0,0,46,0,0,0,1,0,0,0,47,0,0,0,0,0,0,0,48,0,0,0,9,0,0,0,8,0,0,0,10,0,0,0,7,0,0,0,11,0,0,0,6,0,0,0,12,0,0,0,5,0,0,0,13,0,0,0,4,0,0,0,14,0,0,0,3,0,0,0,15,0,0,0,2,0,0,0,16,0,0,0,1,0,0,0,17,0,0,0,0,0,0,0,18,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,11,68,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,193,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,193,2,0,0,0,0,0,0,0,0,0,0,0,0,0,120,193,2,0,0,0,0,0,0,0,0,0,0,0,0,0,160,193,2,0,0,0,0,0,0,0,0,0,0,0,0,0,200,193,2,0,0,0,0,0,240,193,2,0,24,194,2,0,0,0,0,0,0,0,0,0,64,194,2,0,104,194,2,0,0,0,0,0,0,0,0,0,144,194,2,0,184,194,2,0,224,194,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,100,0,0,0,3,33,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,106,42,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,236,196,2,0,0,0,0,0,4,0,0,0,113,2,0,0,249,39,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,216,196,2,0,0,0,0,0,2,0,0,0,81,0,0,0,168,39,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,180,196,2,0,0,0,0,0,2,0,0,0,81,0,0,0,87,39,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,144,196,2,0,0,0,0,0,2,0,0,0,33,1,0,0,54,38,6,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,76,196,2,0,0,0,0,0,4,0,0,0,81,0,0,0,229,37,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,64,196,2,0,0,0,0,0,2,0,0,0,121,0,0,0,108,37,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,20,196,2,0,0,0,0,0,2,0,0,0,169,0,0,0,195,36,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,224,195,2,0,0,0,0,0,2,0,0,0,25,0,0,0,170,36,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,204,195,2,0,0,0,0,0,2,0,0,0,169,0,0,0,1,36,6,0,1,0,0,0,0,136,93,225,0,176,19,97,4,0,0,0,0,0,0,0,152,195,2,0,0,0,0,0,2,0,0,0,225,0,0,0,32,35,6,0,1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,92,195,2,0,0,0,0,0,2,0,0,0,185,1,0,0,103,33,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,8,195,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,100,0,0,0,187,102,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,197,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,198,2,0,0,0,0,0,0,0,0,0,0,0,0,0,48,198,2,0,0,0,0,0,0,0,0,0,0,0,0,0,88,198,2,0,0,0,0,0,0,0,0,0,0,0,0,0,128,198,2,0,0,0,0,0,168,198,2,0,208,198,2,0,0,0,0,0,0,0,0,0,248,198,2,0,32,199,2,0,0,0,0,0,0,0,0,0,72,199,2,0,112,199,2,0,152,199,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,161,25,0,0,26,77,6,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,124,201,2,0,0,0,0,0,4,0,0,0,113,2,0,0,169,74,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,104,201,2,0,0,0,0,0,2,0,0,0,81,0,0,0,88,74,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,68,201,2,0,0,0,0,0,2,0,0,0,81,0,0,0,7,74,6,0,1,0,0,0,0,0,80,224,0,0,16,96,4,0,0,0,0,0,0,0,32,201,2,0,0,0,0,0,2,0,0,0,33,1,0,0,230,72,6,0,1,0,0,0,0,0,112,224,0,0,16,96,5,0,0,0,0,0,0,0,220,200,2,0,0,0,0,0,4,0,0,0,81,0,0,0,149,72,6,0,1,0,0,0,0,0,118,224,0,0,118,96,2,0,0,0,0,0,0,0,208,200,2,0,0,0,0,0,2,0,0,0,121,0,0,0,28,72,6,0,1,0,0,0,0,0,84,224,0,0,16,96,4,0,0,0,0,0,0,0,164,200,2,0,0,0,0,0,2,0,0,0,169,0,0,0,115,71,6,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,112,200,2,0,0,0,0,0,2,0,0,0,25,0,0,0,90,71,6,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,92,200,2,0,0,0,0,0,4,0,0,0,81,0,0,0,9,71,6,0,1,0,0,0,0,176,19,225,0,176,19,97,2,0,0,0,0,0,0,0,80,200,2,0,0,0,0,0,2,0,0,0,225,0,0,0,40,70,6], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+171892);
/* memory initializer */ allocate([1,0,0,0,0,96,242,224,0,0,149,96,4,0,0,0,0,0,0,0,20,200,2,0,0,0,0,0,2,0,0,0,185,1,0,0,111,68,6,0,1,0,0,0,0,0,116,224,0,0,16,96,5,0,0,0,0,0,0,0,192,199,2,0,0,0,0,0,10,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,12,0,0,0,7,0,0,0,13,0,0,0,6,0,0,0,14,0,0,0,5,0,0,0,15,0,0,0,4,0,0,0,16,0,0,0,3,0,0,0,17,0,0,0,2,0,0,0,18,0,0,0,1,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,7,0,0,0,6,0,0,0,8,0,0,0,5,0,0,0,9,0,0,0,4,0,0,0,10,0,0,0,3,0,0,0,11,0,0,0,2,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,4,0,0,0,6,0,0,0,3,0,0,0,7,0,0,0,2,0,0,0,8,0,0,0,1,0,0,0,9,0,0,0,0,0,0,0,10,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,7,0,0,0,9,0,0,0,6,0,0,0,10,0,0,0,5,0,0,0,11,0,0,0,4,0,0,0,12,0,0,0,3,0,0,0,13,0,0,0,2,0,0,0,14,0,0,0,1,0,0,0,15,0,0,0,0,0,0,0,16,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,5,0,0,0,2,0,0,0,6,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,224,201,2,0,240,226,2,0,224,201,2,0,80,227,2,0,224,201,2,0,176,227,2,0,224,201,2,0,16,228,2,0,224,201,2,0,112,228,2,0,224,201,2,0,208,228,2,0,48,229,2,0,64,254,2,0,48,229,2,0,160,254,2,0,48,229,2,0,0,255,2,0,48,229,2,0,96,255,2,0,48,229,2,0,192,255,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,30,0,0,0,4,80,3,0,36,103,3,0,36,103,3,0,76,103,3,0,76,103,3,0,2,0,0,0,0,0,0,0,30,0,0,0,4,80,3,0,12,104,3,0,12,104,3,0,76,103,3,0,76,103,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,52,104,3,0,52,104,3,0,92,104,3,0,92,104,3,0,2,0,0,0,0,0,0,0,15,0,0,0,4,80,3,0,32,97,3,0,32,97,3,0,72,97,3,0,72,97,3,0,2,0,0,0,0,0,0,0,30,0,0,0,4,80,3,0,8,98,3,0,8,98,3,0,72,97,3,0,72,97,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,48,98,3,0,48,98,3,0,88,98,3,0,88,98,3,0,2,0,0,0,0,0,0,0,15,0,0,0,4,80,3,0,28,91,3,0,28,91,3,0,68,91,3,0,68,91,3,0,2,0,0,0,0,0,0,0,30,0,0,0,4,80,3,0,4,92,3,0,4,92,3,0,68,91,3,0,68,91,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,44,92,3,0,44,92,3,0,84,92,3,0,84,92,3,0,2,0,0,0,0,0,0,0,15,0,0,0,144,49,3,0,144,73,3,0,144,73,3,0,184,73,3,0,184,73,3,0,2,0,0,0,0,0,0,0,30,0,0,0,144,49,3,0,120,74,3,0,120,74,3,0,184,73,3,0,184,73,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,160,74,3,0,160,74,3,0,200,74,3,0,200,74,3,0,2,0,0,0,0,0,0,0,15,0,0,0,144,49,3,0,28,67,3,0,28,67,3,0,68,67,3,0,68,67,3,0,2,0,0,0,0,0,0,0,30,0,0,0,144,49,3,0,4,68,3,0,4,68,3,0,68,67,3,0,68,67,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,44,68,3,0,44,68,3,0,84,68,3,0,84,68,3,0,2,0,0,0,0,0,0,0,15,0,0,0,144,49,3,0,168,60,3,0,168,60,3,0,208,60,3,0,208,60,3,0,2,0,0,0,0,0,0,0,30,0,0,0,144,49,3,0,144,61,3,0,144,61,3,0,208,60,3,0,208,60,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,184,61,3,0,184,61,3,0,224,61,3,0,224,61,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+182132);
/* memory initializer */ allocate([2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+192944);
/* memory initializer */ allocate([2,0,0,0,0,0,0,0,15,0,0,0,32,0,3,0,28,43,3,0,28,43,3,0,68,43,3,0,68,43,3,0,2,0,0,0,0,0,0,0,30,0,0,0,32,0,3,0,4,44,3,0,4,44,3,0,68,43,3,0,68,43,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,44,44,3,0,44,44,3,0,84,44,3,0,84,44,3,0,2,0,0,0,0,0,0,0,15,0,0,0,32,0,3,0,116,39,3,0,116,39,3,0,156,39,3,0,156,39,3,0,2,0,0,0,0,0,0,0,30,0,0,0,32,0,3,0,92,40,3,0,92,40,3,0,156,39,3,0,156,39,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,96,23,3,0,96,23,3,0,136,23,3,0,136,23,3,0,2,0,0,0,0,0,0,0,15,0,0,0,32,0,3,0,180,34,3,0,180,34,3,0,220,34,3,0,220,34,3,0,2,0,0,0,0,0,0,0,30,0,0,0,32,0,3,0,156,35,3,0,156,35,3,0,220,34,3,0,220,34,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,96,23,3,0,96,23,3,0,136,23,3,0,136,23,3,0,2,0,0,0,0,0,0,0,15,0,0,0,32,0,3,0,236,29,3,0,236,29,3,0,20,30,3,0,20,30,3,0,2,0,0,0,0,0,0,0,30,0,0,0,32,0,3,0,212,30,3,0,212,30,3,0,20,30,3,0,20,30,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,96,23,3,0,96,23,3,0,136,23,3,0,136,23,3,0,2,0,0,0,0,0,0,0,15,0,0,0,32,0,3,0,56,11,3,0,56,11,3,0,96,11,3,0,96,11,3,0,2,0,0,0,0,0,0,0,30,0,0,0,32,0,3,0,32,12,3,0,32,12,3,0,96,11,3,0,96,11,3,0,1,0,0,0,2,0,0,0,6,0,0,0,72,12,3,0,96,23,3,0,96,23,3,0,136,23,3,0,136,23,3,0,0,0,0,0,255,255,255,255,255,255,255,255,8,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+196152);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,28,171,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,26,3,0,0,0,0,0,0,0,0,0,84,26,3,0,0,0,0,0,0,0,0,0,124,26,3,0,164,26,3,0,0,0,0,0,0,0,0,0,204,26,3,0,244,26,3,0,0,0,0,0,0,0,0,0,28,27,3,0,68,27,3,0,0,0,0,0,0,0,0,0,108,27,3,0,148,27,3,0,68,27,3,0,0,0,0,0,188,27,3,0,228,27,3,0,12,28,3,0,52,28,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,32,104,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,2,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+198964);
/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE+202072);
/* memory initializer */ allocate([1,0,0,0,1,0,0,0,2,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,99,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,66,152,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,64,3,0,0,0,0,0,0,0,0,0,172,64,3,0,0,0,0,0,0,0,0,0,212,64,3,0,252,64,3,0,0,0,0,0,0,0,0,0,36,65,3,0,76,65,3,0,0,0,0,0,0,0,0,0,116,65,3,0,156,65,3,0,0,0,0,0,0,0,0,0,196,65,3,0,236,65,3,0,156,65,3,0,0,0,0,0,20,66,3,0,60,66,3,0,24,63,3,0,64,63,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,196,107,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,192,107,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,62,3,0,200,62,3,0,0,0,0,0,0,0,0,0,240,62,3,0,24,63,3,0,64,63,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,23,107,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,80,64,3,0,0,0,0,0,2,0,0,0,25,0,0,0,254,106,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,60,64,3,0,0,0,0,0,2,0,0,0,9,0,0,0,245,106,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,48,64,3,0,0,0,0,0,1,0,0,0,25,0,0,0,220,106,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,204,63,3,0,0,0,0,0,1,0,0,0,25,0,0,0,195,106,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,104,63,3,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,79,151,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,16,67,3,0,0,0,0,0,5,0,0,0,53,12,0,0,26,139,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,252,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,39,138,7,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,240,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,52,137,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,228,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,65,136,7,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,216,66,3,0,0,0,0,0,5,0,0,0,53,12,0,0,12,124,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,196,66,3,0,0,0,0,0,5,0,0,0,53,12,0,0,215,111,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,176,66,3,0,0,0,0,0,1,0,0,0,7,0,0,0,208,111,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,148,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,221,110,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,136,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,234,109,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,124,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,247,108,7,0,1,0,0,0,0,76,93,225,0,76,93,97,2,0,0,0,0,0,0,0,112,66,3,0,0,0,0,0,5,0,0,0,243,0,0,0,4,108,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,100,66,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,1,198,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,70,3,0,0,0,0,0,0,0,0,0,32,71,3,0,0,0,0,0,0,0,0,0,72,71,3,0,112,71,3,0,0,0,0,0,0,0,0,0,152,71,3,0,192,71,3,0,0,0,0,0,0,0,0,0,232,71,3,0,16,72,3,0,0,0,0,0,0,0,0,0,56,72,3,0,96,72,3,0,16,72,3,0,0,0,0,0,136,72,3,0,176,72,3,0,140,69,3,0,180,69,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,131,153,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,127,153,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,69,3,0,60,69,3,0,0,0,0,0,0,0,0,0,100,69,3,0,140,69,3,0,180,69,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,214,152,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,196,70,3,0,0,0,0,0,2,0,0,0,25,0,0,0,189,152,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,176,70,3,0,0,0,0,0,2,0,0,0,9,0,0,0,180,152,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,164,70,3,0,0,0,0,0,1,0,0,0,25,0,0,0,155,152,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,64,70,3,0,0,0,0,0,1,0,0,0,25,0,0,0,130,152,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,220,69,3,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,14,197,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,132,73,3,0,0,0,0,0,5,0,0,0,53,12,0,0,217,184,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,112,73,3,0,0,0,0,0,5,0,0,0,243,0,0,0,230,183,7,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,100,73,3,0,0,0,0,0,5,0,0,0,243,0,0,0,243,182,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,88,73,3,0,0,0,0,0,5,0,0,0,243,0,0,0,0,182,7,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,76,73,3,0,0,0,0,0,5,0,0,0,53,12,0,0,203,169,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,56,73,3,0,0,0,0,0,5,0,0,0,53,12,0,0,150,157,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,36,73,3,0,0,0,0,0,1,0,0,0,7,0,0,0,143,157,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,8,73,3,0,0,0,0,0,5,0,0,0,243,0,0,0,156,156,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,252,72,3,0,0,0,0,0,5,0,0,0,243,0,0,0,169,155,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,240,72,3,0,0,0,0,0,5,0,0,0,243,0,0,0,182,154,7,0,1,0,0,0,0,76,93,225,0,76,93,97,2,0,0,0,0,0,0,0,228,72,3,0,0,0,0,0,5,0,0,0,243,0,0,0,195,153,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,216,72,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,64,0,0,0,192,243,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,108,77,3,0,0,0,0,0,0,0,0,0,148,77,3,0,0,0,0,0,0,0,0,0,188,77,3,0,228,77,3,0,0,0,0,0,0,0,0,0,12,78,3,0,52,78,3,0,0,0,0,0,0,0,0,0,92,78,3,0,132,78,3,0,0,0,0,0,0,0,0,0,172,78,3,0,212,78,3,0,132,78,3,0,0,0,0,0,252,78,3,0,36,79,3,0,0,76,3,0,40,76,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,64,0,0,0,66,199,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,62,199,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,75,3,0,176,75,3,0,0,0,0,0,0,0,0,0,216,75,3,0,0,76,3,0,40,76,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,149,198,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,56,77,3,0,0,0,0,0,2,0,0,0,25,0,0,0,124,198,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,36,77,3,0,0,0,0,0,2,0,0,0,9,0,0,0,115,198,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,24,77,3,0,0,0,0,0,1,0,0,0,25,0,0,0,90,198,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,180,76,3,0,0,0,0,0,1,0,0,0,25,0,0,0,65,198,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,80,76,3,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,205,242,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,248,79,3,0,0,0,0,0,5,0,0,0,53,12,0,0,152,230,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,228,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,165,229,7,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,216,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,178,228,7,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,204,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,191,227,7,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,192,79,3,0,0,0,0,0,5,0,0,0,53,12,0,0,138,215,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,172,79,3,0,0,0,0,0,5,0,0,0,53,12,0,0,85,203,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,152,79,3,0,0,0,0,0,1,0,0,0,7,0,0,0,78,203,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,124,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,91,202,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,112,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,104,201,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,100,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,117,200,7,0,1,0,0,0,0,76,93,225,0,76,93,97,2,0,0,0,0,0,0,0,88,79,3,0,0,0,0,0,5,0,0,0,243,0,0,0,130,199,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,76,79,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,7,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+211620);
/* memory initializer */ allocate([1,0,0,0,2,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,0,0,0,7,0,0,0,17,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,49,0,0,0,72,20,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,94,3,0,0,0,0,0,0,0,0,0,32,95,3,0,72,95,3,0,0,0,0,0,0,0,0,0,112,95,3,0,152,95,3,0,0,0,0,0,0,0,0,0,192,95,3,0,232,95,3,0,0,0,0,0,0,0,0,0,16,96,3,0,56,96,3,0,232,95,3,0,0,0,0,0,96,96,3,0,140,93,3,0,180,93,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,49,0,0,0,1,245,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,253,244,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,93,3,0,60,93,3,0,0,0,0,0,0,0,0,0,100,93,3,0,140,93,3,0,180,93,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,84,244,7,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,196,94,3,0,0,0,0,0,2,0,0,0,25,0,0,0,59,244,7,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,176,94,3,0,0,0,0,0,2,0,0,0,9,0,0,0,50,244,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,164,94,3,0,0,0,0,0,1,0,0,0,25,0,0,0,25,244,7,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,64,94,3,0,0,0,0,0,1,0,0,0,25,0,0,0,0,244,7,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,220,93,3,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,85,19,8,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,20,97,3,0,0,0,0,0,5,0,0,0,243,0,0,0,98,18,8,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,8,97,3,0,0,0,0,0,5,0,0,0,243,0,0,0,111,17,8,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,252,96,3,0,0,0,0,0,5,0,0,0,243,0,0,0,124,16,8,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,240,96,3,0,0,0,0,0,5,0,0,0,53,12,0,0,71,4,8,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,220,96,3,0,0,0,0,0,5,0,0,0,53,12,0,0,18,248,7,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,200,96,3,0,0,0,0,0,1,0,0,0,7,0,0,0,11,248,7,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,172,96,3,0,0,0,0,0,5,0,0,0,243,0,0,0,24,247,7,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,160,96,3,0,0,0,0,0,5,0,0,0,243,0,0,0,37,246,7,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,148,96,3,0,0,0,0,0,5,0,0,0,243,0,0,0,50,245,7,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,136,96,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,49,0,0,0,193,52,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,100,3,0,0,0,0,0,0,0,0,0,36,101,3,0,76,101,3,0,0,0,0,0,0,0,0,0,116,101,3,0,156,101,3,0,0,0,0,0,0,0,0,0,196,101,3,0,236,101,3,0,0,0,0,0,0,0,0,0,20,102,3,0,60,102,3,0,236,101,3,0,0,0,0,0,100,102,3,0,144,99,3,0,184,99,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,49,0,0,0,122,21,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,118,21,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,99,3,0,64,99,3,0,0,0,0,0,0,0,0,0,104,99,3,0,144,99,3,0,184,99,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,205,20,8,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,200,100,3,0,0,0,0,0,2,0,0,0,25,0,0,0,180,20,8,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,180,100,3,0,0,0,0,0,2,0,0,0,9,0,0,0,171,20,8,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,168,100,3,0,0,0,0,0,1,0,0,0,25,0,0,0,146,20,8,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,68,100,3,0,0,0,0,0,1,0,0,0,25,0,0,0,121,20,8,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,224,99,3,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,206,51,8,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,24,103,3,0,0,0,0,0,5,0,0,0,243,0,0,0,219,50,8,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,12,103,3,0,0,0,0,0,5,0,0,0,243,0,0,0,232,49,8,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,0,103,3,0,0,0,0,0,5,0,0,0,243,0,0,0,245,48,8,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,244,102,3,0,0,0,0,0,5,0,0,0,53,12,0,0,192,36,8,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,224,102,3,0,0,0,0,0,5,0,0,0,53,12,0,0,139,24,8,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,204,102,3,0,0,0,0,0,1,0,0,0,7,0,0,0,132,24,8,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,176,102,3,0,0,0,0,0,5,0,0,0,243,0,0,0,145,23,8,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,164,102,3,0,0,0,0,0,5,0,0,0,243,0,0,0,158,22,8,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,152,102,3,0,0,0,0,0,5,0,0,0,243,0,0,0,171,21,8,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,140,102,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,49,0,0,0,58,85,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,107,3,0,0,0,0,0,0,0,0,0,40,107,3,0,80,107,3,0,0,0,0,0,0,0,0,0,120,107,3,0,160,107,3,0,0,0,0,0,0,0,0,0,200,107,3,0,240,107,3,0,0,0,0,0,0,0,0,0,24,108,3,0,64,108,3,0,240,107,3,0,0,0,0,0,104,108,3,0,148,105,3,0,188,105,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,49,0,0,0,243,53,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,4,0,0,0,239,53,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,105,3,0,68,105,3,0,0,0,0,0,0,0,0,0,108,105,3,0,148,105,3,0,188,105,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,169,0,0,0,70,53,8,0,1,0,0,0,0,0,158,224,0,0,84,96,4,0,0,0,0,0,0,0,204,106,3,0,0,0,0,0,2,0,0,0,25,0,0,0,45,53,8,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,184,106,3,0,0,0,0,0,2,0,0,0,9,0,0,0,36,53,8,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,172,106,3,0,0,0,0,0,1,0,0,0,25,0,0,0,11,53,8,0,1,0,0,0,0,192,18,225,0,0,153,96,5,0,0,0,0,0,0,0,72,106,3,0,0,0,0,0,1,0,0,0,25,0,0,0,242,52,8,0,1,0,0,0,0,0,120,224,0,0,16,96,5,0,0,0,0,0,0,0,228,105,3,0,0,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,12,0,0,0,11,0,0,0,13,0,0,0,10,0,0,0,14,0,0,0,9,0,0,0,15,0,0,0,8,0,0,0,16,0,0,0,7,0,0,0,17,0,0,0,6,0,0,0,18,0,0,0,5,0,0,0,19,0,0,0,4,0,0,0,20,0,0,0,3,0,0,0,21,0,0,0,2,0,0,0,22,0,0,0,1,0,0,0,23,0,0,0,0,0,0,0,24,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,6,0,0,0,5,0,0,0,7,0,0,0,4,0,0,0,8,0,0,0,3,0,0,0,9,0,0,0,2,0,0,0,10,0,0,0,1,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,5,0,0,0,243,0,0,0,71,84,8,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,28,109,3,0,0,0,0,0,5,0,0,0,243,0,0,0,84,83,8,0,1,0,0,0,0,0,56,224,0,0,56,96,2,0,0,0,0,0,0,0,16,109,3,0,0,0,0,0,5,0,0,0,243,0,0,0,97,82,8,0,1,0,0,0,0,0,16,224,0,0,16,96,2,0,0,0,0,0,0,0,4,109,3,0,0,0,0,0,5,0,0,0,243,0,0,0,110,81,8,0,1,0,0,0,0,0,84,224,0,0,84,96,2,0,0,0,0,0,0,0,248,108,3,0,0,0,0,0,5,0,0,0,53,12,0,0,57,69,8,0,1,0,0,0,0,0,48,224,0,0,16,96,3,0,0,0,0,0,0,0,228,108,3,0,0,0,0,0,5,0,0,0,53,12,0,0,4,57,8,0,1,0,0,0,0,0,124,224,0,0,92,96,3,0,0,0,0,0,0,0,208,108,3,0,0,0,0,0,1,0,0,0,7,0,0,0,253,56,8,0,1,0,0,0,0,0,56,224,0,0,16,96,3,0,0,0,0,0,0,0,180,108,3,0,0,0,0,0,5,0,0,0,243,0,0,0,10,56,8,0,1,0,0,0,0,0,149,224,0,0,149,96,2,0,0,0,0,0,0,0,168,108,3,0,0,0,0,0,5,0,0,0,243,0,0,0,23,55,8,0,1,0,0,0,0,0,92,224,0,0,92,96,2,0,0,0,0,0,0,0,156,108,3,0,0,0,0,0,5,0,0,0,243,0,0,0,36,54,8,0,1,0,0,0,0,136,51,225,0,136,51,97,2,0,0,0,0,0,0,0,144,108,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,2,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,6,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,2,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,164,87,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,105,112,104,46,79,114,103,32,108,105,98,86,111,114,98,105,115,32,73,32,50,48,49,53,48,49,48,53,32,40,226,155,132,226,155,132,226,155,132,226,155,132,41,0,2,5,4,6,6,8,8,8,8,8,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,8,9,9,9,9,9,9,9,9,9,7,7,7,8,8,9,9,9,9,9,9,9,9,9,10,10,9,7,7,7,8,8,9,9,9,9,9,9,9,9,9,9,10,10,8,8,8,9,9,9,9,10,10,10,9,10,10,10,10,10,10,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,9,9,7,7,8,8,10,10,11,11,4,7,7,9,9,10,10,8,8,10,10,10,11,10,11,4,7,7,9,9,10,10,8,8,10,9,11,11,11,11,7,9,9,12,12,11,12,10,10,11,10,12,11,11,11,7,9,9,11,11,13,12,9,9,11,10,11,11,12,11,9,10,10,12,12,14,14,10,10,11,12,12,11,11,11,9,10,11,11,13,14,13,10,11,11,11,12,11,12,12,7,8,8,10,9,11,10,11,12,12,11,12,14,12,13,7,8,8,9,10,10,11,12,12,12,11,12,12,12,13,9,9,9,11,11,13,12,12,12,12,11,12,12,13,12,8,10,10,11,10,11,12,12,12,12,12,12,14,12,12,9,11,11,11,12,12,12,12,13,13,12,12,13,13,12,10,11,11,12,11,12,12,12,11,12,13,12,12,12,13,11,11,12,12,12,13,12,12,11,12,13,13,12,12,13,12,11,12,12,13,13,12,13,12,13,13,13,13,14,13,1,4,4,11,11,11,11,11,11,11,11,11,11,11,11,3,11,8,11,11,11,11,11,11,11,11,11,11,11,11,3,9,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,5,5,6,6,7,7,7,7,8,8,5,6,6,7,7,7,7,8,8,8,8,5,6,6,7,7,7,7,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,7,8,8,8,8,8,8,9,8,9,9,8,8,8,8,8,8,8,9,9,9,9,8,8,8,8,8,8,8,9,9,9,9,1,4,4,6,6,8,8,10,10,11,11,4,6,6,7,7,9,9,11,11,13,12,4,6,6,7,7,9,9,11,11,12,12,6,7,7,9,9,11,11,12,12,13,13,6,7,7,9,9,11,11,12,12,13,13,8,9,9,11,11,12,12,13,13,14,14,8,9,9,11,11,12,12,13,13,14,14,9,11,11,12,12,13,13,14,14,15,15,9,11,11,12,12,13,13,14,14,15,14,11,12,12,13,13,14,14,15,15,16,16,11,12,12,13,13,14,14,15,15,15,15,2,4,4,6,6,7,7,8,8,8,8,4,5,5,7,7,8,8,9,9,9,9,4,5,5,7,7,8,8,9,9,9,9,6,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,1,4,4,5,7,7,5,7,7,5,9,9,8,10,10,8,10,10,5,9,9,7,10,10,8,10,10,4,10,10,9,12,12,9,11,11,7,12,11,10,11,13,10,13,13,7,12,12,10,13,12,10,13,13,4,10,10,9,12,12,9,12,12,7,12,12,10,13,13,10,12,13,7,11,12,10,13,13,10,13,11,3,4,4,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,4,4,4,6,6,7,7,9,9,6,6,6,7,7,8,8,9,9,6,6,6,7,7,8,8,9,9,7,7,7,8,8,8,9,10,10,7,7,7,8,8,9,8,10,10,9,9,9,9,9,10,10,10,10,9,9,9,9,9,10,10,10,10,1,4,4,7,7,7,7,9,9,4,6,5,8,7,8,8,10,10,4,6,6,8,8,8,8,10,10,7,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,8,8,8,9,9,10,10,12,11,8,8,8,9,9,10,10,11,11,9,10,10,11,11,11,11,13,12,9,10,10,11,11,12,12,12,13,4,5,5,9,9,6,7,7,9,9,6,7,7,9,9,9,9,9,11,11,9,9,9,11,11,6,7,7,9,9,7,7,8,9,10,7,7,8,9,10,9,9,10,10,11,9,9,10,10,12,6,7,7,9,9,7,8,7,10,9,7,8,7,10,9,9,10,9,12,11,10,10,9,12,10,9,10,10,12,11,9,10,10,12,11,9,10,10,12,12,11,11,12,12,13,11,11,12,12,13,9,9,10,12,11,9,10,10,12,12,10,10,10,12,12,11,12,11,13,12,11,12,11,13,12,6,7,7,9,9,7,8,8,10,10,7,8,7,10,9,10,10,10,12,12,10,10,10,12,11,7,8,7,10,10,7,7,9,10,11,8,9,9,11,10,10,10,11,10,12,10,10,11,12,12,7,8,8,10,10,7,9,8,11,10,8,8,9,11,11,10,11,10,12,11,10,11,11,12,12,9,10,10,12,12,9,10,10,12,12,10,11,11,13,12,11,10,12,10,14,12,12,12,13,14,9,10,10,12,12,9,11,10,12,12,10,11,11,12,12,11,12,11,14,12,12,12,12,14,14,5,7,7,9,9,7,7,7,9,10,7,8,8,10,10,10,10,10,11,11,10,10,10,12,12,7,8,8,10,10,8,9,8,11,10,7,8,9,10,11,10,10,10,11,12,10,10,11,11,13,6,7,8,10,10,8,9,9,10,10,7,9,7,11,10,10,11,10,12,12,10,11,10,12,10,9,10,10,12,12,10,11,11,13,12,9,10,10,12,12,12,12,12,14,13,11,11,12,11,14,9,10,10,11,12,10,11,11,12,13,9,10,10,12,12,12,12,12,14,13,11,12,10,14,11,9,9,10,11,12,9,10,10,12,12,9,10,10,12,12,12,12,12,14,14,11,12,12,13,12,9,10,9,12,12,9,10,11,12,13,10,11,10,13,11,12,12,13,13,14,12,12,12,13,13,9,10,10,12,12,10,11,10,13,12,10,10,11,12,13,12,13,12,14,13,12,12,12,13,14,11,12,11,14,13,10,10,11,13,13,12,12,12,14,13,12,10,14,10,15,13,14,14,14,14,11,11,12,13,14,10,12,11,13,13,12,12,12,13,15,12,13,11,15,12,13,13,14,14,14,9,10,9,12,12,9,10,10,12,12,10,10,10,12,12,11,11,12,12,13,12,12,12,14,14,9,10,10,12,12,10,11,10,13,12,10,10,11,12,13,12,12,12,14,13,12,12,13,13,14,9,10,10,12,13,10,10,11,11,12,9,11,10,13,12,12,12,12,13,14,12,13,12,14,13,11,12,11,13,13,12,13,12,14,13,10,11,12,13,13,13,13,13,14,15,12,11,14,12,14,11,11,12,12,13,12,12,12,13,14,10,12,10,14,13,13,13,13,14,15,12,14,11,15,10,1,5,5,7,7,6,7,7,9,9,6,7,7,9,9,8,10,9,11,11,9,9,9,11,11,6,8,8,10,10,8,10,10,11,11,8,9,10,11,11,10,11,11,12,12,10,11,11,12,13,6,8,8,10,10,8,10,9,11,11,8,10,9,11,11,10,11,11,12,12,10,11,11,12,12,9,11,11,14,13,10,12,11,14,14,10,12,11,14,13,12,13,13,15,14,12,13,13,15,14,8,11,11,13,14,10,11,12,13,15,10,11,12,14,14,12,13,13,14,15,12,13,13,14,15,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,13,11,12,12,13,14,8,10,10,12,12,9,11,12,13,14,10,12,12,13,13,12,12,13,14,14,11,13,13,15,15,7,10,10,12,12,9,12,11,14,12,10,11,12,13,14,12,13,12,14,14,12,13,13,15,16,10,12,12,15,14,11,12,13,15,15,11,13,13,15,16,14,14,15,15,16,13,14,15,17,15,9,12,12,14,15,11,13,12,15,15,11,13,13,15,15,13,14,13,15,14,13,14,14,17,0,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,7,10,10,12,12,10,12,12,13,13,9,11,12,12,13,11,12,13,15,15,11,12,13,14,15,8,10,10,12,12,10,12,11,13,13,10,12,11,13,13,11,13,13,15,14,12,13,12,15,13,9,12,12,14,14,11,13,13,16,15,11,12,13,16,15,13,14,15,16,16,13,13,15,15,16,10,12,12,15,14,11,13,13,14,16,11,13,13,15,16,13,15,15,16,17,13,15,14,16,15,8,11,11,14,15,10,12,12,15,15,10,12,12,15,16,14,15,15,16,17,13,14,14,16,16,9,12,12,15,15,11,13,14,15,17,11,13,13,15,16,14,15,16,19,17,13,15,15,0,17,9,12,12,15,15,11,14,13,16,15,11,13,13,15,16,15,15,15,18,17,13,15,15,17,17,11,15,14,18,16,12,14,15,17,17,12,15,15,18,18,15,15,16,15,19,14,16,16,0,0,11,14,14,16,17,12,15,14,18,17,12,15,15,18,18,15,17,15,18,16,14,16,16,18,18,7,11,11,14,14,10,12,12,15,15,10,12,13,15,15,13,14,15,16,16,14,15,15,18,18,9,12,12,15,15,11,13,13,16,15,11,12,13,16,16,14,15,15,17,16,15,16,16,17,17,9,12,12,15,15,11,13,13,15,17,11,14,13,16,15,13,15,15,17,17,15,15,15,18,17,11,14,14,17,15,12,14,15,17,18,13,13,15,17,17,14,16,16,19,18,16,15,17,17,0,11,14,14,17,17,12,15,15,18,0,12,15,14,18,16,14,17,17,19,0,16,18,15,0,16,3,4,5,5,6,6,5,6,6,5,7,6,6,7,8,6,7,8,5,6,6,6,8,7,6,8,7,5,6,6,7,8,8,6,7,7,6,8,7,7,7,9,8,9,9,6,7,8,7,9,7,8,9,9,5,6,6,6,7,7,7,8,8,6,8,7,8,9,9,7,7,9,6,7,8,8,9,9,7,9,7,1,4,4,5,7,7,5,7,7,5,8,8,7,9,10,7,9,9,5,8,8,7,10,9,7,9,9,5,8,8,8,10,10,8,10,10,7,10,10,9,10,12,10,12,12,7,10,10,9,12,11,10,12,12,5,8,8,8,10,10,8,10,10,7,10,10,10,12,12,9,11,12,7,10,10,10,12,12,9,12,10,4,7,13,9,15,9,16,8,10,13,7,5,8,6,9,7,10,7,10,11,11,6,7,8,8,9,9,9,12,16,8,5,8,6,8,6,9,7,10,12,11,7,7,7,6,7,7,7,11,15,7,5,8,6,7,5,7,6,9,13,13,9,9,8,6,6,5,5,9,14,8,6,8,6,6,4,5,3,5,13,9,9,11,8,10,7,8,4,5,12,11,16,17,15,17,12,13,8,8,15,1,6,5,7,7,9,9,9,9,10,12,12,10,11,11,10,11,11,11,10,11,6,8,8,9,9,10,10,9,10,11,11,10,11,11,11,11,10,11,11,11,11,6,7,8,9,9,9,10,11,10,11,12,11,10,11,11,11,11,11,11,12,10,8,9,9,10,9,10,10,9,10,10,10,10,10,9,10,10,10,10,9,10,10,9,9,9,9,10,10,9,9,10,10,11,10,9,12,10,11,10,9,10,10,10,8,9,9,10,9,10,9,9,10,10,9,10,9,11,10,10,10,10,10,9,10,8,8,9,9,10,9,11,9,8,9,9,10,11,10,10,10,11,12,9,9,11,8,9,8,11,10,11,10,10,9,11,10,10,10,10,10,10,10,11,11,11,11,8,9,9,9,10,10,10,11,11,12,11,12,11,10,10,10,12,11,11,11,10,8,10,9,11,10,10,11,12,10,11,12,11,11,12,11,12,12,10,11,11,10,9,9,10,11,12,10,10,10,11,10,11,11,10,12,12,10,11,10,11,12,10,9,10,10,11,10,11,11,11,11,11,12,11,11,11,9,11,10,11,10,11,10,9,9,10,11,11,11,10,10,11,12,12,11,12,11,11,11,12,12,12,12,11,9,11,11,12,10,11,11,11,11,11,11,12,11,11,12,11,11,11,10,11,11,9,11,10,11,11,11,10,10,10,11,11,11,12,10,11,10,11,11,11,11,12,9,11,10,11,11,10,10,11,11,9,11,11,12,10,10,10,10,10,11,11,10,9,10,11,11,12,11,10,10,12,11,11,12,11,12,11,11,10,10,11,11,10,12,11,10,11,10,11,10,10,10,11,11,10,10,11,11,11,11,10,10,10,12,11,11,11,11,10,9,10,11,11,11,12,11,11,11,12,10,11,11,11,9,10,11,11,11,11,11,11,10,10,11,11,12,11,10,11,12,11,10,10,11,9,10,11,11,11,11,11,10,11,11,10,12,11,11,11,12,11,11,11,10,10,11,11,1,5,5,5,5,10,10,11,11,11,11,11,11,11,11,5,7,6,8,8,9,10,11,11,11,11,11,11,11,11,6,6,7,9,7,11,10,11,11,11,11,11,11,11,11,5,6,6,11,8,11,11,11,11,11,11,11,11,11,11,5,6,6,9,10,11,10,11,11,11,11,11,11,11,11,7,10,10,11,11,11,11,11,11,11,11,11,11,11,11,7,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,6,6,4,6,5,7,7,4,5,6,7,7,6,7,7,7,7,6,7,7,7,7,1,4,4,7,7,9,9,11,11,12,12,16,16,3,6,6,9,9,11,11,12,12,13,14,18,16,3,6,7,9,9,11,11,13,12,14,14,17,16,7,9,9,11,11,12,12,14,14,14,14,17,16,7,9,9,11,11,13,12,13,13,14,14,17,0,9,11,11,12,13,14,14,14,13,15,14,17,17,9,11,11,12,12,14,14,13,14,14,15,0,0,11,12,12,15,14,15,14,15,14,15,16,17,0,11,12,13,13,13,14,14,15,14,15,15,0,0,12,14,14,15,15,14,16,15,15,17,16,0,18,13,14,14,15,14,15,14,15,16,17,16,0,0,17,17,18,0,16,18,16,0,0,0,17,0,0,16,0,0,16,16,0,15,0,17,0,0,0,0,1,4,4,7,7,7,7,9,9,4,6,6,8,7,8,8,10,10,4,6,6,8,8,8,8,10,10,6,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,7,8,8,9,9,10,10,12,11,7,8,8,9,9,10,10,11,11,9,10,10,11,11,11,12,12,12,9,10,10,11,11,12,12,12,12,3,5,5,8,8,5,6,7,9,9,6,7,6,9,9,9,9,9,10,11,9,9,9,11,10,6,7,7,10,10,7,7,8,10,10,7,8,8,10,10,10,10,10,10,11,9,10,10,11,12,6,7,7,10,10,7,8,8,10,10,7,8,7,10,10,9,10,10,12,11,10,10,10,11,10,9,10,10,12,11,10,10,10,13,11,9,10,10,12,12,11,11,12,12,13,11,11,11,12,13,9,10,10,12,12,10,10,11,12,12,10,10,11,12,12,11,11,11,13,13,11,12,12,13,13,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,11,11,12,12,10,11,10,12,12,7,8,8,11,11,7,8,9,10,11,8,9,9,11,11,11,10,11,10,12,10,11,11,12,13,7,8,8,10,11,8,9,8,12,10,8,9,9,11,12,10,11,10,13,11,10,11,11,13,12,9,11,10,13,12,10,10,11,12,12,10,11,11,13,13,12,10,13,11,14,11,12,12,15,13,9,11,11,13,13,10,11,11,13,12,10,11,11,12,14,12,13,11,14,12,12,12,12,14,14,5,7,7,10,10,7,8,8,10,10,7,8,8,11,10,10,11,11,12,12,10,11,10,12,12,7,8,8,10,11,8,9,9,12,11,8,8,9,10,11,10,11,11,12,13,11,10,11,11,13,6,8,8,10,11,8,9,9,11,11,7,9,7,11,10,10,11,11,12,12,10,11,10,13,10,9,11,10,13,12,10,12,11,13,13,10,10,11,12,13,11,12,13,15,14,11,11,13,12,13,9,10,11,12,13,10,11,11,12,13,10,11,10,13,12,12,13,13,13,14,12,12,11,14,11,8,10,10,12,13,10,11,11,13,13,10,11,10,13,13,12,13,14,15,14,12,12,12,14,13,9,10,10,13,12,10,10,12,13,13,10,11,11,15,12,12,12,13,15,14,12,13,13,15,13,9,10,11,12,13,10,12,10,13,12,10,11,11,12,13,12,14,12,15,13,12,12,12,15,14,11,12,11,14,13,11,11,12,14,14,12,13,13,14,13,13,11,15,11,15,14,14,14,16,15,11,12,12,13,14,11,13,11,14,14,12,12,13,14,15,12,14,12,15,12,13,15,14,16,15,8,10,10,12,12,10,10,10,12,13,10,11,11,13,13,12,12,12,13,14,13,13,13,15,15,9,10,10,12,12,10,11,11,13,12,10,10,11,13,13,12,12,12,14,14,12,12,13,15,14,9,10,10,13,12,10,10,12,12,13,10,11,10,13,13,12,13,13,14,14,12,13,12,14,13,11,12,12,14,13,12,13,12,14,14,10,12,12,14,14,14,14,14,16,14,13,12,14,12,15,10,12,12,14,15,12,13,13,14,16,11,12,11,15,14,13,14,14,14,15,13,14,11,14,12,1,5,5,7,7,6,7,7,9,9,6,7,7,9,9,8,10,9,11,11,8,9,9,11,11,6,8,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,12,12,10,11,11,12,13,6,8,8,10,10,8,10,10,11,11,8,10,10,11,11,9,10,11,12,12,10,11,11,12,12,8,11,11,14,13,10,12,11,15,13,10,12,11,14,14,12,13,12,16,14,12,14,12,16,15,8,11,11,13,14,10,11,12,13,15,10,11,12,13,15,11,12,13,14,15,12,12,14,14,16,5,8,8,11,11,9,11,11,12,12,8,10,11,12,12,11,12,12,15,14,11,12,12,14,14,7,11,10,13,12,10,11,12,13,14,10,12,12,14,13,12,13,13,14,15,12,13,13,15,15,7,10,11,12,13,10,12,11,14,13,10,12,13,13,15,12,13,12,14,14,11,13,13,15,16,9,12,12,15,14,11,13,13,15,16,11,13,13,16,16,13,14,15,15,15,12,14,15,17,16,9,12,12,14,15,11,13,13,15,16,11,13,13,16,18,13,14,14,17,16,13,15,15,17,18,5,8,9,11,11,8,11,11,12,12,8,10,11,12,12,11,12,12,14,14,11,12,12,14,15,7,11,10,12,13,10,12,12,14,13,10,11,12,13,14,11,13,13,15,14,12,13,13,14,15,7,10,11,13,13,10,12,12,13,14,10,12,12,13,13,11,13,13,16], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+219416);
/* memory initializer */ allocate([16,12,13,13,15,14,9,12,12,16,15,10,13,13,15,15,11,13,13,17,15,12,15,15,18,17,13,14,14,15,16,9,12,12,15,15,11,13,13,15,16,11,13,13,15,15,12,15,15,16,16,13,15,14,17,15,7,11,11,15,15,10,13,13,16,15,10,13,13,15,16,14,15,15,17,19,13,15,14,15,18,9,12,12,16,16,11,13,14,17,16,11,13,13,17,16,15,15,16,17,19,13,15,16,0,18,9,12,12,16,15,11,14,13,17,17,11,13,14,16,16,15,16,16,19,18,13,15,15,17,19,11,14,14,19,16,12,14,15,0,18,12,16,15,18,17,15,15,18,16,19,14,15,17,19,19,11,14,14,18,19,13,15,14,19,19,12,16,15,18,17,15,17,15,0,16,14,17,16,19,0,7,11,11,14,14,10,12,12,15,15,10,13,13,16,15,13,15,15,17,0,14,15,15,16,19,9,12,12,16,16,11,14,14,16,16,11,13,13,16,16,14,17,16,19,0,14,18,17,17,19,9,12,12,15,16,11,13,13,15,17,12,14,13,19,16,13,15,15,17,19,15,17,16,17,19,11,14,14,19,16,12,15,15,19,17,13,14,15,17,19,14,16,17,19,19,16,15,16,17,19,11,15,14,16,16,12,15,15,19,0,12,14,15,19,19,14,16,16,0,18,15,19,14,18,16,2,4,4,5,6,6,5,6,6,5,7,7,6,7,8,6,7,8,5,7,7,6,8,8,7,9,7,5,7,7,7,9,9,7,8,8,6,9,8,7,7,10,8,10,10,6,8,8,8,10,8,8,10,10,5,7,7,7,8,8,7,8,9,6,8,8,8,10,10,8,8,10,6,8,9,8,10,10,7,10,8,1,4,4,5,7,7,5,7,7,5,8,8,8,10,10,7,10,10,5,8,8,7,10,10,8,10,10,4,9,8,8,11,11,8,11,11,7,11,11,10,11,13,10,13,13,7,11,11,10,13,12,10,13,13,5,9,8,8,11,11,8,11,11,7,11,11,9,13,13,10,12,13,7,11,11,10,13,13,10,13,11,4,7,11,9,12,8,7,10,6,4,5,5,7,5,6,16,9,5,5,6,7,7,9,16,7,4,6,5,7,5,7,17,10,7,7,8,7,7,8,18,7,5,6,4,5,4,5,15,7,6,7,5,6,4,5,15,12,13,18,12,17,11,9,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,4,8,4,8,4,8,5,8,5,8,6,8,4,8,4,8,5,8,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,4,3,5,4,6,4,6,5,7,6,7,6,8,6,8,7,9,8,10,8,12,9,13,10,15,10,15,11,14,0,4,4,4,4,4,4,3,4,4,4,4,4,5,4,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,4,3,4,4,5,5,6,6,7,7,7,8,8,11,8,9,9,9,10,11,11,11,9,10,10,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,4,5,4,5,4,6,4,6,5,6,5,7,5,7,6,8,6,8,6,8,7,8,7,9,7,9,8,0,4,5,4,4,4,5,4,4,4,5,4,5,4,5,3,5,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,5,3,5,4,5,4,5,4,5,5,5,5,6,5,6,5,7,5,8,6,8,6,8,6,8,6,8,7,9,7,9,7,11,9,11,11,12,11,14,12,14,16,14,16,13,16,14,16,12,15,13,16,14,16,13,14,12,15,13,15,13,13,13,15,12,14,14,15,13,15,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,2,4,5,4,5,4,5,4,5,5,5,5,5,5,6,5,6,5,6,6,7,6,7,6,8,7,8,7,8,7,8,7,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,5,6,6,6,6,5,6,6,7,6,7,6,7,6,7,6,8,7,8,7,8,7,8,7,8,7,9,7,9,7,9,7,9,8,9,8,10,8,10,8,10,7,10,6,10,8,10,8,11,7,10,7,11,8,11,11,12,12,11,11,12,11,13,11,13,11,13,12,15,12,13,13,14,14,14,14,14,15,15,15,16,14,17,19,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,2,4,6,17,4,5,7,17,8,7,10,17,17,17,17,17,3,4,6,15,3,3,6,15,7,6,9,17,17,17,17,17,6,8,10,17,6,6,8,16,9,8,10,17,17,15,16,17,17,17,17,17,12,15,15,16,12,15,15,16,16,16,16,16,3,3,3,14,5,4,4,11,8,6,6,10,17,12,11,17,6,5,5,15,5,3,4,11,8,5,5,8,16,9,10,14,10,8,9,17,8,6,6,13,10,7,7,10,16,11,13,14,17,17,17,17,17,16,16,16,16,15,16,16,16,16,16,16,1,2,3,6,5,4,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,5,7,5,7,7,7,7,7,5,7,5,7,5,7,5,7,7,7,7,7,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,4,3,4,4,4,5,5,6,5,6,5,7,6,6,6,7,7,7,8,9,9,9,12,10,11,10,10,12,10,10,0,3,4,4,4,4,4,4,4,4,5,4,5,4,5,4,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,3,7,3,7,5,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,4,4,4,4,4,5,5,5,5,6,6,7,6,7,6,8,6,9,7,9,7,9,9,11,9,12,10,12,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,3,4,3,4,4,5,4,5,5,5,6,6,6,7,6,8,6,8,6,9,7,10,7,10,7,10,7,12,7,12,7,12,9,12,11,12,10,12,10,12,11,12,12,12,10,12,10,12,10,12,9,12,11,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,10,10,12,12,12,12,12,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,5,4,5,4,5,4,5,5,5,5,5,5,6,5,6,5,6,6,6,6,7,7,7,7,7,7,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,5,7,5,7,4,7,4,8,4,8,4,8,4,8,3,8,4,9,4,9,4,9,4,9,4,9,5,9,5,9,6,9,7,9,8,9,9,9,10,9,11,9,14,9,15,10,15,10,15,10,15,10,15,11,15,10,14,12,14,11,14,13,14,13,15,15,15,12,15,15,15,13,15,13,15,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,14,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,7,6,7,6,7,6,7,6,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,7,5,7,5,8,5,8,5,8,5,9,5,9,6,10,6,10,6,11,6,11,6,11,6,11,6,11,6,11,6,11,6,12,7,11,7,11,7,11,7,11,7,10,7,11,7,11,7,12,7,11,8,11,8,11,8,11,8,13,8,12,9,11,9,11,9,11,10,12,10,12,9,12,10,12,11,14,12,16,12,12,11,14,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,2,4,7,13,4,5,7,15,8,7,10,16,16,14,16,16,2,4,7,16,3,4,7,14,8,8,10,16,16,16,15,16,6,8,11,16,7,7,9,16,11,9,13,16,16,16,15,16,16,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,3,3,6,16,5,5,7,16,9,8,11,16,16,16,16,16,5,5,8,16,5,5,7,16,8,7,9,16,16,16,16,16,9,9,12,16,6,8,11,16,9,10,11,16,16,16,16,16,16,16,16,16,13,16,16,16,15,16,16,16,16,16,16,16,5,4,7,16,6,5,8,16,9,8,10,16,16,16,16,16,5,5,7,15,5,4,6,15,7,6,8,16,16,16,16,16,9,9,11,15,7,7,9,16,8,8,9,16,16,16,16,16,16,16,16,16,15,15,15,16,15,15,14,16,16,16,16,16,8,8,11,16,8,9,10,16,11,10,14,16,16,16,16,16,6,8,10,16,6,7,10,16,8,8,11,16,14,16,16,16,10,11,14,16,9,9,11,16,10,10,11,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,12,16,15,16,12,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,1,2,3,6,4,7,5,7,2,6,8,9,7,11,13,13,1,3,5,5,6,6,12,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,6,3,6,4,7,4,7,5,9,5,11,6,11,6,11,7,11,6,11,6,11,9,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,4,2,5,3,5,4,6,6,6,7,7,8,7,8,7,8,7,9,8,9,8,9,8,10,8,11,9,12,9,12,0,4,5,4,5,4,5,4,5,3,5,3,5,3,5,4,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,3,8,3,10,3,8,3,9,3,8,4,9,4,9,5,9,6,10,6,9,7,11,7,12,9,13,10,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,4,3,4,4,4,4,5,5,5,5,5,6,5,7,5,8,6,8,6,9,7,10,7,10,8,10,8,11,9,11,0,4,5,4,5,3,5,3,5,3,5,4,4,4,4,5,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,4,5,4,5,4,5,5,6,5,6,5,7,5,7,6,7,6,8,7,8,7,8,7,9,8,9,9,9,9,10,10,10,11,9,12,9,12,9,15,10,14,9,13,10,13,10,12,10,12,10,13,10,12,11,13,11,14,12,13,13,14,14,13,14,15,14,16,13,13,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,15,1,5,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,6,7,7,7,7,8,7,8,8,9,8,10,9,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,5,8,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,9,4,8,4,8,4,9,5,9,5,9,5,9,5,9,6,10,6,10,7,10,8,11,9,11,11,12,13,12,14,13,15,13,15,14,16,14,17,15,17,15,15,16,16,15,16,16,16,15,18,16,15,17,17,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,2,5,5,4,5,4,5,4,5,4,6,5,6,5,6,5,6,5,7,5,7,6,8,6,8,6,8,6,9,6,9,6,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,7,5,7,5,7,5,8,6,8,6,8,6,9,6,9,6,10,6,10,6,11,6,11,7,11,7,12,7,12,7,12,7,12,7,12,7,12,7,12,7,12,8,13,8,12,8,12,8,13,8,13,9,13,9,13,9,13,9,12,10,12,10,13,10,14,11,14,12,14,13,14,13,14,14,15,16,15,15,15,14,15,17,21,22,22,21,22,22,22,22,22,22,21,21,21,21,21,21,21,21,21,21,2,3,7,13,4,4,7,15,8,6,9,17,21,16,15,21,2,5,7,11,5,5,7,14,9,7,10,16,17,15,16,21,4,7,10,17,7,7,9,15,11,9,11,16,21,18,15,21,18,21,21,21,15,17,17,19,21,19,18,20,21,21,21,20,1,5,7,21,5,8,9,21,10,9,12,20,20,16,20,20,4,8,9,20,6,8,9,20,11,11,13,20,20,15,17,20,9,11,14,20,8,10,15,20,11,13,15,20,20,20,20,20,20,20,20,20,13,20,20,20,18,18,20,20,20,20,20,20,3,6,8,20,6,7,9,20,10,9,12,20,20,20,20,20,5,7,9,20,6,6,9,20,10,9,12,20,20,20,20,20,8,10,13,20,8,9,12,20,11,10,12,20,20,20,20,20,18,20,20,20,15,17,18,20,18,17,18,20,20,20,20,20,7,10,12,20,8,9,11,20,14,13,14,20,20,20,20,20,6,9,12,20,7,8,11,20,12,11,13,20,20,20,20,20,9,11,15,20,8,10,14,20,12,11,14,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,11,16,18,20,15,15,17,20,20,17,20,20,20,20,20,20,9,14,16,20,12,12,15,20,17,15,18,20,20,20,20,20,16,19,18,20,15,16,20,20,17,17,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,4,2,6,3,7,5,7,2,10,8,14,7,12,11,14,1,5,3,7,4,9,7,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,2,4,3,5,4,5,5,5,5,6,6,6,6,6,6,6,7,7,8,6,9,7,12,11,16,13,16,12,15,13,15,12,14,12,15,15,15,0,0,0,0,0,0,0,0,0,0,3,3,3,4,3,4,4,4,4,4,5,5,5,6,6,0,0,0,0,2,3,2,3,3,3,1,3,2,3,4,5,6,11,5,5,6,10,7,7,6,6,14,13,9,9,6,6,6,10,6,6,6,9,8,7,7,9,14,12,8,11,8,7,7,11,8,8,7,11,9,9,7,9,13,11,9,13,19,19,18,19,15,16,16,19,11,11,10,13,10,10,9,15,5,5,6,13,6,6,6,11,8,7,6,7,14,11,10,11,6,6,6,12,7,6,6,11,8,7,7,11,13,11,9,11,9,7,6,12,8,7,6,12,9,8,8,11,13,10,7,13,19,19,17,19,17,14,14,19,12,10,8,12,13,10,9,16,7,8,7,12,7,7,7,11,8,7,7,8,12,12,11,11,8,8,7,12,8,7,6,11,8,7,7,10,10,11,10,11,9,8,8,13,9,8,7,12,10,9,7,11,9,8,7,11,18,18,15,18,18,16,17,18,15,11,10,18,11,9,9,18,16,16,13,16,12,11,10,16,12,11,9,6,15,12,11,13,16,16,14,14,13,11,12,16,12,9,9,13,13,10,10,12,17,18,17,17,14,15,14,16,14,12,14,15,12,10,11,12,18,18,18,18,18,18,18,18,18,12,13,18,16,11,9,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,4,3,4,4,4,5,4,7,5,8,5,11,6,10,6,12,7,12,7,12,8,12,8,12,10,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,6,3,6,4,7,4,7,4,7,4,8,4,8,4,8,4,8,4,9,4,9,5,10,5,10,7,10,8,10,8,0,4,4,4,4,4,4,4,5,3,5,3,5,4,6,4,6,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,1,5,3,5,3,5,4,7,5,10,7,10,7,12,10,14,10,14,9,14,11,14,14,14,13,13,13,13,13,13,13,0,4,5,4,6,4,8,3,9,3,9,2,9,3,8,4,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,5,3,5,3,6,3,6,4,6,4,7,4,7,5,8,5,8,6,9,7,9,7,9,8,10,9,10,9,11,10,11,11,11,11,11,11,12,12,12,13,12,13,12,14,12,15,12,14,12,16,13,17,13,17,14,17,14,16,13,17,14,17,14,17,15,17,15,15,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,2,5,5,4,5,4,5,4,5,5,5,5,5,5,6,5,6,5,6,5,7,6,7,6,7,6,8,6,9,7,9,7,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,7,5,7,5,7,5,7,5,7,5,7,5,8,5,8,5,8,5,8,5,8,6,8,6,8,6,9,6,9,6,9,6,9,6,9,7,9,7,9,7,9,7,10,7,10,8,10,8,10,8,10,8,10,8,11,8,11,8,11,8,11,8,11,9,12,9,12,9,12,9,12,9,12,10,12,10,13,11,13,11,14,12,14,13,15,14,16,14,17,15,18,16,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,3,6,10,17,4,8,11,20,8,10,11,20,20,20,20,20,2,4,8,18,4,6,8,17,7,8,10,20,20,17,20,20,3,5,8,17,3,4,6,17,8,8,10,17,17,12,16,20,13,13,15,20,10,10,12,20,15,14,15,20,20,20,19,19,1,4,10,19,3,8,13,19,7,12,19,19,19,19,19,19,2,6,11,19,8,13,19,19,9,11,19,19,19,19,19,19,6,7,13,19,9,13,19,19,10,13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1,3,4,7,2,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,1,6,3,7,3,8,4,8,5,8,8,8,9,7,8,8,7,7,7,8,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,5,4,6,4,6,4,7,4,7,4,8,4,8,4,9,4,9,4,10,4,10,5,10,5,11,5,12,6,12,6,0,4,4,4,4,4,4,4,4,4,4,4,4,4,5,4,5,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,8,3,8,4,8,4,8,6,8,5,8,4,8,4,8,6,8,7,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,4,4,4,4,5,4,5,4,6,5,7,5,7,6,8,6,8,6,9,7,9,7,10,7,9,8,11,8,11,0,4,5,4,5,4,5,3,5,3,5,3,5,4,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,3,5,3,6,4,6,4,7,4,7,4,7,4,8,4,8,4,9,5,9,5,9,5,9,6,10,6,10,6,11,7,10,7,10,8,11,9,11,9,11,10,11,11,12,11,11,12,15,15,12,14,11,14,12,14,11,14,13,14,12,14,11,14,11,14,12,14,11,14,11,14,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,5,5,5,5,5,5,4,5,5,5,5,5,5,5,5,6,5,6,5,6,5,7,6,7,6,7,6,8,6,8,6,5,5,5,5,5,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,5,6,6,6,6,7,6,7,6,7,6,7,6,7,6,7,6,8,6,8,6,8,7,8,7,8,7,8,7,9,7,9,8,9,8,9,8,10,8,10,9,10,9,10,9,11,9,11,9,10,10,11,10,11,10,11,11,11,11,11,11,12,13,14,14,14,15,15,16,16,16,17,15,16,15,16,16,17,17,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,7,6,9,17,7,6,8,17,12,9,11,16,16,16,16,16,5,4,7,16,5,3,6,14,9,6,8,15,16,16,16,16,5,4,6,13,3,2,4,11,7,4,6,13,16,11,10,14,12,12,12,16,9,7,10,15,12,9,11,16,16,15,15,16,1,6,12,16,4,12,15,16,9,15,16,16,16,16,16,16,2,5,11,16,5,11,13,16,9,13,16,16,16,16,16,16,4,8,12,16,5,9,12,16,9,13,15,16,16,16,16,16,15,16,16,16,11,14,13,16,12,15,16,16,16,16,16,15,1,6,3,7,2,4,5,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,4,3,6,3,7,3,8,5,8,6,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,0,0,0,0,0,0,0,0,0,2,3,3,4,3,4,4,5,4,6,5,6,7,6,8,8,0,3,3,3,3,2,4,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,2,5,3,5,3,6,3,6,4,7,6,7,8,7,9,8,9,9,9,10,9,11,13,11,13,10,10,13,13,13,13,13,13,12,12,12,12,0,0,0,0,0,0,0,0,0,3,4,3,4,3,5,3,6,3,6,4,6,4,7,5,7,0,2,3,3,3,3,4,3,4,5,6,8,15,6,9,10,15,10,11,12,15,15,15,15,15,4,6,7,15,6,7,8,15,9,8,9,15,15,15,15,15,6,8,9,15,7,7,8,15,10,9,10,15,15,15,15,15,15,13,15,15,15,10,11,15,15,13,13,15,15,15,15,15,4,6,7,15,6,8,9,15,10,10,12,15,15,15,15,15,2,5,6,15,5,6,7,15,8,6,7,15,15,15,15,15,5,6,8,15,5,6,7,15,9,6,7,15,15,15,15,15,14,12,13,15,12,10,11,15,15,15,15,15,15,15,15,15,7,8,9,15,9,10,10,15,15,14,14,15,15,15,15,15,5,6,7,15,7,8,9,15,12,9,10,15,15,15,15,15,7,7,9,15,7,7,8,15,12,8,9,15,15,15,15,15,13,13,14,15,12,11,12,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,13,13,13,15,15,15,15,15,15,15,15,15,15,15,15,15,15,12,13,15,15,12,13,15,15,14,15,15,15,15,15,15,15,15,15,15,15,15,13,15,15,15,15,15,15,15,15,15,7,5,5,9,9,6,6,9,12,8,7,8,11,8,9,15,6,3,3,7,7,4,3,6,9,6,5,6,8,6,8,15,8,5,5,9,8,5,4,6,10,7,5,5,11,8,7,15,14,15,13,13,13,13,8,11,15,10,7,6,11,9,10,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,7,2,7,3,8,4,9,5,9,8,10,11,11,12,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,0,0,0,0,0,0,0,0,0,3,4,3,6,3,6,3,6,3,7,3,8,4,9,4,9,0,3,3,2,3,3,4,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,3,5,3,5,4,5,4,5,5,5,5,6,5,6,5,6,5,6,5,6,5,7,8,9,11,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0,3,3,3,4,4,4,4,5,4,5,4,5,4,6,4,6,0,3,3,3,3,3,3,3,3,8,13,17,17,8,11,17,17,11,13,17,17,17,17,17,17,6,10,16,17,6,10,15,17,8,10,16,17,17,17,17,17,9,13,15,17,8,11,17,17,10,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,6,11,15,17,7,10,15,17,8,10,17,17,17,15,17,17,4,8,13,17,4,7,13,17,6,8,15,17,16,15,17,17,6,11,15,17,6,9,13,17,8,10,17,17,15,17,17,17,16,17,17,17,12,14,15,17,13,14,15,17,17,17,17,17,5,10,14,17,5,9,14,17,7,9,15,17,15,15,17,17,3,7,12,17,3,6,11,17,5,7,13,17,12,12,17,17,5,9,14,17,3,7,11,17,5,8,13,17,13,11,16,17,12,17,17,17,9,14,15,17,10,11,14,17,16,14,17,17,8,12,17,17,8,12,17,17,10,12,17,17,17,17,17,17,5,10,17,17,5,9,15,17,7,9,17,17,13,13,17,17,7,11,17,17,6,10,15,17,7,9,15,17,12,11,17,17,12,15,17,17,11,14,17,17,11,10,15,17,17,16,17,17,10,7,8,13,9,6,7,11,10,8,8,12,17,17,17,17,7,5,5,9,6,4,4,8,8,5,5,8,16,14,13,16,7,5,5,7,6,3,3,5,8,5,4,7,14,12,12,15,10,7,8,9,7,5,5,6,9,6,5,5,15,12,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,3,5,3,6,4,7,4,7,5,7,6,7,6,7,8,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,0,0,0,0,0,0,0,0,0,0,4,3,4,3,4,3,5,3,5,4,5,4,6,4,6,0,0,0,0,2,2,3,3,3,3,2,2,2,2,6,7,7,12,6,6,7,12,7,6,6,10,15,12,11,13,7,7,8,13,7,7,8,12,7,7,7,11,12,12,11,13,10,9,9,11,9,9,9,10,10,8,8,12,14,12,12,14,11,11,12,14,11,12,11,15,15,12,13,15,15,15,15,15,6,6,7,10,6,6,6,11,7,6,6,9,14,12,11,13,7,7,7,10,6,6,7,9,7,7,6,10,13,12,10,12,9,9,9,11,9,9,8,9,9,8,8,10,13,12,10,12,12,12,11,13,12,12,11,12,15,13,12,15,15,15,14,14,6,6,6,8,6,6,5,6,7,7,6,5,11,10,9,8,7,6,6,7,6,6,5,6,7,7,6,6,11,10,9,8,8,8,8,9,8,8,7,8,8,8,6,7,11,10,9,9,14,11,10,14,14,11,10,15,13,11,9,11,15,12,12,11,11,9,8,8,10,9,8,9,11,10,9,8,12,11,12,11,13,10,8,9,11,10,8,9,10,9,8,9,10,8,12,12,15,11,10,10,13,11,10,10,8,8,7,12,10,9,11,12,15,12,11,15,13,11,11,15,12,14,11,13,15,15,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,3,5,3,5,4,6,5,6,5,7,6,6,7,7,9,9,11,11,16,11,14,10,11,11,13,16,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,3,3,4,3,4,3,4,4,5,4,5,4,6,5,6,0,0,0,0,3,2,3,2,3,3,2,2,2,2,7,7,7,11,6,6,7,11,7,6,6,10,12,10,10,13,7,7,8,11,7,7,7,11,7,6,7,10,11,10,10,13,10,10,9,12,9,9,9,11,8,8,8,11,13,11,10,14,15,15,14,15,15,14,13,14,15,12,12,17,17,17,17,17,7,7,6,9,6,6,6,9,7,6,6,8,11,11,10,12,7,7,7,9,7,6,6,9,7,6,6,9,13,10,10,11,10,9,8,10,9,8,8,10,8,8,7,9,13,12,10,11,17,14,14,13,15,14,12,13,17,13,12,15,17,17,14,17,7,6,6,7,6,6,5,7,6,6,6,6,11,9,9,9,7,7,6,7,7,6,6,7,6,6,6,6,10,9,8,9,10,9,8,8,9,8,7,8,8,7,6,8,11,10,9,10,17,17,12,15,15,15,12,14,14,14,10,12,15,13,12,13,11,10,8,10,11,10,8,8,10,9,7,7,10,9,9,11,11,11,9,10,11,10,8,9,10,8,6,8,10,9,9,11,14,13,10,12,12,11,10,10,8,7,8,10,10,11,11,12,17,17,15,17,17,17,17,17,17,13,12,17,17,17,14,17,2,4,4,6,6,7,7,8,8,8,8,9,8,9,9,9,9,9,9,9,9,11,11,12,7,7,7,7,8,8,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,7,7,7,7,8,8,9,8,9,9,9,9,9,9,10,10,10,10,11,11,12,8,8,8,8,8,8,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,7,7,8,8,8,8,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,12,11,9,9,8,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,8,8,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,12,11,12,11,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,12,11,12,11,11,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,12,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,11,11,12,11,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,12,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,12,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,12,11,11,12,11,11,12,10,10,11,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,12,12,11,12,11,11,12,12,12,11,11,10,10,10,10,10,10,10,10,10,11,12,12,11,12,12,11,12,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,5,5,7,7,9,9,11,11,12,12,13,13,6,5,5,6,6,9,9,10,10,12,12,12,13,15,14,6,5,5,7,7,9,9,10,10,12,12,12,13,14,13,17,7,7,8,8,10,10,11,11,12,13,13,13,13,13,17,7,7,8,8,10,10,11,11,13,13,13,13,14,14,17,11,11,9,9,11,11,12,12,12,13,13,14,15,13,17,12,12,9,9,11,11,12,12,13,13,13,13,14,16,17,17,17,11,12,12,12,13,13,13,14,15,14,15,15,17,17,17,12,12,11,11,13,13,14,14,15,14,15,15,17,17,17,15,15,13,13,14,14,15,14,15,15,16,15,17,17,17,15,15,13,13,13,14,14,15,15,15,15,16,17,17,17,17,16,14,15,14,14,15,14,14,15,15,15,17,17,17,17,17,14,14,16,14,15,15,15,15,15,15,17,17,17,17,17,17,16,16,15,17,15,15,14,17,15,17,16,17,17,17,17,16,15,14,15,15,15,15,15,15,1,3,3,10,10,10,10,10,10,10,10,10,10,5,6,6,10,10,10,10,10,10,10,10,10,10,6,7,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,8,8,8,8,9,9,10,10,7,5,5,7,7,8,8,8,8,9,10,11,11,7,5,5,7,7,8,8,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,9,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,9,10,9,10,11,11,11,0,13,12,9,8,9,9,10,10,11,11,12,11,0,0,0,9,9,9,9,10,10,11,11,12,12,0,0,0,10,10,9,9,10,10,11,11,12,12,0,0,0,13,13,10,10,11,11,12,11,13,12,0,0,0,14,14,10,10,11,10,11,11,12,12,0,0,0,0,0,12,12,11,11,12,12,13,13,0,0,0,0,0,12,12,11,10,12,11,13,12,2,3,3,5,5,7,7,7,7,7,7,10,10,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,6,6,6,7,6,6,4,7,7,10,9,9,10,9,9,5,7,7,10,9,9,10,9,9,6,10,10,10,10,10,11,10,10,6,9,9,10,9,10,11,10,10,6,9,9,10,9,9,11,9,10,7,10,10,11,11,11,11,10,10,6,9,9,10,10,10,11,9,9,6,9,9,10,10,10,10,9,9,1,3,3,5,5,8,8,8,8,9,9,10,10,11,11,11,11,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,9,9,8,8,10,10,10,10,11,11,12,12,12,12,0,0,0,9,9,8,8,10,10,10,10,11,11,12,12,12,12,0,0,0,10,10,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,10,10,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,11,11,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,11,12,12,13,13,0,0,0,0,0,10,10,11,11,11,11,12,12,13,12,13,13,0,0,0,0,0,0,0,11,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,13,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,14,14,1,3,3,4,5,6,6,8,8,0,0,0,8,8,7,7,9,9,0,0,0,8,8,7,7,9,9,0,0,0,9,10,8,8,9,9,0,0,0,10,10,8,8,9,9,0,0,0,11,10,8,8,10,10,0,0,0,11,11,8,8,10,10,0,0,0,12,12,9,9,10,10,0,0,0,0,0,9,9,10,10,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,8], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+229656);
/* memory initializer */ allocate([5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,8,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,10,8], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+240149);
/* memory initializer */ allocate([4,6,18,8,11,8,8,9,9,10,4,4,18,5,9,5,6,7,8,10,18,18,18,18,17,17,17,17,17,17,7,5,17,6,11,6,7,8,9,12,12,9,17,12,8,8,9,10,10,13,7,5,17,6,8,4,5,6,8,10,6,5,17,6,8,5,4,5,7,9,7,7,17,8,9,6,5,5,6,8,8,8,17,9,11,8,6,6,6,7,9,10,17,12,12,10,9,7,7,8,1,5,5,7,7,8,7,8,8,10,10,9,9,10,10,10,11,11,10,12,11,12,12,12,9,8,8,8,8,8,9,10,10,10,10,11,11,11,10,11,11,12,12,11,12,8,8,7,7,8,9,10,10,10,9,10,10,9,10,10,11,11,11,11,11,11,9,9,9,9,8,9,10,10,11,10,10,11,11,12,10,10,12,12,11,11,10,9,9,10,8,9,10,10,10,9,10,10,11,11,10,11,10,10,10,12,12,12,9,10,9,10,9,9,10,10,11,11,11,11,10,10,10,11,12,11,12,11,12,10,11,10,11,9,10,9,10,9,10,10,9,10,10,11,10,11,11,11,11,12,11,9,10,10,10,10,11,11,11,11,11,10,11,11,11,11,10,12,10,12,12,11,12,10,10,11,10,9,11,10,11,9,10,11,10,10,10,11,11,11,11,12,12,10,9,9,11,10,9,12,11,10,12,12,11,11,11,11,10,11,11,12,11,10,12,9,11,10,11,10,10,11,10,11,9,10,10,10,11,12,11,11,12,11,10,10,11,11,9,10,10,12,10,11,10,10,10,9,10,10,10,10,9,10,10,11,11,11,11,12,11,10,10,10,10,11,11,10,11,11,9,11,10,12,10,12,11,10,11,10,10,10,11,10,10,11,11,10,11,10,10,10,10,11,11,12,10,10,10,11,10,11,12,11,10,11,10,10,11,11,10,12,10,9,10,10,11,11,11,10,12,10,10,11,11,11,10,10,11,10,10,10,11,10,11,10,12,11,11,10,10,10,12,10,10,11,9,10,11,11,11,10,10,11,10,10,9,11,11,12,12,11,12,11,11,11,11,11,11,9,10,11,10,12,10,10,10,10,11,10,10,11,10,10,12,10,10,10,10,10,9,12,10,10,10,10,12,9,11,10,10,11,10,12,12,10,12,12,12,10,10,10,10,9,10,11,10,10,12,10,10,12,11,10,11,10,10,12,11,10,12,10,10,11,9,11,10,9,10,9,10,1,4,4,5,5,10,8,11,11,11,11,11,11,11,11,6,6,6,7,6,11,10,11,11,11,11,11,11,11,11,7,5,6,6,6,8,7,11,11,11,11,11,11,11,11,11,7,8,8,8,9,9,11,11,11,11,11,11,11,11,11,9,8,7,8,9,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,3,4,5,5,7,6,6,6,5,7,7,7,6,6,7,7,7,6,6,7,7,7,6,6,1,4,4,7,6,7,7,7,7,8,8,9,9,7,6,6,7,7,8,8,7,7,8,9,10,10,7,6,6,7,7,8,7,7,7,9,9,10,12,0,8,8,8,8,8,9,8,8,9,9,10,10,0,8,8,8,8,8,9,8,9,9,9,11,10,0,0,13,9,8,9,9,9,9,10,10,11,11,0,13,0,9,9,9,9,9,9,11,10,11,11,0,0,0,8,9,10,9,10,10,13,11,12,12,0,0,0,8,9,9,9,10,10,13,12,12,13,0,0,0,12,0,10,10,12,11,10,11,12,12,0,0,0,13,13,10,10,10,11,12,0,13,0,0,0,0,0,0,13,11,0,12,12,12,13,12,0,0,0,0,0,0,13,13,11,13,13,11,12,1,3,3,6,6,8,8,9,9,9,9,10,10,10,7,7,8,8,9,9,9,9,10,10,9,7,7,8,8,9,9,9,9,10,10,10,8,8,9,9,9,9,9,9,10,10,10,8,8,9,9,9,9,8,9,10,10,10,8,8,9,9,9,10,10,10,10,10,10,9,9,9,9,9,9,10,10,11,10,11,9,9,9,9,10,10,10,10,11,11,11,10,10,9,9,10,10,10,9,11,10,10,10,10,10,10,9,9,10,10,11,11,10,10,10,9,9,9,10,10,10,1,4,4,7,6,6,7,6,6,4,7,7,11,9,10,12,9,10,4,7,7,10,10,10,11,9,9,6,11,10,11,11,12,11,11,11,6,10,10,11,11,12,11,10,10,6,9,10,11,11,11,11,10,10,7,10,11,12,11,11,12,11,12,6,9,9,10,9,9,11,10,10,6,9,9,10,10,10,11,10,10,1,3,3,6,6,8,8,9,9,8,8,10,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,11,0,0,0,8,8,9,9,10,10,9,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,9,9,11,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,11,12,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,10,10,10,10,11,11,10,10,11,11,12,12,13,13,0,0,0,0,0,10,9,10,11,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,9,10,11,12,12,13,13,14,13,0,0,0,0,0,9,9,9,10,10,10,11,11,13,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,11,11,12,12,13,14,14,14,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,14,13,0,0,0,0,0,0,0,11,11,12,12,13,13,14,14,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,5,5,7,6,8,8,0,0,0,7,7,7,7,8,8,0,0,0,7,7,7,7,8,9,0,0,0,8,8,8,8,9,9,0,0,0,8,8,8,8,9,9,0,0,0,9,9,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,4,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,9,0,0,0,0,0,0,8,9,11,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,11,11,0,0,0,0,0,0,8,11,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+245981);
/* memory initializer */ allocate([4,5,18,7,10,6,7,8,9,10,5,2,18,5,7,5,6,7,8,11,17,17,17,17,17,17,17,17,17,17,7,4,17,6,9,6,8,10,12,15,11,7,17,9,6,6,7,9,11,15,6,4,17,6,6,4,5,8,11,16,6,6,17,8,6,5,6,9,13,16,8,9,17,11,9,8,8,11,13,17,9,12,17,15,14,13,12,13,14,17,12,15,17,17,17,17,17,16,17,17,3,9,13,13,14,15,14,14,15,15,5,5,9,10,12,12,13,14,16,15,10,6,6,6,8,11,12,13,16,15,11,7,5,3,5,8,10,12,15,15,10,10,7,4,3,5,8,10,12,12,12,12,9,7,5,4,6,8,10,13,13,12,11,9,7,5,5,6,9,12,14,12,12,10,8,6,6,6,7,11,13,12,14,13,10,8,7,7,7,10,11,11,12,13,12,11,10,8,8,9,2,4,4,5,4,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,6,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,8,7,8,7,9,8,10,9,10,10,11,11,12,12,4,7,6,9,9,10,9,9,8,10,10,11,10,12,10,13,12,13,12,4,6,6,9,9,9,9,9,9,10,10,11,11,11,12,12,12,12,12,7,9,8,11,10,10,10,11,10,11,11,12,12,13,12,13,13,13,13,7,8,9,10,10,11,11,10,10,11,11,11,12,13,13,13,13,14,14,8,9,9,11,11,12,11,12,12,13,12,12,13,13,14,15,14,14,14,8,9,9,10,11,11,11,12,12,13,12,13,13,14,14,14,15,14,16,8,9,9,11,10,12,12,12,12,15,13,13,13,17,14,15,15,15,14,8,9,9,10,11,11,12,13,12,13,13,13,14,15,14,14,14,16,15,9,11,10,12,12,13,13,13,13,14,14,16,15,14,14,14,15,15,17,9,10,10,11,11,13,13,13,14,14,13,15,14,15,14,15,16,15,16,10,11,11,12,12,13,14,15,14,15,14,14,15,17,16,15,15,17,17,10,12,11,13,12,14,14,13,14,15,15,15,15,16,17,17,15,17,16,11,12,12,14,13,15,14,15,16,17,15,17,15,17,15,15,16,17,15,11,11,12,14,14,14,14,14,15,15,16,15,17,17,17,16,17,16,15,12,12,13,14,14,14,15,14,15,15,16,16,17,16,17,15,17,17,16,12,14,12,14,14,15,15,15,14,14,16,16,16,15,16,16,15,17,15,12,13,13,14,15,14,15,17,15,17,16,17,17,17,16,17,16,17,17,12,13,13,14,16,15,15,15,16,15,17,17,15,17,15,17,16,16,17,1,3,3,11,11,11,11,11,11,11,11,11,11,11,11,4,10,11,11,11,11,11,11,11,11,11,11,11,11,11,4,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,8,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,10,9,10,9,10,10,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,8,9,9,10,9,11,10,4,6,6,8,8,9,9,9,9,10,10,11,10,12,10,4,6,6,8,8,9,10,9,9,10,10,11,11,12,12,7,8,8,10,10,11,11,10,10,11,11,12,12,13,12,7,8,8,10,10,11,11,10,10,11,11,12,12,12,13,8,10,9,11,11,12,12,11,11,12,12,13,13,14,13,8,9,9,11,11,12,12,11,12,12,12,13,13,14,13,8,9,9,10,10,12,11,13,12,13,13,14,13,15,14,8,9,9,10,10,11,12,12,12,13,13,13,14,14,14,9,10,10,12,11,13,12,13,13,14,13,14,14,14,15,9,10,10,11,12,12,12,13,13,14,14,14,15,15,15,10,11,11,12,12,13,13,14,14,14,14,15,14,16,15,10,11,11,12,12,13,13,13,14,14,14,14,14,15,16,11,12,12,13,13,14,13,14,14,15,14,15,16,16,16,11,12,12,13,13,14,13,14,14,15,15,15,16,15,15,5,6,6,7,7,7,7,7,7,7,7,6,6,6,7,7,7,7,7,7,7,7,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,7,7,8,8,7,7,7,7,7,7,7,8,7,8,8,7,7,7,7,7,7,7,8,8,8,8,1,4,5,6,6,7,7,8,9,10,10,11,11,5,6,6,7,7,8,8,9,9,10,10,11,11,5,6,6,7,7,8,8,9,9,10,10,11,11,6,7,7,8,8,9,9,10,10,11,11,12,12,6,7,7,8,8,9,9,10,10,11,11,12,12,8,8,8,9,9,10,10,11,11,12,12,13,13,8,8,8,9,9,10,10,11,11,12,12,13,13,9,9,9,10,10,11,11,12,12,13,13,13,13,9,9,9,10,10,11,11,12,12,13,13,14,14,10,10,10,11,11,12,12,13,13,14,13,15,14,10,10,10,11,11,12,12,13,13,14,14,14,14,11,11,12,12,12,13,13,14,14,14,14,15,15,11,11,12,12,12,13,13,14,14,14,15,15,15,4,4,4,5,5,4,5,4,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,2,4,4,6,6,7,7,8,8,9,9,10,10,4,6,5,7,7,8,8,8,8,9,9,10,10,4,5,6,7,7,8,8,8,8,9,9,10,10,6,7,7,8,8,8,8,9,9,10,10,10,10,6,7,7,8,8,8,8,9,9,10,10,10,10,7,8,8,8,8,9,9,9,9,10,10,11,11,7,8,8,8,8,9,9,9,9,10,10,11,11,8,8,8,9,9,9,9,9,10,10,10,11,11,8,8,8,9,9,9,9,10,9,10,10,11,11,9,9,9,10,10,10,10,10,11,11,11,11,12,9,9,9,10,10,10,10,10,10,11,10,12,11,10,10,10,10,10,11,11,11,11,11,12,12,12,10,10,10,10,10,11,11,11,11,12,11,12,12,5,5,5,6,6,7,7,7,7,7,7,5,6,6,6,6,7,7,7,7,8,7,5,6,6,6,6,7,7,7,7,7,7,6,6,6,7,7,7,7,7,7,8,8,6,6,6,7,7,7,7,7,7,8,8,7,7,7,7,7,8,7,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,8,7,8,8,8,8,8,8,7,7,7,7,8,8,8,8,8,8,8,7,8,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,1,4,4,5,7,7,5,7,7,5,8,8,8,9,9,7,9,9,5,8,8,7,9,9,8,9,9,5,8,8,8,10,10,8,10,10,7,10,10,9,10,12,9,11,11,7,10,10,9,11,10,9,11,12,5,8,8,8,10,10,8,10,10,7,10,10,9,12,11,9,10,11,7,10,10,9,11,11,10,12,10,4,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,5,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,5,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,6,6,6,7,6,7,7,8,8,9,9,10,10,11,11,12,11,6,6,6,6,7,7,7,8,8,9,9,10,10,11,11,11,12,7,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,7,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,8,8,8,8,8,9,8,10,9,10,10,11,10,12,11,13,12,8,8,8,8,8,9,9,9,10,10,10,10,11,11,12,12,12,8,8,8,9,9,9,9,10,10,11,10,12,11,12,12,13,12,8,8,8,9,9,9,9,10,10,10,11,11,11,12,12,12,13,9,9,9,10,10,10,10,11,10,11,11,12,11,13,12,13,13,9,9,10,10,10,10,10,10,11,11,11,11,12,12,13,13,13,10,11,10,11,11,11,11,12,11,12,12,13,12,13,13,14,13,10,10,10,11,11,11,11,11,12,12,12,12,13,13,13,13,14,11,11,11,12,11,12,12,12,12,13,13,13,13,14,13,14,14,11,11,11,11,12,12,12,12,12,12,13,13,13,13,14,14,14,3,4,4,5,5,7,7,8,8,4,5,5,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,9,9,5,6,6,7,7,8,8,9,9,7,7,7,8,8,9,9,10,10,7,7,7,8,8,9,9,10,10,8,9,9,10,9,10,10,11,11,8,9,9,9,10,10,10,11,11,3,5,5,8,8,5,7,7,9,9,6,7,7,9,9,8,9,9,11,10,8,9,9,11,11,6,7,7,9,9,7,8,8,10,10,7,8,8,9,10,9,10,10,11,11,9,9,10,11,11,6,7,7,9,9,7,8,8,10,9,7,8,8,10,10,9,10,9,11,11,9,10,10,11,11,8,9,9,11,11,9,10,10,12,11,9,10,10,11,12,11,11,11,13,13,11,11,11,12,13,8,9,9,11,11,9,10,10,11,11,9,10,10,12,11,11,12,11,13,12,11,11,12,13,13,6,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,11,12,7,8,8,10,10,8,9,9,11,11,8,9,9,10,10,10,11,11,12,12,10,10,11,12,12,7,8,8,10,10,8,9,8,10,10,8,9,9,10,10,10,11,10,12,11,10,10,11,12,12,9,10,10,11,12,10,11,11,12,12,10,11,10,12,12,12,12,12,13,13,11,12,12,13,13,9,10,10,11,11,9,10,10,12,12,10,11,11,12,13,11,12,11,13,12,12,12,12,13,14,6,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,11,11,9,10,10,11,12,7,8,8,10,10,8,9,9,11,10,8,8,9,10,10,10,11,10,12,12,10,10,11,11,12,7,8,8,10,10,8,9,9,10,10,8,9,9,10,10,10,11,10,12,12,10,11,10,12,12,9,10,10,12,11,10,11,11,12,12,9,10,10,12,12,12,12,12,13,13,11,11,12,12,14,9,10,10,11,12,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,12,12,12,13,13,8,9,9,11,11,9,10,10,12,11,9,10,10,12,12,11,12,11,13,13,11,11,12,13,13,9,10,10,12,12,10,11,11,12,12,10,11,11,12,12,12,12,12,14,14,12,12,12,13,13,9,10,10,12,11,10,11,10,12,12,10,11,11,12,12,11,12,12,14,13,12,12,12,13,14,11,12,11,13,13,11,12,12,13,13,12,12,12,14,14,13,13,13,13,15,13,13,14,15,15,11,11,11,13,13,11,12,11,13,13,11,12,12,13,13,12,13,12,15,13,13,13,14,14,15,8,9,9,11,11,9,10,10,11,12,9,10,10,11,12,11,12,11,13,13,11,12,12,13,13,9,10,10,11,12,10,11,10,12,12,10,10,11,12,13,12,12,12,14,13,11,12,12,13,14,9,10,10,12,12,10,11,11,12,12,10,11,11,12,12,12,12,12,14,13,12,12,12,14,13,11,11,11,13,13,11,12,12,14,13,11,11,12,13,13,13,13,13,15,14,12,12,13,13,15,11,12,12,13,13,12,12,12,13,14,11,12,12,13,13,13,13,14,14,15,13,13,13,14,14,1,5,5,5,7,7,5,7,7,5,7,7,7,9,9,7,9,9,5,7,7,7,9,9,7,9,9,5,7,7,7,9,9,7,9,9,8,9,9,9,10,11,9,11,11,7,9,9,9,11,10,9,11,11,5,7,7,7,9,9,8,9,10,7,9,9,9,11,11,9,10,11,7,9,10,9,11,11,9,11,10,9,16,18,18,17,17,17,17,17,17,5,8,11,12,11,12,17,17,16,16,6,6,8,8,9,10,14,15,16,16,6,7,7,4,6,9,13,16,16,16,6,6,7,4,5,8,11,15,17,16,7,6,7,6,6,8,9,10,14,16,11,8,8,7,6,6,3,4,10,15,14,12,12,10,5,6,3,3,8,13,15,17,15,11,6,8,6,6,9,14,17,15,15,12,8,10,9,9,12,15,3,9,13,14,14,15,14,14,15,15,5,4,6,8,10,12,12,14,15,15,9,5,4,5,8,10,11,13,16,16,10,7,4,3,5,7,9,11,13,13,10,9,7,4,4,6,8,10,12,14,13,11,9,6,5,5,6,8,12,14,13,11,10,8,7,6,6,7,10,14,13,11,12,10,8,7,6,6,9,13,12,11,14,12,11,9,8,7,9,11,11,12,14,13,14,11,10,8,8,9,2,3,4,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,8,7,8,6,9,7,10,8,11,10,11,11,11,11,4,7,6,9,9,10,9,9,9,10,10,11,10,11,10,11,11,13,11,4,7,7,9,9,9,9,9,9,10,10,11,10,11,11,11,12,11,12,7,9,8,11,11,11,11,10,10,11,11,12,12,12,12,12,12,14,13,7,8,9,10,11,11,11,10,10,11,11,11,11,12,12,14,12,13,14,8,9,9,11,11,11,11,11,11,12,12,14,12,15,14,14,14,15,14,8,9,9,11,11,11,11,12,11,12,12,13,13,13,13,13,13,14,14,8,9,9,11,10,12,11,12,12,13,13,13,13,15,14,14,14,16,16,8,9,9,10,11,11,12,12,12,13,13,13,14,14,14,15,16,15,15,9,10,10,11,12,12,13,13,13,14,14,16,14,14,16,16,16,16,15,9,10,10,11,11,12,13,13,14,15,14,16,14,15,16,16,16,16,15,10,11,11,12,13,13,14,15,15,15,15,15,16,15,16,15,16,15,15,10,11,11,13,13,14,13,13,15,14,15,15,16,15,15,15,16,15,16,10,12,12,14,14,14,14,14,16,16,15,15,15,16,16,16,16,16,16,11,12,12,14,14,14,14,15,15,16,15,16,15,16,15,16,16,16,16,12,12,13,14,14,15,16,16,16,16,16,16,15,16,16,16,16,16,16,12,13,13,14,14,14,14,15,16,15,16,16,16,16,16,16,16,16,16,12,13,14,14,14,16,15,16,15,16,16,16,16,16,16,16,16,16,16,12,14,13,14,15,15,15,16,15,16,16,15,16,16,16,16,16,16,16,1,3,3,9,9,9,9,9,9,4,9,9,9,9,9,9,9,9,5,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,4,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,10,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,9,10,10,9,10,8,9,8,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,8,9,8,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,9,10,10,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,7,9,8,10,9,11,10,4,6,6,8,8,10,9,9,9,10,10,11,10,12,10,4,6,6,8,8,10,10,9,9,10,10,11,11,11,12,7,8,8,10,10,11,11,11,10,12,11,12,12,13,11,7,8,8,10,10,11,11,10,10,11,11,12,12,13,13,8,10,10,11,11,12,11,12,11,13,12,13,12,14,13,8,10,9,11,11,12,12,12,12,12,12,13,13,14,13,8,9,9,11,10,12,11,13,12,13,13,14,13,14,13,8,9,9,10,11,12,12,12,12,13,13,14,15,14,14,9,10,10,12,11,13,12,13,13,14,13,14,14,14,14,9,10,10,12,12,12,12,13,13,14,14,14,15,14,14,10,11,11,13,12,13,12,14,14,14,14,14,14,15,15,10,11,11,12,12,13,13,14,14,14,15,15,14,16,15,11,12,12,13,12,14,14,14,13,15,14,15,15,15,17,11,12,12,13,13,14,14,14,15,15,14,15,15,14,17,4,5,5,6,6,7,7,7,7,7,7,5,6,6,7,7,7,7,7,7,7,7,5,6,6,7,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,8,8,6,7,7,7,7,7,7,7,7,7,8,7,7,7,7,7,7,7,8,8,8,8,7,7,7,7,7,7,7,8,8,8,8,7,7,7,8,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,1,4,5,6,6,7,7,8,8,10,10,11,11,5,6,6,7,7,8,8,9,9,11,10,12,11,5,6,6,7,7,8,8,9,9,10,11,11,12,6,7,7,8,8,9,9,10,10,11,11,12,12,6,7,7,8,8,9,9,10,10,11,12,13,12,7,8,8,9,9,10,10,11,11,12,12,13,13,8,8,8,9,9,10,10,11,11,12,12,13,13,9,9,9,10,10,11,11,12,12,13,13,14,14,9,9,9,10,10,11,11,12,12,13,13,14,14,10,11,11,12,11,13,12,13,13,14,14,15,15,10,11,11,11,12,12,13,13,14,14,14,15,15,11,12,12,13,13,14,13,15,14,15,15,16,15,11,11,12,13,13,13,14,14,14,15,15,15,16,3,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,4,4,6,6,7,7,8,8,9,9,10,10,4,6,5,7,7,8,8,8,8,9,9,10,10,4,6,6,7,7,8,8,8,8,9,9,10,10,6,7,7,7,8,8,8,8,9,9,10,10,10,6,7,7,8,8,8,8,9,8,10,9,11,10,7,8,8,8,8,8,9,9,9,10,10,11,11,7,8,8,8,8,9,8,9,9,10,10,11,11,8,8,8,9,9,9,9,9,10,10,10,11,11,8,8,8,9,9,9,9,10,9,10,10,11,11,9,9,9,9,10,10,10,10,10,10,11,11,12,9,9,9,10,9,10,10,10,10,11,10,12,11,10,10,10,10,10,11,11,11,11,11,12,12,12,10,10,10,10,11,11,11,11,11,12,11,12,12,4,5,5,6,6,7,7,7,7,8,8,5,5,5,6,6,7,7,8,8,8,8,5,5,5,6,6,7,7,7,8,8,8,6,6,6,7,7,7,7,8,8,8,8,6,6,6,7,7,7,7,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,8,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,8,8,9,9,1,4,4,5,7,7,5,7,7,5,8,8,8,9,9,7,9,9,5,8,8,7,9,9,8,9,9,5,8,8,8,10,10,8,10,10,7,10,10,9,10,12,9,12,11,7,10,10,9,11,10,9,11,12,5,8,8,8,10,10,8,10,10,7,10,10,9,11,11,9,10,11,7,10,10,9,11,11,10,12,10,4,4,4,6,6,7,7,8,8,8,8,10,10,11,11,11,11,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,6,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,6,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,7,7,7,8,8,9,8,10,9,10,9,11,10,12,11,13,12,7,7,7,8,8,8,9,9,10,9,10,10,11,11,12,12,13,8,8,8,9,9,9,9,10,10,11,10,11,11,12,12,13,13,8,8,8,9,9,9,10,10,10,10,11,11,11,12,12,12,13,8,9,9,9,9,10,9,11,10,11,11,12,11,13,12,13,13,8,9,9,9,9,9,10,10,11,11,11,11,12,12,13,13,13,10,10,10,10,10,11,10,11,11,12,11,13,12,13,13,14,13,10,10,10,10,10,10,11,11,11,11,12,12,13,13,13,13,14,11,11,11,11,11,12,11,12,12,13,12,13,13,14,13,14,14,11,11,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,11,12,12,12,12,13,12,13,12,13,13,14,13,14,14,14,14,11,12,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,3,4,4,5,5,7,7,9,9,4,5,4,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,10,10,6,6,6,7,7,8,8,10,10,7,7,7,8,8,9,9,11,10,7,7,7,8,8,9,9,10,11,9,9,9,10,10,11,10,12,11,9,9,9,9,10,11,11,11,12,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,8,9,9,11,11,8,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,11,12,5,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,9,12,11,9,10,10,12,12,8,9,9,12,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,11,12,13,14,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,11,13,13,11,12,12,14,14,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,11,12,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,12,13,10,11,11,12,13,6,8,8,10,10,8,9,8,11,10,8,9,9,11,11,10,11,10,13,12,10,11,11,13,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,12,13,13,14,12,13,13,14,14,9,10,10,12,12,10,11,10,13,12,10,11,11,13,13,11,13,12,14,13,12,13,13,14,14,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,12,12,7,8,8,10,10,8,9,9,11,11,8,8,9,10,11,10,11,11,13,13,10,10,11,12,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,13,13,10,11,11,13,12,9,10,10,12,12,10,11,11,13,13,10,10,11,12,13,12,13,13,14,14,12,12,13,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,15,14,12,13,13,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,12,12,12,14,13,11,12,12,14,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,15,12,13,13,14,15,9,10,10,12,12,10,11,10,13,12,10,11,11,13,13,12,13,12,15,14,12,13,13,14,15,11,12,12,14,14,12,13,13,14,14,12,13,13,15,14,14,14,14,14,16,14,14,15,16,16,11,12,12,14,14,11,12,12,14,14,12,13,13,14,15,13,14,13,16,14,14,14,14,16,16,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,14,14,9,10,10,12,12,10,11,11,13,13,10,10,11,12,13,12,13,13,15,14,12,12,13,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,14,12,13,13,15,14,11,12,12,14,13,12,13,13,15,14,11,12,12,13,14,14,15,14,16,15,13,13,14,13,16,11,12,12,14,14,12,13,13,14,15,12,13,12,15,14,14,14,14,16,15,14,15,13,16,14,1,5,5,5,7,7,5,7,7,5,7,7,8,9,9,7,9,9,5,7,7,7,9,9,8,9,9,5,7,7,7,9,9,7,9,9,7,9,9,9,10,11,9,11,10,7,9,9,9,11,10,9,10,11,5,7,7,7,9,9,7,9,9,7,9,9,9,11,10,9,10,10,8,9,9,9,11,11,9,11,10,6,14,18,18,17,17,17,17,17,17,4,7,9,9,10,13,15,17,17,17,6,7,5,6,8,11,16,17,16,17,5,7,5,4,6,10,14,17,17,17,6,6,6,5,7,10,13,16,17,17,7,6,7,7,7,8,7,10,15,16,12,9,9,6,6,5,3,5,11,15,14,14,13,5,5,7,3,4,8,15,17,17,13,7,7,10,6,6,10,15,17,17,16,10,11,14,10,10,15,17,3,9,14,13,15,14,16,13,13,14,5,5,7,7,8,9,11,10,12,15,10,6,5,6,6,9,10,10,13,16,10,6,6,6,6,8,9,9,12,15,14,7,6,6,5,6,6,8,12,15,10,8,7,7,6,7,7,7,11,13,14,10,9,8,5,6,4,5,9,12,10,9,9,8,6,6,5,3,6,11,12,11,12,12,10,9,8,5,5,8,10,11,15,13,13,13,12,8,6,7,2,4,4,4,4,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,1,4,4,6,5,8,6,9,8,10,9,11,10,4,6,6,8,8,9,9,11,10,11,11,11,11,4,6,6,8,8,10,9,11,11,11,11,11,12,6,8,8,10,10,11,11,12,12,13,12,13,13,6,8,8,10,10,11,11,12,12,12,13,14,13,8,10,10,11,11,12,13,14,14,14,14,15,15,8,10,10,11,12,12,13,13,14,14,14,14,15,9,11,11,13,13,14,14,15,14,16,15,17,15,9,11,11,12,13,14,14,15,14,15,15,15,16,10,12,12,13,14,15,15,15,15,16,17,16,17,10,13,12,13,14,14,16,16,16,16,15,16,17,11,13,13,14,15,14,17,15,16,17,17,17,17,11,13,13,14,15,15,15,15,17,17,16,17,16,1,3,3,10,10,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,4,5,5,6,6,7,7,7,7,7,7,5,6,6,7,7,7,7,7,7,7,7,5,6,6,6,7,7,7,7,7,7,7,6,7,7,7,7,7,7,7,7,8,8,6,7,7,7,7,7,7,7,7,8,8,7,7,7,7,7,8,7,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,1,4,4,6,6,8,8,10,10,11,11,4,6,6,7,7,9,9,11,10,12,12,5,6,5,7,7,9,9,10,11,12,12,6,7,7,8,8,10,10,11,11,13,13,6,7,7,8,8,10,10,11,12,13,13,8,9,9,10,10,11,11,12,12,14,14,8,9,9,10,10,11,11,12,12,14,14,10,10,10,11,11,13,12,14,14,15,15,10,10,10,12,12,13,13,14,14,15,15,11,12,12,13,13,14,14,15,14,16,15,11,12,12,13,13,14,14,15,15,15,16,3,4,4,6,6,7,7,8,8,8,8,4,5,5,6,6,8,7,8,8,8,8,4,5,5,6,6,7,8,8,8,8,8,6,7,6,7,7,8,8,9,9,9,9,6,6,7,7,7,8,8,9,9,9,9,7,8,7,8,8,9,9,9,9,9,9,7,7,8,8,8,9,9,9,9,9,9,8,8,8,9,9,9,9,10,9,9,9,8,8,8,9,9,9,9,9,9,9,10,8,8,8,9,9,9,9,10,9,10,10,8,8,8,9,9,9,9,9,10,10,10,1,4,4,5,7,7,5,7,7,5,9,8,8,9,9,7,10,10,5,8,9,7,9,10,8,9,9,4,9,9,9,11,10,8,10,10,7,11,10,10,10,12,10,12,12,7,10,10,10,12,11,10,12,12,5,9,9,8,10,10,9,11,11,7,11,10,10,12,12,10,11,12,7,10,11,10,12,12,10,12,10,3,4,4,5,5,7,7,9,9,4,5,4,6,6,8,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,10,10,5,6,6,7,7,8,8,10,10,7,8,7,8,8,10,9,11,11,7,7,8,8,8,9,10,11,11,9,9,9,10,10,11,10,12,11,9,9,9,10,10,11,11,11,12,2,3,3,6,6,7,8,10,10,4,5,5,8,7,8,8,11,11,3,5,5,7,7,8,9,11,11,6,8,7,9,9,10,10,12,12,6,7,8,9,10,10,10,12,12,8,8,8,10,10,12,11,13,13,8,8,9,10,10,11,11,13,13,10,11,11,12,12,13,13,14,14,10,11,11,12,12,13,13,14,14,4,5,5,8,8,6,7,6,9,9,6,6,7,9,9,8,9,9,11,11,8,9,9,10,11,6,7,7,9,9,7,8,8,10,10,6,7,8,9,10,9,10,10,12,12,9,9,10,11,12,6,7,7,9,9,6,8,7,10,9,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,11,12,13,13,8,9,9,11,11,9,10,10,12,11,9,10,10,12,12,11,12,11,13,13,11,12,12,13,13,6,7,7,9,9,7,8,7,10,10,7,7,8,10,10,9,10,10,12,11,9,10,10,12,12,7,8,8,10,10,8,8,9,11,11,8,9,9,11,11,10,11,11,12,12,10,10,11,12,13,6,7,7,10,10,7,9,8,11,10,8,8,9,10,11,10,11,10,13,11,10,11,11,12,12,9,10,10,12,12,10,10,11,13,13,10,11,11,13,12,12,12,13,13,14,12,12,13,14,14,9,10,10,12,12,9,10,10,12,12,10,11,11,13,13,11,12,11,14,12,12,13,13,14,14,6,7,7,9,9,7,8,7,10,10,7,7,8,10,10,9,10,10,12,11,9,10,10,11,12,6,7,7,10,10,8,9,8,11,10,7,8,9,10,11,10,11,11,13,12,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,10,13,12,10,11,11,12,12,9,10,10,12,12,10,11,11,13,12,9,10,10,12,13,12,13,12,14,14,11,11,12,12,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,12,14,14,12,13,12,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,12,12,13,13,14,14,12,12,13,14,14,9,10,10,12,12,9,11,10,13,12,10,10,11,12,13,11,13,12,14,13,12,12,13,14,14,11,12,12,13,13,11,12,13,14,14,12,13,13,14,14,13,13,14,14,16,13,14,14,16,16,11,11,11,13,13,11,12,11,14,13,12,12,13,14,15,13,14,12,16,13,14,14,14,15,16,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,14,9,10,10,12,12,10,11,10,13,12,9,10,11,12,13,12,13,12,14,14,12,12,13,13,14,9,10,10,12,12,10,11,11,12,13,10,11,11,13,13,12,13,12,14,14,12,13,13,14,14,11,12,12,13,13,12,13,12,14,14,11,11,12,13,14,13,15,14,16,15,13,12,14,13,16,11,12,12,13,13,12,13,13,14,14,12,12,12,14,14,13,14,14,15,15,13,14,13,16,14,2,5,4,8,8,5,7,6,9,9,5,6,7,9,9,8,9,9,13,12,8,9,10,12,13,5,7,7,10,9,7,9,9,11,11,6,8,9,11,11,10,11,11,14,14,9,10,11,13,14,5,7,7,9,9,7,9,8,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,14,8,10,10,14,13,10,11,12,15,14,9,11,11,15,14,13,14,14,16,16,12,13,14,17,16,8,10,10,13,13,9,11,11,14,15,10,11,12,14,15,12,14,13,16,16,13,14,15,15,17,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,15,14,10,11,12,14,14,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,11,13,13,14,17,11,13,13,15,16,6,9,9,11,11,8,11,10,13,12,9,11,11,13,13,11,13,12,16,14,11,13,13,16,16,10,12,12,15,15,11,13,13,16,16,11,13,13,16,15,14,16,17,17,19,14,16,16,18,0,9,11,11,14,15,10,13,12,16,15,11,13,13,16,16,14,15,14,0,16,14,16,16,18,0,5,7,7,10,10,7,9,9,12,11,7,9,9,11,12,10,11,11,15,14,10,11,12,14,14,6,9,9,11,11,9,11,11,13,13,8,10,11,12,13,11,13,13,17,15,11,12,13,14,15,7,9,9,11,12,9,11,11,13,13,9,11,11,13,13,11,13,12,16,16,11,13,13,15,14,9,11,11,14,15,11,13,13,16,15,10,12,13,16,16,15,16,16,0,0,14,13,15,16,18,10,11,11,15,15,11,13,14,16,18,11,13,13,16,15,15,16,16,19,0,14,15,15,16,16,8,10,10,13,13,10,12,11,16,15,10,11,11,16,15,13,15,16,18,0,13,14,15,17,17,9,11,11,15,15,11,13,13,16,18,11,13,13,16,17,15,16,16,0,0,15,18,16,0,17,9,11,11,15,15,11,13,12,17,15,11,13,14,16,17,15,18,15,0,17,15,16,16,18,19,13,15,14,0,18,14,16,16,19,18,14,16,15,19,19,16,18,19,0,0,16,17,0,0,0,12,14,14,17,17,13,16,14,0,18,14,16,15,18,0,16,18,16,19,17,18,19,17,0,0,8,10,10,14,14,9,12,11,15,15,10,11,12,15,17,13,15,15,18,16,14,16,15,18,17,9,11,11,16,15,11,13,13,0,16,11,12,13,16,15,15,16,16,0,17,15,15,16,18,17,9,12,11,15,17,11,13,13,16,16,11,14,13,16,16,15,15,16,18,19,16,18,16,0,0,12,14,14,0,16,14,16,16,0,18,13,14,15,16,0,17,16,18,0,0,16,16,17,19,0,13,14,14,17,0,14,17,16,0,19,14,15,15,18,19,17,16,18,0,0,15,19,16,0,0,3,4,4,5,6,6,5,6,6,5,6,6,6,8,8,6,7,8,5,6,6,6,8,7,6,8,8,5,6,6,6,8,7,6,8,8,6,8,8,8,9,9,8,9,9,6,8,7,7,9,8,8,9,9,5,6,6,6,8,7,6,8,8,6,8,8,8,9,9,7,8,9,6,8,8,8,9,9,8,9,9,1,4,4,4,7,7,5,7,7,5,8,8,8,10,10,7,10,10,5,8,8,7,10,10,8,10,10,5,8,8,8,11,10,8,10,10,8,10,10,10,12,13,10,13,13,7,10,10,10,13,12,10,13,13,5,8,8,8,11,10,8,10,11,7,10,10,10,13,13,10,12,13,8,11,11,10,13,13,10,13,12,5,12,17,16,16,17,17,17,17,17,4,7,11,11,12,9,17,10,17,17,7,7,8,9,7,9,11,10,15,17,7,9,10,11,10,12,14,12,16,17,7,8,5,7,4,7,7,8,16,16,6,10,9,10,7,10,11,11,16,17,6,8,8,9,5,7,5,8,16,17,5,5,8,7,6,7,7,6,6,14,12,10,12,11,7,11,4,4,2,7,17,15,15,15,8,15,6,8,5,9,3,9,14,13,14,13,16,12,13,14,5,4,6,6,8,9,11,10,12,15,10,5,5,6,6,8,10,10,13,16,10,6,6,6,6,8,9,9,12,14,13,7,6,6,4,6,6,7,11,14,10,7,7,7,6,6,6,7,10,13,15,10,9,8,5,6,5,6,10,14,10,9,8,8,6,6,5,4,6,11,11,11,12,11,10,9,9,5,5,9,10,12,15,13,13,13,13,8,7,7,3,5,5,7,7,8,8,8,8,8,8,9,8,8,9,9,9,5,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,10,9,9,9,9,9,9,9,9,9,9,10,9,9,9,10,9,9,10,9,9,9,9,9,9,9,9,9,10,10,10,9,10,9,10,10,9,9,9,9,9,9,9,9,9,10,10,9,10,10,9,9,10,1,4,4,7,7,8,9,8,8,9,8,9,8,9,9,4,7,6,8,8,9,9,9,9,9,9,9,9,9,9,4,7,6,9,9,10,10,9,9,10,10,10,10,11,11,7,9,8,10,10,11,11,10,10,11,11,11,11,11,11,7,8,9,10,10,11,11,10,10,11,11,11,11,11,12,8,10,10,11,11,12,12,11,11,12,12,12,12,13,12,8,10,10,11,11,12,11,11,11,11,12,12,12,12,13,8,9,9,11,10,11,11,12,12,12,12,13,12,13,12,8,9,9,11,11,11,11,12,12,12,12,12,13,13,13,9,10,10,11,12,12,12,12,12,13,13,13,13,13,13,9,10,10,11,11,12,12,12,12,13,13,13,13,14,13,10,10,10,12,11,12,12,13,13,13,13,13,13,13,13,10,10,11,11,11,12,12,13,13,13,13,13,13,13,13,10,11,11,12,12,13,12,12,13,13,13,13,13,13,14,10,11,11,12,12,13,12,13,13,13,14,13,13,14,13,1,3,2,9,8,15,15,15,15,15,15,15,15,15,15,4,8,9,13,14,14,14,14,14,14,14,14,14,14,14,5,8,9,14,14,14,14,14,14,14,14,14,14,14,14,11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,11,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,3,5,5,6,6,7,7,7,7,7,7,5,6,5,7,7,7,7,8,7,8,8,5,5,6,6,7,7,7,7,7,8,8,6,7,7,7,7,8,7,8,8,8,8,6,6,7,7,7,7,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,7,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,1,4,4,6,6,8,8,9,9,10,10,4,6,6,7,7,9,9,10,10,11,11,4,6,6,7,7,9,9,10,10,11,11,6,8,8,9,9,10,10,11,11,12,12,6,8,8,9,9,10,10,11,11,12,12,8,9,9,10,10,11,11,12,12,13,13,8,9,9,10,10,11,11,12,12,13,13,10,10,10,11,11,13,13,13,13,15,14,9,10,10,12,11,12,13,13,13,14,15,11,12,12,13,13,13,13,15,14,15,15,11,11,12,13,13,14,14,14,15,15,15,3,4,4,6,6,7,7,8,8,8,8,4,5,5,7,6,8,8,8,8,8,8,4,5,5,6,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,7,8,8,8,8,8,8,9,9,9,9,7,8,8,8,8,8,8,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+254861);
/* memory initializer */ allocate([9,1,4,4,5,7,7,5,7,7,5,9,8,7,10,10,8,10,10,5,8,9,7,10,10,7,10,9,4,8,8,9,11,11,8,11,11,7,11,11,10,10,13,10,13,13,7,11,11,10,13,12,10,13,13,5,9,8,8,11,11,9,11,11,7,11,11,10,13,13,10,12,13,7,11,11,10,13,13,9,13,10,3,4,4,5,5,7,7,9,9,4,5,4,6,6,7,7,9,9,4,4,5,6,6,7,8,9,9,5,6,6,7,7,8,8,10,10,5,6,6,7,7,8,8,10,10,7,8,7,8,8,10,9,11,11,7,7,8,8,8,9,10,10,11,9,9,9,10,10,11,11,12,11,9,9,9,10,10,11,11,11,12,2,3,3,6,6,8,8,10,10,4,5,5,8,7,8,8,11,11,3,5,5,7,8,8,8,11,11,6,8,7,9,9,10,9,12,11,6,7,8,9,9,9,10,11,12,8,8,8,10,9,12,11,13,13,8,8,9,9,10,11,12,13,13,10,11,11,12,12,13,13,14,14,10,10,11,11,12,13,13,14,14,4,5,5,8,8,6,7,6,9,9,6,6,7,9,9,8,9,9,11,11,8,9,9,11,11,6,7,7,9,9,7,8,8,10,10,7,7,8,9,10,9,10,10,11,11,9,9,10,11,12,6,7,7,9,9,7,8,7,10,9,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,11,12,13,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,11,13,12,11,12,12,13,13,5,7,7,9,9,7,8,7,10,10,7,7,8,10,10,9,10,10,12,11,9,10,10,11,12,7,8,8,10,10,8,8,9,11,11,8,9,9,11,11,10,10,11,12,13,10,10,11,12,12,6,7,7,10,10,7,9,8,11,10,8,8,9,10,11,10,11,10,13,11,10,11,11,12,12,9,10,10,12,12,10,10,11,13,13,10,11,11,12,13,12,12,12,13,14,12,12,13,14,14,9,10,10,12,12,9,10,10,13,12,10,11,11,13,13,11,12,11,14,12,12,13,13,14,14,6,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,11,12,6,7,7,10,10,8,9,8,11,10,7,8,9,10,11,10,11,11,12,12,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,8,11,11,10,11,10,13,12,10,11,11,13,12,9,10,10,12,12,10,11,11,13,12,9,10,10,12,13,12,13,12,14,14,11,11,12,12,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,12,12,14,14,12,13,12,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,12,13,14,15,12,12,13,14,14,9,10,10,12,12,9,11,10,13,12,10,10,11,12,13,12,13,12,14,13,12,12,13,14,15,11,12,12,14,13,11,12,12,14,14,12,13,13,14,14,13,13,14,14,16,13,14,14,15,15,11,12,11,13,13,11,12,11,14,13,12,12,13,14,15,12,14,12,15,12,13,14,15,15,16,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,13,11,12,12,13,13,9,10,10,12,12,10,11,10,13,12,9,10,11,12,13,12,13,12,14,14,12,12,13,13,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,12,14,14,12,13,13,14,14,11,11,11,13,13,12,13,12,14,14,11,11,12,13,14,14,14,14,16,15,12,12,14,12,15,11,12,12,13,14,12,13,13,14,15,11,12,12,14,14,13,14,14,16,16,13,14,13,16,13,2,5,4,8,8,5,7,6,9,9,5,6,7,9,9,8,9,9,13,12,8,9,10,12,13,5,7,7,10,9,7,9,9,11,11,7,8,9,11,11,10,11,11,14,14,9,10,11,13,14,5,7,7,9,10,6,9,8,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,13,8,10,10,13,13,10,11,11,15,15,9,11,11,14,14,13,14,14,17,16,12,13,14,16,16,8,10,10,13,14,9,11,11,14,15,10,11,12,14,15,12,14,13,16,15,13,14,14,15,17,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,14,14,10,11,11,14,14,7,9,9,12,11,9,11,11,13,13,9,11,11,13,13,11,13,13,14,15,11,12,13,15,16,6,9,9,11,12,8,11,10,13,12,9,11,11,13,14,11,13,12,16,14,11,13,13,15,16,10,12,11,14,15,11,13,13,15,17,11,13,13,17,16,15,15,16,17,16,14,15,16,18,0,9,11,11,14,15,10,12,12,16,15,11,13,13,16,16,13,15,14,18,15,14,16,16,0,0,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,11,11,14,14,10,11,12,14,14,6,9,9,11,11,9,11,11,13,13,8,10,11,12,13,11,13,13,16,15,11,12,13,14,16,7,9,9,11,12,9,11,11,13,13,9,11,11,13,13,11,13,13,16,15,11,13,12,15,15,9,11,11,15,14,11,13,13,17,16,10,12,13,15,16,14,16,16,0,18,14,14,15,15,17,10,11,12,15,15,11,13,13,16,16,11,13,13,16,16,14,16,16,19,17,14,15,15,17,17,8,10,10,14,14,10,12,11,15,15,10,11,12,16,15,14,15,15,18,20,13,14,16,17,18,9,11,11,15,16,11,13,13,17,17,11,13,13,17,16,15,16,16,0,0,15,16,16,0,0,9,11,11,15,15,10,13,12,17,15,11,13,13,17,16,15,17,15,20,19,15,16,16,19,0,13,15,14,0,17,14,15,16,0,20,15,16,16,0,19,17,18,0,0,0,16,17,18,0,0,12,14,14,19,18,13,15,14,0,17,14,15,16,19,19,16,18,16,0,19,19,20,17,20,0,8,10,10,13,14,10,11,11,15,15,10,12,12,15,16,14,15,14,19,16,14,15,15,0,18,9,11,11,16,15,11,13,13,0,16,11,12,13,16,17,14,16,17,0,19,15,16,16,18,0,9,11,11,15,16,11,13,13,16,16,11,14,13,18,17,15,16,16,18,20,15,17,19,0,0,12,14,14,17,17,14,16,15,0,0,13,14,15,19,0,16,18,20,0,0,16,16,18,18,0,12,14,14,17,20,14,16,16,19,0,14,16,14,0,20,16,20,17,0,0,17,0,15,0,19,3,4,4,5,6,6,5,6,6,5,6,6,6,8,8,6,7,8,5,6,6,6,8,7,6,8,8,5,6,6,6,8,8,6,8,8,6,8,8,8,9,9,8,9,9,6,7,7,7,9,8,8,9,9,5,6,6,6,8,7,6,8,8,6,8,8,8,9,9,7,8,9,6,8,8,8,9,9,8,9,9,1,4,4,4,8,7,5,7,7,5,8,8,8,10,10,7,9,10,5,8,8,7,10,9,8,10,10,5,8,8,8,10,10,8,10,10,8,10,10,10,12,13,10,13,13,7,10,10,10,13,11,10,13,13,5,8,8,8,11,10,8,10,10,7,10,10,10,13,13,10,11,13,8,10,11,10,13,13,10,13,12,4,11,16,13,17,13,17,16,17,17,4,7,9,9,13,10,16,12,16,17,7,6,5,7,8,9,12,12,16,17,6,9,7,9,10,10,15,15,17,17,6,7,5,7,5,7,7,10,16,17,7,9,8,9,8,10,11,11,15,17,7,7,7,8,5,8,8,9,15,17,8,7,9,9,7,8,7,2,7,15,14,13,13,15,5,10,4,3,6,17,17,15,13,17,7,11,7,6,9,16,3,8,13,12,14,12,16,11,13,14,5,4,5,6,7,8,10,9,12,15,10,5,5,5,6,8,9,9,13,15,10,5,5,6,6,7,8,8,11,13,12,7,5,6,4,6,7,7,11,14,11,7,7,6,6,6,7,6,10,14,14,9,8,8,6,7,7,7,11,16,11,8,8,7,6,6,7,4,7,12,10,10,12,10,10,9,10,5,6,9,10,12,15,13,14,14,14,8,7,8,2,5,5,7,7,8,8,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,8,9,9,9,9,9,9,9,9,7,7,7,8,8,9,8,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,9,8,9,9,9,9,9,9,9,9,9,9,8,8,8,8,9,9,9,9,9,9,9,9,10,9,10,10,10,8,8,8,9,8,9,9,9,9,9,9,9,10,9,10,9,10,8,9,9,9,9,9,9,9,9,9,10,9,10,10,10,10,10,8,9,9,9,9,9,9,10,9,10,9,10,10,10,10,10,10,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,9,10,9,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,9,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,7,8,7,9,8,9,9,4,7,6,9,8,10,10,9,8,9,9,9,9,9,8,5,6,6,8,9,10,10,9,9,9,10,10,10,10,11,7,8,8,10,10,11,11,10,10,11,11,11,12,11,11,7,8,8,10,10,11,11,10,10,11,11,12,11,11,11,8,9,9,11,11,12,12,11,11,12,11,12,12,12,12,8,9,10,11,11,12,12,11,11,12,12,12,12,12,12,8,9,9,10,10,12,11,12,12,12,12,12,12,12,13,8,9,9,11,11,11,11,12,12,12,12,13,12,13,13,9,10,10,11,11,12,12,12,13,12,13,13,13,14,13,9,10,10,11,11,12,12,12,13,13,12,13,13,14,13,9,11,10,12,11,13,12,12,13,13,13,13,13,13,14,9,10,10,12,12,12,12,12,13,13,13,13,13,14,14,10,11,11,12,12,12,13,13,13,14,14,13,14,14,14,10,11,11,12,12,12,12,13,12,13,14,13,14,14,14,1,3,2,12,10,13,13,13,13,13,13,13,13,4,9,9,13,13,13,13,13,13,13,13,13,13,5,10,9,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,5,5,6,6,7,7,7,7,7,7,5,6,5,7,6,7,7,8,8,8,8,5,5,5,6,6,7,7,8,8,8,8,6,7,6,7,7,8,8,8,8,8,8,6,6,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,4,4,6,6,8,8,9,9,10,10,4,6,6,7,7,9,9,10,10,11,11,4,6,6,7,7,9,9,10,10,11,11,6,8,7,9,9,10,10,11,11,13,12,6,8,8,9,9,10,10,11,11,12,13,8,9,9,10,10,12,12,13,12,14,13,8,9,9,10,10,12,12,13,13,14,14,9,11,11,12,12,13,13,14,14,15,14,9,11,11,12,12,13,13,14,14,15,14,11,12,12,13,13,14,14,15,14,15,14,11,11,12,13,13,14,14,14,14,15,15,2,4,4,6,6,7,7,8,8,8,8,4,5,5,7,7,8,8,9,8,8,9,4,5,5,7,7,8,8,9,9,8,9,6,7,7,8,8,9,8,9,9,9,9,6,7,7,8,8,9,9,9,9,9,9,7,8,8,9,9,9,9,9,9,9,9,7,8,8,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,8,9,9,9,9,9,9,10,10,10,10,1,4,4,5,7,7,5,7,7,5,9,9,8,11,10,7,11,10,5,9,9,7,10,10,8,10,11,4,9,9,9,12,12,9,12,12,8,12,12,11,12,12,10,12,13,7,12,12,11,12,12,10,12,13,4,9,9,9,12,12,9,12,12,7,12,11,10,13,13,11,12,12,7,12,12,10,13,13,11,12,12,3,4,4,5,5,7,7,9,9,4,5,4,6,6,7,7,9,9,4,4,5,6,6,7,7,9,9,5,6,6,7,7,8,8,10,10,6,6,6,7,7,8,8,10,10,7,7,7,8,8,9,9,11,10,7,7,7,8,8,9,9,10,11,9,9,9,10,10,11,10,11,11,9,9,9,10,10,11,10,11,11,2,3,3,6,6,8,8,10,10,4,5,5,8,7,8,8,11,10,3,5,5,7,8,8,8,10,11,6,8,7,10,9,10,10,11,11,6,7,8,9,9,9,10,11,12,8,8,8,10,10,11,11,13,12,8,8,9,9,10,11,11,12,13,10,11,10,12,11,13,12,14,14,10,10,11,11,12,12,13,14,14,4,5,5,8,8,6,7,6,9,9,6,6,7,9,9,8,9,9,11,11,8,9,9,11,11,6,7,7,9,9,7,8,8,10,10,6,7,8,9,10,9,10,10,11,12,9,9,10,11,12,6,7,7,9,9,6,8,7,10,9,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,8,9,9,12,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,11,12,13,14,8,9,9,11,12,9,10,10,12,12,9,10,10,12,12,11,12,11,14,13,11,12,12,13,13,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,12,12,7,8,8,10,10,8,8,9,10,11,8,9,9,11,11,10,10,11,11,13,10,11,11,12,13,6,7,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,12,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,11,13,12,15,12,13,13,14,15,9,10,10,12,12,9,11,10,13,12,10,11,11,13,13,11,13,11,14,12,12,13,13,14,15,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,9,10,10,12,12,6,8,7,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,12,12,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,8,11,10,10,11,11,13,12,10,11,10,13,11,9,10,10,12,12,10,11,11,13,12,9,10,10,12,13,12,13,13,14,15,11,11,13,12,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,14,12,13,11,14,12,8,9,9,12,12,9,10,10,12,12,9,10,10,12,12,12,12,12,14,14,11,12,12,14,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,12,12,12,13,14,15,12,13,13,15,14,9,10,10,12,12,10,11,10,13,12,10,11,11,12,13,12,13,12,15,13,12,13,13,14,15,11,12,12,14,13,11,12,12,14,15,12,13,13,15,14,13,12,14,12,16,13,14,14,15,15,11,11,12,14,14,11,12,11,14,13,12,13,13,14,15,13,14,12,16,12,14,14,15,16,16,8,9,9,11,12,9,10,10,12,12,9,10,10,12,13,11,12,12,13,13,12,12,13,14,14,9,10,10,12,12,10,11,10,13,12,10,10,11,12,13,12,13,13,15,14,12,12,13,13,15,9,10,10,12,13,10,11,11,12,13,10,11,11,13,13,12,13,13,14,15,12,13,12,15,14,11,12,11,14,13,12,13,13,15,14,11,11,12,13,14,14,15,14,16,15,13,12,14,13,16,11,12,12,13,14,12,13,13,14,15,11,12,11,14,14,14,14,14,15,16,13,15,12,16,12,2,4,5,8,8,5,7,6,9,9,5,6,7,9,9,8,10,9,13,12,8,9,10,12,12,5,7,7,10,10,7,9,9,11,11,6,8,9,11,11,10,11,11,14,14,9,10,11,13,14,5,7,7,9,10,7,9,8,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,14,8,10,10,13,13,10,11,11,15,14,9,11,11,14,14,13,14,14,17,16,12,13,13,15,16,8,10,10,13,13,9,11,11,14,15,10,11,11,14,15,12,14,13,16,16,13,15,14,15,17,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,11,11,14,14,10,11,12,14,14,7,9,9,12,11,9,11,11,13,13,9,11,11,13,13,12,13,13,15,16,11,12,13,15,16,6,9,9,11,11,8,11,10,13,12,9,11,11,13,14,11,13,12,16,14,11,13,13,16,17,10,12,11,15,15,11,13,13,16,16,11,13,13,17,16,14,15,15,17,17,14,16,16,17,18,9,11,11,14,15,10,12,12,15,15,11,13,13,16,17,13,15,13,17,15,14,15,16,18,0,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,11,11,14,14,10,11,12,14,15,6,9,9,12,11,9,11,11,13,13,8,10,11,12,13,11,13,13,16,15,11,12,13,14,15,7,9,9,11,12,9,11,11,13,13,9,11,11,13,13,11,13,13,15,16,11,13,13,15,14,9,11,11,15,14,11,13,13,17,15,10,12,12,15,15,14,16,16,17,17,13,13,15,15,17,10,11,12,15,15,11,13,13,16,16,11,13,13,15,15,14,15,15,18,18,14,15,15,17,17,8,10,10,13,13,10,12,11,15,15,10,11,12,15,15,14,15,15,18,18,13,14,14,18,18,9,11,11,15,16,11,13,13,17,17,11,13,13,16,16,15,15,16,17,0,14,15,17,0,0,9,11,11,15,15,10,13,12,18,16,11,13,13,15,16,14,16,15,20,20,14,15,16,17,0,13,14,14,20,16,14,15,16,19,18,14,15,15,19,0,18,16,0,20,20,16,18,18,0,0,12,14,14,18,18,13,15,14,18,16,14,15,16,18,20,16,19,16,0,17,17,18,18,19,0,8,10,10,14,14,10,11,11,14,15,10,11,12,15,15,13,15,14,19,17,13,15,15,17,0,9,11,11,16,15,11,13,13,16,16,10,12,13,15,17,14,16,16,18,18,14,15,15,18,0,9,11,11,15,15,11,13,13,16,17,11,13,13,18,17,14,18,16,18,18,15,17,17,18,0,12,14,14,18,18,14,15,15,20,0,13,14,15,17,0,16,18,17,0,0,16,16,0,17,20,12,14,14,18,18,14,16,15,0,18,14,16,15,18,0,16,19,17,0,0,17,18,16,0,0,3,4,4,5,6,6,5,6,6,5,6,6,6,8,8,6,7,8,5,6,6,6,8,7,6,8,8,5,6,6,6,8,8,6,8,8,6,8,8,8,9,9,8,9,9,6,8,7,7,9,8,8,9,9,5,6,6,6,8,7,6,8,8,6,8,7,8,9,9,7,8,9,6,8,8,8,9,9,8,9,9,1,4,4,5,8,7,5,7,7,5,8,8,8,10,10,7,9,10,5,8,8,7,10,9,8,10,10,5,8,8,8,10,10,8,10,10,8,10,10,10,12,13,10,13,13,7,10,10,10,13,11,10,13,13,4,8,8,8,11,10,8,10,10,7,10,10,10,13,13,10,11,13,8,10,11,10,13,13,10,13,12,4,10,17,13,17,13,17,17,17,17,3,6,8,9,11,9,15,12,16,17,6,5,5,7,7,8,10,11,17,17,7,8,7,9,9,10,13,13,17,17,8,6,5,7,4,7,5,8,14,17,9,9,8,9,7,9,8,10,16,17,12,10,7,8,4,7,4,7,16,17,12,11,9,10,6,9,5,7,14,17,14,13,10,15,4,8,3,5,14,17,17,14,11,15,6,10,6,8,15,17,3,8,12,12,13,12,11,13,5,4,6,7,8,8,9,13,9,5,4,5,5,7,9,13,9,6,5,6,6,7,8,12,12,7,5,6,4,5,8,13,11,7,6,6,5,5,6,12,10,8,8,7,7,5,3,8,10,12,13,12,12,9,6,7,2,5,5,7,7,7,7,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,7,7,7,8,8,8,8,9,9,9,9,10,9,10,9,10,10,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,8,9,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,8,8,8,9,9,9,9,9,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,10,10,10,10,10,10,10,10,11,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,10,10,10,10,10,10,10,10,10,10,11,10,10,10,1,4,4,6,6,7,7,9,8,10,8,10,9,11,11,4,7,6,8,7,9,9,10,10,11,10,11,10,12,10,4,6,7,8,8,9,9,10,10,11,11,11,11,12,12,6,8,8,10,9,11,10,12,11,12,12,12,12,13,13,6,8,8,10,10,10,11,11,11,12,12,13,12,13,13,8,9,9,11,11,12,11,12,12,13,13,13,13,13,13,8,9,9,11,11,11,12,12,12,13,13,13,13,13,13,9,10,10,12,11,13,13,13,13,14,13,13,14,14,14,9,10,11,11,12,12,13,13,13,13,13,14,15,14,14,10,11,11,12,12,13,13,14,14,14,14,14,15,16,16,10,11,11,12,13,13,13,13,15,14,14,15,16,15,16,10,12,12,13,13,14,14,14,15,15,15,15,15,15,16,11,12,12,13,13,14,14,14,15,15,15,16,15,17,16,11,12,12,13,13,13,15,15,14,16,16,16,16,16,17,11,12,12,13,13,14,14,15,14,15,15,17,17,16,16,1,3,3,12,12,12,12,12,12,12,12,12,12,3,12,11,12,12,12,12,12,12,12,12,12,12,4,11,10,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,6,5,6,6,5,5,6,6,6,1,4,4,6,6,8,8,9,9,11,10,13,13,4,6,5,8,8,9,9,10,10,11,11,14,14,4,6,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,15,15,6,8,8,9,9,10,11,11,11,12,12,15,15,8,9,9,11,10,11,11,12,12,13,13,16,16,8,9,9,10,10,11,11,12,12,13,13,16,16,10,10,10,12,11,12,12,13,13,14,14,16,16,10,10,10,11,12,12,12,13,13,13,14,16,17,11,12,11,12,12,13,13,14,14,15,14,18,17,11,11,12,12,12,13,13,14,14,14,15,19,18,14,15,14,15,15,17,16,17,17,17,17,21,0,14,15,15,16,16,16,16,17,17,18,17,20,21,2,3,3,6,6,7,7,9,9,4,5,5,7,7,8,8,10,9,4,5,5,7,7,8,8,10,10,6,7,7,8,8,9,9,11,10,6,7,7,8,8,9,9,10,11,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,10,10,11,10,11,11,12,12,9,10,10,10,11,11,11,12,12,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,9,9,9,11,11,8,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,7,8,10,10,9,10,10,11,12,9,10,10,11,12,5,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,12,11,9,10,9,12,12,9,10,10,13,12,9,10,10,12,12,12,12,12,14,14,11,12,12,13,14,9,9,10,12,12,9,10,10,13,13,9,10,10,12,13,11,12,12,14,13,11,12,12,14,14,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,9,10,10,12,12,7,8,8,11,10,8,8,9,11,11,8,9,9,11,11,11,11,11,12,13,10,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,13,13,9,11,10,13,12,10,11,11,13,14,10,11,11,14,13,12,12,13,12,15,12,13,13,15,15,9,10,10,12,13,10,11,10,13,12,10,11,11,13,14,12,13,11,15,13,13,13,13,15,15,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,10,10,11,12,13,6,8,8,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,7,8,8,10,11,8,9,9,11,11,8,9,8,11,11,10,11,11,13,13,11,12,11,13,12,9,10,10,13,12,10,11,11,14,13,10,10,11,12,13,12,13,13,15,15,12,11,13,13,14,9,10,11,12,13,10,11,11,13,14,10,11,11,13,13,12,13,13,15,15,12,13,12,15,12,8,9,9,12,12,9,11,10,13,13,9,10,10,13,13,12,13,13,15,15,12,12,12,14,14,9,10,10,13,13,10,11,11,13,14,10,11,11,14,13,13,13,14,14,16,13,13,13,15,15,9,10,10,13,13,10,11,10,14,13,10,11,11,13,14,12,14,13,16,14,12,13,13,14,15,11,12,12,15,14,11,12,13,14,15,12,13,13,16,15,14,12,15,12,16,14,15,15,16,16,11,12,12,14,14,11,13,12,15,14,12,13,13,15,16,13,15,13,17,13,14,15,15,16,17,8,9,9,12,12,9,10,10,12,13,9,10,10,13,13,12,12,12,14,14,12,13,13,15,15,9,10,10,13,12,10,11,11,14,13,10,10,11,13,14,13,13,13,15,15,12,13,14,14,16,9,10,10,13,13,10,11,11,13,14,10,11,11,14,14,13,13,13,15,15,13,14,13,16,14,11,12,12,15,14,12,13,13,16,15,11,12,13,14,15,14,15,15,17,16,13,13,15,13,16,11,12,13,14,15,13,13,13,15,16,11,13,12,15,14,14,15,15,16,16,14,15,12,17,13,2,4,4,8,8,5,7,7,9,9,5,7,7,9,9,8,10,9,12,12,8,9,10,12,12,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,14,14,9,10,11,13,14,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,9,11,10,14,13,10,11,11,14,14,8,10,10,14,13,10,12,12,15,14,9,11,11,15,14,13,14,14,17,17,12,14,14,16,16,8,10,10,14,14,9,11,11,14,15,10,12,12,14,15,12,14,13,16,16,13,14,15,15,18,4,7,7,10,10,7,9,9,12,11,7,9,9,11,12,10,12,11,15,14,10,11,12,14,15,7,9,9,12,12,9,11,12,13,13,9,11,12,13,13,12,13,13,15,16,11,13,13,15,16,7,9,9,12,12,9,11,10,13,12,9,11,12,13,14,11,13,12,16,14,12,13,13,15,16,10,12,12,16,15,11,13,13,17,16,11,13,13,17,16,14,15,15,17,17,14,16,16,18,20,9,11,11,15,16,11,13,12,16,16,11,13,13,16,17,14,15,14,18,16,14,16,16,17,20,5,7,7,10,10,7,9,9,12,11,7,9,10,11,12,10,12,11,15,15,10,12,12,14,14,7,9,9,12,12,9,12,11,14,13,9,10,11,12,13,12,13,14,16,16,11,12,13,14,16,7,9,9,12,12,9,12,11,13,13,9,12,11,13,13,11,13,13,16,16,12,13,13,16,15,9,11,11,16,14,11,13,13,16,16,11,12,13,16,16,14,16,16,17,17,13,14,15,16,17,10,12,12,15,15,11,13,13,16,17,11,13,13,16,16,14,16,15,19,19,14,15,15,17,18,8,10,10,14,14,10,12,12,15,15,10,12,12,16,16,14,16,15,20,19,13,15,15,17,16,9,12,12,16,16,11,13,13,16,18,11,14,13,16,17,16,17,16,20,0,15,16,18,18,20,9,11,11,15,15,11,14,12,17,16,11,13,13,17,17,15,17,15,20,20,14,16,16,17,0,13,15,14,18,16,14,15,16,0,18,14,16,16,0,0,18,16,0,0,20,16,18,18,0,0,12,14,14,17,18,13,15,14,20,18,14,16,15,19,19,16,20,16,0,18,16,19,17,19,0,8,10,10,14,14,10,12,12,16,15,10,12,12,16,16,13,15,15,18,17,14,16,16,19,0,9,11,11,16,15,11,14,13,18,17,11,12,13,17,18,14,17,16,18,18,15,16,17,18,18,9,12,12,16,16,11,13,13,16,18,11,14,13,17,17,15,16,16,18,20,16,17,17,20,20,12,14,14,18,17,14,16,16,0,19,13,14,15,18,0,16,0,0,0,0,16,16,0,19,20,13,15,14,0,0,14,16,16,18,19,14,16,15,0,20,16,20,18,0,20,17,20,17,0,0,2,5,5,5,6,6,5,6,6,5,6,6,7,8,8,6,8,8,5,6,6,6,8,8,7,8,8,5,7,6,6,8,8,6,8,8,6,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,6,6,6,8,8,6,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,10,11,8,10,11,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,11,11,11,13,14,11,15,14,8,11,11,10,13,12,11,14,14,4,8,8,8,11,11,8,11,11,7,11,11,11,15,14,10,12,14,8,11,11,11,14,14,11,14,13,14,17,15,17,16,14,13,16,10,7,7,10,13,10,15,16,9,4,4,6,5,7,9,16,12,8,7,8,8,8,11,16,14,7,4,6,3,5,8,15,13,8,5,7,4,5,7,16,12,9,6,8,3,3,5,16,14,13,7,10,5,5,7,15,6,9,13,12,14,11,10,13,8,4,5,7,8,7,8,12,11,4,3,5,5,7,9,14,11,6,5,6,6,6,7,13,13,7,5,6,4,5,7,14,11,7,6,6,5,5,6,13,9,7,8,6,7,5,3,9,9,12,13,12,14,10,6,7,2,5,5,7,6,7,7,8,8,8,8,9,9,9,9,9,9,5,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,10,5,6,6,7,7,8,8,8,8,9,8,9,9,9,9,10,9,7,7,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,7,7,7,8,8,8,8,9,9,9,9,10,9,10,10,10,10,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,7,8,8,9,8,9,9,9,9,10,9,10,10,10,10,10,10,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,8,9,8,9,9,9,9,10,9,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,11,11,11,10,11,1,4,4,6,6,7,6,8,7,9,8,10,9,11,11,4,7,7,8,7,9,9,10,10,11,11,11,11,12,12,4,7,7,7,7,9,9,10,10,11,11,12,12,12,11,6,8,8,9,9,10,10,11,11,12,12,13,12,13,13,6,8,8,9,9,10,11,11,11,12,12,13,14,13,13,8,9,9,11,11,12,12,12,13,14,13,14,14,14,15,8,9,9,11,11,11,12,13,14,13,14,15,17,14,15,9,10,10,12,12,13,13,13,14,15,15,15,16,16,16,9,11,11,12,12,13,13,14,14,14,15,16,16,16,16,10,12,12,13,13,14,14,15,15,15,16,17,17,17,17,10,12,11,13,13,15,14,15,14,16,17,16,16,16,16,11,13,12,14,14,14,14,15,16,17,16,17,17,17,17,11,13,12,14,14,14,15,17,16,17,17,17,17,17,17,12,13,13,15,16,15,16,17,17,16,16,17,17,17,17,12,13,13,15,15,15,16,17,17,17,16,17,16,17,17,1,3,3,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,4,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,6,5,6,6,5,5,6,6,6,1,4,4,6,6,8,8,9,9,10,11,13,14,4,6,5,8,8,9,9,10,10,11,11,14,14,4,6,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,15,15,6,8,8,9,9,10,11,11,11,12,12,15,15,8,9,9,11,10,11,11,12,12,13,13,15,16,8,9,9,10,11,11,11,12,12,13,13,16,16,10,10,11,11,11,12,12,13,13,13,14,17,16,9,10,11,12,11,12,12,13,13,13,13,16,18,11,12,11,12,12,13,13,13,14,15,14,17,17,11,11,12,12,12,13,13,13,14,14,15,18,17,14,15,15,15,15,16,16,17,17,19,18,0,20,14,15,14,15,15,16,16,16,17,18,16,20,18,2,3,3,6,6,7,7,9,9,4,5,5,7,7,8,8,10,10,4,5,5,7,7,8,8,10,10,6,7,7,8,8,9,9,11,10,6,7,7,8,8,9,9,10,10,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,10,10,11,10,11,11,12,12,9,10,10,10,10,11,11,12,12,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,9,9,9,11,11,9,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,7,8,10,10,9,10,10,11,12,9,10,10,11,12,5,7,7,9,9,7,8,7,10,10,7,8,8,10,10,9,10,9,12,11,9,10,10,12,11,9,10,9,12,12,9,10,10,13,12,9,10,10,12,13,12,12,12,14,14,11,12,12,13,14,9,9,10,12,12,9,10,10,12,12,9,10,10,12,13,11,12,11,14,13,12,12,12,14,13,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,9,10,10,12,12,7,8,8,11,10,8,8,9,11,11,8,9,9,11,11,11,11,11,12,13,10,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,13,13,9,11,10,13,12,10,11,11,13,13,10,11,11,13,13,12,12,13,12,15,12,13,13,15,15,9,10,10,12,13,10,11,10,13,12,10,11,11,13,14,12,13,11,15,13,12,13,13,15,15,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,12,10,10,11,12,12,6,8,8,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,13,13,11,11,11,13,12,9,10,10,13,12,10,11,11,14,13,10,10,11,12,13,12,13,13,15,15,12,11,13,13,14,9,10,11,12,13,10,11,11,13,13,10,11,11,13,13,12,13,13,15,15,12,13,12,15,12,8,9,9,12,12,9,11,10,13,13,9,10,10,13,13,12,13,13,15,14,12,12,12,14,13,9,10,10,13,12,10,11,11,13,13,10,11,11,14,12,13,13,14,14,16,12,13,13,15,15,9,10,10,13,13,10,11,10,14,13,10,11,11,13,14,12,14,13,15,14,13,13,13,15,15,11,13,12,15,14,11,12,13,14,15,12,13,13,16,14,14,12,15,12,16,14,15,15,17,15,11,12,12,14,14,11,13,11,15,14,12,13,13,15,15,13,15,12,17,13,14,15,15,16,16,8,9,9,12,12,9,10,10,12,13,9,10,10,13,13,12,12,12,14,14,12,13,13,15,15,9,10,10,13,12,10,11,11,14,13,10,10,11,13,14,12,13,13,15,15,12,12,13,14,16,9,10,10,13,13,10,11,11,13,14,10,11,11,14,13,12,13,13,14,15,13,14,13,16,14,11,12,12,14,14,12,13,13,15,14,11,12,13,14,15,14,15,15,16,16,13,13,15,13,16,11,12,12,14,15,12,13,13,14,15,11,13,12,15,14,14,15,15,16,16,14,15,12,16,13,2,4,4,7,7,5,7,7,9,9,5,7,7,9,9,8,9,9,12,12,8,9,9,11,12,5,7,7,10,10,7,9,9,11,11,7,9,9,10,11,10,11,11,13,13,9,10,11,13,13,5,7,7,10,10,7,9,9,11,10,7,9,9,11,11,9,11,10,13,13,10,11,11,14,13,8,10,10,14,13,10,11,11,15,14,9,11,11,14,14,13,14,13,16,16,12,13,13,15,15,8,10,10,13,14,9,11,11,14,14,10,11,11,14,15,12,13,13,15,15,13,14,14,15,16,5,7,7,10,10,7,9,9,11,11,7,9,9,11,12,10,11,11,14,14,10,11,11,14,14,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,12,12,13,15,15,11,12,13,15,16,7,9,9,11,11,8,11,10,13,12,9,11,11,13,13,11,13,12,15,13,11,13,13,15,16,9,12,11,15,14,11,12,13,16,15,11,13,13,15,16,14,14,15,17,16,13,15,16,0,17,9,11,11,15,15,10,13,12,15,15,11,13,13,15,16,13,15,13,16,15,14,16,15,0,19,5,7,7,10,10,7,9,9,11,11,7,9,9,11,11,10,12,11,14,14,10,11,12,14,14,7,9,9,12,12,9,11,11,14,13,9,10,11,12,13,11,13,13,16,16,11,12,13,13,16,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,11,13,13,15,15,12,13,12,15,14,9,11,11,15,14,11,13,12,16,16,10,12,12,15,15,13,15,15,17,19,13,14,15,16,17,10,12,12,15,15,11,13,13,16,16,11,13,13,15,16,13,15,15,0,0,14,15,15,16,16,8,10,10,14,14,10,12,12,15,15,10,12,11,15,16,14,15,15,19,20,13,14,14,18,16,9,11,11,15,15,11,13,13,17,16,11,13,13,16,16,15,17,17,20,20,14,15,16,17,20,9,11,11,15,15,10,13,12,16,15,11,13,13,15,17,14,16,15,18,0,14,16,15,18,20,12,14,14,0,0,14,14,16,0,0,13,16,15,0,0,17,17,18,0,0,16,17,19,19,0,12,14,14,18,0,12,16,14,0,17,13,15,15,18,0,16,18,17,0,17,16,18,17,0,0,7,10,10,14,14,10,12,11,15,15,10,12,12,16,15,13,15,15,18,0,14,15,15,17,0,9,11,11,15,15,11,13,13,16,16,11,12,13,16,16,14,15,16,17,17,14,16,16,16,18,9,11,12,16,16,11,13,13,17,17,11,14,13,20,17,15,16,16,19,0,15,16,17,0,19,11,13,14,17,16,14,15,15,20,18,13,14,15,17,19,16,18,18,0,20,16,16,19,17,0,12,15,14,17,0,14,15,15,18,19,13,16,15,19,20,15,18,18,0,20,17,0,16,0,0,2,5,4,5,6,6,5,6,6,5,6,6,7,8,8,6,8,8,5,6,6,6,8,8,7,8,8,5,7,6,7,8,8,6,8,8,7,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,6,6,6,8,8,7,8,8,6,8,8,8,10,10,8,8,10,7,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,10,11,8,10,11,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,11,11,11,13,14,11,14,14,8,11,11,10,14,12,11,14,14,4,8,8,8,11,11,8,11,11,7,11,11,11,14,14,10,12,14,8,11,11,11,14,14,11,14,13,14,14,14,15,13,15,12,16,10,8,7,9,9,8,12,16,10,5,4,6,5,6,9,16,14,8,6,8,7,8,10,16,14,7,4,6,3,5,8,16,15,9,5,7,4,4,7,16,13,10,6,7,4,3,4,13,13,12,7,9,5,5,6,12,5,9,14,12,15,13,10,13,7,4,5,6,8,7,8,12,13,4,3,5,5,6,9,15,12,6,5,6,6,6,7,14,14,7,4,6,4,6,8,15,12,6,6,5,5,5,6,14,9,7,8,6,7,5,4,10,10,13,14,14,15,10,6,8,2,5,5,6,6,7,7,8,7,8,8,8,8,5,6,6,7,7,8,8,8,8,8,8,8,8,5,6,6,7,7,8,7,8,8,8,8,8,8,6,7,7,7,8,8,8,8,8,9,9,9,9,6,7,7,8,7,8,8,9,9,9,9,9,9,7,8,8,8,8,8,8,9,9,9,9,9,9,7,8,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,9,9,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,9,9,8,8,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,1,4,4,7,6,7,6,8,7,9,7,9,8,4,7,6,8,8,9,8,10,9,10,10,11,11,4,7,7,8,8,8,8,9,10,11,11,11,11,6,8,8,10,10,10,10,11,11,12,12,12,12,7,8,8,10,10,10,10,11,11,12,12,13,13,7,9,9,11,10,12,12,13,13,14,13,14,14,7,9,9,10,11,11,12,13,13,13,13,16,14,9,10,10,12,12,13,13,14,14,15,16,15,16,9,10,10,12,12,12,13,14,14,14,15,16,15,10,12,12,13,13,15,13,16,16,15,17,17,17,10,11,11,12,14,14,14,15,15,17,17,15,17,11,12,12,14,14,14,15,15,15,17,16,17,17,10,12,12,13,14,14,14,17,15,17,17,17,17,1,3,2,12,12,12,12,12,12,4,12,12,12,12,12,12,12,12,5,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,6,5,6,6,5,5,6,6,6,1,4,4,6,6,8,8,10,10,11,11,14,13,4,6,5,8,8,9,9,11,10,12,11,15,14,4,5,6,8,8,9,9,11,11,11,11,14,14,6,8,8,10,9,11,11,11,11,12,12,15,15,6,8,8,9,9,11,11,11,12,12,12,15,15,8,10,10,11,11,11,11,12,12,13,13,15,16,8,10,10,11,11,11,11,12,12,13,13,16,16,10,11,11,12,12,12,12,13,13,13,13,17,16,10,11,11,12,12,12,12,13,13,13,14,16,17,11,12,12,13,13,13,13,14,14,15,14,18,17,11,12,12,13,13,13,13,14,14,14,15,19,18,14,15,15,15,15,16,16,18,19,18,18,0,0,14,15,15,16,15,17,17,16,18,17,18], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+265101);
/* memory initializer */ allocate([0,0,1,4,4,7,7,8,8,9,9,4,6,5,8,8,8,8,10,10,4,5,6,8,8,8,8,10,10,7,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,8,8,8,9,9,10,11,12,12,8,8,8,9,9,10,10,12,12,10,10,10,11,11,12,12,13,13,10,10,10,11,11,12,12,13,13,4,5,5,8,8,5,7,6,9,9,5,6,7,9,9,9,9,9,11,11,9,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,7,8,10,10,10,10,10,11,12,9,10,10,11,12,5,7,7,9,9,6,8,7,10,10,7,8,8,10,10,9,10,10,12,11,9,10,10,12,11,9,10,10,12,12,10,10,10,13,12,9,10,10,12,13,12,12,12,14,14,11,12,12,13,14,9,10,10,12,12,9,10,10,12,13,10,10,10,12,13,11,12,12,14,13,12,12,12,14,13,5,7,7,10,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,10,12,12,7,8,8,11,10,8,8,9,11,11,8,9,9,11,11,10,11,11,12,13,10,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,13,11,10,11,11,13,13,9,10,10,13,13,10,11,11,13,13,10,11,11,14,13,12,11,13,12,15,12,13,13,15,15,9,10,10,12,13,10,11,10,13,13,10,11,11,13,13,12,13,11,15,13,12,13,13,15,15,5,7,7,9,10,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,11,12,12,6,8,8,10,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,7,8,8,10,11,8,9,9,11,11,8,9,8,11,11,10,11,11,13,13,10,11,11,13,12,9,10,10,13,12,10,11,11,14,13,10,10,11,13,13,12,13,13,15,15,12,11,13,12,14,9,10,10,12,13,10,11,11,13,14,10,11,11,13,13,12,13,13,15,15,12,13,12,15,12,8,9,9,12,12,9,11,10,13,13,9,10,10,13,13,12,13,13,15,15,12,12,12,14,14,9,10,10,13,13,10,11,11,13,14,10,11,11,14,12,13,13,14,14,16,12,13,13,15,14,9,10,10,13,13,10,11,10,14,13,10,11,11,13,14,12,14,13,16,14,13,13,13,14,15,11,13,12,15,14,11,12,13,14,15,12,13,13,16,15,14,12,15,12,16,14,15,15,17,16,11,12,12,14,15,11,13,11,15,14,12,13,13,15,16,13,15,12,17,13,14,15,15,16,16,8,9,9,12,12,9,10,10,13,13,9,10,10,13,13,12,13,12,14,14,12,13,13,15,15,9,10,10,13,13,10,11,11,14,13,10,10,11,13,14,12,13,13,15,14,12,12,14,14,16,9,10,10,13,13,10,11,11,13,14,10,11,11,14,13,13,13,13,15,15,13,14,13,16,14,11,12,12,14,14,12,13,13,16,15,11,12,13,14,15,14,15,15,16,16,14,13,15,13,17,11,12,12,14,15,12,13,13,15,16,11,13,12,15,15,14,15,14,16,16,14,15,12,17,13,2,4,4,7,8,5,7,7,9,9,5,7,7,9,9,8,9,9,12,11,8,9,9,11,12,5,7,7,10,10,7,9,9,11,11,7,9,9,10,11,10,11,11,13,13,9,10,11,12,13,5,7,7,10,10,7,9,9,11,10,7,9,9,11,11,9,11,10,13,13,10,11,11,13,13,8,10,10,14,13,10,11,11,15,14,9,11,11,15,14,13,14,13,16,14,12,13,13,15,16,8,10,10,13,14,9,11,11,14,15,10,11,11,14,15,12,13,13,15,15,12,13,14,15,16,5,7,7,10,10,7,9,9,11,11,7,9,9,11,12,10,11,11,14,13,10,11,11,14,14,7,9,9,12,12,9,11,11,13,13,9,11,11,13,13,12,13,12,14,14,11,12,13,15,15,7,9,9,12,12,8,11,10,13,12,9,11,11,13,13,11,13,12,15,13,11,13,13,15,16,9,12,11,15,15,11,12,12,16,15,11,12,13,16,16,13,14,15,16,15,13,15,15,17,17,9,11,11,14,15,10,12,12,15,15,11,13,12,15,16,13,15,14,16,16,13,15,15,17,19,5,7,7,10,10,7,9,9,12,11,7,9,9,11,11,10,11,11,14,14,10,11,11,13,14,7,9,9,12,12,9,11,11,13,13,9,10,11,12,13,11,13,12,16,15,11,12,12,14,15,7,9,9,12,12,9,11,11,13,13,9,11,11,13,12,11,13,12,15,16,12,13,13,15,14,9,11,11,15,14,11,13,12,16,15,10,11,12,15,15,13,14,14,18,17,13,14,14,15,17,10,11,11,14,15,11,13,12,15,17,11,13,12,15,16,13,15,14,18,17,14,15,15,16,18,7,10,10,14,14,10,12,12,15,15,10,12,12,15,15,14,15,15,18,17,13,15,15,16,16,9,11,11,16,15,11,13,13,16,18,11,13,13,16,16,15,16,16,0,0,14,15,16,18,17,9,11,11,15,15,10,13,12,17,16,11,12,13,16,17,14,15,16,19,19,14,15,15,0,20,12,14,14,0,0,13,14,16,19,18,13,15,16,20,17,16,18,0,0,0,15,16,17,18,19,11,14,14,0,19,12,15,14,17,17,13,15,15,0,0,16,17,15,20,19,15,17,16,19,0,8,10,10,14,15,10,12,11,15,15,10,11,12,16,15,13,14,14,19,17,14,15,15,0,0,9,11,11,16,15,11,13,13,17,16,10,12,13,16,17,14,15,15,18,18,14,15,16,20,19,9,12,12,0,15,11,13,13,16,17,11,13,13,19,17,14,16,16,18,17,15,16,16,17,19,11,14,14,18,18,13,14,15,0,0,12,14,15,19,18,15,16,19,0,19,15,16,19,19,17,12,14,14,16,19,13,15,15,0,17,13,15,14,18,18,15,16,15,0,18,16,17,17,0,0,2,5,5,5,6,6,5,6,6,5,6,6,7,8,8,6,8,8,5,6,6,6,8,7,7,8,8,5,6,6,7,8,8,6,8,8,6,8,8,8,9,10,8,10,10,6,8,8,7,10,8,8,10,10,5,6,6,6,8,8,7,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,11,11,8,10,11,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,11,11,11,13,14,11,13,13,7,11,11,10,13,12,11,14,14,4,8,8,8,11,11,8,11,11,8,11,11,11,14,13,10,12,13,8,11,11,11,13,13,11,13,13,13,15,17,17,15,15,12,17,11,9,7,10,10,9,12,17,10,6,3,6,5,7,10,17,15,10,6,9,8,9,11,17,15,8,4,7,3,5,9,16,16,10,5,8,4,5,8,16,13,11,5,8,3,3,5,14,13,12,7,10,5,5,7,14,5,8,13,10,17,11,11,15,7,2,4,5,8,7,9,16,13,4,3,5,6,8,11,20,10,4,5,5,7,6,8,18,15,7,6,7,8,10,14,20,10,6,7,6,9,7,8,17,9,8,10,8,10,5,4,11,12,17,19,14,16,10,7,12,2,5,4,6,6,7,7,8,8,8,8,9,8,5,5,6,7,7,8,8,8,8,9,9,9,9,5,6,5,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,8,9,9,9,9,6,7,7,8,7,8,8,9,9,9,9,9,9,7,8,8,8,8,9,9,9,9,9,9,9,9,7,8,8,9,8,9,8,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,9,9,10,10,8,8,9,9,9,9,9,9,9,9,10,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,10,9,9,10,10,9,1,4,4,6,6,6,6,7,7,8,8,9,9,5,7,7,8,7,7,7,9,8,10,9,10,11,5,7,7,8,8,7,7,8,9,10,10,11,11,6,8,8,9,9,9,9,11,10,12,12,15,12,6,8,8,9,9,9,9,11,11,12,11,14,12,7,8,8,10,10,12,12,13,13,13,15,13,13,7,8,8,10,10,11,11,13,12,14,15,15,15,9,10,10,11,12,13,13,14,15,14,15,14,15,8,10,10,12,12,14,14,15,14,14,15,15,14,10,12,12,14,14,15,14,15,15,15,14,15,15,10,12,12,13,14,15,14,15,15,14,15,15,15,12,15,13,15,14,15,15,15,15,15,15,15,15,13,13,15,15,15,15,15,15,15,15,15,15,15,1,3,2,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,6,6,6,6,5,6,6,6,6,1,4,4,6,6,8,8,10,9,11,10,14,13,4,6,5,8,8,9,9,11,10,11,11,14,14,4,5,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,16,15,7,8,8,9,9,10,10,11,11,12,12,15,15,9,10,10,10,10,11,11,12,12,12,12,15,15,9,10,9,10,11,11,11,12,12,12,13,15,15,10,10,11,11,11,12,12,13,12,13,13,16,15,10,11,11,11,11,12,12,13,12,13,13,16,17,11,11,12,12,12,13,13,13,14,14,15,17,17,11,11,12,12,12,13,13,13,14,14,14,16,18,14,15,15,15,15,16,16,16,16,17,18,0,0,14,15,15,15,15,17,16,17,18,17,17,18,0,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,9,9,4,6,6,8,8,8,8,9,9,7,8,8,9,9,9,9,11,10,7,8,8,9,9,9,9,10,10,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,9,9,10,10,11,11,12,12,9,9,9,10,11,11,11,12,12,4,5,5,9,9,5,6,6,9,9,5,6,6,9,9,9,10,9,12,12,9,9,10,12,12,5,7,7,10,10,7,7,8,10,10,6,7,8,10,10,10,10,10,11,13,10,9,10,12,13,5,7,7,10,10,6,8,7,10,10,7,8,7,10,10,9,10,10,12,12,10,10,10,13,11,9,10,10,13,13,10,11,10,13,13,10,10,10,13,13,12,12,13,14,14,12,12,13,14,14,9,10,10,13,13,10,10,10,13,13,10,10,10,13,13,12,13,12,15,14,12,13,12,15,15,5,7,6,10,10,7,8,8,10,10,7,8,8,10,10,10,11,10,13,13,10,10,10,12,12,7,8,8,11,10,8,8,9,10,11,8,9,9,11,11,11,10,11,11,14,11,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,14,11,10,11,11,13,13,10,11,11,14,13,10,10,11,14,13,10,11,11,14,14,12,11,13,12,16,13,14,14,15,15,10,10,11,13,14,10,11,10,14,13,10,11,11,14,14,12,13,12,15,13,13,13,14,15,16,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,10,10,13,13,10,10,11,12,13,6,8,8,11,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,6,8,8,10,11,8,9,9,11,11,8,9,8,12,10,10,11,11,13,13,10,11,10,14,11,10,10,10,14,13,10,11,11,14,13,10,10,11,13,13,12,14,14,16,16,12,12,13,13,15,10,11,11,13,14,10,11,11,14,15,10,11,10,13,13,13,14,13,16,16,12,13,11,15,12,9,10,10,13,13,10,11,11,14,13,10,10,11,13,14,13,14,13,16,16,13,13,13,15,16,9,10,10,13,13,10,10,11,13,14,10,11,11,15,13,13,13,14,14,18,13,13,14,16,15,9,10,10,13,14,10,11,10,14,13,10,11,11,13,14,13,14,13,16,15,13,13,14,15,16,12,13,12,16,14,11,11,13,15,15,13,14,13,16,15,15,12,16,12,17,14,15,15,17,17,12,13,13,14,16,11,13,11,16,15,12,13,14,15,16,14,15,13,0,14,14,16,16,0,0,9,10,10,13,13,10,11,10,14,14,10,11,11,13,13,12,13,13,14,16,13,14,14,16,16,9,10,10,14,14,11,11,11,14,13,10,10,11,14,14,13,13,13,16,16,13,13,14,14,17,9,10,10,13,14,10,11,11,13,15,10,11,10,14,14,13,13,13,14,17,13,14,13,17,14,12,13,13,16,14,13,14,13,16,15,12,12,13,15,16,15,15,16,18,16,15,13,15,14,0,12,12,13,14,16,13,13,14,15,16,11,12,11,16,14,15,16,16,17,17,14,15,12,17,12,1,5,5,8,8,5,8,7,9,9,5,7,8,9,9,9,10,9,12,12,9,9,10,12,12,6,8,8,11,10,8,10,10,11,11,8,9,10,11,11,10,11,11,14,13,10,11,11,13,13,5,8,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,13,13,10,11,11,13,13,9,11,11,15,14,10,12,12,15,14,10,12,11,15,14,13,14,14,16,16,12,14,13,17,15,9,11,11,14,15,10,11,12,14,16,10,11,12,14,16,12,13,14,16,16,13,13,15,15,18,5,8,8,11,11,8,10,10,12,12,8,10,10,12,13,11,12,12,14,14,11,12,12,15,15,8,10,10,13,13,10,12,12,13,13,10,12,12,14,14,12,13,13,15,15,12,13,13,16,16,7,10,10,12,12,10,12,11,13,13,10,12,12,13,14,12,13,12,15,14,12,13,13,16,16,10,12,12,17,16,12,13,13,16,15,11,13,13,17,17,15,15,15,16,17,14,15,15,19,19,10,12,12,15,16,11,13,12,15,18,11,13,13,16,16,14,15,15,17,17,14,15,15,17,19,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,16,15,11,12,12,14,15,7,10,10,13,13,10,12,12,14,13,10,11,12,13,13,12,13,13,16,16,12,12,13,15,15,8,10,10,13,13,10,12,12,14,14,10,12,12,13,13,12,13,13,16,16,12,13,13,15,15,10,12,12,16,15,11,13,13,17,16,11,12,13,16,15,13,15,15,19,17,14,15,14,17,16,10,12,12,16,16,11,13,13,16,17,12,13,13,15,17,14,15,15,17,19,14,15,15,17,17,8,11,11,16,16,10,13,12,17,17,10,12,13,16,16,15,17,16,20,19,14,15,17,18,19,9,12,12,16,17,11,13,14,17,18,11,13,13,19,18,16,17,18,19,19,15,16,16,19,19,9,12,12,16,17,11,14,13,18,17,11,13,13,17,17,16,17,16,20,19,14,16,16,18,18,12,15,15,19,17,14,15,16,0,20,13,15,16,20,17,18,16,20,0,0,15,16,19,20,0,12,15,14,18,19,13,16,15,20,19,13,16,15,20,18,17,18,17,0,20,16,17,16,0,0,8,11,11,16,15,10,12,12,17,17,10,13,13,17,16,14,16,15,18,20,15,16,16,19,19,9,12,12,16,16,11,13,13,17,16,11,13,14,17,18,15,15,16,20,20,16,16,17,19,19,9,13,12,16,17,11,14,13,17,17,11,14,14,18,17,14,16,15,18,19,16,17,18,18,19,12,14,15,19,18,13,15,16,18,0,13,14,15,0,0,16,16,17,20,0,17,17,20,20,0,12,15,15,19,20,13,15,15,0,0,14,16,15,0,0,15,18,16,0,0,17,18,16,0,19,2,4,4,5,6,6,5,6,6,5,7,7,7,8,8,6,8,8,5,7,7,6,8,8,7,8,8,4,7,7,7,8,8,7,8,8,7,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,7,7,7,8,8,7,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,11,11,8,10,10,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,12,11,11,13,13,11,13,14,7,11,11,10,13,12,11,13,14,4,8,8,8,11,11,8,11,12,8,11,11,11,13,13,10,12,13,8,11,11,11,14,13,11,14,13,12,13,14,13,17,12,15,17,5,5,6,10,10,11,15,16,4,3,3,7,5,7,10,16,7,7,7,10,9,11,12,16,6,5,5,9,5,6,10,16,8,7,7,9,6,7,9,16,11,7,3,6,4,5,8,16,12,9,4,8,5,7,9,16,5,8,13,10,17,11,11,15,7,2,4,5,8,7,9,16,13,4,3,5,6,8,11,20,10,4,5,5,7,6,8,18,15,7,6,7,8,10,14,20,10,6,7,6,9,7,8,17,9,8,10,8,10,5,4,11,12,17,19,14,16,10,7,12,2,5,4,6,6,7,7,8,8,8,8,9,8,5,5,6,7,7,8,8,8,8,9,9,9,9,5,6,5,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,8,9,9,9,9,6,7,7,8,7,8,8,9,9,9,9,9,9,7,8,8,8,8,9,9,9,9,9,9,9,9,7,8,8,9,8,9,8,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,9,9,10,10,8,8,9,9,9,9,9,9,9,9,10,9,10,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,10,9,9,10,10,9,1,4,4,6,6,6,6,7,7,8,8,9,9,5,7,7,8,7,7,7,9,8,10,9,10,11,5,7,7,8,8,7,7,8,9,10,10,11,11,6,8,8,9,9,9,9,11,10,12,12,15,12,6,8,8,9,9,9,9,11,11,12,11,14,12,7,8,8,10,10,12,12,13,13,13,15,13,13,7,8,8,10,10,11,11,13,12,14,15,15,15,9,10,10,11,12,13,13,14,15,14,15,14,15,8,10,10,12,12,14,14,15,14,14,15,15,14,10,12,12,14,14,15,14,15,15,15,14,15,15,10,12,12,13,14,15,14,15,15,14,15,15,15,12,15,13,15,14,15,15,15,15,15,15,15,15,13,13,15,15,15,15,15,15,15,15,15,15,15,1,4,4,11,11,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,6,6,6,6,5,6,6,6,6,1,4,4,6,6,8,8,10,9,11,10,14,13,4,6,5,8,8,9,9,11,10,11,11,14,14,4,5,6,8,8,9,9,10,10,11,11,14,14,6,8,8,9,9,10,10,11,11,12,12,16,15,7,8,8,9,9,10,10,11,11,12,12,15,15,9,10,10,10,10,11,11,12,12,12,12,15,15,9,10,9,10,11,11,11,12,12,12,13,15,15,10,10,11,11,11,12,12,13,12,13,13,16,15,10,11,11,11,11,12,12,13,12,13,13,16,17,11,11,12,12,12,13,13,13,14,14,15,17,17,11,11,12,12,12,13,13,13,14,14,14,16,18,14,15,15,15,15,16,16,16,16,17,18,0,0,14,15,15,15,15,17,16,17,18,17,17,18,0,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,9,9,4,6,6,8,8,8,8,9,9,7,8,8,9,9,9,9,11,10,7,8,8,9,9,9,9,10,10,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,9,9,10,10,11,11,12,12,9,9,9,10,11,11,11,12,12,4,5,5,9,9,5,6,6,9,9,5,6,6,9,9,9,10,9,12,12,9,9,10,12,12,5,7,7,10,10,7,7,8,10,10,6,7,8,10,10,10,10,10,11,13,10,9,10,12,13,5,7,7,10,10,6,8,7,10,10,7,8,7,10,10,9,10,10,12,12,10,10,10,13,11,9,10,10,13,13,10,11,10,13,13,10,10,10,13,13,12,12,13,14,14,12,12,13,14,14,9,10,10,13,13,10,10,10,13,13,10,10,10,13,13,12,13,12,15,14,12,13,12,15,15,5,7,6,10,10,7,8,8,10,10,7,8,8,10,10,10,11,10,13,13,10,10,10,12,12,7,8,8,11,10,8,8,9,10,11,8,9,9,11,11,11,10,11,11,14,11,11,11,13,13,6,8,8,10,10,7,9,8,11,10,8,9,9,11,11,10,11,10,14,11,10,11,11,13,13,10,11,11,14,13,10,10,11,14,13,10,11,11,14,14,12,11,13,12,16,13,14,14,15,15,10,10,11,13,14,10,11,10,14,13,10,11,11,14,14,12,13,12,15,13,13,13,14,15,16,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,10,10,13,13,10,10,11,12,13,6,8,8,11,10,8,9,9,11,11,7,8,9,10,11,10,11,11,13,13,10,10,11,11,13,6,8,8,10,11,8,9,9,11,11,8,9,8,12,10,10,11,11,13,13,10,11,10,14,11,10,10,10,14,13,10,11,11,14,13,10,10,11,13,13,12,14,14,16,16,12,12,13,13,15,10,11,11,13,14,10,11,11,14,15,10,11,10,13,13,13,14,13,16,16,12,13,11,15,12,9,10,10,13,13,10,11,11,14,13,10,10,11,13,14,13,14,13,16,16,13,13,13,15,16,9,10,10,13,13,10,10,11,13,14,10,11,11,15,13,13,13,14,14,18,13,13,14,16,15,9,10,10,13,14,10,11,10,14,13,10,11,11,13,14,13,14,13,16,15,13,13,14,15,16,12,13,12,16,14,11,11,13,15,15,13,14,13,16,15,15,12,16,12,17,14,15,15,17,17,12,13,13,14,16,11,13,11,16,15,12,13,14,15,16,14,15,13,0,14,14,16,16,0,0,9,10,10,13,13,10,11,10,14,14,10,11,11,13,13,12,13,13,14,16,13,14,14,16,16,9,10,10,14,14,11,11,11,14,13,10,10,11,14,14,13,13,13,16,16,13,13,14,14,17,9,10,10,13,14,10,11,11,13,15,10,11,10,14,14,13,13,13,14,17,13,14,13,17,14,12,13,13,16,14,13,14,13,16,15,12,12,13,15,16,15,15,16,18,16,15,13,15,14,0,12,12,13,14,16,13,13,14,15,16,11,12,11,16,14,15,16,16,17,17,14,15,12,17,12,1,5,5,8,8,5,8,7,9,9,5,7,8,9,9,9,10,9,12,12,9,9,10,12,12,6,8,8,11,10,8,10,10,11,11,8,9,10,11,11,10,11,11,14,13,10,11,11,13,13,5,8,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,13,13,10,11,11,13,13,9,11,11,15,14,10,12,12,15,14,10,12,11,15,14,13,14,14,16,16,12,14,13,17,15,9,11,11,14,15,10,11,12,14,16,10,11,12,14,16,12,13,14,16,16,13,13,15,15,18,5,8,8,11,11,8,10,10,12,12,8,10,10,12,13,11,12,12,14,14,11,12,12,15,15,8,10,10,13,13,10,12,12,13,13,10,12,12,14,14,12,13,13,15,15,12,13,13,16,16,7,10,10,12,12,10,12,11,13,13,10,12,12,13,14,12,13,12,15,14,12,13,13,16,16,10,12,12,17,16,12,13,13,16,15,11,13,13,17,17,15,15,15,16,17,14,15,15,19,19,10,12,12,15,16,11,13,12,15,18,11,13,13,16,16,14,15,15,17,17,14,15,15,17,19,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,16,15,11,12,12,14,15,7,10,10,13,13,10,12,12,14,13,10,11,12,13,13,12,13,13,16,16,12,12,13,15,15,8,10,10,13,13,10,12,12,14,14,10,12,12,13,13,12,13,13,16,16,12,13,13,15,15,10,12,12,16,15,11,13,13,17,16,11,12,13,16,15,13,15,15,19,17,14,15,14,17,16,10,12,12,16,16,11,13,13,16,17,12,13,13,15,17,14,15,15,17,19,14,15,15,17,17,8,11,11,16,16,10,13,12,17,17,10,12,13,16,16,15,17,16,20,19,14,15,17,18,19,9,12,12,16,17,11,13,14,17,18,11,13,13,19,18,16,17,18,19,19,15,16,16,19,19,9,12,12,16,17,11,14,13,18,17,11,13,13,17,17,16,17,16,20,19,14,16,16,18,18,12,15,15,19,17,14,15,16,0,20,13,15,16,20,17,18,16,20,0,0,15,16,19,20,0,12,15,14,18,19,13,16,15,20,19,13,16,15,20,18,17,18,17,0,20,16,17,16,0,0,8,11,11,16,15,10,12,12,17,17,10,13,13,17,16,14,16,15,18,20,15,16,16,19,19,9,12,12,16,16,11,13,13,17,16,11,13,14,17,18,15,15,16,20,20,16,16,17,19,19,9,13,12,16,17,11,14,13,17,17,11,14,14,18,17,14,16,15,18,19,16,17,18,18,19,12,14,15,19,18,13,15,16,18,0,13,14,15,0,0,16,16,17,20,0,17,17,20,20,0,12,15,15,19,20,13,15,15,0,0,14,16,15,0,0,15,18,16,0,0,17,18,16,0,19,2,4,4,5,6,6,5,6,6,5,7,7,7,8,8,6,8,8,5,7,7,6,8,8,7,8,8,4,7,7,7,8,8,7,8,8,7,8,8,8,9,10,8,10,10,6,8,8,8,10,8,8,10,10,5,7,7,7,8,8,7,8,8,6,8,8,8,10,10,8,8,10,6,8,8,8,10,10,8,10,9,1,4,4,5,8,7,5,7,8,5,8,8,8,11,11,8,10,10,5,8,8,8,11,10,8,11,11,4,8,8,8,11,11,8,11,11,8,12,11,11,13,13,11,13,14,7,11,11,10,13,12,11,13,14,4,8,8,8,11,11,8,11,12,8,11,11,11,13,13,10,12,13,8,11,11,11,14,13,11,14,13,12,13,14,13,17,12,15,17,5,5,6,10,10,11,15,16,4,3,3,7,5,7,10,16,7,7,7,10,9,11,12,16,6,5,5,9,5,6,10,16,8,7,7,9,6,7,9,16,11,7,3,6,4,5,8,16,12,9,4,8,5,7,9,16,5,6,12,9,14,9,9,19,6,1,5,5,8,7,9,19,12,4,4,7,7,9,11,18,9,5,6,6,8,7,8,17,14,8,7,8,8,10,12,18,9,6,8,6,8,6,8,18,9,8,11,8,11,7,5,15,16,18,18,18,17,15,11,18,3,4,4,6,6,7,7,8,8,9,9,9,8,4,5,5,6,6,8,8,9,8,9,9,9,9,4,5,5,7,6,8,8,8,8,9,8,9,8,6,7,7,7,8,8,8,9,9,9,9,9,9,6,7,7,7,7,8,8,9,9,9,9,9,9,7,8,8,8,8,9,8,9,9,10,9,9,10,7,8,8,8,8,9,9,9,9,9,9,10,10,8,9,9,9,9,9,9,9,9,10,10,9,10,8,9,9,9,9,9,9,9,9,9,9,10,10,9,9,9,10,9,9,10,9,9,10,10,10,10,9,9,9,9,9,9,9,10,9,10,10,10,10,9,9,9,10,9,9,10,10,9,10,10,10,10,9,9,9,10,9,9,9,10,10,10,10,10,10,1,4,4,6,6,6,6,9,8,9,8,8,8,5,7,7,7,7,8,8,8,10,8,10,8,9,5,7,7,8,7,7,8,10,10,11,10,12,11,7,8,8,9,9,9,10,11,11,11,11,11,11,7,8,8,8,9,9,9,10,10,10,11,11,12,7,8,8,9,9,10,11,11,12,11,12,11,11,7,8,8,9,9,10,10,11,11,11,12,12,11,8,10,10,10,10,11,11,14,11,12,12,12,13,9,10,10,10,10,12,11,14,11,14,11,12,13,10,11,11,11,11,13,11,14,14,13,13,13,14,11,11,11,12,11,12,12,12,13,14,14,13,14,12,11,12,12,12,12,13,13,13,14,13,14,14,11,12,12,14,12,13,13,12,13,13,14,14,14,1,5,3,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,4,4,5,5,4,5,5,5,5,4,5,5,6,5,5,6,5,6,6,5,6,6,6,6,1,4,4,6,6,8,8,10,10,11,11,15,15,4,5,5,8,8,9,9,11,11,12,12,16,16,4,5,6,8,8,9,9,11,11,12,12,14,14,7,8,8,9,9,10,10,11,12,13,13,16,17,7,8,8,9,9,10,10,12,12,12,13,15,15,9,10,10,10,10,11,11,12,12,13,13,15,16,9,9,9,10,10,11,11,13,12,13,13,17,17,10,11,11,11,12,12,12,13,13,14,15,0,18,10,11,11,12,12,12,13,14,13,14,14,17,16,11,12,12,13,13,14,14,14,14,15,16,17,16,11,12,12,13,13,14,14,14,14,15,15,17,17,14,15,15,16,16,16,17,17,16,0,17,0,18,14,15,15,16,16,0,15,18,18,0,16,0,0,1,4,4,7,7,8,8,9,9,4,6,5,8,7,8,8,10,9,4,6,6,8,8,8,8,10,10,7,8,7,9,9,9,9,11,10,7,8,8,9,9,9,9,10,11,8,8,8,9,9,10,10,11,11,8,8,8,9,9,10,10,11,11,9,10,10,11,10,11,11,12,12,9,10,10,10,11,11,11,12,12,3,5,5,9,9,5,6,6,10,9,5,6,6,9,10,10,10,10,12,11,9,10,10,12,12,5,7,7,10,10,7,7,8,10,11,7,7,8,10,11,10,10,11,11,13,10,10,11,11,13,6,7,7,10,10,7,8,7,11,10,7,8,7,10,10,10,11,9,13,11,10,11,10,13,11,10,10,10,14,13,10,11,11,14,13,10,10,11,13,14,12,12,13,15,15,12,12,13,13,14,10,10,10,12,13,10,11,10,13,13,10,11,11,13,13,12,13,12,14,13,12,13,13,14,13,5,7,7,10,10,7,8,8,11,10,7,8,8,10,10,11,11,11,13,13,10,11,11,12,12,7,8,8,11,11,7,8,9,10,12,8,9,9,11,11,11,10,12,11,14,11,11,12,13,13,6,8,8,10,11,7,9,7,12,10,8,9,10,11,12,10,12,10,14,11,11,12,11,13,13,10,11,11,14,14,10,10,11,13,14,11,12,12,15,13,12,11,14,12,16,12,13,14,15,16,10,10,11,13,14,10,11,10,14,12,11,12,12,13,14,12,13,11,15,12,14,14,14,15,15,5,7,7,10,10,7,8,8,10,10,7,8,8,10,11,10,11,10,12,12,10,11,11,12,13,6,8,8,11,11,8,9,9,12,11,7,7,9,10,12,11,11,11,12,13,11,10,12,11,15,7,8,8,11,11,8,9,9,11,11,7,9,8,12,10,11,12,11,13,12,11,12,10,15,11,10,11,10,14,12,11,12,11,14,13,10,10,11,13,14,13,13,13,17,15,12,11,14,12,15,10,10,11,13,14,11,12,12,14,14,10,11,10,14,13,13,14,13,16,17,12,14,11,16,12,9,10,10,14,13,10,11,10,14,14,10,11,11,13,13,13,14,14,16,15,12,13,13,14,14,9,11,10,14,13,10,10,12,13,14,11,12,11,14,13,13,14,14,14,15,13,14,14,15,15,9,10,11,13,14,10,11,10,15,13,11,11,12,12,15,13,14,12,15,14,13,13,14,14,15,12,13,12,16,14,11,11,12,15,14,13,15,13,16,14,13,12,15,12,17,15,16,15,16,16,12,12,13,13,15,11,13,11,15,14,13,13,14,15,17,13,14,12,0,13,14,15,14,15,0,9,10,10,13,13,10,11,11,13,13,10,11,11,13,13,12,13,12,14,14,13,14,14,15,17,9,10,10,13,13,11,12,11,15,12,10,10,11,13,16,13,14,13,15,14,13,13,14,15,16,10,10,11,13,14,11,11,12,13,14,10,12,11,14,14,13,13,13,14,15,13,15,13,16,15,12,13,12,15,13,12,15,13,15,15,11,11,13,14,15,15,15,15,15,17,13,12,14,13,17,12,12,14,14,15,13,13,14,14,16,11,13,11,16,15,14,16,16,17,0,14,13,11,16,12,1,5,5,8,8,5,8,7,9,9,5,7,8,9,9,9,10,9,12,12,9,9,10,11,12,6,8,8,10,10,8,10,10,11,11,8,9,10,11,11,10,11,11,13,13,10,11,11,12,13,6,8,8,10,10,8,10,9,11,11,8,10,10,11,11,10,11,11,13,12,10,11,11,13,12,9,11,11,15,13,10,12,11,15,13,10,11,11,15,14,12,14,13,16,15,12,13,13,17,16,9,11,11,13,15,10,11,12,14,15,10,11,12,14,15,12,13,13,15,16,12,13,13,16,16,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,8,11,10,13,12,10,11,12,12,13,10,12,12,13,13,12,12,13,13,15,11,12,13,15,14,7,10,10,12,12,9,12,11,13,12,10,12,12,13,14,12,13,12,15,13,11,13,12,14,15,10,12,12,16,14,11,12,12,16,15,11,13,12,17,16,13,13,15,15,17,13,15,15,20,17,10,12,12,14,16,11,12,12,15,15,11,13,13,15,18,13,14,13,15,15,13,15,14,16,16,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,15,7,10,10,13,12,10,12,12,14,13,9,10,12,12,13,11,13,13,15,15,11,12,13,13,15,8,10,10,12,13,10,12,12,13,13,10,12,11,13,13,11,13,12,15,15,12,13,12,15,13,10,12,12,16,14,11,12,12,16,15,10,12,12,16,14,14,15,14,18,16,13,13,14,15,16,10,12,12,14,16,11,13,13,16,16,11,13,12,14,16,13,15,15,18,18,13,15,13,16,14,8,11,11,16,16,10,13,13,17,16,10,12,12,16,15,14,16,15,20,17,13,14,14,17,17,9,12,12,16,16,11,13,14,16,17,11,13,13,16,16,15,15,19,18,0,14,15,15,18,18,9,12,12,17,16,11,13,12,17,16,11,12,13,15,17,15,16,15,0,19,14,15,14,19,18,12,14,14,0,16,13,14,14,19,18,13,15,16,17,16,15,15,17,18,0,14,16,16,19,0,12,14,14,16,18,13,15,13,17,18,13,15,14,17,18,15,18,14,18,18,16,17,16,0,17,8,11,11,15,15,10,12,12,16,16,10,13,13,16,16,13,15,14,17,17,14,15,17,17,18,9,12,12,16,15,11,13,13,16,16,11,12,13,17,17,14,14,15,17,17,14,15,16,0,18,9,12,12,16,17,11,13,13,16,17,11,14,13,18,17,14,16,14,17,17,15,17,17,18,18,12,14,14,0,16,13,15,15,19,0,12,13,15,0,0,14,17,16,19,0,16,15,18,18,0,12,14,14,17,0,13,14,14,17,0,13,15,14,0,18,15,16,16,0,18,15,18,15,0,17,2,4,4,5,6,6,5,6,6,5,7,7,7,8,8,6,7,9,5,7,7,6,8,7,7,9,8,4,7,7,7,9,8,7,8,8,7,9,8,8,8,10,9,10,10,6,8,8,7,10,8,9,10,10,5,7,7,7,8,8,7,8,9,6,8,8,9,10,10,7,8,10,6,8,9,9,10,10,8,10,8,1,4,4,5,8,7,5,7,8,5,8,8,8,10,11,8,10,11,5,8,8,8,11,10,8,11,10,4,9,9,8,11,11,8,11,11,8,12,11,10,12,14,11,13,13,7,11,11,10,13,11,11,13,14,4,8,9,8,11,11,8,11,12,7,11,11,11,14,13,10,11,13,8,11,12,11,13,13,10,14,12,12,12,14,12,14,14,14,14,12,6,6,8,9,9,11,14,12,4,2,6,6,7,11,14,13,6,5,7,8,9,11,14,13,8,5,8,6,8,12,14,12,7,7,8,8,8,10,14,12,6,3,4,4,4,7,14,11,7,4,6,6,6,8,14,3,8,12,14,15,15,15,13,15,15,6,5,8,10,12,12,13,12,14,13,10,6,5,6,8,9,11,11,13,13,13,8,5,4,5,6,8,10,11,13,14,10,7,5,4,5,7,9,11,12,13,11,8,6,5,4,5,7,9,11,12,11,10,8,7,5,4,5,9,10,13,13,11,10,8,6,5,4,7,9,15,14,13,12,10,9,8,7,8,9,12,12,14,13,12,11,10,9,8,9,2,4,4,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,8,7,9,8,9,9,10,10,11,11,11,11,6,5,5,8,8,9,9,9,8,10,9,11,10,12,12,13,12,13,13,5,5,5,8,8,9,9,9,9,10,10,11,11,12,12,13,12,13,13,17,8,8,9,9,9,9,9,9,10,10,12,11,13,12,13,13,13,13,18,8,8,9,9,9,9,9,9,11,11,12,12,13,13,13,13,13,13,17,13,12,9,9,10,10,10,10,11,11,12,12,12,13,13,13,14,14,18,13,12,9,9,10,10,10,10,11,11,12,12,13,13,13,14,14,14,17,18,18,10,10,10,10,11,11,11,12,12,12,14,13,14,13,13,14,18,18,18,10,9,10,9,11,11,12,12,12,12,13,13,15,14,14,14,18,18,16,13,14,10,11,11,11,12,13,13,13,13,14,13,13,14,14,18,18,18,14,12,11,9,11,10,13,12,13,13,13,14,14,14,13,14,18,18,17,18,18,11,12,12,12,13,13,14,13,14,14,13,14,14,14,18,18,18,18,17,12,10,12,9,13,11,13,14,14,14,14,14,15,14,18,18,17,17,18,14,15,12,13,13,13,14,13,14,14,15,14,15,14,18,17,18,18,18,15,15,12,10,14,10,14,14,13,13,14,14,14,14,18,16,18,18,18,18,17,14,14,13,14,14,13,13,14,14,14,15,15,18,18,18,18,17,17,17,14,14,14,12,14,13,14,14,15,14,15,14,18,18,18,18,18,18,18,17,16,13,13,13,14,14,14,14,15,16,15,18,18,18,18,18,18,18,17,17,13,13,13,13,14,13,14,15,15,15,1,4,3,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,5,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,4,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,6,6,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+275341);
/* memory initializer */ allocate([9,9,9,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,10,9,9,9,10,10,10,10,10,10,10,9,9,9,9,9,9,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,9,9,10,9,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,9,9,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,9,9,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,10,9,9,9,9,9,1,4,4,7,6,8,8,8,8,9,9,10,10,11,10,6,5,5,7,7,9,9,8,9,10,10,11,11,12,12,6,5,5,7,7,9,9,9,9,10,10,11,11,12,12,21,7,8,8,8,9,9,9,9,10,10,11,11,12,12,21,8,8,8,8,9,9,9,9,10,10,11,11,12,12,21,11,12,9,9,10,10,10,10,10,11,11,12,12,12,21,12,12,9,8,10,10,10,10,11,11,12,12,13,13,21,21,21,9,9,9,9,11,11,11,11,12,12,12,13,21,20,20,9,9,9,9,10,11,11,11,12,12,13,13,20,20,20,13,13,10,10,11,11,12,12,13,13,13,13,20,20,20,13,13,10,10,11,11,12,12,13,13,13,13,20,20,20,20,20,12,12,12,12,12,12,13,13,14,14,20,20,20,20,20,12,12,12,11,13,12,13,13,14,14,20,20,20,20,20,15,16,13,12,13,13,14,13,14,14,20,20,20,20,20,16,15,12,12,13,12,14,13,14,14,5,6,6,6,6,7,7,7,7,7,7,7,6,6,6,6,7,7,7,7,7,7,7,6,6,6,6,7,7,7,7,7,7,8,6,6,6,6,7,7,7,7,7,7,8,8,8,6,6,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,2,4,4,6,6,7,7,8,8,10,10,11,11,6,4,4,6,6,8,8,9,9,10,10,12,12,6,4,5,6,6,8,8,9,9,10,10,12,12,20,6,6,6,6,8,8,9,10,11,11,12,12,20,6,6,6,6,8,8,10,10,11,11,12,12,20,10,10,7,7,9,9,10,10,11,11,12,12,20,11,11,7,7,9,9,10,10,11,11,12,12,20,20,20,9,9,9,9,11,11,12,12,13,13,20,20,20,9,9,9,9,11,11,12,12,13,13,20,20,20,13,13,10,10,11,11,12,13,13,13,20,20,20,13,13,10,10,11,11,12,13,13,13,20,20,20,20,19,12,12,12,12,13,13,14,15,19,19,19,19,19,12,12,12,12,13,13,14,14,4,4,4,5,5,5,4,4,5,5,5,4,4,5,5,5,5,5,5,5,5,5,5,5,5,2,4,4,6,6,7,7,7,7,8,8,9,9,5,4,4,6,6,8,8,9,9,9,9,10,10,6,4,4,6,6,8,8,9,9,9,9,10,10,0,6,6,7,7,8,8,9,9,10,10,11,11,0,6,6,7,7,8,8,9,9,10,10,11,11,0,10,10,8,8,9,9,10,10,11,11,12,12,0,11,11,8,8,9,9,10,10,11,11,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,6,6,7,7,7,7,7,7,11,5,5,6,6,7,7,7,7,8,8,11,5,5,6,6,7,7,7,7,8,8,11,5,5,6,6,7,7,8,8,8,8,11,11,11,6,6,7,7,7,8,8,8,11,11,11,6,6,7,7,7,8,8,8,11,11,11,6,6,7,7,7,7,8,8,11,11,11,7,7,7,7,7,7,8,8,11,11,11,10,10,7,7,7,7,8,8,11,11,11,11,11,7,7,7,7,7,7,11,11,11,11,11,7,7,7,7,7,7,1,4,4,5,7,7,6,7,7,4,7,6,9,10,10,10,10,9,4,6,7,9,10,10,10,9,10,5,9,9,9,11,11,10,11,11,7,10,9,11,12,11,12,12,12,7,9,10,11,11,12,12,12,12,6,10,10,10,12,12,10,12,11,7,10,10,11,12,12,11,12,12,7,10,10,11,12,12,12,12,12,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,10,10,0,5,4,5,5,7,7,8,8,8,8,9,9,10,10,11,11,0,5,5,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,6,5,6,6,7,7,8,8,9,9,10,10,11,11,11,12,0,0,0,6,6,7,7,8,8,9,9,10,10,11,11,12,12,0,0,0,7,7,7,7,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,7,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,4,5,5,6,6,8,8,0,4,4,5,5,6,7,8,8,0,4,4,5,5,7,7,8,8,0,5,5,6,6,7,7,9,9,0,0,0,6,6,7,7,9,9,0,0,0,7,7,8,8,9,9,0,0,0,7,7,8,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,6,7,7,9,8,0,8,8,9,9,0,8,7,9,9,0,9,10,10,10,0,0,0,11,10,6,7,7,8,9,0,8,8,9,9,0,7,8,9,9,0,10,9,11,10,0,0,0,10,10,8,9,8,10,10,0,10,10,12,11,0,10,10,11,11,0,12,13,13,13,0,0,0,13,12,8,8,9,10,10,0,10,10,11,12,0,10,10,11,11,0,13,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,7,10,10,0,7,7,10,9,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,6,7,8,10,10,0,7,7,9,10,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,8,9,9,11,11,0,10,10,11,11,0,10,10,11,11,0,12,12,12,12,0,0,0,12,12,8,9,10,11,11,0,9,10,11,11,0,10,10,11,11,0,12,12,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,10,10,0,7,7,10,10,0,7,7,10,9,0,9,9,10,10,0,0,0,10,10,6,7,8,10,10,0,7,7,10,10,0,7,7,9,10,0,9,9,10,10,0,0,0,10,10,8,10,9,12,11,0,10,10,12,11,0,10,9,11,11,0,11,12,12,12,0,0,0,12,12,8,9,10,11,12,0,10,10,11,11,0,9,10,11,11,0,12,11,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,9,12,12,0,9,9,12,11,0,9,9,11,11,0,10,10,12,11,0,0,0,11,12,7,9,10,12,12,0,9,9,11,12,0,9,9,11,11,0,10,10,11,12,0,0,0,11,11,9,11,10,13,12,0,10,10,12,12,0,10,10,12,12,0,11,11,12,12,0,0,0,13,12,9,10,11,12,13,0,10,10,12,12,0,10,10,12,12,0,11,12,12,12,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,10,13,13,0,10,10,12,12,0,10,10,12,12,0,11,12,12,12,0,0,0,12,12,9,10,11,13,13,0,10,10,12,12,0,10,10,12,12,0,12,11,13,12,0,0,0,12,12,1,5,5,0,5,5,0,5,5,6,8,8,0,9,8,0,9,8,6,8,8,0,8,9,0,8,9,0,0,0,0,0,0,0,0,0,5,8,8,0,7,7,0,8,8,5,8,8,0,7,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,7,7,5,8,9,0,8,8,0,7,7,5,13,18,16,17,17,19,18,19,19,5,7,10,11,12,12,13,16,17,18,6,6,7,7,9,9,10,14,17,19,8,7,6,5,6,7,9,12,19,17,8,7,7,6,5,6,8,11,15,19,9,8,7,6,5,5,6,8,13,15,11,10,8,8,7,5,4,4,10,14,12,13,11,9,7,6,4,2,6,12,18,16,16,13,8,7,7,5,8,13,16,17,18,15,11,9,9,8,10,13,3,8,12,13,14,14,14,13,14,14,6,4,5,8,10,10,11,11,14,13,9,5,4,5,7,8,9,10,13,13,12,7,5,4,5,6,8,9,12,13,13,9,6,5,5,5,7,9,11,14,12,10,7,6,5,4,6,7,10,11,12,11,9,8,7,5,5,6,10,10,13,12,10,9,8,6,6,5,8,10,14,13,12,12,11,10,9,7,8,10,12,13,14,14,13,12,11,9,9,10,2,4,4,4,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,6,7,7,7,7,8,8,9,9,10,10,10,10,11,11,6,6,6,8,8,9,8,8,7,10,8,11,10,12,11,12,12,13,13,5,5,6,8,8,9,9,8,8,10,9,11,11,12,12,13,13,13,13,17,8,8,9,9,9,9,9,9,10,9,12,10,12,12,13,12,13,13,17,9,8,9,9,9,9,9,9,10,10,12,12,12,12,13,13,13,13,17,13,13,9,9,10,10,10,10,11,11,12,11,13,12,13,13,14,15,17,13,13,9,8,10,9,10,10,11,11,12,12,14,13,15,13,14,15,17,17,17,9,10,9,10,11,11,12,12,12,12,13,13,14,14,15,15,17,17,17,9,8,9,8,11,11,12,12,12,12,14,13,14,14,14,15,17,17,17,12,14,9,10,11,11,12,12,14,13,13,14,15,13,15,15,17,17,17,13,11,10,8,11,9,13,12,13,13,13,13,13,14,14,14,17,17,17,17,17,11,12,11,11,13,13,14,13,15,14,13,15,16,15,17,17,17,17,17,11,11,12,8,13,12,14,13,17,14,15,14,15,14,17,17,17,17,17,15,15,12,12,12,12,13,14,14,14,15,14,17,14,17,17,17,17,17,16,17,12,12,13,12,13,13,14,14,14,14,14,14,17,17,17,17,17,17,17,14,14,13,12,13,13,15,15,14,13,15,17,17,17,17,17,17,17,17,13,14,13,13,13,13,14,15,15,15,14,15,17,17,17,17,17,17,17,16,15,13,14,13,13,14,14,15,14,14,16,17,17,17,17,17,17,17,16,16,13,14,13,13,14,14,15,14,15,14,1,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,4,5,5,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,10,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,9,9,9,9,9,9,10,10,10,10,10,10,10,9,10,10,9,10,10,10,10,9,10,9,10,10,9,10,10,10,10,10,10,10,9,10,10,10,10,10,10,9,9,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,9,9,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,9,10,9,9,1,4,4,7,6,8,8,8,7,9,8,10,10,11,10,6,5,5,7,7,9,9,8,8,10,10,11,11,12,11,6,5,5,7,7,9,9,9,9,10,10,11,11,12,12,20,8,8,8,8,9,9,9,9,10,10,11,11,12,12,20,8,8,8,8,10,9,9,9,10,10,11,11,12,12,20,12,12,9,9,10,10,10,10,10,11,12,12,12,12,20,12,12,9,9,10,10,10,10,11,11,12,12,13,13,20,20,20,9,9,9,9,11,10,11,11,12,12,12,13,20,19,19,9,9,9,9,11,11,11,12,12,12,13,13,19,19,19,13,13,10,10,11,11,12,12,13,13,13,13,19,19,19,14,13,11,10,11,11,12,12,12,13,13,13,19,19,19,19,19,12,12,12,12,13,13,13,13,14,13,19,19,19,19,19,12,12,12,11,12,12,13,14,14,14,19,19,19,19,19,16,15,13,12,13,13,13,14,14,14,19,19,19,19,19,17,17,13,12,13,11,14,13,15,15,4,5,6,6,6,7,7,7,7,7,7,8,6,6,6,7,7,7,7,7,7,7,8,6,6,6,6,7,7,7,7,7,7,8,6,6,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,1,4,4,6,6,8,7,9,9,10,10,12,12,6,5,5,7,7,8,8,10,10,11,11,12,12,7,5,5,7,7,8,8,10,10,11,11,12,12,21,7,7,7,7,8,9,10,10,11,11,12,12,21,7,7,7,7,9,9,10,10,12,12,13,13,21,11,11,8,8,9,9,11,11,12,12,13,13,21,11,11,8,8,9,9,11,11,12,12,13,13,21,21,21,10,10,10,10,11,11,12,13,13,13,21,21,21,10,10,10,10,11,11,13,13,14,13,21,21,21,13,13,11,11,12,12,13,13,14,14,21,21,21,14,14,11,11,12,12,13,13,14,14,21,21,21,21,20,13,13,13,12,14,14,16,15,20,20,20,20,20,13,13,13,13,14,13,15,15,3,4,4,5,5,5,4,4,5,5,5,4,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,9,9,10,10,11,11,6,5,5,7,7,8,8,9,9,10,10,11,11,0,7,7,7,7,9,9,10,10,10,10,11,11,0,7,7,7,7,9,9,10,10,10,10,11,11,0,11,11,9,9,10,10,11,11,11,11,12,12,0,12,12,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,6,6,7,7,8,8,8,8,11,4,5,6,6,7,7,8,8,8,8,11,5,5,6,6,7,7,8,8,8,9,12,5,5,6,6,7,7,8,8,9,9,12,12,12,6,6,7,7,8,8,9,9,11,11,11,6,6,7,7,8,8,8,8,11,11,11,6,6,7,7,8,8,8,8,11,11,11,7,7,7,8,8,8,8,8,11,11,11,11,11,7,7,8,8,8,8,11,11,11,11,11,7,7,7,7,8,8,11,11,11,11,11,7,7,7,7,8,8,1,4,4,5,7,7,6,7,7,4,7,6,10,10,10,10,10,10,4,6,6,10,10,10,10,9,10,5,10,10,9,11,11,10,11,11,7,10,10,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,6,10,10,10,12,12,10,12,12,7,10,10,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,3,4,4,5,5,7,7,8,8,8,8,9,9,10,10,11,11,0,4,4,6,6,7,7,8,8,9,8,10,10,11,11,11,11,0,4,4,6,6,7,7,8,8,9,9,10,10,11,11,11,11,0,6,5,6,6,7,7,9,9,9,9,10,10,11,11,12,12,0,0,0,6,6,7,7,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,12,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,12,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,5,5,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,5,5,6,6,8,8,10,10,0,0,0,6,6,8,8,10,10,0,0,0,7,7,9,9,10,10,0,0,0,7,7,8,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,5,7,7,9,9,0,8,7,10,9,0,8,7,10,9,0,10,10,11,11,0,0,0,11,11,5,7,7,9,9,0,7,8,9,10,0,7,8,9,10,0,10,10,11,11,0,0,0,11,11,8,9,9,11,10,0,11,10,12,11,0,11,10,12,12,0,13,13,14,14,0,0,0,14,13,8,9,9,10,11,0,10,11,12,12,0,10,11,12,12,0,13,13,14,14,0,0,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,10,10,0,0,0,11,10,5,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,8,10,9,12,12,0,10,10,12,11,0,10,10,12,12,0,12,12,13,12,0,0,0,13,12,8,9,10,12,12,0,10,10,11,12,0,10,10,11,12,0,12,12,13,13,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,10,10,6,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,10,0,0,0,10,10,9,10,9,12,12,0,10,10,12,12,0,10,10,12,11,0,12,12,13,13,0,0,0,13,12,8,9,10,12,12,0,10,10,12,12,0,10,10,11,12,0,12,12,13,13,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,13,13,0,9,9,12,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,7,10,10,13,13,0,9,9,12,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,9,11,11,14,13,0,10,10,13,12,0,11,10,13,12,0,12,12,13,12,0,0,0,13,13,9,11,11,13,14,0,10,11,12,13,0,10,11,13,13,0,12,12,12,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,14,14,0,10,11,13,13,0,11,10,13,13,0,11,12,13,13,0,0,0,13,12,9,11,11,14,14,0,11,10,13,13,0,10,11,13,13,0,12,12,13,13,0,0,0,12,13,1,5,5,0,5,5,0,5,5,5,7,7,0,9,8,0,9,8,6,7,7,0,8,9,0,8,9,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,4,11,13,14,15,15,18,17,19,17,5,6,8,9,10,10,12,15,19,19,6,6,6,6,8,8,11,14,18,19,8,6,5,4,6,7,10,13,16,17,9,7,6,5,6,7,9,12,15,19,10,8,7,6,6,6,7,9,13,15,12,10,9,8,7,6,4,5,10,15,13,13,11,8,6,6,4,2,7,12,17,15,16,10,8,8,7,6,9,12,19,18,17,13,11,10,10,9,11,14,3,8,11,13,15,14,14,13,15,14,6,4,5,7,9,10,11,11,14,13,10,4,3,5,7,8,9,10,13,13,12,7,4,4,5,6,8,9,12,14,13,9,6,5,5,6,8,9,12,14,12,9,7,6,5,5,6,8,11,11,12,11,9,8,7,6,6,7,10,11,13,11,10,9,8,7,6,6,9,11,13,13,12,12,12,10,9,8,9,11,12,14,15,15,14,12,11,10,10,12,2,4,3,4,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,7,6,8,8,8,8,6,6,6,8,8,9,8,8,7,9,8,11,10,5,6,6,8,8,9,8,8,8,10,9,11,11,16,8,8,9,8,9,9,9,8,10,9,11,10,16,8,8,9,9,10,10,9,9,10,10,11,11,16,13,13,9,9,10,10,9,10,11,11,12,11,16,13,13,9,8,10,9,10,10,10,10,11,11,16,14,16,8,9,9,9,11,10,11,11,12,11,16,16,16,9,7,10,7,11,10,11,11,12,11,16,16,16,12,12,9,10,11,11,12,11,12,12,16,16,16,12,10,10,7,11,8,12,11,12,12,16,16,15,16,16,11,12,10,10,12,11,12,12,16,16,16,15,15,11,11,10,10,12,12,12,12,1,3,3,11,11,11,11,11,11,11,11,11,11,4,6,6,11,11,11,11,11,11,11,11,11,11,4,7,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,5,5,7,6,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,10,10,9,9,9,9,9,9,9,9,9,9,10,9,9,10,9,9,10,11,10,11,10,9,9,9,9,9,9,9,10,10,10,9,10,9,9,9,9,11,10,11,10,10,9,9,9,9,9,9,10,9,9,10,9,9,10,9,9,10,11,10,10,11,10,9,9,9,9,9,10,10,9,10,10,10,10,9,10,10,10,10,10,10,11,11,11,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,9,10,11,11,10,11,10,11,10,9,10,10,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,10,10,10,10,10,10,9,10,9,10,10,9,10,9,10,10,10,11,10,11,10,11,11,10,10,10,10,10,10,9,10,10,10,10,10,10,10,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,10,11,11,10,10,10,10,9,9,10,10,9,9,10,9,10,10,10,10,11,11,10,10,10,10,10,10,10,9,9,10,10,10,9,9,10,10,10,10,10,11,10,11,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,8,7,9,8,9,9,10,10,6,5,5,7,7,9,9,8,8,10,9,11,10,12,11,6,5,5,8,7,9,9,8,8,10,10,11,11,12,11,19,8,8,8,8,10,10,9,9,10,10,11,11,12,11,19,8,8,8,8,10,10,9,9,10,10,11,11,12,12,19,12,12,9,9,10,10,9,10,10,10,11,11,12,12,19,12,12,9,9,10,10,10,10,10,10,12,12,12,12,19,19,19,9,9,9,9,11,10,11,11,12,11,13,13,19,19,19,9,9,9,9,11,10,11,11,11,12,13,13,19,19,19,13,13,10,10,11,11,12,12,12,12,13,12,19,19,19,14,13,10,10,11,11,12,12,12,13,13,13,19,19,19,19,19,12,12,12,11,12,13,14,13,13,13,19,19,19,19,19,12,12,12,11,12,12,13,14,13,14,19,19,19,19,19,16,16,12,13,12,13,13,14,15,14,19,18,18,18,18,16,15,12,11,12,11,14,12,14,14,4,5,5,6,6,7,7,7,7,7,7,8,6,6,7,7,7,7,7,7,7,7,8,6,6,6,7,7,7,7,7,7,7,8,6,6,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,7,7,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,8,8,8,8,8,7,7,7,7,7,7,1,4,4,6,6,7,8,9,9,10,10,12,11,6,5,5,7,7,8,8,9,10,11,11,12,12,7,5,5,7,7,8,8,10,10,11,11,12,12,20,7,7,7,7,8,9,10,10,11,11,12,13,20,7,7,7,7,9,9,10,10,11,12,13,13,20,11,11,8,8,9,9,11,11,12,12,13,13,20,11,11,8,8,9,9,11,11,12,12,13,13,20,20,20,10,10,10,10,12,12,13,13,13,13,20,20,20,10,10,10,10,12,12,13,13,13,14,20,20,20,14,14,11,11,12,12,13,13,14,14,20,20,20,14,14,11,11,12,12,13,13,14,14,20,20,20,20,19,13,13,13,13,14,14,15,14,19,19,19,19,19,13,13,13,13,14,14,15,15,3,4,4,5,5,5,4,4,5,5,5,4,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,7,9,8,10,10,6,5,5,7,7,8,8,9,9,9,10,11,11,7,5,5,7,7,8,8,9,9,10,10,11,11,0,7,7,7,7,9,8,9,9,10,10,11,11,0,8,8,7,7,8,9,9,9,10,10,11,11,0,11,11,9,9,10,10,11,10,11,11,12,12,0,12,12,9,9,10,10,11,11,11,11,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,6,6,7,7,8,8,8,8,11,4,4,6,6,7,7,8,8,9,9,11,4,4,6,6,7,7,8,8,9,9,12,5,5,6,6,7,7,9,9,9,9,12,12,12,6,6,7,7,9,9,9,9,11,11,11,7,7,7,7,8,8,9,9,11,11,11,7,7,7,7,8,8,9,9,11,11,11,7,7,8,8,8,8,9,9,11,11,11,11,11,8,8,8,8,8,9,11,11,11,11,11,8,8,8,8,8,8,11,11,11,11,11,7,7,8,8,8,8,1,4,4,5,7,7,6,7,7,4,6,7,10,10,10,10,10,9,4,6,6,10,10,10,10,9,10,5,10,10,9,11,12,10,11,12,7,10,10,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,6,10,10,10,12,12,11,12,12,7,10,10,12,12,12,12,11,12,7,10,10,11,12,12,12,12,12,3,4,4,5,5,7,7,8,8,8,8,9,9,10,10,11,11,0,4,4,6,6,7,7,8,8,9,9,10,10,11,11,12,12,0,4,4,6,6,7,7,8,8,9,9,10,10,11,11,12,12,0,5,5,6,6,8,8,9,9,9,9,10,10,11,12,12,12,0,0,0,6,6,8,7,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,12,13,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,5,5,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,5,5,6,6,8,8,10,10,0,0,0,6,6,8,8,10,10,0,0,0,7,7,9,9,10,10,0,0,0,7,7,8,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,5,7,7,9,9,0,8,8,10,10,0,8,7,10,9,0,10,10,11,11,0,0,0,11,11,5,7,7,9,9,0,8,8,10,10,0,7,8,9,10,0,10,10,11,11,0,0,0,11,11,8,9,9,11,10,0,11,11,12,12,0,11,10,12,12,0,13,14,14,14,0,0,0,14,13,8,9,9,10,11,0,11,11,12,12,0,10,11,12,12,0,13,13,14,14,0,0,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,11,10,0,0,0,11,11,5,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,11,8,10,9,12,12,0,10,10,12,12,0,10,10,12,12,0,12,12,13,13,0,0,0,13,13,8,9,10,12,12,0,10,10,12,12,0,10,10,11,12,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,11,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,10,5,8,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,11,10,0,0,0,10,11,9,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,12,13,13,13,0,0,0,13,12,9,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,13,12,13,13,0,0,0,12,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,14,13,0,9,9,12,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,7,10,10,13,14,0,9,9,12,13,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,9,11,11,14,13,0,11,10,13,12,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,9,11,11,13,14,0,10,11,12,13,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,14,14,0,10,11,13,13,0,11,10,13,13,0,12,12,13,13,0,0,0,13,12,9,11,11,14,14,0,11,10,13,13,0,10,11,13,13,0,12,12,14,13,0,0,0,13,13,1,5,5,0,5,5,0,5,5,5,8,7,0,9,9,0,9,8,5,7,8,0,9,9,0,8,9,0,0,0,0,0,0,0,0,0,5,9,9,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,9,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,4,11,12,14,15,15,17,17,18,18,5,6,6,8,9,10,13,17,18,19,7,5,4,6,8,9,11,15,19,19,8,6,5,5,6,7,11,14,16,17,9,7,7,6,7,7,10,13,15,19,10,8,7,6,7,6,7,9,14,16,12,10,9,7,7,6,4,5,10,15,14,13,11,7,6,6,4,2,7,13,16,16,15,9,8,8,8,6,9,13,19,19,17,12,11,10,10,9,11,14,3,8,11,13,14,14,13,13,16,14,6,3,4,7,9,9,10,11,14,13,10,4,3,5,7,7,9,10,13,15,12,7,4,4,6,6,8,10,13,15,12,8,6,6,6,6,8,10,13,14,11,9,7,6,6,6,7,8,12,11,13,10,9,8,7,6,6,7,11,11,13,11,10,9,9,7,7,6,10,11,13,13,13,13,13,11,9,8,10,12,12,15,15,16,15,12,11,10,10,12,2,4,3,4,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,7,6,8,8,8,8,6,6,6,8,8,8,8,8,7,9,8,10,10,5,6,6,8,8,9,9,8,8,10,10,10,10,16,9,9,9,9,9,9,9,8,10,9,11,11,16,8,9,9,9,9,9,9,9,10,10,11,11,16,13,13,9,9,10,9,9,10,11,11,11,12,16,13,14,9,8,10,8,9,9,10,10,12,11,16,14,16,9,9,9,9,11,11,12,11,12,11,16,16,16,9,7,9,6,11,11,11,10,11,11,16,16,16,11,12,9,10,11,11,12,11,13,13,16,16,16,12,11,10,7,12,10,12,12,12,12,16,16,15,16,16,10,11,10,11,13,13,14,12,16,16,16,15,15,12,10,11,11,13,11,12,13,1,3,3,11,11,11,11,11,11,11,11,11,11,4,7,7,11,11,11,11,11,11,11,11,11,11,5,8,9,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,5,5,6,6,7,7,7,7,8,7,8,8,8,8,8,8,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,8,8,9,8,9,9,9,9,9,9,9,9,10,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,11,8,7,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,9,11,11,11,11,11,9,9,9,9,9,9,10,9,9,10,9,10,9,9,10,9,11,11,11,11,11,9,9,9,9,9,9,9,10,10,10,10,9,10,10,9,10,11,11,11,11,11,9,9,9,9,10,10,10,9,10,10,10,10,9,10,10,9,11,11,11,11,11,11,11,9,9,9,9,10,10,10,10,9,10,10,10,10,10,11,11,11,11,11,11,11,10,9,10,10,10,10,10,10,10,9,10,9,10,10,11,11,11,11,11,11,11,10,9,10,9,10,10,9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,9,10,10,10,10,10,9,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,9,10,10,11,11,11,11,11,11,11,11,11,10,10,10,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,10,11,9,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,7,7,8,7,9,8,10,9,6,5,5,8,8,9,9,8,8,9,9,11,10,11,10,6,5,5,8,8,9,9,8,8,9,9,10,10,11,11,18,8,8,9,8,10,10,9,9,10,10,10,10,11,10,18,8,8,9,9,10,10,9,9,10,10,11,11,12,12,18,12,13,9,10,10,10,9,10,10,10,11,11,12,11,18,13,13,9,9,10,10,10,10,10,10,11,11,12,12,18,18,18,10,10,9,9,11,11,11,11,11,12,12,12,18,18,18,10,9,10,9,11,10,11,11,11,11,13,12,18,18,18,14,13,10,10,11,11,12,12,12,12,12,12,18,18,18,14,13,10,10,11,10,12,12,12,12,12,12,18,18,18,18,18,12,12,11,11,12,12,13,13,13,14,18,18,18,18,18,12,12,11,11,12,11,13,13,14,13,18,18,18,18,18,16,16,11,12,12,13,13,13,14,13,18,18,18,18,18,16,15,12,11,12,11,13,11,15,14,3,5,5,6,6,7,7,7,7,7,7,9,5,5,6,6,7,7,7,7,8,7,8,5,5,6,6,7,7,7,7,7,7,9,6,6,7,7,7,7,8,7,7,8,9,9,9,7,7,7,7,7,7,7,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,7,7,8,8,9,9,9,8,8,8,8,7,7,8,8,9,9,9,9,8,8,8,7,7,8,8,9,9,9,8,8,8,8,7,7,8,8,9,9,9,8,8,7,7,7,7,8,8,1,4,4,6,6,8,8,8,8,10,10,11,10,6,5,5,7,7,8,8,9,9,10,10,12,11,6,5,5,7,7,8,8,9,9,10,10,12,11,21,7,7,7,7,9,9,10,10,11,11,12,12,21,7,7,7,7,9,9,10,10,11,11,12,12,21,12,12,9,9,10,10,11,11,11,11,12,12,21,12,12,9,9,10,10,11,11,12,12,12,12,21,21,21,11,11,10,10,11,12,12,12,13,13,21,21,21,11,11,10,10,12,12,12,12,13,13,21,21,21,15,15,11,11,12,12,13,13,13,13,21,21,21,15,16,11,11,12,12,13,13,14,14,21,21,21,21,20], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+285581);
/* memory initializer */ allocate([13,13,13,13,13,13,14,14,20,20,20,20,20,13,13,13,13,13,13,14,14,3,4,4,5,5,5,4,4,5,5,5,4,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,8,8,8,8,10,9,10,10,6,5,5,7,7,9,9,9,9,10,10,11,11,6,5,5,7,7,9,9,10,9,11,10,11,11,0,6,6,7,7,9,9,10,10,11,11,12,12,0,7,7,7,7,9,9,10,10,11,11,12,12,0,11,11,8,8,10,10,11,11,12,12,12,12,0,11,12,9,8,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,4,6,6,7,7,8,8,8,8,11,4,4,6,6,7,7,8,8,8,8,11,4,4,6,6,7,7,8,8,8,8,11,6,6,6,6,8,8,8,8,9,9,11,11,11,6,6,7,8,8,8,8,9,11,11,11,7,7,8,8,8,8,8,8,11,11,11,7,7,8,8,8,8,8,8,11,11,11,8,8,8,8,8,8,8,8,11,11,11,10,10,8,8,8,8,8,8,11,11,11,10,10,8,8,8,8,8,8,11,11,11,10,10,7,7,8,8,8,8,1,4,4,5,7,7,6,7,7,4,6,6,9,9,10,10,10,9,4,6,6,9,10,9,10,9,10,6,9,9,10,12,11,10,11,11,7,10,9,11,12,12,12,12,12,7,10,10,11,12,12,12,12,12,6,10,10,10,12,12,11,12,12,7,9,10,11,12,12,12,12,12,7,10,9,12,12,12,12,12,12,2,4,4,6,6,7,7,8,8,8,8,9,9,9,10,10,10,0,4,4,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,4,4,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,7,7,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,10,0,4,4,6,6,7,7,10,9,0,5,5,7,7,8,8,10,10,0,0,0,7,6,8,8,10,10,0,0,0,7,7,9,9,11,11,0,0,0,7,7,9,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,8,8,0,5,5,8,8,0,5,5,8,8,0,7,7,9,9,0,0,0,9,9,5,7,7,9,9,0,8,8,10,10,0,8,7,10,9,0,10,10,11,11,0,0,0,11,11,5,7,7,9,9,0,8,8,10,10,0,7,8,9,10,0,10,10,11,11,0,0,0,11,11,8,9,9,11,11,0,11,11,12,12,0,11,10,12,12,0,13,14,14,14,0,0,0,14,13,8,9,9,11,11,0,11,11,12,12,0,10,11,12,12,0,14,13,14,14,0,0,0,13,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,11,10,0,7,7,10,10,0,7,7,10,10,0,9,9,11,10,0,0,0,11,11,5,7,8,10,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,11,8,10,9,12,12,0,10,10,12,12,0,10,10,12,12,0,12,12,13,13,0,0,0,13,13,8,9,10,12,12,0,10,10,11,12,0,10,10,12,12,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,11,11,0,7,7,10,10,0,7,7,10,10,0,9,9,10,11,0,0,0,11,10,5,8,8,11,11,0,7,7,10,10,0,7,7,10,10,0,9,9,11,11,0,0,0,10,11,8,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,12,13,13,13,0,0,0,14,13,8,10,10,12,12,0,10,10,12,12,0,10,10,12,12,0,13,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,14,13,0,9,9,13,12,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,7,10,10,13,14,0,9,9,12,13,0,9,9,12,12,0,10,10,12,12,0,0,0,12,12,9,11,11,14,13,0,11,10,14,13,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,9,11,11,13,14,0,10,11,13,14,0,11,11,13,13,0,12,12,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,11,11,14,14,0,11,11,13,13,0,11,10,13,13,0,12,12,13,13,0,0,0,13,13,9,11,11,14,14,0,11,11,13,13,0,10,11,13,13,0,12,12,14,13,0,0,0,13,13,1,5,5,0,5,5,0,5,5,5,8,7,0,9,9,0,9,8,5,7,8,0,9,9,0,8,9,0,0,0,0,0,0,0,0,0,5,9,8,0,8,8,0,8,8,5,8,9,0,8,8,0,8,8,0,0,0,0,0,0,0,0,0,5,9,9,0,8,8,0,8,8,5,9,9,0,8,8,0,8,8,3,9,11,11,13,14,19,17,17,19,5,4,5,8,10,10,13,16,18,19,7,4,4,5,8,9,12,14,17,19,8,6,5,5,7,7,10,13,16,18,10,8,7,6,5,5,8,11,17,19,11,9,7,7,5,4,5,8,17,19,13,11,8,7,7,5,5,7,16,18,14,13,8,6,6,5,5,7,16,18,18,16,10,8,8,7,7,9,16,18,18,18,12,10,10,9,9,10,17,18,3,8,9,13,10,12,12,12,12,12,6,4,6,8,6,8,10,10,11,12,8,5,4,10,4,7,8,9,10,11,13,8,10,8,9,9,11,12,13,14,10,6,4,9,3,5,6,8,10,11,11,8,6,9,5,5,6,7,9,11,12,9,7,11,6,6,6,7,8,10,12,11,9,12,7,7,6,6,7,9,13,12,10,13,9,8,7,7,7,8,11,15,11,15,11,10,9,8,7,7,3,5,5,6,6,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,9,11,5,6,7,7,8,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,11,5,5,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,11,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,10,9,10,11,11,11,7,7,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,10,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,5,5,7,7,9,8,10,9,10,10,11,10,11,11,6,5,5,7,7,8,9,10,10,11,10,12,11,12,11,13,12,6,5,5,7,7,9,9,10,10,11,11,12,12,13,12,13,13,18,8,8,8,8,9,9,10,11,11,11,12,11,13,11,13,12,18,8,8,8,8,10,10,11,11,12,12,13,13,13,13,13,14,18,12,12,9,9,11,11,11,11,12,12,13,12,13,12,13,13,20,13,12,9,9,11,11,11,11,12,12,13,13,13,14,14,13,20,18,19,11,12,11,11,12,12,13,13,13,13,13,13,14,13,18,19,19,12,11,11,11,12,12,13,12,13,13,13,14,14,13,18,17,19,14,15,12,12,12,13,13,13,14,14,14,14,14,14,19,19,19,16,15,12,11,13,12,14,14,14,13,13,14,14,14,19,18,19,18,19,13,13,13,13,14,14,14,13,14,14,14,14,18,17,19,19,19,13,13,13,11,13,11,13,14,14,14,14,14,19,17,17,18,18,16,16,13,13,13,13,14,13,15,15,14,14,19,19,17,17,18,16,16,13,11,14,10,13,12,14,14,14,14,19,19,19,19,19,18,17,13,14,13,11,14,13,14,14,15,15,19,19,19,17,19,18,18,14,13,12,11,14,11,15,15,15,15,1,3,3,13,13,13,13,13,13,13,13,13,13,13,13,4,7,7,13,13,13,13,13,13,13,13,13,13,13,13,3,8,6,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,2,4,4,5,5,6,5,5,5,5,6,4,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,9,10,10,10,10,7,5,5,7,7,8,8,9,9,10,10,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,10,10,11,11,0,13,13,9,9,9,9,10,10,11,11,11,11,0,0,0,10,10,10,10,10,10,11,11,11,11,0,0,0,10,10,10,10,10,10,11,11,12,12,0,0,0,14,14,11,11,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,12,12,12,0,0,0,0,0,12,12,12,12,12,12,13,13,0,0,0,0,0,12,12,12,12,12,12,13,13,2,4,4,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,9,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,11,11,10,11,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,7,11,11,12,11,11,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,2,4,4,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,4,4,6,6,8,8,9,9,9,9,10,10,11,11,12,12,0,4,4,6,6,8,8,9,9,9,9,10,10,11,11,12,12,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,7,7,8,9,10,10,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,9,10,10,10,11,11,12,12,12,12,0,0,0,0,0,10,10,10,10,11,11,11,12,12,12,13,13,0,0,0,0,0,0,0,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,13,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,12,12,12,12,13,12,13,13,13,13,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,2,4,3,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,6,6,7,7,7,7,9,9,0,0,0,7,6,7,7,9,9,0,0,0,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,0,0,9,9,10,10,2,3,3,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,7,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,5,5,0,0,0,5,5,0,0,0,8,7,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,8,7,0,0,0,10,10,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,7,8,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,5,7,8,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,5,8,8,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,10,10,0,0,0,10,10,0,0,0,9,10,0,0,0,11,10,0,0,0,0,0,0,0,8,10,10,0,0,0,10,10,0,0,0,10,10,0,0,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,4,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,11,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+295821);
/* memory initializer */ allocate([5,8,10,14,11,11,12,16,15,17,5,5,7,9,7,8,10,13,17,17,7,5,5,10,5,7,8,11,13,15,10,8,10,8,8,8,11,15,18,18,8,5,5,8,3,4,6,10,14,16,9,7,6,7,4,3,5,9,14,18,10,9,8,10,6,5,6,9,14,18,12,12,11,12,8,7,8,11,14,18,14,13,12,10,7,5,6,9,14,18,14,14,13,10,6,5,6,8,11,16,4,7,11,11,11,11,10,11,12,11,5,2,11,5,6,6,7,9,11,12,11,9,6,10,6,7,8,9,10,11,11,5,11,7,8,8,9,11,13,14,11,6,5,8,4,5,7,8,10,11,10,6,7,7,5,5,6,8,9,11,10,7,8,9,6,6,6,7,8,9,11,9,9,11,7,7,6,6,7,9,12,12,10,13,9,8,7,7,7,8,11,13,11,14,11,10,9,8,7,7,2,5,5,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,11,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,11,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,9,10,10,10,10,11,7,7,7,7,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,12,11,11,7,7,8,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,12,11,12,8,8,8,8,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,8,8,8,8,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,12,9,9,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,12,11,11,11,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,12,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,12,11,12,11,11,11,9,10,10,10,10,10,10,10,10,10,10,10,10,10,11,12,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,12,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,12,11,11,12,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,12,12,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,12,12,12,11,11,11,12,11,11,11,10,10,10,10,10,10,10,10,10,10,10,12,11,12,12,12,12,12,11,12,11,11,10,10,10,10,10,10,10,10,10,10,12,12,12,12,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,5,5,7,7,9,8,10,9,10,10,10,10,6,5,5,7,7,9,8,10,9,11,10,12,12,13,13,6,5,5,7,7,9,9,10,10,11,11,12,12,12,13,19,8,8,8,8,9,9,10,10,12,11,12,12,13,13,19,8,8,8,8,9,9,11,11,12,12,13,13,13,13,19,12,12,9,9,11,11,11,11,12,11,13,12,13,13,18,12,12,9,9,11,10,11,11,12,12,12,13,13,14,19,18,18,11,11,11,11,12,12,13,12,13,13,14,14,16,18,18,11,11,11,10,12,11,13,13,13,13,13,14,17,18,18,14,15,11,12,12,13,13,13,13,14,14,14,18,18,18,15,15,12,10,13,10,13,13,13,13,13,14,18,17,18,17,18,12,13,12,13,13,13,14,14,16,14,18,17,18,18,17,13,12,13,10,12,12,14,14,14,14,17,18,18,18,18,14,15,12,12,13,12,14,14,15,15,18,18,18,17,18,15,14,12,11,12,12,14,14,14,15,1,3,3,12,12,12,12,12,12,12,12,12,12,4,7,7,12,12,12,12,12,12,12,12,12,12,3,8,8,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,4,5,5,6,5,5,5,5,6,5,4,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,8,9,10,11,11,7,5,5,7,7,8,8,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,9,10,10,10,10,11,11,0,13,13,9,9,10,9,10,10,11,11,11,12,0,0,0,10,10,10,10,10,10,11,11,12,12,0,0,0,10,10,10,10,10,10,11,11,12,12,0,0,0,14,14,11,11,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,12,12,13,0,0,0,0,0,12,12,12,12,12,12,13,13,0,0,0,0,0,13,12,12,12,12,12,13,13,2,4,4,6,6,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,9,8,10,10,10,10,10,8,8,8,8,9,9,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,11,11,10,11,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,7,11,11,12,11,11,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,2,4,4,6,6,8,8,9,9,8,8,9,9,10,10,11,11,0,4,4,6,6,8,8,9,9,9,9,10,10,11,11,11,11,0,4,4,7,6,8,8,9,9,9,9,10,10,11,11,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,9,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,9,9,10,10,11,11,11,12,12,12,0,0,0,0,0,10,10,10,10,11,11,11,11,12,12,13,12,0,0,0,0,0,0,0,10,10,11,11,11,11,12,12,12,12,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,12,12,12,12,12,12,13,13,13,13,0,0,0,0,0,0,0,0,0,12,12,12,12,12,13,13,13,2,3,3,6,6,7,7,9,9,0,4,4,6,6,7,7,9,9,0,4,5,6,6,7,7,9,9,0,6,6,7,7,8,8,10,10,0,0,0,7,7,8,8,10,9,0,0,0,9,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,10,10,9,9,11,11,0,0,0,0,0,9,9,10,10,2,3,3,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,7,7,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,8,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,8,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,6,8,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+307127);
/* memory initializer */ allocate([4,7,14,10,15,10,12,15,16,15,4,2,11,5,10,6,8,11,14,14,14,10,7,11,6,8,10,11,13,15,9,4,11,5,9,6,9,12,14,15,14,9,6,9,4,5,7,10,12,13,9,5,7,6,5,5,7,10,13,13,10,8,9,8,7,6,8,10,14,14,13,11,10,10,7,7,8,11,14,15,13,12,9,9,6,5,7,10,14,17,15,13,11,10,6,6,7,9,12,17,5,6,11,11,11,11,10,10,12,11,5,2,11,5,6,6,7,9,11,13,13,10,7,11,6,7,8,9,10,12,11,5,11,6,8,7,9,11,14,15,11,6,6,8,4,5,7,8,10,13,10,5,7,7,5,5,6,8,10,11,10,7,7,8,6,5,5,7,9,9,11,8,8,11,8,7,6,6,7,9,12,11,10,13,9,9,7,7,7,9,11,13,12,15,12,11,9,8,8,8,2,5,5,6,6,7,7,7,7,7,7,8,8,8,8,8,8,10,6,6,7,7,8,7,8,8,8,8,8,9,9,9,9,9,10,6,6,7,7,7,7,8,8,8,8,9,9,9,9,9,9,10,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,8,9,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,11,11,11,9,9,9,9,9,9,10,10,9,9,10,9,11,10,11,11,11,9,9,9,9,9,9,9,9,10,10,10,9,11,11,11,11,11,9,9,9,9,10,10,9,9,9,9,10,9,11,11,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,11,11,11,11,11,11,11,10,9,10,10,9,10,9,9,10,9,11,10,10,11,11,11,11,9,10,9,9,9,9,10,10,10,10,11,11,11,11,11,11,10,10,10,9,9,10,9,10,9,10,10,10,10,11,11,11,11,11,11,11,9,9,9,9,9,10,10,10,1,4,4,6,6,7,7,8,7,9,9,10,10,10,10,6,5,5,7,7,8,8,10,8,11,10,12,12,13,13,6,5,5,7,7,8,8,10,9,11,11,12,12,13,12,18,8,8,8,8,9,9,10,9,11,10,12,12,13,13,18,8,8,8,8,9,9,10,10,11,11,13,12,14,13,18,11,11,9,9,10,10,11,11,11,12,13,12,13,14,18,11,11,9,8,11,10,11,11,11,11,12,12,14,13,18,18,18,10,11,10,11,12,12,12,12,13,12,14,13,18,18,18,10,11,11,9,12,11,12,12,12,13,13,13,18,18,17,14,14,11,11,12,12,13,12,14,12,14,13,18,18,18,14,14,11,10,12,9,12,13,13,13,13,13,18,18,17,16,18,13,13,12,12,13,11,14,12,14,14,17,18,18,17,18,13,12,13,10,12,11,14,14,14,14,17,18,18,18,18,15,16,12,12,13,10,14,12,14,15,18,18,18,16,17,16,14,12,11,13,10,13,13,14,15,1,4,4,12,12,12,12,12,12,12,12,12,12,4,9,8,12,12,12,12,12,12,12,12,12,12,2,9,7,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,5,6,5,5,5,5,6,4,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,8,9,9,10,10,7,5,5,7,7,8,8,8,8,9,9,11,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,12,0,13,13,9,9,10,10,10,10,11,11,12,12,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,12,13,13,0,0,0,14,14,11,11,11,11,12,12,13,13,0,0,0,0,0,12,12,12,12,13,13,14,13,0,0,0,0,0,13,13,12,12,13,12,14,13,2,4,4,6,6,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,6,6,7,7,8,8,8,8,8,8,10,10,10,7,7,8,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,7,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,9,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,11,11,10,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,7,11,11,11,11,11,12,11,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,10,11,10,10,2,3,3,6,6,7,7,8,8,8,8,9,9,10,10,11,10,0,5,5,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,5,5,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,10,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,8,9,9,10,10,11,11,12,12,12,12,0,0,0,0,0,8,8,9,9,10,10,11,11,12,11,12,12,0,0,0,0,0,9,10,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,0,0,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,13,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,1,3,4,6,6,7,7,9,9,0,5,5,7,7,7,8,9,9,0,5,5,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,9,9,9,9,10,10,0,0,0,10,10,10,10,11,11,0,0,0,0,0,10,10,11,11,2,3,3,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,4,4,6,6,0,0,0,0,0,5,5,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,5,0,0,0,5,5,0,0,0,5,5,0,0,0,7,8,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,5,6,6,0,0,0,7,7,0,0,0,7,7,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,5,7,7,0,0,0,7,7,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,8,10,10,0,0,0,9,9,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,6,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,6,8,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,8], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+316820);
/* memory initializer */ allocate([10,9,13,11,14,10,12,13,13,14,7,2,12,5,10,5,7,10,12,14,12,6,9,8,7,7,9,11,13,16,10,4,12,5,10,6,8,12,14,16,12,6,8,7,6,5,7,11,12,16,10,4,8,5,6,4,6,9,13,16,10,6,10,7,7,6,7,9,13,15,12,9,11,9,8,6,7,10,12,14,14,11,10,9,6,5,6,9,11,13,15,13,11,10,6,5,6,8,9,11,6,6,12,10,10,10,9,10,12,12,6,1,10,5,6,6,7,9,11,14,12,9,8,11,7,8,9,11,13,15,10,5,12,7,8,7,9,12,14,15,10,6,7,8,5,6,7,9,12,14,9,6,8,7,6,6,7,9,12,12,9,7,9,9,7,6,6,7,10,10,10,9,10,11,8,7,6,6,8,10,12,11,13,13,11,10,8,8,8,10,11,13,15,15,14,13,10,8,8,9,2,4,4,6,6,7,7,7,7,7,7,8,8,8,8,8,8,10,7,7,7,7,7,7,8,8,8,8,9,9,9,9,9,9,10,7,7,7,7,8,8,8,8,8,8,9,9,9,9,9,9,10,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,8,7,8,8,8,8,9,9,9,9,9,9,9,9,10,11,11,8,8,8,8,9,9,9,9,9,9,10,9,9,9,10,11,10,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,11,10,8,8,9,9,9,9,9,9,10,9,9,10,9,10,11,10,11,11,11,8,8,9,9,9,9,9,9,9,9,10,10,11,11,11,11,11,9,9,9,9,9,9,10,9,9,9,10,10,11,11,11,11,11,9,9,9,9,9,9,9,9,9,10,9,10,11,11,11,11,11,9,9,9,9,10,10,9,9,9,10,10,10,11,11,11,11,11,11,11,9,9,9,10,9,9,10,10,10,10,11,11,10,11,11,11,11,10,9,10,10,9,9,9,9,10,10,11,10,11,11,11,11,11,9,9,9,9,10,9,10,10,10,10,11,10,11,11,11,11,11,10,10,9,9,10,9,10,10,10,10,10,10,10,11,11,11,11,11,11,9,9,10,9,10,9,10,10,1,4,4,6,6,7,6,8,8,10,9,10,10,6,5,5,7,7,8,7,10,9,11,11,12,13,6,5,5,7,7,8,8,10,10,11,11,13,13,18,8,8,8,8,9,9,10,10,12,12,12,13,18,8,8,8,8,9,9,10,10,12,12,13,13,18,11,11,8,8,10,10,11,11,12,11,13,12,18,11,11,9,7,10,10,11,11,11,12,12,13,17,17,17,10,10,11,11,12,12,12,10,12,12,17,17,17,11,10,11,10,13,12,11,12,12,12,17,17,17,15,14,11,11,12,11,13,10,13,12,17,17,17,14,14,12,10,11,11,13,13,13,13,17,17,16,17,16,13,13,12,10,13,10,14,13,17,16,17,16,17,13,12,12,10,13,11,14,14,1,5,4,12,12,12,12,12,12,12,12,12,12,4,9,8,11,11,11,11,11,11,11,11,11,11,2,8,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,4,4,5,4,6,5,5,5,5,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,6,5,5,7,7,8,8,8,8,9,9,10,10,7,6,5,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,10,10,10,10,11,11,12,12,0,0,0,10,10,10,10,11,11,12,12,12,13,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,14,14,10,11,11,11,12,12,13,13,0,0,0,14,14,11,10,11,11,13,12,13,13,0,0,0,0,0,12,12,11,12,13,12,14,14,0,0,0,0,0,12,12,12,12,13,12,14,14,2,3,4,6,6,7,7,7,7,7,7,9,7,7,6,6,7,7,8,8,8,8,9,6,6,6,6,7,7,8,8,8,8,10,7,7,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,10,9,9,7,10,10,11,10,11,11,10,11,6,9,9,11,10,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,11,11,11,12,11,11,6,9,9,11,10,10,11,11,10,6,9,9,11,10,10,12,10,11,1,4,3,6,6,8,8,9,9,9,9,9,9,10,10,11,11,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,11,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,8,8,7,7,9,9,10,10,9,9,10,10,11,11,12,12,0,0,0,7,7,9,9,10,10,10,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,13,12,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,14,14,1,3,3,6,6,7,7,9,9,0,7,7,7,7,7,7,9,9,0,7,7,7,7,7,7,9,9,0,8,8,7,7,8,8,10,10,0,0,0,7,7,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,10,10,9,9,11,11,0,0,0,0,0,9,9,11,11,1,3,3,6,6,0,0,0,0,0,6,6,6,6,0,0,0,0,0,6,6,6,6,0,0,0,0,0,7,7,6,6,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,7,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,3,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,7,7,0,0,0,7,7,0,0,0,8,8,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,4,6,6,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,11,11,0,0,0,11,11,0,0,0,12,11,0,0,0,0,0,0,0,7,8,8,0,0,0,10,11,0,0,0,11,11,0,0,0,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,11,11,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,6,8,8,0,0,0,10,11,0,0,0,10,11,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,0,0,0,11,12,0,0,0,11,12,0,0,0,12,11,0,0,0,0,0,0,0,8,10,9,0,0,0,12,11,0,0,0,12,11,0,0,0,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,6,6,0,0,0,0,0,0,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,6,8,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+326361);
/* memory initializer */ allocate([11,9,13,12,12,11,12,12,13,15,8,2,11,4,8,5,7,10,12,15,13,7,10,9,8,8,10,13,17,17,11,4,12,5,9,5,8,11,14,16,12,6,8,7,6,6,8,11,13,16,11,4,9,5,6,4,6,10,13,16,11,6,11,7,7,6,7,10,13,15,13,9,12,9,8,6,8,10,12,14,14,10,10,8,6,5,6,9,11,13,15,11,11,9,6,5,6,8,9,12,5,4,8,10,9,9,10,11,12,4,2,5,6,6,8,10,11,13,8,4,6,8,7,9,12,12,14,10,6,8,4,5,6,9,11,12,9,5,6,5,5,6,9,11,11,9,7,9,6,5,5,7,10,10,10,9,11,8,7,6,7,9,11,11,12,13,10,10,9,8,9,11,11,15,15,12,13,11,9,10,11,5,5,9,10,9,9,10,11,12,5,1,5,6,6,7,10,12,14,9,5,6,8,8,10,12,14,14,10,5,8,5,6,8,11,13,14,9,5,7,6,6,8,10,12,11,9,7,9,7,6,6,7,10,10,10,9,12,9,8,7,7,10,12,11,11,13,12,10,9,8,9,11,11,14,15,15,13,11,9,9,11,2,5,5,6,6,7,6,7,7,8,8,8,8,8,8,8,8,10,6,6,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,6,6,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,7,7,7,7,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,9,9,9,9,9,9,9,9,9,9,10,11,11,8,8,8,8,9,9,9,9,9,9,10,10,9,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,10,10,11,10,10,8,8,9,9,9,9,9,9,9,9,9,9,10,9,10,10,10,11,11,8,8,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,10,9,10,9,11,11,11,11,11,9,8,9,9,9,9,9,9,9,10,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,10,10,9,11,11,11,11,11,11,11,9,9,10,9,9,9,9,10,9,10,10,11,10,11,11,11,11,9,10,10,10,9,9,9,9,9,9,10,11,11,11,11,11,11,9,9,9,9,9,9,9,9,10,9,11,11,10,11,11,11,11,10,10,9,9,9,9,9,9,10,9,10,11,10,11,11,11,11,11,11,9,9,10,9,9,9,9,9,1,4,4,6,6,7,7,9,9,10,11,12,12,6,5,5,7,7,8,7,10,10,11,11,12,12,6,5,5,7,7,8,8,10,10,11,11,12,12,16,7,7,8,8,9,9,11,11,12,12,13,13,17,7,7,8,7,9,9,11,10,12,12,13,13,19,11,10,8,8,10,10,11,11,12,12,13,13,19,11,11,9,7,11,10,11,11,12,12,13,12,19,19,19,10,10,10,10,11,12,12,12,13,14,18,19,19,11,9,11,9,13,12,12,12,13,13,19,20,19,13,15,11,11,12,12,13,13,14,13,18,19,20,15,13,12,10,13,10,13,13,13,14,20,20,20,20,20,13,14,12,12,13,12,13,13,20,20,20,20,20,13,12,12,12,14,12,14,13,1,3,3,13,13,13,13,13,13,13,13,13,13,3,6,6,13,13,13,13,13,13,13,13,13,13,4,8,7,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,2,4,4,4,5,6,5,5,5,5,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,7,5,5,7,7,8,8,8,8,9,9,10,10,7,5,6,7,7,8,8,8,8,9,9,11,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,12,12,0,0,0,9,10,9,10,11,11,12,11,13,12,0,0,0,10,10,9,9,11,11,12,12,13,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,12,11,11,12,13,14,13,0,0,0,0,0,12,12,11,11,13,12,14,13,2,4,4,6,6,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,7,7,7,7,8,8,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,9,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,10,11,11,11,10,10,6,9,9,11,11,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,11,11,11,11,11,11,11,6,9,9,11,10,10,11,11,10,6,9,9,10,10,10,11,10,11,2,3,3,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,5,5,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,5,5,6,6,8,8,9,9,9,9,10,10,10,10,11,11,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,10,10,10,11,11,11,12,12,0,0,0,8,8,8,8,9,9,10,10,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,6,6,7,7,9,9,0,6,6,7,7,8,8,9,9,0,6,6,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,8,8,9,9,11,11,0,0,0,9,9,9,9,11,11,0,0,0,10,10,10,10,11,11,0,0,0,0,0,9,9,11,11,1,3,3,7,7,0,0,0,0,0,5,5,6,6,0,0,0,0,0,5,5,7,7,0,0,0,0,0,7,7,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,9,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+335846);
/* memory initializer */ allocate([2,4,4,6,6,6,6,7,7,8,8,8,8,8,8,8,8,10,10,10,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,9,9,9,9,9,9,10,9,9,10,10,10,7,7,8,8,9,8,9,9,9,9,10,9,9,10,10,11,11,8,8,8,8,9,9,9,9,9,9,10,9,9,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,10,10,11,11,11,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,11,11,11,8,8,9,9,9,9,10,9,9,9,9,9,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,10,11,11,9,9,9,9,9,9,9,9,9,10,10,10,10,11,10,11,11,9,9,9,9,9,9,9,9,9,10,10,9,10,10,11,11,11,11,11,9,9,9,10,9,9,9,9,9,9,10,11,11,11,11,11,11,10,10,10,10,9,9,9,9,9,9,10,11,11,11,11,11,11,9,10,9,9,9,9,10,9,9,9,11,11,11,11,11,11,11,10,10,9,9,9,9,9,9,10,9,11,11,10,11,11,11,11,10,11,9,9,9,9,9,9,9,9,1,4,4,6,5,7,7,9,9,10,10,12,12,6,5,5,7,7,8,8,10,10,12,11,12,12,6,5,5,7,7,8,8,10,10,11,11,12,12,15,7,7,8,8,9,9,11,11,12,12,13,12,15,8,8,8,7,9,9,10,10,12,12,13,13,16,11,10,8,8,10,10,11,11,12,12,13,13,16,11,11,9,8,11,10,11,11,12,12,13,12,16,16,16,10,11,10,11,12,12,12,12,13,13,16,16,16,11,9,11,9,14,12,12,12,13,13,16,16,16,12,14,11,12,12,12,13,13,14,13,16,16,16,15,13,12,10,13,10,13,14,13,13,16,16,16,16,16,13,14,12,13,13,12,13,13,16,16,16,16,16,13,12,12,11,14,12,15,13,1,4,3,10,10,10,10,10,10,10,10,10,10,4,8,6,10,10,10,10,10,10,10,10,10,10,4,8,7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,10,9,7,5,6,7,7,8,8,8,8,9,9,10,10,7,5,5,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,11,11,0,0,0,10,10,10,10,11,11,12,11,12,12,0,0,0,10,10,10,9,11,11,12,11,13,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,12,11,11,12,12,14,13,0,0,0,0,0,12,11,11,11,13,10,14,13,2,3,3,6,6,7,7,7,7,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,6,10,10,11,11,11,11,10,10,6,9,9,11,10,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,11,11,11,12,11,11,7,9,9,11,10,10,11,11,10,6,9,9,10,10,10,12,10,11,1,4,3,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,11,0,0,0,8,8,9,9,9,10,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,10,9,10,10,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,12,12,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,6,5,6,6,8,8,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,7,9,9,0,0,0,7,7,8,8,10,10,0,0,0,7,7,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,10,10,9,9,11,11,0,0,0,0,0,9,9,11,11,1,3,2,7,7,0,0,0,0,0,13,13,6,6,0,0,0,0,0,12,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,9,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,6,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,5,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,0,0,0,0,0,0,5,7,6,0,0,0,0,0,0,5,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,7,7,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,8,8,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,8,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+344768);
/* memory initializer */ allocate([4,7,13,14,14,15,16,18,18,4,2,5,8,7,9,12,15,15,10,4,5,10,6,8,11,15,17,12,5,7,5,6,8,11,14,17,11,5,6,6,5,6,9,13,17,12,6,7,6,5,6,8,12,14,14,7,8,6,6,7,9,11,14,14,8,9,6,5,6,9,11,13,16,10,10,7,6,7,8,10,11,6,8,13,12,13,14,15,16,16,4,2,4,7,6,8,11,13,15,10,4,4,8,6,8,11,14,17,11,5,6,5,6,8,12,14,17,11,5,5,6,5,7,10,13,16,12,6,7,8,7,8,10,13,15,13,8,8,7,7,8,10,12,15,15,7,7,5,5,7,9,12,14,15,8,8,6,6,7,8,10,11,5,4,9,10,9,10,11,12,13,4,1,5,7,7,9,11,12,14,8,5,7,9,8,10,13,13,13,10,7,9,4,6,7,10,12,14,9,6,7,6,6,7,10,12,12,9,8,9,7,6,7,8,11,12,11,11,11,9,8,7,8,10,12,12,13,14,12,11,9,9,9,12,12,17,17,15,16,12,10,11,13,5,4,8,9,8,9,10,12,15,4,1,5,5,6,8,11,12,12,8,5,8,9,9,11,13,12,12,9,5,8,5,7,9,12,13,13,8,6,8,7,7,9,11,11,11,9,7,9,7,7,7,7,10,12,10,10,11,9,8,7,7,9,11,11,12,13,12,11,9,8,9,11,13,16,16,15,15,12,10,11,12,2,5,5,6,6,7,7,7,7,8,8,8,8,8,8,8,8,10,6,6,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,6,6,7,7,8,7,8,8,9,9,9,9,9,9,9,9,10,7,7,7,7,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,9,8,9,9,9,9,10,9,9,10,10,10,11,8,8,8,8,9,9,9,9,9,9,9,10,9,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,9,10,10,11,10,10,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,11,11,8,8,9,9,9,9,9,9,9,9,9,10,11,11,11,11,11,9,9,9,9,9,9,9,9,10,9,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,10,11,11,11,11,11,9,9,10,9,9,9,9,9,9,9,10,11,10,11,11,11,11,10,10,10,10,9,9,9,9,9,9,10,11,11,11,11,11,11,9,10,9,9,9,9,9,9,9,9,11,11,10,11,11,11,10,10,10,9,9,9,9,9,9,9,9,10,11,10,11,11,11,11,11,11,9,9,9,9,9,9,9,9,1,4,4,6,6,7,7,9,9,10,11,12,12,6,5,5,7,7,8,8,10,10,12,11,12,12,6,5,5,7,7,8,8,10,10,12,11,12,12,17,7,7,8,8,9,9,10,10,12,12,13,13,18,7,7,8,7,9,9,10,10,12,12,12,13,19,10,10,8,8,10,10,11,11,12,12,13,14,19,11,10,8,7,10,10,11,11,12,12,13,12,19,19,19,10,10,10,10,11,11,12,12,13,13,19,19,19,11,9,11,9,14,12,13,12,13,13,19,20,18,13,14,11,11,12,12,13,13,14,13,20,20,20,15,13,11,10,13,11,13,13,14,13,20,20,20,20,20,13,14,12,12,13,13,13,13,20,20,20,20,20,13,13,12,12,16,13,15,13,1,3,3,11,11,11,11,11,11,3,7,6,11,11,11,11,11,11,4,8,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,4,4,4,4,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,7,5,5,7,7,8,8,8,8,9,9,10,10,7,6,5,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,11,12,0,0,0,9,10,10,10,11,11,12,11,12,12,0,0,0,10,10,9,9,11,11,12,12,12,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,12,11,11,13,12,13,13,0,0,0,0,0,12,12,11,11,13,12,14,14,2,4,4,6,6,7,7,7,7,7,8,9,5,5,6,6,7,7,8,8,8,8,9,5,5,6,6,7,7,8,8,8,8,10,7,7,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,11,9,9,4,7,7,10,9,9,11,9,9,7,10,10,10,11,11,11,10,10,6,9,9,11,11,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,11,11,11,11,11,11,6,9,9,11,10,10,11,11,10,6,9,9,11,10,10,11,10,11,1,4,4,6,6,8,8,8,8,8,8,9,9,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,10,11,11,11,0,5,6,7,7,8,8,9,9,9,9,10,10,10,11,11,11,0,7,7,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,12,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,10,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,11,11,12,12,12,13,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,12,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,11,12,12,13,13,13,13,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,4,3,6,6,7,7,9,9,0,5,5,7,7,8,7,9,9,0,5,5,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,11,11,0,0,0,9,9,9,9,11,11,0,0,0,10,10,10,10,11,11,0,0,0,0,0,9,9,11,11,1,3,3,7,7,0,0,0,0,0,5,4,7,7,0,0,0,0,0,5,5,7,7,0,0,0,0,0,6,7,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,10,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+353428);
/* memory initializer */ allocate([2,4,4,6,6,7,7,7,7,8,8,8,8,8,8,8,8,10,10,10,7,7,7,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,8,9,9,9,9,9,10,9,9,10,10,10,7,7,8,8,9,8,9,9,9,9,10,9,9,10,10,10,10,8,8,8,8,9,8,9,9,9,9,9,10,9,10,10,10,10,7,7,8,8,9,9,9,9,9,9,10,9,10,10,10,10,10,8,8,8,9,9,9,9,9,9,9,10,10,10,9,11,10,10,10,10,8,8,9,9,9,9,9,10,9,9,9,10,10,10,10,11,11,9,9,9,9,9,9,9,9,10,9,9,10,11,10,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,10,9,11,10,10,11,11,11,11,9,9,9,9,9,9,9,9,9,9,10,10,10,11,11,11,11,9,10,9,10,9,9,9,9,10,9,10,11,10,11,10,10,10,10,10,9,9,9,10,9,9,9,10,11,11,10,11,11,10,11,10,10,10,9,9,9,9,10,9,9,10,11,10,11,11,11,11,10,11,10,10,9,10,9,9,9,10,1,4,4,6,6,7,7,9,9,11,12,13,12,6,5,5,7,7,8,8,10,9,12,12,12,12,6,5,5,7,7,8,8,10,9,12,11,11,13,16,7,7,8,8,9,9,10,10,12,12,13,12,16,7,7,8,7,9,9,10,10,11,12,12,13,16,10,10,8,8,10,10,11,12,12,12,13,13,16,11,10,8,7,11,10,11,11,12,11,13,13,16,16,16,10,10,10,10,11,11,13,12,13,13,16,16,16,11,9,11,9,15,13,12,13,13,13,16,16,16,15,13,11,11,12,13,12,12,14,13,16,16,16,14,13,11,11,13,12,14,13,13,13,16,16,16,16,16,13,13,13,12,14,13,14,14,16,16,16,16,16,13,13,12,12,14,14,15,13,1,5,5,10,10,6,9,8,10,10,6,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,7,5,5,7,7,8,8,8,8,9,9,10,10,7,5,6,7,7,8,8,8,8,9,9,10,10,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,10,10,10,10,11,11,11,11,0,13,13,9,9,9,9,10,10,11,11,11,12,0,0,0,10,10,10,10,11,11,11,11,12,12,0,0,0,10,10,9,9,11,11,11,12,12,12,0,0,0,13,13,10,10,11,11,12,12,13,13,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,11,11,11,11,13,12,13,13,0,0,0,0,0,12,12,11,11,12,12,13,13,2,3,3,6,6,7,7,7,7,7,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,10,10,10,10,10,9,9,8,8,8,8,10,10,10,10,10,8,8,8,8,8,8,1,4,4,7,6,6,7,6,6,4,7,7,10,9,9,10,9,9,4,6,7,10,9,9,11,9,9,7,10,10,11,11,11,12,10,11,6,9,9,11,10,11,11,10,10,6,9,9,11,10,11,11,10,10,7,11,10,12,11,11,11,11,11,7,9,9,10,10,10,11,11,10,6,9,9,11,10,10,11,10,10,1,4,3,6,6,8,7,8,8,8,8,9,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,9,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,8,8,9,9,9,9,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,9,9,10,10,10,10,11,11,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,11,12,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,11,11,11,11,11,12,12,12,13,13,0,0,0,0,0,0,0,11,10,11,11,11,11,12,12,13,13,0,0,0,0,0,0,0,11,11,12,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,11,12,12,12,12,13,13,13,0,0,0,0,0,0,0,12,12,12,12,12,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,12,12,13,13,14,14,1,3,3,6,6,6,6,8,8,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,8,9,9,0,0,0,7,7,7,7,9,9,0,0,0,9,9,8,8,10,10,0,0,0,8,9,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,3,2,8,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,6,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,11,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+362324);
/* memory initializer */ allocate([6,6,12,13,13,14,16,17,17,4,2,5,8,7,9,12,15,15,9,4,5,9,7,9,12,16,18,11,6,7,4,6,8,11,14,18,10,5,6,5,5,7,10,14,17,10,5,7,7,6,7,10,13,16,11,5,7,7,7,8,10,12,15,13,6,7,5,5,7,9,12,13,16,8,9,6,6,7,9,10,12,9,8,12,11,12,13,14,14,16,6,1,5,6,6,9,12,14,17,9,4,5,9,7,9,13,15,16,8,5,8,6,8,10,13,17,17,9,6,7,7,8,9,13,15,17,11,8,9,9,9,10,12,16,16,13,7,8,7,7,9,12,14,15,13,6,7,5,5,7,10,13,13,14,7,8,5,6,7,9,10,12,3,3,8,8,8,8,10,12,14,3,2,6,7,7,8,10,12,16,7,6,7,9,8,10,12,14,16,8,6,8,4,5,7,9,11,13,7,6,8,5,6,7,9,11,14,8,8,10,7,7,6,8,10,13,9,11,12,9,9,7,8,10,12,10,13,15,11,11,10,9,10,13,13,16,17,14,15,14,13,14,17,4,4,7,8,7,8,10,12,17,3,1,6,6,7,8,10,12,15,7,6,9,9,9,11,12,14,17,8,6,9,6,7,9,11,13,17,7,6,9,7,7,8,9,12,15,8,8,10,8,7,7,7,10,14,9,10,12,10,8,8,8,10,14,11,13,15,13,12,11,11,12,16,17,18,18,19,20,18,16,16,20,3,4,4,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,6,6,6,6,7,7,8,8,8,9,9,9,9,9,9,9,10,6,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,7,7,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,7,8,8,8,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,8,8,8,8,8,8,9,9,9,9,9,9,9,9,11,10,11,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,11,11,8,8,8,8,9,9,9,9,9,9,9,9,11,10,11,11,11,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,11,11,9,9,9,9,9,9,9,9,9,9,9,10,11,11,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,10,11,11,11,11,11,11,9,10,10,10,9,9,9,9,9,9,11,10,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,10,10,9,9,9,9,9,9,9,9,10,11,11,11,11,11,11,11,11,9,9,9,9,9,9,9,9,1,4,4,6,6,8,8,9,9,10,11,11,11,6,5,5,7,7,8,8,10,10,10,11,11,11,6,5,5,7,7,8,8,10,10,11,12,12,12,14,7,7,7,8,9,9,11,11,11,12,11,12,17,7,7,8,7,9,9,11,11,12,12,12,12,14,11,11,8,8,10,10,11,12,12,13,11,12,14,11,11,8,8,10,10,11,12,12,13,13,12,14,15,14,10,10,10,10,11,12,12,12,12,11,14,13,16,10,10,10,9,12,11,12,12,13,14,14,15,14,14,13,10,10,11,11,12,11,13,11,14,12,15,13,14,11,10,12,10,12,12,13,13,13,13,14,15,15,12,12,11,11,12,11,13,12,14,14,14,14,17,12,12,11,10,13,11,13,13,1,4,4,12,11,13,13,14,14,4,7,7,11,13,14,14,14,14,3,8,3,14,14,14,14,14,14,14,10,12,14,14,14,14,14,14,14,14,5,14,8,14,14,14,14,14,12,14,13,14,14,14,14,14,14,14,13,14,10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,2,4,4,4,5,6,5,5,5,5,6,5,5,5,5,6,5,5,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,9,9,10,10,7,5,5,7,7,8,8,8,8,10,9,11,10,7,5,5,7,7,8,8,8,8,9,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,11,11,12,12,0,13,13,9,9,9,9,10,10,11,11,12,12,0,0,0,10,10,10,10,11,11,12,12,12,13,0,0,0,10,10,10,10,11,11,12,12,12,12,0,0,0,14,14,11,11,11,11,12,13,13,13,0,0,0,14,14,11,10,11,11,12,12,13,13,0,0,0,0,0,12,12,12,12,13,13,13,14,0,0,0,0,0,13,12,12,12,13,13,13,14,2,4,4,5,5,7,7,7,7,8,8,10,5,5,6,6,7,7,8,8,8,8,10,5,5,6,6,7,7,8,8,8,8,10,7,7,7,7,8,8,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,9,9,10,10,10,10,10,8,8,8,8,9,9,10,10,10,10,10,9,9,9,9,8,9,10,10,10,10,10,8,9,8,8,9,8,1,4,4,7,6,6,7,6,6,4,7,6,10,9,9,11,9,9,4,6,7,10,9,9,11,9,9,7,10,10,10,11,11,11,11,10,6,9,9,11,10,10,11,10,10,6,9,9,11,10,11,11,10,10,7,11,11,11,11,11,12,11,11,7,9,9,11,10,10,12,10,10,7,9,9,11,10,10,11,10,10,1,4,4,6,6,8,8,9,9,8,8,9,9,10,10,11,11,0,6,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,6,5,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,7,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,13,13,13,0,0,0,0,0,10,10,11,11,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,12,12,12,13,13,13,14,14,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,14,14,14,14,1,4,3,6,6,7,7,9,9,0,5,5,7,7,8,7,9,9,0,5,5,7,7,8,8,9,9,0,7,7,8,8,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,9,9,9,9,10,10,0,0,0,10,10,10,10,11,11,0,0,0,0,0,10,10,11,11,1,3,4,7,7,0,0,0,0,0,4,4,7,7,0,0,0,0,0,4,5,7,7,0,0,0,0,0,6,7,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,10,9,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,9,0,0,0,0,0,0,9,9,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,9,10,10,0,0,0,0,0,0,9,10,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+371440);
/* memory initializer */ allocate([3,4,3,6,6,7,7,8,8,9,9,9,9,9,9,9,9,10,11,11,6,6,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,6,6,7,7,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,7,8,8,8,9,9,9,9,9,9,10,9,10,11,10,7,6,7,7,8,8,9,9,9,9,9,9,9,10,10,10,11,7,7,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,7,7,8,8,8,8,9,9,9,9,9,9,9,10,11,11,11,8,8,8,8,8,8,9,9,9,9,9,9,9,9,11,10,10,11,11,8,8,8,9,9,9,9,9,9,10,9,10,10,10,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,11,10,11,11,9,9,9,9,9,9,9,9,9,10,10,10,10,11,10,11,11,9,9,9,9,9,9,9,9,9,9,9,9,11,10,10,11,11,11,11,9,9,9,9,9,9,9,9,10,10,10,11,11,10,11,11,11,9,10,10,9,9,9,9,9,9,9,10,11,11,11,11,11,11,9,9,9,9,9,9,9,9,9,9,11,11,11,11,11,11,11,10,10,9,9,9,9,9,9,9,9,11,11,11,10,11,11,11,11,11,9,9,9,10,9,9,9,9,1,4,4,6,6,8,8,9,10,10,11,11,11,6,5,5,7,7,8,8,9,10,9,11,11,12,5,5,5,7,7,8,9,10,10,12,12,14,13,15,7,7,8,8,9,10,11,11,10,12,10,11,15,7,8,8,8,9,9,11,11,13,12,12,13,15,10,10,8,8,10,10,12,12,11,14,10,10,15,11,11,8,8,10,10,12,13,13,14,15,13,15,15,15,10,10,10,10,12,12,13,12,13,10,15,15,15,10,10,11,10,13,11,13,13,15,13,15,15,15,13,13,10,11,11,11,12,10,14,11,15,15,14,14,13,10,10,12,11,13,13,14,14,15,15,15,15,15,11,11,11,11,12,11,15,12,15,15,15,15,15,12,12,11,11,14,12,13,14,1,7,7,11,11,8,11,11,11,11,4,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,7,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,8,8,9,9,10,10,6,5,5,7,7,8,8,8,8,9,9,11,11,7,5,5,7,7,8,8,8,8,9,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,8,8,8,8,9,9,9,9,10,10,11,11,0,12,12,9,9,9,10,10,10,11,11,11,12,0,13,13,9,9,9,9,10,10,11,11,11,12,0,0,0,10,10,10,10,11,11,12,12,12,13,0,0,0,10,10,10,10,11,11,12,12,13,12,0,0,0,14,14,11,10,11,12,12,13,13,14,0,0,0,15,15,11,11,12,11,12,12,14,13,0,0,0,0,0,12,12,12,12,13,13,14,14,0,0,0,0,0,13,13,12,12,13,13,13,14,1,4,4,6,6,7,7,8,8,8,8,10,10,10,7,6,8,8,8,8,8,8,10,10,10,7,6,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,9,9,9,9,10,10,10,8,8,8,8,9,9,9,9,10,10,10,9,9,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,10,10,10,10,10,9,9,9,9,9,9,1,4,4,7,6,6,7,6,6,4,6,6,10,9,9,11,9,9,4,6,6,10,9,9,10,9,9,7,10,10,11,11,11,12,11,11,7,9,9,11,11,10,11,10,10,7,9,9,11,10,11,11,10,10,7,10,10,11,11,11,12,11,11,7,9,9,11,10,10,11,10,10,7,9,9,11,10,10,11,10,10,1,4,3,6,6,7,7,8,8,8,8,9,9,10,10,10,10,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,8,8,9,9,9,9,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,9,9,10,10,10,11,11,11,12,12,0,0,0,9,9,10,9,10,10,10,10,11,11,11,11,12,12,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,0,0,9,9,10,10,10,11,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,11,10,11,11,11,12,13,12,13,13,0,0,0,0,0,0,0,11,10,11,11,12,12,12,12,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,13,14,0,0,0,0,0,0,0,12,12,12,13,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,12,13,13,14,14,1,3,3,6,6,6,6,8,8,0,0,0,6,6,7,7,9,9,0,0,0,6,6,7,7,9,9,0,0,0,7,7,8,8,10,10,0,0,0,7,7,8,8,10,10,0,0,0,9,9,9,9,10,10,0,0,0,9,9,9,9,10,10,0,0,0,10,10,10,10,11,11,0,0,0,0,0,10,10,11,11,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,9,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,10,9,0,0,0,0,0,0,8,10,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,11,9,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,11,11,0,0,0,0,0,0,9,11,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+380336);
/* memory initializer */ allocate([5,6,12,14,12,14,16,17,18,4,2,5,11,7,10,12,14,15,9,4,5,11,7,10,13,15,18,15,6,7,5,6,8,11,13,16,11,5,6,5,5,6,9,13,15,12,5,7,6,5,6,9,12,14,12,6,7,8,6,7,9,12,13,14,8,8,7,5,5,8,10,12,16,9,9,8,6,6,7,9,9,10,9,12,15,12,13,16,14,16,7,1,5,14,7,10,13,16,16,9,4,6,16,8,11,16,16,16,14,4,7,16,9,12,14,16,16,10,5,7,14,9,12,14,15,15,13,8,9,14,10,12,13,14,15,13,9,9,7,6,8,11,12,12,14,8,8,5,4,5,8,11,12,16,10,10,6,5,6,8,9,10,5,8,10,10,10,11,11,12,14,18,7,5,5,6,8,9,10,12,14,17,9,5,4,5,6,8,10,11,13,19,9,5,4,4,5,6,9,10,12,17,8,6,5,4,4,5,7,10,11,15,8,7,7,6,5,5,6,9,11,14,8,9,8,7,6,5,6,7,11,14,9,11,11,9,7,6,6,6,9,14,11,14,15,13,9,8,7,7,9,14,13,15,19,17,12,11,10,9,10,14,2,3,4,4,4,5,5,6,5,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,7,8,8,8,8,8,8,1,4,4,7,7,7,7,7,6,9,7,10,8,12,12,13,13,14,14,4,7,7,9,9,9,8,9,8,10,9,11,9,14,9,14,10,13,11,4,7,7,9,9,9,9,8,9,10,10,11,11,12,13,12,13,14,15,7,9,9,10,11,10,10,10,10,11,12,13,13,13,14,17,14,15,16,7,9,9,10,10,10,10,10,10,11,12,13,13,14,14,15,15,18,18,8,9,9,11,10,11,11,11,12,13,12,14,14,16,15,15,17,18,15,8,9,9,10,10,11,11,11,11,13,13,14,14,15,15,15,16,16,18,7,9,8,10,10,11,11,12,12,14,14,15,15,16,16,15,17,16,18,8,9,9,10,10,11,12,12,12,13,13,16,15,17,16,17,18,17,18,9,10,10,12,11,13,13,14,13,14,14,15,17,16,18,17,18,17,18,9,10,10,12,11,12,13,13,14,15,16,14,15,16,18,18,18,18,17,11,11,11,13,13,14,14,16,15,15,15,16,15,15,18,18,18,17,16,11,11,12,13,13,15,14,15,16,16,16,17,16,15,18,17,18,16,18,12,13,13,15,15,15,16,18,16,17,16,17,16,17,17,17,18,18,17,13,13,13,15,13,16,15,17,16,16,16,18,18,18,18,16,17,17,18,13,15,14,15,15,18,17,18,18,18,16,18,17,18,17,18,16,17,17,14,14,14,15,16,17,16,18,18,18,17,18,17,18,18,18,16,16,16,14,17,16,17,15,16,18,18,17,18,17,18,17,18,18,18,17,18,17,15,16,15,18,15,18,17,16,18,18,18,18,18,18,17,18,16,18,17,1,5,3,9,8,9,9,9,9,9,9,9,9,9,9,5,7,8,9,9,9,9,9,9,9,9,9,9,9,9,5,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,3,5,5,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,5,6,6,7,7,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,5,6,6,7,7,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,7,7,8,8,9,8,9,9,9,9,9,9,10,10,10,10,10,10,10,10,7,7,7,8,8,9,9,9,9,9,9,9,9,10,9,10,10,10,9,10,9,8,8,8,9,8,9,9,9,9,10,9,10,10,10,10,10,10,10,10,10,10,8,8,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,4,4,7,7,8,8,7,7,9,8,10,9,11,11,4,7,6,9,8,9,9,9,9,10,9,11,9,12,9,4,6,7,8,8,9,9,9,9,10,10,10,11,11,12,7,9,8,10,10,11,11,10,10,11,11,12,12,13,12,7,8,8,10,10,10,11,10,10,11,11,11,12,12,13,8,9,9,11,11,11,11,11,11,12,12,13,13,13,13,8,9,9,11,11,11,11,11,11,12,12,13,13,13,14,8,9,9,10,10,11,11,12,11,13,13,14,13,14,14,8,9,9,10,10,11,11,12,12,12,12,13,13,14,14,9,10,10,11,11,12,12,13,12,13,13,14,14,15,15,9,10,10,11,11,12,12,12,13,13,13,14,14,14,15,10,11,11,12,12,13,13,14,13,14,14,15,14,15,15,10,11,11,12,12,13,12,13,14,14,14,14,14,15,15,11,12,12,13,13,13,13,14,14,15,14,15,15,16,16,11,12,12,13,13,13,13,14,14,14,15,15,15,16,16,2,5,5,7,7,7,7,7,7,8,8,5,6,6,7,7,7,7,8,8,8,8,5,6,6,7,7,7,7,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,1,4,4,7,7,8,8,8,8,9,9,10,10,4,6,6,8,8,9,9,9,9,10,10,11,10,4,6,6,8,8,9,9,9,9,10,10,11,11,7,8,8,10,9,10,10,10,10,11,11,12,12,7,8,8,10,10,10,10,10,10,11,11,12,12,8,9,9,10,10,11,11,11,11,12,12,13,13,8,9,9,10,10,11,11,11,11,12,12,13,13,8,9,9,11,10,11,11,12,12,13,13,14,13,8,9,9,10,10,11,11,12,12,13,13,13,13,9,10,10,11,11,12,12,13,13,13,13,14,14,9,10,10,11,11,12,12,13,13,13,13,14,14,10,11,11,12,12,13,13,14,13,14,14,15,14,10,11,11,12,12,13,13,14,13,14,14,15,14,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,5,4,7,7,8,8,8,8,10,10,11,11,4,6,6,7,7,9,9,9,9,10,10,11,11,4,6,6,7,7,9,9,9,9,10,10,11,11,7,8,8,9,9,9,9,10,10,11,11,12,12,7,7,7,9,8,10,9,10,10,11,11,12,12,8,9,9,9,10,10,10,11,11,12,12,13,13,8,9,9,10,9,10,10,11,11,12,12,13,13,8,9,9,10,10,11,11,11,11,12,12,13,13,8,9,9,10,10,11,11,12,11,12,12,13,13,10,10,10,11,11,12,12,12,12,13,13,14,14,10,10,10,11,11,12,12,12,12,13,13,14,14,11,11,11,12,12,13,13,13,13,14,14,14,14,11,11,11,12,12,13,13,13,13,14,14,14,14,2,5,5,6,6,7,7,8,8,8,8,5,6,6,7,7,7,7,8,8,8,8,5,6,6,6,7,7,7,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,6,7,7,7,7,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,8,8,9,9,8,8,8,8,8,8,8,9,9,9,9,8,8,8,8,8,8,8,9,9,9,9,1,4,4,5,7,7,5,7,7,5,8,8,7,9,9,7,9,10,5,8,8,7,10,9,7,10,9,5,8,8,8,11,10,8,10,10,7,10,10,9,9,12,10,12,12,7,10,10,9,12,10,10,11,12,5,8,8,8,10,10,8,11,11,7,11,10,10,12,11,9,10,12,7,10,11,10,12,12,9,12,9,2,5,5,6,6,7,7,8,8,9,9,10,10,11,11,11,11,5,5,5,7,6,8,7,9,9,9,9,10,10,11,11,12,12,5,5,5,6,6,7,8,8,9,9,9,10,10,11,11,12,12,6,7,6,7,7,8,8,9,9,9,9,10,10,11,11,12,12,6,6,7,7,7,8,8,9,9,9,9,10,10,11,11,12,12,7,8,8,8,8,9,9,9,9,10,10,11,11,11,11,12,12,7,7,8,8,8,9,9,9,9,10,10,11,11,11,11,12,12,8,9,9,9,9,9,9,10,10,10,10,11,11,12,12,12,12,8,9,9,9,9,9,9,10,10,10,10,11,11,12,12,12,12,9,9,9,9,9,10,10,10,10,10,11,11,11,12,12,13,13,9,9,9,9,9,10,10,10,10,11,10,11,11,12,12,13,13,10,10,10,10,10,11,11,11,11,11,11,11,12,12,12,13,13,10,10,10,10,10,11,11,11,11,11,11,12,11,12,12,13,13,11,11,11,11,11,11,11,12,12,12,12,12,12,13,13,13,13,11,11,11,11,11,11,11,12,12,12,12,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,14,14,11,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,2,4,4,6,6,7,7,9,9,4,5,5,6,6,8,7,9,9,4,5,5,6,6,7,8,9,9,6,6,6,7,7,8,8,10,10,6,6,6,7,7,8,8,10,10,7,8,7,8,8,9,9,11,10,7,7,8,8,8,9,9,10,11,9,9,9,10,10,11,10,11,11,9,9,9,10,10,10,11,11,11,3,5,5,8,8,5,7,7,9,9,5,7,7,9,9,9,10,9,11,11,9,9,9,11,11,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,9,10,10,11,12,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,9,10,10,12,11,10,10,10,12,12,9,10,10,12,12,10,10,10,12,12,9,10,10,12,12,12,12,12,14,14,11,12,12,13,14,9,10,10,12,12,9,10,10,12,12,10,10,10,12,12,11,12,12,14,13,12,12,12,14,13,5,7,7,9,9,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,10,12,12,7,8,8,11,10,8,9,9,11,11,8,9,9,11,11,10,11,11,12,13,10,11,11,12,13,7,8,8,10,10,8,9,8,11,10,8,9,9,11,11,10,11,10,13,12,10,11,11,13,13,10,11,10,13,12,10,11,11,13,13,10,11,11,13,13,12,12,13,13,14,12,13,13,14,14,9,10,10,12,12,10,11,10,13,12,10,11,11,13,13,12,13,12,14,13,12,13,13,14,15,5,7,7,9,10,7,8,8,10,10,7,8,8,10,10,10,10,10,12,12,10,10,11,12,12,7,8,8,10,10,8,9,9,11,11,8,8,9,10,11,10,11,11,13,13,10,10,11,12,13,7,8,8,10,10,8,9,9,11,11,8,9,9,11,11,10,11,11,13,12,10,11,11,13,12,9,10,10,12,12,10,11,11,13,13,10,10,11,12,13,12,13,13,15,14,12,12,13,12,14,9,10,11,12,13,10,11,11,13,13,10,11,11,13,13,12,13,13,14,14,12,13,12,14,13,8,10,10,12,12,9,11,10,13,12,9,10,10,12,13,12,13,13,14,14,12,12,12,14,14,9,10,10,13,13,10,11,11,13,13,10,11,11,13,13,13,13,13,14,15,12,13,13,14,15,9,10,10,12,13,10,11,10,13,13,10,11,11,12,13,12,13,12,15,14,12,13,13,14,15,11,12,12,15,14,12,12,13,14,15,12,13,13,15,14,13,13,15,14,16,14,14,14,16,15,11,12,12,14,14,11,12,12,14,14,12,13,13,14,15,13,14,13,15,13,14,14,14,15,16,8,9,10,12,12,9,10,10,13,12,9,10,11,12,13,12,12,12,14,14,12,13,13,14,14,9,10,10,13,12,10,11,11,13,13,10,10,11,13,13,12,13,13,15,14,12,12,13,14,15,9,10,10,13,13,10,11,11,13,13,10,11,11,13,13,12,13,13,14,14,13,13,13,15,15,11,12,12,14,13,12,13,13,15,14,11,12,12,14,14,14,14,14,16,15,13,13,14,13,16,11,12,12,14,14,12,13,13,14,15,12,13,12,14,14,14,14,14,16,16,14,15,13,16,14,1,5,5,5,7,7,5,7,7,5,7,7,7,9,9,7,9,9,5,7,7,7,9,9,8,9,9,5,7,7,8,9,9,7,9,9,7,9,9,9,10,11,9,10,10,7,9,9,9,10,9,9,10,11,5,8,7,7,9,9,8,9,9,7,9,9,9,11,10,9,9,10,7,9,9,9,10,10,9,11,10,8,11,13,13,15,16,19,19,19,19,11,8,8,9,9,11,13,15,19,20,14,8,7,7,8,9,12,13,15,20,15,9,6,5,5,7,10,12,14,18,14,9,7,5,3,4,7,10,12,16,13,10,8,6,3,3,5,8,11,14,11,10,9,7,5,4,4,6,11,14,10,10,10,8,6,5,5,6,10,14,10,10,10,9,8,7,7,7,10,14,11,12,12,12,11,10,10,10,12,16,3,6,10,8,12,8,14,8,14,19,5,3,5,5,7,6,11,7,16,19,7,5,6,7,7,9,11,12,19,19,6,4,7,5,7,6,10,7,18,18,8,6,7,7,7,7,8,9,18,18,7,5,8,5,7,5,8,6,18,18,12,9,10,9,9,9,8,9,18,18,8,7,10,6,8,5,6,4,11,18,11,15,16,12,11,8,8,6,9,18,14,18,18,18,16,16,16,13,16,18,1,6,6,7,8,8,11,10,9,9,11,9,10,9,11,11,9,6,7,6,11,8,11,9,10,10,11,9,11,10,10,10,11,9,5,7,7,8,8,10,11,8,8,11,9,9,10,11,9,10,11,8,9,6,8,8,9,9,10,10,11,11,11,9,11,10,9,11,8,8,8,9,8,9,10,11,9,9,11,11,10,9,9,11,10,8,11,8,9,8,11,9,10,9,10,11,11,10,10,9,10,10,8,8,9,10,10,10,9,11,9,10,11,11,11,11,10,9,11,9,9,11,11,10,8,11,11,11,9,10,10,11,10,11,11,9,11,10,9,11,10,10,10,10,9,11,10,11,10,9,9,10,11,9,8,10,11,11,10,10,11,9,11,10,11,11,10,11,9,9,8,10,8,9,11,9,8,10,10,9,11,10,11,10,11,9,11,8,10,11,11,11,11,10,10,11,11,11,11,10,11,11,10,9,8,10,10,9,11,10,11,11,11,9,9,9,11,11,11,10,10,9,9,10,9,11,11,11,11,8,10,11,10,11,11,10,11,11,9,9,9,10,9,11,9,11,11,11,11,11,10,11,11,10,11,10,11,11,9,11,10,11,10,9,10,9,10,10,11,11,11,11,9,10,9,10,11,11,10,11,11,11,11,11,11,10,11,11,10,1,6,5,9,9,10,10,6,7,9,9,10,10,10,10,5,10,8,10,8,10,10,8,8,10,9,10,10,10,10,5,8,9,10,10,10,10,8,10,10,10,10,10,10,10,9,10,10,10,10,10,10,9,9,10,10,10,10,10,10,9,9,8,9,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,6,8,8,10,10,10,8,10,10,10,10,10,10,10,10,5,8,8,10,10,10,9,9,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,5,5,6,6,7,7,8,8,8,8,4,6,6,7,7,8,7,8,8,8,8,4,6,6,7,7,7,7,8,8,8,8,6,7,7,7,7,8,8,8,8,8,9,6,7,7,7,7,8,8,8,8,9,9,7,7,7,8,8,8,8,9,9,9,9,7,7,7,8,8,8,8,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,8,8,9,9,9,9,9,9,8,8,8,9,8,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,9,9,1,4,4,5,5,8,8,10,10,12,12,4,7,7,8,8,9,9,12,11,14,13,4,7,7,7,8,9,10,11,11,13,12,5,8,8,9,9,11,11,12,13,15,14,5,7,8,9,9,11,11,13,13,17,15,8,9,10,11,11,12,13,17,14,17,16,8,10,9,11,11,12,12,13,15,15,17,10,11,11,12,13,14,15,15,16,16,17,9,11,11,12,12,14,15,17,15,15,16,11,14,12,14,15,16,15,16,16,16,15,11,13,13,14,14,15,15,16,16,15,16,2,4,4,6,6,7,7,8,8,8,8,4,6,5,7,7,8,8,8,8,8,8,4,5,6,7,7,8,8,8,8,8,8,6,7,7,8,8,8,8,9,9,9,9,6,7,7,8,8,8,8,9,9,9,9,7,8,8,8,8,9,9,9,10,9,10,7,8,8,8,8,9,9,9,9,10,9,8,8,8,9,9,10,10,10,10,10,10,8,8,8,9,9,9,9,10,10,10,10,8,8,8,9,9,9,10,10,10,10,10,8,8,8,9,9,10,10,10,10,10,10,1,4,4,4,8,8,4,8,8,5,11,9,8,12,11,8,12,11,5,10,11,8,11,12,8,11,12,4,11,11,11,14,13,10,13,13,8,14,13,12,14,16,12,16,15,8,14,14,13,16,14,12,15,16,4,11,11,10,14,13,11,14,14,8,15,14,12,15,15,12,14,16,8,14,14,11,16,15,12,15,13,3,4,4,6,6,7,7,9,9,4,4,4,6,6,8,8,9,9,4,4,4,6,6,7,7,9,9,6,6,6,7,7,8,8,10,9,6,6,6,7,7,8,8,9,10,7,8,7,8,8,9,9,10,10,7,8,8,8,8,9,9,10,10,9,9,9,10,10,10,10,11,11,9,9,9,10,10,10,10,11,11,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,10,10,4,5,6,8,8,8,8,10,10,7,8,8,9,9,9,9,11,11,7,8,8,9,9,9,9,11,11,7,8,8,10,9,11,11,12,11,7,8,8,9,9,11,11,12,12,9,10,10,11,11,12,12,13,12,9,10,10,11,11,12,12,12,13,4,5,5,8,8,6,6,7,9,9,6,6,6,9,9,9,10,9,11,11,9,9,10,11,11,6,7,7,10,9,7,7,8,9,10,7,7,8,10,10,10,10,10,10,12,9,9,10,11,12,6,7,7,9,9,7,8,7,10,10,7,8,7,10,10,9,10,9,12,11,10,10,9,12,10,9,10,10,12,11,10,10,10,12,12,9,10,10,12,12,12,11,12,13,13,11,11,12,12,13,9,10,10,11,12,9,10,10,12,12,10,10,10,12,12,11,12,11,14,13,11,12,12,14,13,5,7,7,10,10,7,8,8,10,10,7,8,7,10,10,10,10,10,12,12,10,10,10,12,12,6,8,7,10,10,7,7,9,10,11,8,9,9,11,10,10,10,11,11,13,10,10,11,12,13,6,8,8,10,10,7,9,8,11,10,8,9,9,10,11,10,11,10,13,11,10,11,10,12,12,10,11,10,12,11,10,10,10,12,13,10,11,11,13,12,11,11,13,11,14,12,12,13,14,14,9,10,10,12,13,10,11,10,13,12,10,11,11,12,13,11,12,11,14,12,12,13,13,15,14,5,7,7,10,10,7,7,8,10,10,7,8,8,10,10,10,10,10,11,12,10,10,10,12,12,7,8,8,10,10,8,9,8,11,10,7,8,9,10,11,10,11,11,12,12,10,10,11,11,13,7,7,8,10,10,8,8,9,10,11,7,9,7,11,10,10,11,11,13,12,11,11,10,13,11,9,10,10,12,12,10,11,11,13,12,10,10,11,12,12,12,13,13,14,14,11,11,12,12,14,10,10,11,12,12,10,11,11,12,13,10,10,10,13,12,12,13,13,15,14,12,13,10,14,11,8,10,10,12,12,10,11,10,13,13,9,10,10,12,12,12,13,13,15,14,11,12,12,13,13,9,10,10,13,12,10,10,11,13,13,10,11,10,13,12,12,12,13,14,15,12,13,12,15,13,9,10,10,12,13,10,11,10,13,12,10,10,11,12,13,12,14,12,15,13,12,12,13,14,15,11,12,11,14,13,11,11,12,14,15,12,13,12,15,14,13,11,15,11,16,13,14,14,16,15,11,12,12,14,14,11,12,11,14,13,12,12,13,14,15,13,14,12,16,12,14,14,14,15,15,8,10,10,12,12,9,10,10,12,12,10,10,11,13,13,11,12,12,13,13,12,13,13,14,15,9,10,10,13,12,10,11,11,13,12,10,10,11,13,13,12,13,12,15,14,12,12,13,13,16,9,9,10,12,13,10,10,11,12,13,10,11,10,13,13,12,12,13,13,15,13,13,12,15,13,11,12,12,14,14,12,13,12,15,14,11,11,12,13,14,14,14,14,16,15,13,12,15,12,16,11,11,12,13,14,12,13,13,14,15,10,12,11,14,13,14,15,14,16,16,13,14,11,15,11,1,5,5,8,8,6,7,7,9,9,5,7,7,9,9,9,10,9,11,11,9,9,10,11,11,6,8,8,10,10,8,9,10,11,11,8,9,10,11,11,10,11,11,12,13,10,11,11,13,13,6,8,8,10,10,8,10,9,11,11,8,10,9,11,11,10,11,11,13,13,10,11,11,13,12,9,11,11,14,13,10,12,12,15,14,10,12,11,14,13,12,13,13,15,15,12,13,13,16,14,9,11,11,13,14,10,11,12,14,14,10,12,12,14,15,12,13,13,14,15,12,13,14,15,16,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,8,10,10,12,12,9,11,12,12,13,10,12,12,13,13,12,12,13,14,15,11,13,13,15,15,7,10,10,12,12,9,12,11,13,12,10,11,12,13,13,12,13,12,15,14,11,12,13,15,15,10,12,12,15,14,11,13,13,16,15,11,13,13,16,15,14,13,14,15,16,13,15,15,17,17,10,12,12,14,15,11,12,12,15,15,11,13,13,15,16,13,15,13,16,15,13,15,15,16,17,5,8,8,11,11,8,10,10,12,12,8,10,10,12,12,11,12,12,14,14,11,12,12,14,14,7,10,10,12,12,10,12,12,14,13,9,11,12,12,13,12,13,13,15,15,12,12,13,13,15,7,10,10,12,13,10,11,12,13,13,10,12,11,13,13,11,13,13,15,15,12,13,12,15,14,9,12,12,15,14,11,13,13,15,15,11,12,13,15,15,13,14,14,17,19,13,13,14,16,16,10,12,12,14,15,11,13,13,15,16,11,13,12,16,15,13,15,15,17,18,14,15,13,16,15,8,11,11,15,14,10,12,12,16,15,10,12,12,16,16,14,15,15,18,17,13,14,15,16,18,9,12,12,15,15,11,12,14,16,17,11,13,13,16,15,15,15,15,17,18,14,15,16,17,17,9,12,12,15,15,11,14,13,16,16,11,13,13,16,16,15,16,15,17,18,14,16,15,17,16,12,14,14,17,16,12,14,15,18,17,13,15,15,17,17,15,15,18,16,20,15,16,17,18,18,11,14,14,16,17,13,15,14,18,17,13,15,15,17,17,15,17,15,18,17,15,17,16,19,18,8,11,11,14,15,10,12,12,15,15,10,12,12,16,16,13,14,14,17,16,14,15,15,17,17,9,12,12,15,16,11,13,13,16,16,11,12,13,16,16,14,16,15,20,17,14,16,16,17,17,9,12,12,15,16,11,13,13,16,17,11,13,13,17,16,14,15,15,17,18,15,15,15,18,18,11,14,14,17,16,13,15,15,17,17,13,14,14,18,17,15,16,16,18,19,15,15,17,17,19,11,14,14,16,17,13,15,14,17,19,13,15,14,18,17,15,17,16,18,18,15,17,15,18,16,3,4,4,5,6,6,5,6,6,5,6,6,6,7,8,6,7,8,5,6,6,6,8,7,6,8,7,5,6,6,6,8,8,6,8,8,6,8,8,7,7,10,8,9,9,6,8,8,7,9,8,8,9,10,5,6,6,6,8,8,7,8,8,6,8,8,8,10,9,7,8,9,6,8,8,8,9,9,7,10,8,1,4,4,5,7,7,5,7,7,5,8,7,7,10,10,7,9,10,5,7,8,7,10,9,7,10,10,5,8,8,8,10,10,8,10,10,7,10,10,10,11,12,10,12,13,7,10,10,9,13,11,10,12,13,5,8,8,8,10,10,8,10,10,7,10,10,10,12,12,9,11,12,7,10,11,10,12,12,10,13,11,5,7,10,9,11,10,15,11,13,16,6,4,6,6,7,7,10,9,12,16,10,6,5,6,6,7,10,11,16,16,9,6,7,6,7,7,10,8,14,16,11,6,5,4,5,6,8,9,15,16,9,6,6,5,6,6,9,8,14,16,12,7,6,6,5,6,6,7,13,16,8,6,7,6,5,5,4,4,11,16,9,8,9,9,7,7,6,5,13,16,14,14,16,15,16,15,16,16,16,16,1,6,6,7,8,7,7,10,9,10,9,11,10,9,11,10,9,9,9,9,10,6,8,7,9,9,8,8,10,10,9,11,11,12,12,10,9,11,9,12,10,9,6,9,8,9,12,8,8,11,9,11,11,12,11,12,12,10,11,11,10,10,11,7,10,9,9,9,9,9,10,9,10,9,10,10,12,10,10,10,11,12,10,10,7,9,9,9,10,9,9,10,10,9,9,9,11,11,10,10,10,10,9,9,12,7,9,10,9,11,9,10,9,10,11,11,11,10,11,12,9,12,11,10,10,10,7,9,9,9,9,10,12,10,9,11,12,10,11,12,12,11,9,10,11,10,11,7,9,10,10,11,10,9,10,11,11,11,10,12,12,12,11,11,10,11,11,12,8,9,10,12,11,10,10,12,12,12,12,12,10,11,11,9,11,10,12,11,11,8,9,10,10,11,12,11,11,10,10,10,12,12,12,9,10,12,12,12,12,12,8,10,11,10,10,12,9,11,12,12,11,12,12,12,12,10,12,10,10,10,10,8,12,11,11,11,10,10,11,12,12,12,12,11,12,12,12,11,11,11,12,10,9,10,10,12,10,12,10,12,12,10,10,10,11,12,12,12,11,12,12,12,11,10,11,12,12,12,11,12,12,11,12,12,11,12,12,12,12,11,12,12,10,10,10,10,11,11,12,11,12,12,12,12,12,12,12,11,12,11,10,11,11,12,11,11,9,10,10,10,12,10,10,11,9,11,12,11,12,11,12,12,10,11,10,12,9,9,9,12,11,10,11,10,12,10,12,10,12,12,12,11,11,11,11,11,10,9,10,10,11,10,11,11,12,11,10,11,12,12,12,11,11,9,12,10,12,9,10,12,10,10,11,10,11,11,12,11,10,11,10,11,11,11,11,12,11,11,10,9,10,10,10,9,11,11,10,9,12,10,11,12,11,12,12,11,12,11,12,11,10,11,10,12,11,12,11,12,11,12,10,11,10,10,12,11,10,11,11,11,10,1,5,5,6,5,9,10,11,11,10,10,10,10,10,10,5,8,8,8,10,10,10,10,10,10,10,10,10,10,10,5,8,9,9,9,10,10,10,10,10,10,10,10,10,10,5,10,8,10,10,10,10,10,10,10,10,10,10,10,10,4,8,9,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,5,6,6,4,6,6,6,6,4,6,6,6,6,6,6,6,7,7,6,6,6,7,7,1,4,4,7,7,10,10,12,12,13,13,18,17,3,6,6,9,9,11,11,13,13,14,14,18,17,3,6,6,9,9,11,11,13,13,14,14,17,18,7,9,9,11,11,13,13,14,14,15,15,0,0,7,9,9,11,11,13,13,14,14,15,16,19,18,10,11,11,13,13,14,14,16,15,17,18,0,0,10,11,11,13,13,14,14,15,15,16,18,0,0,11,13,13,14,14,15,15,17,17,0,19,0,0,11,13,13,14,14,14,15,16,18,0,19,0,0,13,14,14,15,15,18,17,18,18,0,19,0,0,13,14,14,15,16,16,16,18,18,19,0,0,0,16,17,17,0,17,19,19,0,19,0,0,0,0,16,19,16,17,18,0,19,0,0,0,0,0,0,1,4,4,7,7,7,7,9,9,4,6,6,8,8,8,8,9,9,4,6,6,8,8,8,8,9,9,7,8,8,9,9,9,9,11,10,7,8,8,9,9,9,9,10,11,7,8,8,9,9,10,10,11,11,7,8,8,9,9,10,10,11,11,9,9,9,10,10,11,11,12,12,9,9,9,10,10,11,11,12,12,3,5,5,8,8,6,6,6,9,9,6,6,6,9,9,9,10,9,11,11,9,9,9,11,11,6,7,7,10,10,7,7,8,10,10,7,7,8,10,10,10,10,10,11,12,9,10,10,11,12,6,7,7,10,10,7,8,7,10,10,7,8,7,10,10,10,11,10,12,11,10,10,10,13,10,9,10,10,12,12,10,11,10,14,12,9,11,11,13,13,11,12,13,13,13,11,12,12,15,13,9,10,10,12,13,9,11,10,12,13,10,10,11,12,13,11,12,12,12,13,11,12,12,13,13,5,7,7,10,10,7,8,8,10,10,7,8,8,10,10,10,11,10,12,13,10,10,11,12,12,6,8,8,11,10,7,8,9,10,12,8,9,9,11,11,11,10,11,11,12,10,11,11,13,12,7,8,8,10,11,8,9,8,11,10,8,9,9,11,11,10,12,10,13,11,10,11,11,13,13,10,11,10,14,13,10,10,11,13,13,10,12,11,14,13,12,11,13,12,13,13,12,13,14,14,10,11,11,13,13,10,11,10,12,13,10,12,12,12,14,12,12,12,14,12,12,13,12,17,15,5,7,7,10,10,7,8,8,10,10,7,8,8,11,10,10,10,11,12,12,10,11,11,12,13,6,8,8,11,10,8,9,9,11,11,7,8,9,10,11,11,11,11,12,12,10,10,11,12,13,6,8,8,10,11,8,9,9,11,11,7,9,7,11,10,10,12,12,13,13,11,11,10,13,11,9,11,10,14,13,11,11,11,15,13,10,10,11,13,13,12,13,13,14,14,12,11,12,12,13,10,11,11,12,13,10,11,12,13,13,10,11,10,13,12,12,12,13,14,0,12,13,11,13,11,8,10,10,13,13,10,11,11,14,13,10,11,11,13,12,13,14,14,14,15,12,12,12,15,14,9,11,10,13,12,10,10,11,13,14,11,11,11,15,12,13,12,14,15,16,13,13,13,14,13,9,11,11,12,12,10,12,11,13,13,10,11,11,13,14,13,13,13,15,15,13,13,14,17,15,11,12,12,14,14,10,11,12,13,15,12,13,13,0,15,13,11,14,12,16,14,16,14,0,15,11,12,12,14,16,11,13,12,16,15,12,13,13,14,15,12,14,12,15,13,15,14,14,16,16,8,10,10,13,13,10,11,10,13,14,10,11,11,13,13,13,13,12,14,14,14,13,13,16,17,9,10,10,12,14,10,12,11,14,13,10,11,12,13,14,12,12,12,15,15,13,13,13,14,14,9,10,10,13,13,10,11,12,12,14,10,11,10,13,13,13,13,13,14,16,13,13,13,14,14,11,12,13,15,13,12,14,13,14,16,12,12,13,13,14,13,14,14,17,15,13,12,17,13,16,11,12,13,14,15,12,13,14,14,17,11,12,11,14,14,13,16,14,16,0,14,15,11,15,11,1,5,5,7,7,6,7,7,8,8,6,7,8,8,8,8,9,9,11,11,8,9,9,11,11,6,9,8,10,10,8,10,10,11,11,8,10,10,11,11,10,11,10,13,12,9,11,10,13,13,6,8,9,10,10,8,10,10,11,11,8,10,10,11,11,9,10,11,13,12,10,10,11,12,12,8,11,11,14,13,10,12,11,15,13,9,12,11,15,14,12,14,13,16,14,12,13,13,17,14,8,11,11,13,14,9,11,12,14,15,10,11,12,13,15,11,13,13,14,16,12,13,14,14,16,5,9,9,11,11,9,11,11,12,12,8,11,11,12,12,11,12,12,15,14,10,12,12,15,15,8,11,11,13,12,10,12,12,13,13,10,12,12,14,13,12,12,13,14,15,11,13,13,17,16,7,11,11,13,13,10,12,12,14,13,10,12,12,13,14,12,13,12,15,14,11,13,13,15,14,9,12,12,16,15,11,13,13,17,16,10,13,13,16,16,13,14,15,15,16,13,15,14,19,17,9,12,12,14,16,11,13,13,15,16,10,13,13,17,16,13,14,13,17,15,12,15,15,16,17,5,9,9,11,11,8,11,11,13,12,9,11,11,12,12,10,12,12,14,15,11,12,12,14,14,7,11,10,13,12,10,12,12,14,13,10,11,12,13,13,11,13,13,15,16,12,12,13,15,15,7,11,11,13,13,10,13,13,14,14,10,12,12,13,13,11,13,13,16,15,12,13,13,15,14,9,12,12,15,15,10,13,13,17,16,11,12,13,15,15,12,15,14,18,18,13,14,14,16,17,9,12,12,15,16,10,13,13,15,16,11,13,13,15,16,13,15,15,17,17,13,15,14,16,15,7,11,11,15,16,10,13,12,16,17,10,12,13,15,17,15,16,16,18,17,13,15,15,17,18,8,12,12,16,16,11,13,14,17,18,11,13,13,18,16,15,17,16,17,19,14,15,15,17,16,8,12,12,16,15,11,14,13,18,17,11,13,14,18,17,15,16,16,18,17,13,16,16,18,18,11,15,14,18,17,13,14,15,18,0,12,15,15,0,17,17,16,17,17,18,14,16,18,18,0,11,14,14,17,0,12,15,14,17,19,12,15,14,18,0,15,18,16,0,17,14,18,16,18,0,7,11,11,16,15,10,12,12,18,16,10,13,13,16,15,13,15,14,17,17,14,16,16,19,18,8,12,12,16,16,11,13,13,18,16,11,13,14,17,16,14,15,15,19,18,15,16,16,0,19,8,12,12,16,17,11,13,13,17,17,11,14,13,17,17,13,15,15,17,19,15,17,17,19,0,11,14,15,19,17,12,15,16,18,18,12,14,15,19,17,14,16,17,0,18,16,16,19,17,0,11,14,14,18,19,12,15,14,17,17,13,16,14,17,16,14,17,16,18,18,15,18,15,0,18,2,4,4,5,6,6,5,6,6,5,7,7,7,8,9,7,8,9,5,7,7,7,9,8,7,9,7,4,7,7,7,9,9,7,8,8,6,9,8,7,8,11,9,11,10,6,8,9,8,11,8,9,10,11,4,7,7,7,8,8,7,9,9,6,9,8,9,11,10,8,8,11,6,8,9,9,10,11,8,11,8,1,4,4,5,7,7,5,7,8,5,8,8,8,10,10,8,10,11,5,8,8,8,10,10,8,10,10,4,9,9,9,12,11,8,11,11,8,12,11,10,12,14,10,13,13,7,11,11,10,14,12,11,14,14,4,9,9,8,11,11,9,11,12,7,11,11,10,13,14,10,12,14,8,11,12,10,14,14,10,13,12,3,5,8,7,14,8,9,19,5,2,5,5,9,6,9,19,8,4,5,7,8,9,13,19,7,4,6,5,9,6,9,19,12,8,7,9,10,11,13,19,8,5,8,6,9,6,7,19,8,8,10,7,7,4,5,19,12,17,19,15,18,13,11,18,4,7,9,9,9,8,9,10,13,16,5,4,5,6,7,7,8,9,12,16,6,5,5,5,7,7,9,10,12,15,7,6,5,4,5,6,8,9,10,13,8,7,7,5,5,5,7,9,10,12,7,7,7,6,5,5,6,7,10,12,8,8,8,7,7,5,5,6,9,11,8,9,9,8,8,6,6,5,8,11,10,11,12,12,11,9,9,8,9,12,13,14,15,15,14,12,12,11,11,13,2,4,4,4,4,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,4,7,7,7,7,7,7,8,8,10,9,11,10,13,11,14,13,6,6,6,8,8,8,8,8,7,9,8,11,9,13,11,14,12,14,13,5,6,6,8,8,8,8,8,8,9,9,11,11,13,11,14,13,15,15,17,8,8,8,8,9,9,9,8,11,9,12,10,13,11,14,12,14,13,17,8,8,8,8,9,9,9,9,10,10,11,11,13,13,13,14,16,15,17,12,12,8,8,9,9,10,10,11,11,12,11,13,12,13,12,14,13,16,12,12,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,17,17,17,9,9,9,9,11,11,12,12,12,13,13,13,16,14,14,14,17,17,17,9,8,9,8,11,10,12,12,13,13,14,14,15,15,16,16,17,17,17,12,12,10,10,11,12,12,13,13,14,13,15,15,14,16,15,17,17,17,12,12,10,8,12,9,13,12,14,14,15,14,15,16,16,16,17,17,17,17,17,11,11,12,12,14,14,14,16,15,16,15,16,15,17,17,17,17,17,17,11,9,12,10,13,11,15,14,16,16,17,16,16,15,17,17,17,17,17,15,15,12,12,14,14,15,16,16,15,16,16,17,17,17,17,17,17,17,14,14,12,10,14,11,15,12,17,16,15,16,17,16,17,17,17,17,17,17,17,13,13,14,14,14,16,17,17,16,17,17,17,17,17,17,17,17,17,17,13,9,13,12,15,13,16,16,17,17,17,17,17,17,17,17,17,17,17,15,17,14,14,15,16,16,17,16,17,16,17,17,17,17,17,17,17,17,17,17,14,13,15,16,16,17,16,17,17,17,1,4,3,10,8,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,2,4,4,6,6,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,11,11,11,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,10,11,10,7,7,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,11,11,11,8,8,8,8,9,9,9,9,9,9,9,9,10,9,10,10,10,10,11,11,11,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,11,11,11,8,8,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,1,4,4,6,6,7,7,7,7,8,8,9,9,10,10,6,6,6,8,8,9,9,8,8,9,9,10,10,11,11,6,5,5,8,7,9,9,8,8,9,9,10,10,11,11,20,8,8,8,8,9,9,9,9,10,10,11,10,12,11,20,8,8,8,8,9,9,9,9,10,10,11,11,12,12,20,12,12,9,9,10,10,10,10,11,11,12,12,13,12,20,13,13,9,9,10,10,10,10,11,11,12,12,13,13,20,20,20,9,9,9,9,10,10,11,11,12,12,13,12], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+389452);
/* memory initializer */ allocate([20,20,20,9,9,9,8,10,10,12,11,12,12,13,13,20,20,20,13,13,10,10,11,11,12,12,13,13,13,13,20,20,20,13,13,10,10,11,10,12,11,13,13,14,14,20,20,20,20,20,11,11,11,11,12,12,13,13,14,14,20,20,20,20,20,11,10,11,11,13,11,13,13,14,14,20,20,21,21,21,14,14,11,12,13,13,13,13,14,14,21,21,21,21,21,15,15,12,11,13,12,14,13,15,14,2,4,4,6,6,7,7,7,7,7,7,9,9,9,6,7,7,7,7,7,8,8,9,9,9,6,6,7,7,7,7,8,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,8,8,8,8,9,9,9,7,7,7,7,7,7,8,8,9,9,9,7,7,8,8,7,7,8,8,9,9,9,9,9,8,8,7,7,8,8,9,9,9,9,9,8,8,7,7,8,8,9,9,9,9,9,7,7,7,7,8,8,1,4,4,7,7,8,8,8,8,10,9,10,10,5,5,5,7,7,9,9,10,10,11,10,12,11,6,5,5,7,7,9,9,10,10,11,11,12,12,20,7,7,7,7,9,9,10,10,11,11,12,12,20,7,7,7,7,9,9,11,10,12,11,12,12,20,11,11,8,8,10,10,11,11,12,12,13,13,20,12,12,8,8,9,9,11,11,12,12,13,13,20,20,21,10,10,10,10,11,11,12,12,13,13,21,21,21,10,10,10,10,11,11,12,12,13,13,21,21,21,14,14,11,11,12,12,13,13,13,14,21,21,21,16,15,11,11,12,11,13,13,14,14,21,21,21,21,21,13,13,12,12,13,13,14,14,21,21,21,21,21,13,13,12,12,13,13,14,14,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,8,7,8,8,9,9,10,10,5,5,5,7,7,9,9,9,9,11,11,12,12,6,5,5,7,7,9,9,10,9,11,11,12,12,0,7,7,7,7,9,9,10,10,11,11,12,12,0,7,7,7,7,9,9,10,10,11,11,12,12,0,11,11,8,8,10,10,11,11,12,12,13,13,0,12,12,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,6,6,6,6,7,7,7,7,11,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,11,11,11,7,7,8,8,8,8,9,9,11,11,11,6,7,8,8,8,8,9,9,11,11,11,7,7,8,8,8,8,8,8,11,11,11,7,7,8,8,8,8,9,9,11,11,11,8,8,8,8,8,8,8,8,11,11,11,11,11,8,8,8,8,8,8,12,11,11,11,11,8,8,8,8,8,8,12,11,11,11,11,7,7,8,8,8,8,1,4,4,5,7,7,6,7,7,4,6,6,10,11,10,10,10,11,4,6,6,10,10,11,10,11,10,5,10,10,9,12,11,10,12,12,7,10,10,12,12,12,12,13,13,7,11,10,11,12,12,12,13,13,6,11,10,10,12,12,11,12,12,7,11,10,12,13,13,12,12,12,7,10,11,12,13,13,12,12,12,2,3,3,5,5,6,6,6,6,7,7,8,8,8,8,9,9,0,0,0,6,6,7,7,8,8,8,8,9,9,10,10,11,10,0,0,0,6,6,7,7,8,8,8,8,9,9,10,10,10,10,0,0,0,6,6,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,6,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,10,10,11,11,11,11,12,12,0,0,0,7,7,8,8,9,9,10,10,11,11,11,11,12,12,0,0,0,7,8,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,8,8,9,9,10,10,11,11,12,12,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,5,5,7,7,8,8,0,0,0,6,6,8,8,9,9,0,0,0,6,6,8,8,9,9,0,0,0,7,7,8,9,10,10,0,0,0,7,7,9,9,10,10,0,0,0,8,8,9,9,11,11,0,0,0,7,7,9,9,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,7,7,0,0,0,8,8,0,0,0,8,8,0,0,0,8,8,0,0,0,8,8,4,4,4,8,7,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,9,9,4,4,4,7,8,0,0,0,8,8,0,0,0,8,8,0,0,0,9,9,0,0,0,9,9,7,8,8,10,9,0,0,0,12,11,0,0,0,11,12,0,0,0,14,13,0,0,0,14,14,7,8,8,9,10,0,0,0,11,12,0,0,0,11,11,0,0,0,14,14,0,0,0,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,11,11,0,0,0,12,11,0,0,0,12,12,0,0,0,13,12,0,0,0,13,13,8,8,8,11,11,0,0,0,11,11,0,0,0,12,12,0,0,0,13,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,8,12,11,0,0,0,12,12,0,0,0,12,11,0,0,0,13,13,0,0,0,13,13,8,8,8,11,12,0,0,0,11,12,0,0,0,11,12,0,0,0,13,14,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,13,12,0,0,0,13,13,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,12,13,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,13,13,0,0,0,13,12,8,9,9,14,14,0,0,0,13,13,0,0,0,13,13,0,0,0,13,13,0,0,0,12,12,1,3,3,0,0,0,0,0,0,4,5,5,0,0,0,0,0,0,4,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,12,11,12,13,15,16,18,15,10,8,8,8,9,10,12,13,14,17,10,7,7,7,7,8,10,12,15,18,10,7,7,5,5,6,8,10,13,15,10,7,6,5,4,4,6,9,12,15,11,7,7,5,4,3,4,7,11,13,12,9,8,7,5,4,4,5,10,13,11,11,11,9,7,5,5,5,9,12,13,12,13,12,10,8,8,7,9,13,14,14,14,14,13,11,11,10,10,13,2,5,20,7,10,7,8,10,11,11,4,2,20,5,8,6,7,9,10,10,20,20,20,20,19,19,19,19,19,19,7,5,19,6,10,7,9,11,13,17,11,8,19,10,7,7,8,10,11,15,7,5,19,7,7,5,6,9,11,16,7,6,19,8,7,6,6,7,9,13,9,9,19,11,9,8,6,7,8,13,12,14,19,16,13,10,9,8,9,13,14,17,19,18,18,17,12,11,11,13,1,4,4,6,6,7,7,8,7,8,8,9,9,9,9,10,10,10,9,10,10,11,12,12,8,8,8,8,9,9,9,9,10,10,10,10,10,11,11,10,12,11,11,13,11,7,7,8,8,8,8,9,9,9,10,10,10,10,9,10,10,11,11,12,11,11,8,8,8,8,9,9,10,10,10,10,11,11,11,11,11,11,11,12,11,12,12,8,8,9,9,9,9,9,10,10,10,10,10,10,11,11,11,11,11,11,12,11,9,9,9,9,10,10,10,10,11,10,11,11,11,11,11,11,12,12,12,12,11,9,9,9,9,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,13,9,10,10,9,11,10,10,10,10,11,11,11,11,11,10,11,12,11,12,12,11,12,11,10,9,10,10,11,10,11,11,11,11,11,11,11,11,11,12,12,11,12,12,12,10,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,12,13,12,12,11,9,10,10,11,11,10,11,11,11,12,11,11,11,11,11,12,12,13,13,12,13,10,10,12,10,11,11,11,11,11,11,11,11,11,12,12,11,13,12,12,12,12,13,12,11,11,11,11,11,11,12,11,12,11,11,11,11,12,12,13,12,11,12,12,11,11,11,11,11,12,11,11,11,11,12,11,11,12,11,12,13,13,12,12,12,12,11,11,11,11,11,12,11,11,12,11,12,11,11,11,11,13,12,12,12,12,13,11,11,11,12,12,11,11,11,12,11,12,12,12,11,12,13,12,11,11,12,12,11,12,11,11,11,12,12,11,12,11,11,11,12,12,12,12,13,12,13,12,12,12,12,11,11,12,11,11,11,11,11,11,12,12,12,13,12,11,13,13,12,12,11,12,10,11,11,11,11,12,11,12,12,11,12,12,13,12,12,13,12,12,12,12,12,11,12,12,12,11,12,11,11,11,12,13,12,13,13,13,13,13,12,13,13,12,12,13,11,11,11,11,11,12,11,11,12,11,1,4,4,4,4,8,8,12,13,14,14,14,14,14,14,6,6,6,6,6,10,9,14,14,14,14,14,14,14,14,7,6,5,6,6,10,9,12,13,13,13,13,13,13,13,13,7,7,9,9,11,11,12,13,13,13,13,13,13,13,13,7,7,8,8,11,12,13,13,13,13,13,13,13,13,13,12,12,10,10,13,12,13,13,13,13,13,13,13,13,13,12,12,10,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,2,3,3,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,6,6,6,5,5,1,4,4,6,6,7,7,7,7,8,8,9,9,6,5,5,7,8,8,9,8,8,9,9,10,11,6,5,5,8,8,9,9,8,8,9,10,10,11,0,8,8,8,9,9,9,9,9,10,10,11,11,0,9,9,9,8,9,9,9,9,10,10,11,11,0,13,13,9,9,10,10,10,10,11,11,12,12,0,14,13,9,9,10,10,10,10,11,11,12,12,0,0,0,10,10,9,9,11,11,12,12,13,12,0,0,0,10,10,9,9,10,10,12,12,13,13,0,0,0,13,14,11,10,11,11,12,12,13,14,0,0,0,14,14,10,10,11,11,12,12,13,13,0,0,0,0,0,12,12,12,12,13,13,14,15,0,0,0,0,0,12,12,12,12,13,13,14,15,2,3,3,5,6,7,7,7,7,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,6,6,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,7,7,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,7,7,8,8,8,8,8,8,10,10,10,8,8,8,8,8,8,9,9,10,10,10,10,10,8,8,8,8,9,9,10,10,10,10,10,9,9,8,8,9,9,10,10,10,10,10,8,8,8,8,9,9,1,4,4,6,6,6,7,6,6,4,7,7,10,9,10,10,10,9,4,7,7,10,10,10,11,10,10,6,10,10,11,11,11,11,10,10,6,10,9,11,11,11,11,10,10,6,10,10,11,11,11,11,10,10,7,11,11,11,11,11,12,12,11,6,10,10,11,10,10,11,11,11,6,10,10,10,11,10,11,11,11,1,3,3,6,6,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,8,9,10,9,10,10,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,11,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,12,12,13,13,0,0,0,0,0,10,10,11,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,12,12,13,13,14,14,0,0,0,0,0,0,0,12,12,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,0,0,12,12,13,13,13,13,14,14,1,3,3,5,5,6,6,8,8,0,0,0,7,7,7,7,9,9,0,0,0,7,7,7,7,9,9,0,0,0,8,8,8,8,9,9,0,0,0,8,8,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,9,9,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,2,3,7,7,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,8,9,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,7,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,9,11,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,11,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,7,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,8,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,11,10,0,0,0,0,0,0,8,9,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,9,10,11,0,0,0,0,0,0,9,11,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+399692);
/* memory initializer */ allocate([5,6,17,8,12,9,10,10,12,13,5,2,17,4,9,5,7,8,11,13,16,16,16,16,16,16,16,16,16,16,6,4,16,5,10,5,7,10,14,16,13,9,16,11,8,7,8,9,13,16,7,4,16,5,7,4,6,8,11,13,8,6,16,7,8,5,5,7,9,13,9,8,16,9,8,6,6,7,9,13,11,11,16,10,10,7,7,7,9,13,13,13,16,13,13,9,9,9,10,13,1,5,5,7,8,8,7,9,9,9,12,12,11,12,12,10,10,11,12,12,12,11,12,12,8,9,8,7,9,10,10,11,11,10,11,12,10,12,10,12,12,12,11,12,11,9,8,8,9,10,9,8,9,10,12,12,11,11,12,11,10,11,12,11,12,12,8,9,9,9,10,11,12,11,12,11,11,11,11,12,12,11,11,12,12,11,11,9,9,8,9,9,11,9,9,10,9,11,11,11,11,12,11,11,10,12,12,12,9,12,11,10,11,11,11,11,12,12,12,11,11,11,12,10,12,12,12,10,10,9,10,9,10,10,9,9,9,10,10,12,10,11,11,9,11,11,10,11,11,11,10,10,10,9,9,10,10,9,9,10,11,11,10,11,10,11,10,11,11,10,11,11,11,10,9,10,10,9,10,9,9,11,9,9,11,10,10,11,11,10,10,11,10,11,8,9,11,11,10,9,10,11,11,10,11,11,10,10,10,11,10,9,10,10,11,9,10,10,9,11,10,10,10,10,11,10,11,11,9,11,10,11,10,10,11,11,10,10,10,9,10,10,11,11,11,9,10,10,10,10,10,11,10,10,10,9,10,10,11,10,10,10,10,10,9,10,11,10,10,10,10,11,11,11,10,10,10,10,10,11,10,11,10,11,10,10,10,9,11,11,10,10,10,11,11,10,10,10,10,10,10,10,10,11,11,9,10,10,10,11,10,11,10,10,10,11,9,10,11,10,11,10,10,9,10,10,10,11,10,11,10,10,10,10,10,11,11,10,11,11,10,10,11,11,10,9,9,10,10,10,10,10,9,11,9,10,10,10,11,11,10,10,10,10,11,11,11,10,9,9,10,10,11,10,10,10,10,10,11,11,11,10,10,10,11,11,11,9,10,10,10,10,9,10,9,10,11,10,11,10,10,11,11,10,11,11,11,11,11,10,11,10,10,10,9,11,11,10,11,11,11,11,11,11,11,11,11,10,11,10,10,10,10,11,10,10,11,9,10,10,10,1,5,5,5,5,9,11,11,10,10,10,10,10,10,10,7,6,6,6,6,10,10,10,10,10,10,10,10,10,10,7,6,6,6,6,10,9,10,10,10,10,10,10,10,10,10,7,7,8,9,10,10,10,10,10,10,10,10,10,10,10,8,7,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,1,4,3,5,5,7,7,7,6,6,7,7,7,5,5,7,7,7,6,6,7,7,7,6,6,1,4,4,7,7,7,7,7,6,8,8,10,10,6,5,6,8,8,8,8,8,8,8,9,10,10,7,6,6,8,8,8,8,8,8,8,8,10,10,0,8,8,8,8,9,8,9,9,9,10,10,10,0,9,8,8,8,9,9,8,8,9,9,10,10,0,12,11,8,8,9,9,9,9,10,10,11,10,0,12,13,8,8,9,10,9,9,11,11,11,12,0,0,0,8,8,8,8,10,9,12,13,12,14,0,0,0,8,8,8,9,10,10,12,12,13,14,0,0,0,13,13,9,9,11,11,0,0,14,0,0,0,0,14,14,10,10,12,11,12,14,14,14,0,0,0,0,0,11,11,13,13,14,13,14,14,0,0,0,0,0,12,13,13,12,13,14,14,14,1,3,4,6,6,7,7,8,8,8,8,10,10,10,7,7,8,8,8,9,9,9,10,10,10,6,7,8,8,8,8,9,8,10,10,10,7,7,8,8,9,9,9,9,10,10,10,7,7,8,8,9,9,8,9,10,10,10,8,8,9,9,9,9,9,9,11,11,11,8,8,9,9,9,9,9,10,10,11,11,9,9,9,9,9,9,9,10,11,11,11,10,11,9,9,9,9,10,9,11,11,11,10,11,10,10,9,9,10,10,11,11,11,11,11,9,9,9,9,10,10,1,4,4,6,6,6,7,6,6,4,7,7,11,10,10,11,11,10,4,7,7,10,10,10,11,10,10,6,10,10,11,11,11,11,11,10,6,9,9,11,12,12,11,9,9,6,9,10,11,12,12,11,9,10,7,11,11,11,11,11,12,13,12,6,9,10,11,10,10,12,13,13,6,10,9,11,10,10,11,12,13,1,3,4,6,6,7,7,8,8,8,8,9,9,10,10,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,10,11,11,11,0,0,0,6,6,8,8,9,9,9,9,10,10,11,11,11,11,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,7,7,8,8,9,9,9,9,10,10,11,11,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,12,0,0,0,8,8,9,9,10,10,10,10,11,11,12,12,12,13,0,0,0,9,9,9,9,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,10,10,10,10,10,10,11,11,12,12,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,13,13,13,13,0,0,0,0,0,9,9,10,10,11,11,12,12,13,13,13,14,0,0,0,0,0,10,10,10,11,11,11,12,12,13,13,13,14,0,0,0,0,0,0,0,10,10,11,11,12,12,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,13,13,13,13,14,14,0,0,0,0,0,0,0,11,11,12,12,12,13,13,14,15,14,0,0,0,0,0,0,0,12,12,12,12,13,13,13,14,14,15,0,0,0,0,0,0,0,0,0,12,12,13,13,14,13,14,14,1,3,3,6,6,6,6,8,8,0,0,0,7,7,7,7,8,8,0,0,0,7,7,7,7,8,8,0,0,0,7,7,8,8,9,9,0,0,0,7,7,8,8,9,9,0,0,0,8,9,8,8,10,10,0,0,0,8,8,8,8,10,10,0,0,0,10,10,9,9,10,10,0,0,0,0,0,9,9,10,10,1,3,2,7,8,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,6,6,7,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,6,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,9,10,0,0,0,0,0,0,7,9,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,7,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,9,12,0,0,0,0,0,0,10,12,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,9,12,10,0,0,0,0,0,0,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,8,8,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,8,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,12,11,0,0,0,0,0,0,9,10,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,10,10,0,0,0,0,0,0,10,11,12,0,0,0,0,0,0,9,12,9], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+410627);
/* memory initializer */ allocate([3,4,19,7,9,7,8,11,9,12,4,1,19,6,7,7,8,10,11,13,18,18,18,18,18,18,18,18,18,18,8,6,18,8,9,9,11,12,14,18,9,6,18,9,7,8,9,11,12,18,7,6,18,8,7,7,7,9,11,17,8,8,18,9,7,6,6,8,11,17,10,10,18,12,9,8,7,9,12,18,13,15,18,15,13,11,10,11,15,18,14,18,18,18,18,18,16,16,18,18,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,3,4,5,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,3,2,5,5,6,6,6,6,4,4,4,5,5,4,5,5,5,5,4,5,5,5,5,5,5,5,4,5,5,5,5,5,4,1,4,4,7,7,10,10,12,12,12,12,13,12,5,5,5,8,6,11,9,12,12,13,12,12,12,4,5,5,6,8,9,11,12,12,13,12,12,12,7,7,8,9,9,11,8,12,9,12,12,12,12,7,8,8,9,9,8,11,9,12,12,12,11,12,10,10,10,11,11,11,11,11,10,11,11,12,11,10,10,10,11,11,11,11,10,11,11,11,11,12,11,11,11,12,11,12,11,12,11,13,11,13,11,11,11,11,11,12,11,12,10,13,11,12,11,13,12,12,12,13,12,13,13,13,12,14,12,14,13,12,12,12,12,13,13,13,12,14,12,14,13,14,13,14,14,14,14,14,14,14,14,15,14,15,14,13,14,13,14,14,14,14,14,15,14,14,14,15,2,3,1,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,10,10,10,11,11,11,12,12,12,13,13,13,13,13,13,1,4,4,16,16,4,9,11,15,16,4,12,8,16,16,12,16,16,16,16,13,16,16,16,16,5,8,10,16,16,9,9,14,15,16,12,14,14,16,16,16,16,16,16,16,16,16,16,16,16,5,11,8,16,15,12,14,16,16,16,9,15,9,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,11,11,16,16,12,13,16,16,16,12,16,14,16,16,16,16,16,16,16,16,16,16,16,16,11,15,15,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,15,16,16,16,16,16,16,16,16,14,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,5,11,11,16,16,12,15,16,16,16,12,16,14,16,16,16,16,16,16,16,16,16,16,16,16,12,15,15,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,11,15,15,16,16,16,16,16,16,16,15,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,11,12,16,16,11,15,16,16,16,13,16,14,16,16,16,16,16,16,16,16,16,16,16,16,11,16,14,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,14,14,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,13,15,16,16,15,15,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,12,12,16,16,13,12,16,16,16,14,16,14,16,16,16,16,16,16,16,16,16,16,16,16,13,16,16,16,16,14,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,14,16,16,16,16,16,16,16,16,14,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,6,11,11,16,16,13,15,16,16,16,11,15,14,16,16,16,16,16,16,16,14,16,16,16,16,11,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,11,16,14,16,16,14,16,16,16,16,13,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,7,11,11,16,16,13,13,16,16,16,13,16,13,16,16,16,16,16,16,16,16,16,16,16,16,12,16,15,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,12,14,16,16,16,16,16,16,16,16,14,16,13,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,8,13,14,16,16,15,16,16,16,16,14,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,15,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,1,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,6,7,7,7,7,7,7,7,7,7,7,8,7,8,8,7,8,8,7,8,7,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,8,8,9,8,2,5,5,5,7,7,5,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,5,7,8,8,9,10,8,9,10,8,9,10,10,10,12,10,11,11,8,10,10,10,11,12,10,11,10,5,8,7,8,10,10,8,10,9,8,10,10,10,10,11,10,12,11,8,10,9,10,11,11,10,12,10,5,8,8,7,9,10,8,10,9,7,9,10,9,10,11,9,11,11,8,10,9,10,11,11,9,11,10,7,9,9,9,10,11,9,11,11,9,9,11,10,10,13,11,12,12,9,11,11,11,12,13,11,13,11,7,9,9,9,10,11,9,11,10,9,11,10,10,10,12,11,13,12,9,11,11,11,12,12,10,12,10,5,8,8,8,9,10,7,10,9,8,9,10,9,10,11,10,11,11,7,10,9,9,11,11,9,11,10,7,9,9,9,10,11,9,11,10,9,11,11,10,10,12,11,12,12,9,10,11,11,12,13,10,12,10,7,9,9,9,11,11,9,11,10,9,11,11,11,11,13,11,13,12,9,11,9,11,12,12,10,13,10,2,3,3,3,3,3,3,4,6,6,9,9,6,7,8,10,11,6,8,7,10,10,8,10,10,12,12,8,10,10,12,12,6,7,8,10,10,7,8,9,10,11,8,9,9,11,11,10,10,11,12,13,10,11,11,13,13,6,8,7,10,10,8,9,9,11,11,7,9,8,11,10,10,11,11,13,13,10,11,10,13,12,9,10,10,11,12,10,10,11,12,13,10,11,11,12,13,12,12,13,12,14,12,13,13,14,14,9,10,10,12,11,10,11,11,13,12,10,11,10,13,12,12,13,13,14,14,12,13,12,14,12,7,8,8,10,11,8,9,10,11,12,8,9,9,11,12,10,11,12,13,14,10,11,11,13,13,8,9,10,11,12,9,10,11,12,13,10,10,11,12,12,11,12,12,13,14,11,12,12,14,14,8,9,9,11,12,10,10,11,12,13,9,10,10,12,12,11,12,12,14,14,11,12,12,14,13,11,11,12,12,13,11,12,12,13,14,12,12,13,14,14,13,13,14,14,16,13,14,14,15,15,11,12,11,13,13,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,14,7,8,8,11,10,8,10,9,12,11,8,10,9,12,11,10,11,11,13,13,10,12,11,14,13,8,9,9,12,11,9,10,10,12,12,10,11,10,13,12,11,12,12,13,14,11,12,12,14,14,8,10,9,12,11,10,11,10,12,12,9,11,10,13,11,11,12,12,14,14,11,12,12,14,13,11,11,12,13,13,11,12,12,13,14,12,12,12,14,14,13,13,14,14,15,13,14,14,15,15,11,12,11,13,12,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,14,10,11,11,12,13,11,12,12,13,14,11,12,12,13,14,13,13,14,14,16,13,14,14,15,15,11,12,12,12,14,12,12,13,13,15,12,13,13,13,15,14,14,15,15,16,14,14,15,15,16,11,12,12,13,14,12,13,13,14,15,12,13,13,14,14,14,14,15,15,16,14,14,14,15,15,13,14,14,14,15,14,14,15,15,16,14,15,15,15,16,15,15,16,16,18,16,16,16,17,17,13,14,14,15,15,14,14,15,16,16,14,14,14,16,15,16,16,16,17,17,15,16,16,17,16,10,11,11,13,12,11,12,12,14,13,11,12,12,14,13,13,14,14,15,15,13,14,13,16,14,11,12,12,14,13,12,13,13,14,14,12,13,13,15,14,14,14,14,15,15,14,15,14,16,15,11,12,12,14,12,12,13,13,15,14,12,13,12,15,13,14,15,14,16,15,14,15,14,16,15,13,14,14,15,15,14,14,14,15,16,14,15,14,16,16,15,16,16,16,17,16,16,16,17,17,13,14,14,15,14,14,15,15,16,15,14,15,14,16,15,16,16,16,17,17,15,16,15,18,16,6,8,8,11,11,8,9,10,11,12,8,10,9,12,12,10,11,11,13,13,10,12,11,14,13,8,9,9,11,12,9,10,10,12,12,9,10,10,12,12,11,11,12,13,14,11,12,12,14,14,8,10,9,12,11,10,11,11,12,12,9,11,10,13,12,11,12,12,14,14,11,12,12,14,13,10,11,11,13,13,11,12,12,13,14,11,12,12,14,14,13,13,14,13,15,13,14,14,15,15,11,12,11,13,13,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,14,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,12,12,14,14,9,9,10,11,12,10,10,11,12,13,10,10,11,12,13,12,12,13,13,15,12,12,13,14,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,15,12,13,12,14,14,11,11,12,12,14,12,12,13,13,14,12,12,13,13,14,13,13,14,14,16,14,14,14,15,15,11,12,12,14,13,12,13,13,14,14,12,13,13,15,14,14,14,14,16,16,13,14,14,16,14,7,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,13,14,11,13,12,14,13,9,10,10,12,12,10,10,11,12,13,10,12,11,13,13,12,12,13,13,14,12,13,13,15,14,9,10,10,12,12,11,11,11,13,13,10,12,10,13,12,12,13,13,14,15,12,13,12,15,13,11,12,12,14,13,12,12,13,13,14,12,13,13,15,14,13,13,14,13,16,14,15,14,16,15,12,12,12,14,14,13,13,13,14,14,12,13,12,14,13,14,15,15,16,16,13,14,13,16,13,10,11,12,13,14,11,12,13,13,15,12,12,13,14,14,13,14,14,15,16,13,14,14,16,15,12,12,13,12,14,12,12,13,13,15,13,13,13,13,15,14,14,15,14,16,14,15,15,15,16,12,13,12,14,14,13,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,15,16,16,13,14,14,13,16,14,14,15,14,16,14,14,15,14,16,15,15,16,15,18,16,16,16,16,17,14,14,14,16,15,14,15,15,16,16,14,15,15,16,16,16,16,16,17,17,15,16,16,17,16,10,12,11,14,13,12,13,13,14,14,12,13,12,15,14,14,14,14,15,15,14,15,14,16,15,12,13,12,14,13,12,13,13,15,14,13,14,13,15,14,14,15,15,16,16,14,15,15,17,15,12,13,12,14,14,13,14,14,15,15,13,14,13,15,14,15,15,15,16,16,14,15,15,17,15,14,14,14,16,15,14,15,15,16,16,14,15,15,16,15,16,16,16,16,17,16,17,16,18,17,14,14,14,16,15,15,15,15,16,16,14,15,14,16,15,16,16,17,17,17,15,16,15,17,16,6,8,8,11,11,8,9,10,12,12,8,10,9,12,11,10,11,12,13,13,10,11,11,13,13,8,9,10,11,12,9,10,11,12,13,10,11,11,12,12,11,12,12,13,14,11,12,12,14,14,8,9,9,12,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,12,11,14,13,11,11,12,13,13,11,12,12,13,14,12,12,12,14,14,13,13,14,14,15,13,14,14,15,15,10,11,11,13,13,11,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,15,13,7,9,9,11,12,9,10,11,12,13,9,10,10,12,12,11,12,13,13,14,11,12,12,14,14,9,10,10,12,12,10,10,11,12,13,11,12,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,12,12,10,11,12,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,14,13,12,12,12,14,14,12,12,13,13,14,13,13,13,15,14,14,13,14,13,16,14,15,15,16,16,11,12,12,13,14,12,13,13,14,15,12,13,12,14,13,14,14,15,15,16,13,14,13,15,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,12,11,14,13,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,12,13,14,15,12,13,13,15,14,9,10,9,12,11,10,11,10,13,12,10,11,10,13,12,12,13,12,14,14,12,13,12,15,13,11,12,12,13,14,12,13,13,14,14,12,13,13,14,14,14,14,14,14,16,14,14,14,16,15,11,12,11,14,12,12,13,12,15,13,12,13,12,15,13,14,14,14,16,15,13,14,13,16,14,10,11,12,13,14,12,12,13,13,15,12,13,13,14,14,14,14,15,15,16,14,14,14,15,16,12,12,13,14,14,12,13,14,14,15,13,14,14,15,15,14,15,15,15,17,15,15,15,16,16,12,12,13,13,14,13,13,14,14,15,12,13,13,14,15,15,15,15,15,17,14,15,15,15,15,14,14,14,16,16,14,15,15,15,16,15,15,15,16,16,16,15,16,16,18,16,16,17,17,17,14,14,14,15,16,15,15,15,16,17,14,15,14,16,16,16,16,17,17,18,16,16,15,17,16,10,12,11,14,13,12,12,12,14,14,11,13,12,14,13,13,14,14,15,15,13,14,13,16,15,12,12,13,14,14,12,13,13,15,15,13,13,13,15,15,14,15,15,16,16,14,15,15,17,16,12,13,12,14,12,13,13,13,15,13,12,13,12,15,13,14,15,15,16,15,14,15,14,16,14,14,14,14,16,16,14,15,15,16,16,14,15,15,16,16,15,16,16,16,17,16,17,16,18,17,13,14,14,16,13,14,15,15,16,14,14,15,14,16,14,16,16,16,17,16,15,16,15,18,15,9,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,15,15,13,14,14,15,15,11,12,12,14,14,11,12,13,14,15,12,13,13,15,14,13,14,14,15,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,14,14,14,14,16,16,14,15,14,16,15,12,13,13,14,15,12,13,14,15,16,13,14,14,16,16,14,14,15,16,17,15,15,15,17,17,13,14,14,15,15,14,15,14,16,16,14,15,14,16,15,15,16,16,17,17,15,16,15,17,16,10,12,12,13,14,11,12,13,14,14,12,13,12,14,14,13,14,14,15,16,13,14,14,16,15,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,13,13,15,15,17,14,14,15,16,16,12,13,12,14,14,12,13,13,15,15,12,13,13,15,14,14,15,15,16,16,14,15,14,16,16,13,12,14,13,16,13,13,15,14,16,14,13,15,15,16,14,14,16,15,17,15,15,16,16,17,13,14,14,16,15,14,15,15,16,16,14,15,14,16,15,16,16,16,17,17,15,16,16,18,16,10,12,12,14,14,12,12,13,14,14,12,13,12,15,14,13,14,14,15,16,14,15,14,16,15,11,12,12,14,14,12,13,13,14,15,13,14,13,15,15,14,14,15,15,16,14,15,15,17,16,12,13,13,14,14,13,13,14,15,15,12,14,13,15,15,14,15,15,16,16,14,15,15,17,15,13,14,13,15,15,13,14,14,15,16,14,15,14,17,16,15,15,15,15,17,16,16,16,18,17,14,14,14,16,16,15,15,15,16,16,14,15,14,16,16,16,16,17,17,17,16,16,16,17,16,11,12,13,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,15,17,16,12,13,13,14,15,13,13,14,14,16,13,14,14,15,16,15,14,16,15,17,15,15,16,16,17,12,13,13,15,15,13,14,14,16,16,13,14,14,16,15,15,15,16,17,17,15,16,15,17,16,14,14,15,13,16,15,14,16,14,17,15,15,16,14,17,16,15,17,15,18,16,16,17,16,18,14,15,15,17,16,15,16,16,17,17,15,16,15,17,16,16,17,17,18,18,16,17,15,18,16,11,12,12,14,14,13,13,14,14,15,13,14,13,16,14,15,15,15,16,16,15,16,15,17,16,12,13,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,16,15,16,16,16,16,18,16,12,13,13,15,15,14,14,15,15,16,13,14,13,16,15,16,16,16,17,17,15,16,15,17,15,14,15,14,16,15,14,15,15,16,16,15,16,15,17,16,16,15,16,15,17,17,18,17,18,17,15,15,15,16,16,16,16,16,17,17,14,15,15,17,16,17,17,18,18,18,16,17,15,18,15,9,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,15,15,11,12,12,14,14,12,13,13,14,15,12,13,13,14,14,14,14,15,15,16,14,14,14,16,16,11,12,12,14,14,12,13,13,14,15,11,13,12,14,14,13,14,14,16,16,13,14,14,16,15,13,14,14,15,15,14,14,15,15,16,14,15,14,16,16,15,15,16,16,17,15,16,16,17,17,12,13,13,15,15,13,14,14,16,15,12,14,13,16,15,15,16,15,17,17,14,15,15,17,15,10,12,12,14,14,12,12,13,14,15,12,13,12,14,14,14,14,15,15,16,13,14,14,16,16,12,13,13,14,14,13,13,14,14,15,13,14,13,15,15,14,15,15,15,17,14,15,15,16,16,11,12,12,14,14,13,13,14,15,15,12,13,13,15,14,14,15,15,16,17,14,15,14,16,15,14,14,14,16,16,14,15,15,16,16,15,15,15,16,16,15,16,16,16,18,16,17,16,18,17,13,13,14,15,15,14,14,15,16,16,13,14,14,16,15,16,16,17,17,17,15,15,15,17,15,10,12,12,14,13,12,12,13,14,14,11,13,12,14,14,13,14,14,16,16,13,14,14,16,15,12,12,13,14,14,12,13,13,14,15,13,13,13,15,15,14,14,15,16,16,14,15,15,16,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,15,14,16,16,13,15,13,16,15,13,14,14,15,16,14,15,15,15,17,14,15,15,16,16,16,15,16,16,17,16,16,16,17,17,13,14,12,16,13,14,15,13,16,15,13,15,13,16,14,15,16,15,17,16,15,16,14,17,15,11,12,12,14,15,13,13,14,14,16,13,14,13,15,14,15,15,16,16,17,15,15,15,16,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,15,15,15,16,15,17,16,16,16,17,17,12,13,13,14,15,14,14,15,15,16,13,14,13,15,15,16,16,16,17,17,15,16,15,16,15,15,15,15,16,16,14,15,15,16,17,16,16,16,17,17,16,15,17,15,18,17,18,17,18,18,14,14,15,15,17,15,15,16,16,17,14,15,15,16,16,17,17,17,17,18,16,16,15,17,15,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,14,17,16,13,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,15,16,16,17,15,16,16,17,17,12,13,13,15,14,13,14,14,16,15,13,14,13,16,14,15,16,16,17,16,15,16,14,17,15,14,15,15,16,17,15,15], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+419507);
/* memory initializer */ allocate([16,16,17,15,16,16,17,17,16,15,17,16,18,16,17,17,18,18,14,15,14,16,13,15,16,15,17,14,15,16,14,17,14,16,17,16,18,16,16,17,15,18,15,6,8,8,10,9,8,9,9,10,10,8,9,9,10,10,8,10,10,10,10,8,10,10,10,10,9,9,9,10,10,9,10,10,10,11,9,10,10,11,11,10,10,10,11,11,10,10,10,11,11,9,9,9,10,10,9,10,10,11,11,9,10,10,11,10,10,10,10,11,11,10,10,10,11,11,10,10,10,10,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,10,10,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,9,10,10,10,11,10,10,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,12,12,10,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,9,10,10,11,10,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,11,11,12,12,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,7,10,10,11,11,10,10,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,10,10,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,11,12,12,10,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,10,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,7,10,10,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,12,12,10,10,10,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,10,10,10,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,13,13,13,13,12,13,13,13,13,8,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,8,11,11,11,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,2,5,5,4,7,7,4,7,6,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,6,7,8,8,9,10,8,10,10,8,9,10,10,11,12,10,11,12,8,10,10,10,11,12,10,12,11,6,8,7,8,10,10,8,10,9,8,10,10,10,11,12,10,12,12,8,10,9,10,12,11,10,12,11,5,8,8,8,10,10,8,10,10,7,9,10,9,10,11,10,11,11,8,10,10,10,12,12,10,12,11,7,9,9,9,11,11,9,11,11,9,10,11,11,11,12,11,12,12,9,11,11,11,12,12,11,12,12,7,9,9,10,11,12,10,12,11,9,11,10,11,11,12,12,13,13,9,11,11,12,13,13,11,13,11,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,12,7,9,9,9,11,11,9,11,10,7,9,9,10,11,12,10,12,11,9,11,11,11,11,13,12,13,13,9,10,11,12,13,13,11,12,11,7,9,9,9,11,11,9,11,11,9,11,11,11,12,12,11,12,12,9,11,10,11,12,12,10,12,11,4,6,6,6,7,7,6,7,7,6,7,7,7,7,8,7,7,8,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,5,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,8,8,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,7,8,8,8,9,9,8,9,9,8,9,8,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,6,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,9,7,8,8,8,9,9,8,9,9,8,8,9,9,9,9,9,9,9,8,8,8,9,9,9,9,9,9,8,8,8,8,9,9,8,9,9,8,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,2,5,4,4,7,7,4,7,6,5,6,7,7,8,9,7,9,9,5,7,6,7,9,9,7,9,8,6,8,8,8,10,10,8,10,10,8,9,10,10,11,12,10,12,12,8,10,10,10,12,12,10,12,11,6,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,12,8,10,9,10,12,11,10,12,11,5,8,8,8,10,10,8,10,10,8,9,10,10,11,11,10,11,11,8,10,10,10,11,12,10,12,11,8,10,10,10,11,11,10,11,11,10,11,11,11,12,13,11,12,13,10,11,11,11,13,13,11,13,13,7,9,9,10,11,12,10,12,11,9,11,11,11,12,13,12,14,13,9,11,11,12,13,14,11,13,12,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,12,8,10,9,10,12,11,9,11,11,7,9,9,10,11,12,10,12,11,9,11,11,11,12,13,12,14,13,9,11,11,12,13,14,11,13,12,8,10,10,10,11,11,10,11,11,10,11,11,11,13,13,11,13,13,10,11,10,11,13,12,11,13,12,4,6,6,8,8,5,7,7,9,9,5,7,7,9,9,6,8,8,11,11,6,8,8,11,11,6,7,7,9,9,7,8,9,10,11,7,9,9,11,10,8,9,10,12,12,8,10,10,12,12,6,7,7,9,9,7,9,9,10,10,7,9,8,11,10,8,10,10,12,12,8,10,9,12,12,8,9,9,11,11,9,10,10,12,12,9,11,11,12,13,11,12,12,13,14,11,12,12,14,14,8,9,9,11,11,9,11,10,13,12,9,10,10,13,12,11,12,12,14,14,11,12,12,14,13,7,8,9,10,10,8,10,10,11,11,8,10,10,11,11,10,11,11,13,13,10,11,11,13,13,8,9,10,10,11,10,11,11,12,13,10,11,11,12,12,11,11,12,13,14,11,12,12,14,14,8,10,10,11,11,10,11,11,12,13,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,10,11,11,12,13,11,12,12,13,14,12,13,13,14,14,13,13,14,14,16,13,14,14,15,16,10,11,11,13,13,12,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,16,15,7,8,8,10,10,8,10,10,11,11,8,10,10,12,11,10,11,11,13,13,10,11,11,13,13,8,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,8,10,9,11,10,10,11,11,13,12,10,11,10,13,12,11,12,12,14,14,11,12,11,14,13,10,11,11,13,13,11,12,12,14,14,12,12,12,14,14,13,14,14,15,16,13,14,14,15,15,10,11,11,13,12,12,12,12,14,14,11,12,12,14,13,13,14,14,16,15,13,14,13,16,14,10,11,11,13,13,12,12,13,14,15,12,13,13,14,15,13,14,15,15,16,13,14,14,16,16,11,12,13,14,14,13,13,14,15,16,13,14,14,15,16,14,15,15,16,17,14,15,16,17,17,11,12,12,14,14,13,14,14,15,16,13,14,14,15,15,14,15,15,16,18,14,15,15,17,16,13,14,15,15,16,15,15,16,16,18,15,15,15,17,17,16,16,17,17,18,16,16,16,18,18,14,14,14,16,16,15,15,15,16,17,15,15,15,16,17,16,17,17,18,18,16,16,17,18,17,10,11,11,14,13,12,13,13,15,14,11,13,13,15,14,13,15,15,16,16,13,14,14,16,16,11,12,12,14,14,13,13,13,15,15,13,14,13,15,15,15,15,15,17,16,14,15,15,17,16,11,13,12,14,14,13,14,13,15,15,13,14,13,15,15,14,15,15,17,17,14,15,15,17,16,14,14,14,16,16,14,15,15,17,17,15,15,16,17,16,17,16,17,18,18,16,17,17,18,18,13,14,14,16,15,15,15,15,17,17,14,16,15,16,16,17,17,17,18,18,16,17,16,20,19,6,8,8,10,10,8,10,10,11,11,8,10,10,12,11,10,11,11,13,13,10,11,11,13,13,8,9,10,11,11,10,11,11,12,12,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,9,10,10,11,11,10,11,11,12,12,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,10,10,11,12,13,11,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,15,16,10,11,11,13,13,12,12,12,14,14,12,13,12,14,14,13,14,14,16,16,13,14,14,15,15,9,10,10,11,12,10,11,11,12,13,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,10,10,11,12,13,11,12,12,13,14,11,12,12,13,14,12,13,14,14,15,12,13,13,15,15,10,11,11,13,13,11,12,12,13,14,11,12,12,14,13,12,13,13,15,15,12,13,13,15,15,12,11,13,12,14,13,13,14,14,15,13,13,14,14,15,14,15,15,16,17,14,15,15,16,17,12,13,12,14,14,13,14,14,15,15,13,14,14,15,15,14,15,15,16,17,14,15,15,16,17,8,9,9,11,11,10,11,11,12,13,10,11,11,13,12,12,13,13,14,15,11,13,12,15,14,9,11,10,12,12,11,12,12,13,14,11,12,12,14,13,13,13,14,15,15,13,14,13,15,15,9,11,11,12,12,11,12,12,14,14,11,12,12,14,13,13,14,14,15,16,13,14,13,15,14,11,12,12,14,13,12,13,13,14,15,13,14,14,16,15,15,15,15,15,16,15,16,15,17,17,11,12,12,14,14,13,14,14,15,15,12,13,13,15,14,15,15,15,17,17,14,15,15,17,15,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,16,16,12,13,13,14,15,13,14,14,16,16,14,14,14,15,16,15,16,16,17,17,15,16,16,17,17,12,13,13,15,15,14,14,14,16,16,14,14,15,16,16,15,16,16,17,17,15,16,16,17,17,14,15,15,15,16,15,15,16,16,18,15,16,16,17,17,17,17,17,18,18,16,17,17,19,18,14,15,15,16,17,15,16,16,17,17,15,16,16,18,17,16,17,17,19,18,17,17,17,19,18,10,12,12,14,14,13,13,14,15,15,12,14,13,16,15,15,15,15,17,17,14,15,15,17,16,12,13,13,15,14,13,14,14,16,16,14,14,15,17,16,15,16,16,17,17,15,16,16,18,17,12,13,13,15,14,14,15,15,16,16,13,15,14,16,15,16,17,16,19,17,15,16,16,17,17,14,15,15,17,15,15,16,15,17,17,16,17,16,18,17,17,17,18,18,18,17,17,18,19,18,14,15,15,16,16,15,16,16,17,18,15,16,16,18,16,17,18,18,19,19,17,18,17,18,19,6,8,8,10,10,8,10,10,11,11,8,10,10,12,11,10,11,11,13,13,9,11,11,13,13,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,8,10,9,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,14,14,11,12,12,14,14,10,11,11,13,13,11,12,13,14,14,12,12,12,14,14,13,14,14,15,16,13,14,14,16,16,10,11,10,13,12,11,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,16,15,8,9,9,11,11,10,11,11,12,13,10,11,11,13,12,12,13,13,14,15,12,13,13,15,14,10,11,11,12,12,11,11,12,13,14,11,12,12,14,14,13,13,14,15,16,13,14,14,15,15,9,10,11,12,12,11,12,12,13,14,11,12,12,14,13,13,14,14,15,16,12,14,13,15,15,11,12,12,14,14,12,13,13,14,15,13,14,14,16,15,14,15,15,15,17,15,15,16,16,17,11,12,12,13,14,13,14,14,15,15,12,13,13,15,14,15,16,15,16,17,14,16,15,17,15,9,10,10,12,11,10,11,11,13,13,10,11,11,13,12,11,12,12,14,14,11,12,12,14,14,10,11,11,12,13,11,12,12,13,14,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,10,11,10,13,12,11,12,12,13,13,11,12,12,14,13,12,13,13,15,15,12,13,13,15,14,12,13,12,14,14,13,14,14,15,15,13,14,14,15,15,14,15,15,16,16,14,15,15,16,16,11,13,11,14,12,13,13,13,15,14,12,14,13,15,14,15,15,15,17,16,14,15,14,17,15,10,12,12,14,14,13,13,14,15,16,12,14,13,15,15,14,15,16,17,17,14,15,16,17,17,12,13,13,14,15,13,14,14,16,16,14,14,15,16,16,16,16,16,17,17,16,16,16,18,18,12,13,13,14,15,14,14,15,16,16,13,14,14,16,15,16,16,16,17,18,15,16,16,17,17,14,15,15,16,16,15,15,16,17,17,15,16,16,17,18,17,18,18,18,19,17,18,18,19,19,14,15,15,16,16,15,16,16,17,17,15,16,16,17,17,17,17,18,20,18,17,18,17,18,18,11,12,12,14,14,12,13,14,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,16,17,12,13,13,15,15,14,14,14,16,16,14,14,14,16,16,15,16,16,17,17,15,16,16,17,17,12,13,13,15,14,13,14,14,16,15,14,15,14,16,15,15,16,16,17,17,15,16,16,17,16,14,15,15,16,16,15,16,16,17,17,16,16,16,17,17,17,17,17,19,18,17,17,17,18,19,14,15,14,17,15,15,16,16,17,17,15,16,15,17,17,16,17,17,18,18,16,17,17,18,17,6,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,17,18,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,16,16,13,14,14,15,16,14,15,15,16,17,14,15,15,17,16,15,16,17,18,17,16,16,16,18,17,14,14,15,16,16,14,15,15,18,16,14,15,15,17,16,16,17,17,18,18,16,17,16,18,17,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,16,16,12,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,16,16,17,17,15,15,16,17,17,12,13,13,15,15,14,14,14,16,16,13,14,14,16,16,15,16,16,17,17,15,16,16,17,17,14,14,15,15,16,15,15,16,16,17,15,15,16,16,17,16,17,17,17,18,16,17,17,18,18,14,15,15,16,16,15,16,16,17,17,15,16,16,17,17,17,17,17,18,19,17,17,17,18,18,10,12,12,14,14,12,13,14,15,16,13,14,13,15,15,14,15,15,17,17,14,15,16,17,17,12,13,13,15,15,13,14,14,15,15,14,15,14,16,16,15,16,16,17,18,15,17,16,18,17,12,13,13,15,15,14,14,14,16,16,13,14,14,16,15,15,16,16,17,18,15,16,16,17,17,14,14,14,16,16,15,15,16,17,17,15,16,16,17,17,17,17,17,18,20,17,17,17,19,19,14,15,15,16,16,15,17,16,18,18,15,16,15,17,16,17,18,19,19,19,17,17,17,18,17,13,14,14,16,16,14,15,15,17,17,14,15,15,16,17,15,17,17,18,18,16,16,17,18,17,14,15,15,16,17,15,16,16,17,17,15,16,16,17,17,16,17,17,18,18,17,17,17,18,19,14,15,15,16,17,15,16,16,17,17,15,16,16,17,17,16,17,17,18,18,17,17,17,19,19,16,16,16,16,18,16,17,17,17,18,17,17,17,17,19,18,18,18,19,19,18,18,18,19,20,16,16,17,18,18,16,18,17,18,18,17,17,17,20,19,18,18,19,21,20,18,20,18,18,19,10,12,12,14,14,14,14,15,15,17,14,15,14,17,15,16,16,17,18,18,16,18,17,19,18,12,14,13,16,15,14,14,15,15,17,15,16,16,18,17,16,17,18,17,19,17,19,18,20,19,12,13,13,15,15,15,16,17,17,18,14,16,14,17,16,17,18,18,19,19,17,17,17,18,18,15,15,15,17,16,15,16,16,17,17,17,19,17,18,18,18,18,18,18,21,19,20,19,20,19,15,15,16,16,17,17,17,18,20,20,15,16,16,18,17,18,19,19,19,20,18,19,18,19,17,6,11,11,13,13,11,12,12,14,14,11,12,12,14,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,17,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,15,16,16,13,14,14,16,16,15,15,15,16,16,14,15,15,17,16,16,17,17,19,18,16,17,17,18,18,13,14,14,15,15,14,15,15,17,16,14,15,15,17,16,16,17,16,17,18,15,16,16,18,18,10,12,12,14,14,12,13,14,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,17,16,12,13,13,15,15,14,14,14,15,16,14,15,15,16,16,15,16,16,17,18,16,16,16,18,18,12,13,13,14,14,14,14,15,16,16,13,14,14,16,16,15,16,16,18,18,15,16,16,19,17,14,15,15,16,17,15,15,16,17,17,16,17,16,17,18,17,17,18,17,19,17,17,18,18,19,14,14,14,16,16,15,16,16,17,17,15,16,15,17,17,17,17,17,19,20,16,17,17,18,18,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,14,15,14,16,16,12,13,13,15,15,14,14,14,16,16,13,14,14,16,16,15,16,16,18,17,15,16,16,17,17,12,13,13,15,15,13,14,14,16,16,13,14,14,16,16,15,16,15,18,18,15,16,15,17,16,14,15,15,16,16,15,16,16,17,17,15,16,16,18,17,16,17,17,18,18,16,17,17,18,18,14,15,14,16,15,15,16,15,17,17,15,16,15,17,16,16,17,17,18,18,17,17,16,19,17,10,12,12,14,15,14,14,15,15,17,14,15,14,17,15,16,17,17,17,18,16,17,17,18,18,12,14,13,16,15,14,14,16,15,17,15,17,16,18,17,17,17,18,17,19,18,18,18,19,18,12,13,14,15,15,15,16,16,16,17,14,15,14,18,16,18,17,18,19,19,17,18,17,20,18,15,15,15,17,17,15,16,16,17,18,18,18,18,19,18,18,18,19,18,20,18,19,19,21,21,15,15,16,16,17,17,18,18,18,18,15,16,16,17,17,17,19,20,19,20,17,18,18,19,17,13,14,14,16,16,14,15,15,16,17,14,15,15,17,17,16,16,17,17,18,15,17,16,17,17,14,15,15,16,16,15,16,16,17,17,16,16,16,17,17,17,17,18,17,18,17,17,17,18,20,14,15,15,17,16,15,16,16,17,17,15,16,16,17,17,17,17,17,18,18,16,17,17,19,18,16,16,17,17,17,17,18,17,19,18,17,17,17,18,19,17,20,18,19,21,17,19,18,19,20,15,17,15,17,16,16,17,17,18,18,17,17,17,18,17,18,19,18,19,21,18,18,17,19,19,1,5,5,4,8,8,4,8,8,5,7,8,8,9,10,8,10,10,5,8,7,8,10,10,8,10,9,7,9,9,9,11,11,9,11,11,9,11,11,11,12,13,11,13,13,9,11,11,11,13,13,11,13,13,7,9,9,9,11,11,9,11,11,9,11,11,11,13,13,11,13,13,9,11,11,11,13,13,11,13,12,5,9,9,9,11,11,9,11,11,9,11,11,11,12,13,11,13,13,9,11,11,11,13,13,11,13,13,9,11,12,11,13,13,12,13,13,11,12,13,13,14,15,13,14,14,12,13,13,13,15,15,13,15,14,8,10,10,11,13,13,12,14,13,11,12,12,13,14,15,13,15,15,11,12,12,13,15,15,13,15,14,5,9,9,9,11,11,9,11,11,9,11,11,11,13,13,11,13,13,9,11,10,11,13,13,11,13,12,8,10,10,11,13,13,12,13,13,11,12,12,13,14,15,14,15,15,10,12,12,13,14,15,13,15,14,9,12,11,12,13,13,11,13,13,12,13,13,13,15,15,13,14,15,11,13,12,13,15,14,13,15,14,3,3,3,3,3,3,3,3,2,7,14,16,17,18,20,21,7,4,6,8,11,12,14,16,13,5,4,4,8,9,11,13,15,8,4,3,5,7,9,10,17,11,8,4,4,6,9,9,17,11,9,7,6,5,7,8,19,13,11,9,9,7,8,8,21,15,13,11,10,8,8,7,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,4,5,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,7,7,12,12,5,11,12,12,12,5,12,11,12,12,12,12,12,12,12,12,13,13,13,13,7,11,11,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,13,10,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,7,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+429747);
/* memory initializer */ allocate([13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4,7,7,7,7,8,7,8,7,7,7,8,7,8,8,8,8,8,7,8,7,8,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,9,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,9,9,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,8,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,8,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,9,8,9,8,2,6,6,5,7,7,5,7,7,5,7,7,7,7,9,7,9,9,6,7,7,8,9,9,7,9,7,6,8,8,8,9,10,8,9,9,8,9,10,9,9,10,10,10,10,8,9,9,10,10,11,9,10,10,6,8,8,8,9,9,8,10,9,8,9,9,9,10,10,10,11,10,8,10,9,10,11,10,9,11,9,6,8,8,7,9,9,7,9,9,7,9,9,8,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,9,9,9,9,10,9,10,10,9,9,10,10,9,11,10,11,11,9,10,10,10,11,11,10,11,10,6,9,8,9,9,10,9,10,9,8,10,10,9,9,10,10,11,11,9,10,10,10,11,11,9,11,9,6,8,8,7,9,9,7,9,9,8,9,9,9,9,10,9,10,10,7,9,9,9,10,10,8,10,9,6,8,9,9,9,10,9,10,9,9,10,10,9,9,11,10,11,11,8,9,10,10,11,11,9,10,9,7,9,9,9,10,10,9,10,9,9,10,10,10,10,11,10,11,11,9,10,9,10,11,11,10,11,9,2,3,3,3,3,3,3,2,6,6,9,9,5,7,8,10,11,5,8,7,11,10,8,10,11,12,13,8,11,10,13,12,6,7,8,10,11,7,8,10,10,12,8,9,9,12,12,10,10,12,12,14,10,12,12,14,13,6,8,7,11,10,8,9,9,12,12,7,10,8,12,11,10,12,12,13,14,10,12,10,14,12,9,10,11,11,13,10,10,11,11,13,11,12,12,13,14,12,12,13,11,15,13,14,14,15,14,9,11,10,13,11,11,12,12,13,13,10,11,10,13,11,13,14,14,15,15,12,13,12,15,11,6,8,9,11,12,8,9,11,12,13,8,10,10,13,13,11,12,13,14,15,11,12,13,14,14,9,9,10,12,13,10,10,12,12,14,10,11,11,13,14,12,12,14,14,15,13,13,14,15,15,9,10,10,13,13,10,11,11,13,14,10,11,10,14,13,13,13,14,15,15,12,14,13,15,14,12,12,13,13,14,12,13,14,13,15,13,14,14,15,15,14,14,15,14,16,15,15,15,16,16,12,13,13,14,14,13,14,14,15,15,12,14,13,15,14,14,15,15,16,16,14,15,14,16,14,6,9,8,12,11,8,10,10,13,13,8,11,9,13,12,11,12,12,14,14,11,13,12,15,14,9,10,10,13,13,10,10,11,13,14,10,12,11,14,13,12,13,14,14,15,13,13,13,15,14,9,10,9,13,12,10,11,11,14,13,10,12,10,14,12,13,14,13,15,15,12,14,12,15,14,12,13,13,14,14,13,13,13,14,15,13,14,14,15,15,14,14,15,14,16,14,15,15,16,16,12,13,12,14,13,13,14,14,15,15,12,14,13,15,13,15,15,15,16,16,14,15,14,16,14,11,12,12,13,14,12,13,14,14,16,12,13,13,15,15,14,14,16,15,17,14,15,15,16,16,12,13,14,14,15,13,13,15,15,16,14,14,14,15,16,15,15,16,16,17,15,15,16,16,17,13,13,13,15,15,14,14,15,15,16,13,14,14,15,16,15,15,16,16,17,15,16,15,17,16,14,15,15,16,16,15,15,16,16,17,15,16,16,17,17,16,16,17,16,18,16,17,17,17,17,15,15,15,16,16,15,16,16,17,17,15,16,16,17,16,16,17,17,18,18,16,17,16,17,16,11,12,12,15,13,13,13,13,15,15,12,14,13,16,14,14,15,15,16,16,14,15,14,17,15,13,13,13,15,14,13,14,14,16,15,14,14,14,16,15,15,15,16,16,17,15,16,15,17,16,12,14,13,15,14,14,14,14,16,15,13,14,13,16,15,15,16,16,17,16,15,16,15,17,16,15,15,15,16,16,15,15,16,16,17,15,16,16,17,17,16,16,17,17,17,17,17,17,18,17,14,15,15,16,16,15,16,16,17,16,15,16,15,17,16,17,17,17,18,17,16,17,16,18,16,6,9,9,12,12,8,10,10,12,13,8,10,10,13,12,10,12,12,14,15,11,13,12,15,14,8,9,10,12,13,9,10,11,13,14,10,11,11,14,13,12,12,13,14,15,12,13,13,15,15,8,10,10,13,13,10,11,11,13,14,10,12,10,14,13,12,13,13,15,15,12,14,13,15,14,11,12,12,13,14,12,12,13,13,15,12,13,13,15,15,14,13,15,14,16,14,15,15,16,16,12,13,13,14,14,13,13,14,15,14,12,14,13,15,14,14,15,15,16,15,14,15,14,16,14,7,9,10,12,12,9,10,11,13,14,9,11,10,13,13,11,12,13,14,15,12,13,13,15,14,9,10,11,12,13,10,10,12,13,14,11,11,12,14,14,12,12,14,14,15,13,13,14,15,15,9,11,11,13,13,11,12,12,14,14,10,12,10,14,13,13,14,14,15,15,13,14,13,16,14,12,12,13,14,15,13,13,14,14,16,13,14,14,15,15,14,14,15,14,17,14,15,15,16,16,12,13,13,15,14,13,14,14,15,15,13,14,13,16,14,15,15,15,16,16,14,15,14,16,14,7,10,9,13,12,10,11,12,12,14,10,12,11,14,12,12,13,13,14,15,12,14,13,15,14,9,11,10,13,13,10,11,12,13,14,12,13,12,15,13,13,13,14,13,15,13,14,14,16,15,10,11,11,13,13,12,12,13,14,14,11,12,11,14,13,14,14,14,15,16,13,14,13,16,13,12,13,13,14,14,12,13,13,14,15,14,14,14,15,15,14,13,15,13,16,15,15,15,17,16,13,13,13,14,14,14,14,14,15,15,12,13,13,15,14,15,16,16,16,16,14,15,14,16,13,11,12,13,14,15,12,13,14,15,16,13,14,14,15,15,14,14,15,15,17,14,15,15,16,16,13,13,14,14,15,13,13,15,14,16,14,14,15,15,16,15,14,16,15,17,15,16,16,16,17,13,14,14,15,15,14,14,15,16,16,13,15,14,16,16,15,16,16,17,17,15,16,15,17,16,14,15,15,15,17,15,15,16,15,17,15,16,16,16,17,16,16,17,16,18,17,17,17,17,18,15,15,15,17,16,15,16,16,17,17,15,16,16,17,16,16,17,17,18,18,16,17,16,18,17,11,13,12,15,14,13,13,14,15,15,13,14,13,16,14,15,15,15,16,16,15,16,15,17,16,13,14,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,16,16,16,15,16,15,18,16,13,14,14,15,15,14,15,15,15,16,13,15,13,16,15,15,16,16,17,17,15,16,15,17,16,15,15,15,16,16,15,15,15,16,17,16,16,16,17,16,16,16,17,16,17,17,17,17,18,17,15,15,15,16,16,16,16,16,17,17,15,16,15,17,16,17,17,17,18,18,16,17,16,17,15,6,9,9,12,12,8,10,10,12,13,8,10,10,13,12,11,12,13,14,15,10,12,12,14,14,9,10,10,13,13,10,10,12,13,14,10,11,11,14,13,12,13,14,14,15,12,13,13,15,15,8,10,9,13,12,10,11,11,13,14,9,11,10,14,13,12,13,13,15,15,12,13,12,15,14,12,13,13,14,14,12,13,13,14,15,13,14,14,14,15,14,14,15,14,16,14,15,15,16,16,11,12,12,14,13,13,13,13,15,15,12,13,12,15,13,14,15,15,16,16,14,15,14,16,14,7,9,10,12,13,10,10,12,12,14,10,12,11,14,13,12,13,14,14,15,12,13,13,15,14,10,11,11,13,13,11,11,12,13,14,12,13,12,14,14,13,13,14,13,16,14,14,14,15,15,9,10,11,13,14,12,12,13,13,15,10,12,10,14,13,13,14,14,15,16,13,14,13,15,13,13,14,13,14,15,12,13,13,14,15,14,14,14,15,15,14,13,15,13,16,15,16,16,16,16,12,13,13,14,14,14,14,14,15,15,12,13,13,15,14,15,15,16,16,16,14,15,13,16,13,7,10,9,12,12,9,10,11,13,13,9,11,10,14,13,12,13,13,14,15,11,13,12,15,14,9,11,11,13,13,10,10,12,13,14,11,12,12,14,14,13,13,14,14,16,13,14,14,16,15,9,11,10,13,12,11,12,11,14,14,10,12,10,14,13,13,14,13,15,15,12,14,12,16,14,12,13,13,14,15,13,13,14,14,16,13,14,14,15,15,14,14,15,14,16,15,15,15,16,16,12,13,12,15,14,13,14,14,15,15,12,14,13,16,14,14,15,15,16,16,14,15,14,17,14,11,12,13,14,15,13,13,14,14,16,13,14,13,15,15,15,15,16,16,17,15,15,15,16,16,13,14,13,15,15,13,13,15,15,16,14,15,15,16,16,15,15,16,15,17,16,16,16,17,17,13,13,14,14,15,14,14,15,15,16,13,14,13,15,15,15,16,16,16,17,15,16,15,16,16,15,15,15,16,16,15,15,16,16,17,16,16,16,17,17,16,16,17,16,18,17,17,17,18,18,15,15,15,16,16,16,16,16,17,17,15,15,15,16,16,17,17,17,17,18,16,16,16,17,15,11,13,12,15,14,13,13,14,15,15,12,14,13,16,14,14,15,15,16,16,14,15,14,16,15,13,14,14,15,15,13,14,14,16,16,14,15,14,16,16,15,15,16,17,17,15,16,16,17,17,13,14,13,15,14,14,14,14,16,15,13,15,13,16,14,15,16,15,17,16,15,16,14,17,15,14,16,15,16,17,15,16,16,16,17,15,16,16,17,17,16,16,17,17,18,16,17,17,18,17,14,15,15,17,15,15,16,16,17,16,15,16,15,17,15,16,17,17,18,17,16,17,16,18,15,10,12,12,14,14,12,13,13,15,15,12,13,13,15,15,13,14,14,15,16,14,15,14,16,16,12,13,13,15,15,12,13,14,15,15,13,14,14,15,15,14,14,15,16,17,14,15,15,17,16,12,13,13,15,15,13,14,14,15,16,13,14,14,16,15,14,15,15,16,17,14,15,15,17,16,13,14,14,15,16,14,14,15,15,16,14,15,15,16,16,15,15,16,16,17,15,16,16,17,17,14,15,15,16,16,15,15,15,16,16,15,15,15,16,16,16,17,16,17,17,16,16,16,18,16,11,12,12,14,14,12,13,14,15,15,12,13,13,15,15,13,14,15,16,16,14,15,15,16,16,12,13,13,15,15,13,13,14,15,16,13,14,14,15,16,14,14,15,16,17,15,15,15,16,17,12,13,13,15,15,13,14,14,15,16,13,14,14,16,15,15,15,15,16,17,15,16,15,17,16,14,14,15,15,16,14,14,15,15,17,15,15,16,16,17,15,15,16,15,18,16,16,16,17,17,14,15,15,16,16,15,16,16,17,17,15,15,15,17,16,16,17,16,17,17,16,16,16,18,16,11,12,12,14,14,13,13,14,15,15,13,14,13,15,15,14,15,15,16,16,14,15,15,16,16,12,13,13,15,15,13,13,14,15,15,14,14,14,16,15,15,15,15,15,16,15,16,15,17,16,12,13,13,15,15,14,14,15,15,16,13,14,13,16,15,15,15,16,16,17,15,16,15,17,15,14,15,14,16,16,14,15,15,16,16,15,16,15,17,16,15,15,16,15,17,16,17,16,17,17,14,15,15,16,16,15,16,16,16,17,14,15,15,16,16,16,17,17,17,18,16,16,16,17,16,12,13,13,15,15,13,13,14,15,16,13,14,14,16,15,14,15,15,16,17,14,15,15,17,16,13,14,14,15,16,14,14,15,15,17,14,15,15,16,16,15,14,16,15,17,15,16,16,17,17,13,14,14,16,16,14,15,15,16,16,14,15,14,16,16,15,16,16,17,17,15,16,15,17,16,15,15,16,15,17,15,15,16,15,17,15,16,16,16,17,16,15,17,15,18,17,17,17,17,17,15,15,15,17,17,16,16,16,17,17,15,16,15,17,17,16,17,17,18,18,16,17,15,18,15,11,12,12,15,15,13,13,15,14,16,13,14,13,16,14,15,15,16,16,17,15,16,15,17,15,12,14,13,16,14,13,13,14,14,16,14,15,14,16,15,15,15,16,15,17,16,16,16,17,16,12,13,14,15,16,15,15,15,15,16,13,15,13,16,14,16,16,16,17,17,15,16,15,17,15,15,16,15,16,15,14,14,15,16,16,16,16,16,17,16,15,15,16,15,17,17,17,17,18,17,15,15,15,16,16,16,16,16,16,17,14,15,15,17,16,17,17,17,17,18,15,16,15,18,14,10,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,14,15,15,16,13,15,14,16,16,12,13,13,15,15,13,14,14,15,16,13,14,14,15,15,14,15,15,16,17,14,15,15,17,16,12,13,13,15,15,13,14,14,15,15,12,14,13,15,15,14,15,15,16,17,14,15,14,17,15,14,15,15,16,16,14,15,15,16,17,15,15,15,17,16,16,16,16,16,17,16,16,16,17,17,13,14,14,16,15,14,15,15,16,16,14,15,14,16,16,15,16,16,17,17,15,16,15,17,16,11,12,12,14,15,13,13,14,14,15,13,14,13,15,15,14,15,15,16,16,14,15,15,16,16,12,14,13,15,15,13,13,14,15,16,14,15,14,16,15,15,15,16,15,17,15,16,16,17,16,12,13,13,15,15,14,14,15,15,16,13,14,13,16,15,15,15,16,16,17,15,15,15,16,16,14,15,15,16,16,14,15,15,16,16,15,16,16,17,17,16,16,16,16,17,16,17,17,18,17,14,14,15,15,16,15,15,16,16,17,14,15,15,16,16,16,16,16,17,17,15,16,15,17,15,11,12,12,14,14,12,13,14,15,15,12,13,13,15,15,14,15,15,16,16,13,15,14,16,16,12,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,15,15,16,17,15,15,15,17,16,12,13,13,15,15,13,14,14,16,15,13,14,13,16,15,15,16,15,17,17,14,15,14,17,16,14,15,15,16,16,15,15,16,16,17,15,16,16,17,17,16,16,16,16,18,16,17,16,18,17,14,15,14,16,15,15,15,15,17,16,14,15,14,17,15,16,17,16,17,17,15,16,15,17,15,11,12,12,15,15,13,13,15,14,16,13,15,13,16,14,15,15,16,15,17,15,16,15,17,16,12,14,13,15,15,13,13,15,15,16,15,15,15,16,15,15,15,16,15,17,16,16,16,17,16,12,13,14,15,16,14,14,15,15,16,13,14,13,16,14,16,16,16,16,17,15,16,15,17,15,15,16,15,16,16,14,15,15,16,16,16,16,16,17,16,15,15,16,15,17,17,17,17,18,17,15,15,15,15,16,16,16,16,16,17,14,15,14,16,15,17,17,17,17,18,15,16,15,17,15,12,13,13,15,15,13,14,14,15,16,13,14,14,16,15,14,15,15,16,17,14,15,15,17,16,13,14,14,16,15,13,14,15,16,16,14,15,15,16,16,15,15,16,16,17,15,16,16,17,17,13,14,13,16,15,14,15,15,16,16,13,15,14,16,15,15,16,16,17,17,15,16,14,17,15,15,15,16,17,17,15,15,16,16,17,16,16,16,17,17,16,15,17,16,18,17,17,17,18,18,15,15,15,17,14,16,16,16,17,16,15,16,15,17,15,16,17,17,18,17,16,17,15,18,15,7,9,9,10,10,9,10,10,10,11,9,10,10,11,10,9,10,10,11,11,9,10,10,11,11,9,10,10,11,11,10,10,10,11,11,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,9,10,10,11,11,10,10,10,11,11,9,10,10,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,9,10,10,11,11,10,10,11,11,11,10,10,11,11,11,10,11,11,11,12,10,11,11,12,12,10,10,11,11,11,10,11,11,11,12,11,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,11,11,11,11,11,11,11,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,10,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,11,10,11,11,11,11,10,11,11,11,12,11,11,11,12,12,11,11,12,12,12,11,11,11,12,12,10,11,10,11,11,11,11,11,12,12,10,11,11,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,10,11,11,11,11,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,13,12,13,12,9,10,10,11,11,10,10,11,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,11,11,11,10,11,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,10,11,10,11,11,11,11,11,12,12,10,11,11,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,10,11,11,11,10,11,11,12,12,10,11,11,12,12,11,11,11,12,12,11,11,12,12,12,10,11,11,11,12,11,11,12,12,12,11,11,12,12,12,11,11,12,12,12,11,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,11,12,10,11,11,12,11,11,12,11,12,12,11,12,11,12,12,10,11,11,12,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,9,10,10,11,11,10,10,11,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,10,11,11,11,11,10,11,11,12,12,11,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,11,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,11,12,12,11,11,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,11,12,10,11,11,12,11,11,11,12,12,12,11,11,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,11,11,12,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,12,12,12,12,12,13,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,13,13,12,10,11,11,12,12,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,13,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,13,12,13,12,12,12,12,13,12,12,13,12,13,12,13,13,12,13,12,12,12,12,12,12,13,13,13,12,12,12,12,13,12,12,13,13,13,13,12,13,13,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,13,13,13,12,12,12,12,12,12,12,13,12,13,12,12,12,12,13,12,12,13,13,13,12,12,13,12,13,12,10,11,11,12,12,11,11,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,13,13,13,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,13,12,13,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,12,12,12,12,12,12,12,12,13,12,13,12,13,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,13,12,13,12,12,13,12,13,12,12,13,12,13,12,2,5,5,4,7,8,4,8,7,5,7,8,7,7,10,8,9,9,5,7,7,8,9,9,7,10,7,5,7,8,8,9,11,8,10,10,8,9,10,10,10,12,11,12,12,8,10,10,10,12,12,10,12,11,5,8,7,8,10,10,8,11,9,8,10,10,10,11,12,10,12,12,8,10,9,11,12,12,10,12,10,5,8,8,7,10,10,8,11,10,7,9,10,9,10,12,10,12,12,8,10,10,10,12,12,10,12,11,7,9,10,9,11,12,10,12,11,9,9,12,10,10,13,12,12,13,10,12,11,12,13,13,11,13,11,7,10,9,10,11,12,10,13,11,9,11,11,11,11,13,12,14,13,10,11,11,12,14,14,11,14,11,5,8,8,8,10,11,7,10,10,8,10,10,10,11,12,10,12,12,7,10,9,10,12,12,9,12,10,7,9,10,10,11,13,10,12,11,10,11,11,11,11,14,12,14,14,9,11,11,12,13,14,11,13,11,7,10,9,10,11,12,9,12,10,10,11,12,11,11,13,12,13,13,9,12,9,12,13,12,10,13,10,6,7,7,7,7,8,7,8,7,7,7,8,7,8,8,8,8,8,7,8,7,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,8,9,8,8,9,8,2,5,5,5,7,7,5,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,5,7,8,7,9,10,8,9,9,8,9,10,9,10,12,10,11,11,8,10,9,10,11,12,9,11,10,5,8,7,8,10,9,7,10,9,8,9,10,9,10,11,10,12,11,8,10,9,10,11,11,9,12,10,5,8,8,7,9,10,8,10,9,7,9,10,9,10,11,9,11,11,8,10,9,10,11,11,10,12,10,7,9,10,9,10,12,9,11,11,9,9,12,11,10,13,11,11,13,10,12,11,11,13,13,11,13,12,7,9,9,9,11,11,9,12,11,9,11,10,10,11,12,11,13,12,9,11,11,12,13,13,11,13,11,5,8,8,8,9,10,7,10,9,8,9,10,10,10,12,10,11,11,7,10,9,9,11,11,9,11,10,7,9,9,9,11,12,9,11,11,9,11,11,11,11,13,12,13,13,9,10,11,11,12,13,10,12,11,7,10,9,9,11,11,9,12,10,10,11,12,11,12,13,12,13,13,9,12,9,11,13,11,10,13,10,4,6,6,9,9,6,8,8,10,10,6,8,8,10,10,8,9,10,12,12,8,10,9,12,12,6,8,8,10,10,8,8,9,10,11,8,9,9,11,11,9,10,11,12,13,10,11,11,13,13,6,8,8,10,10,8,9,9,11,11,8,9,8,11,10,10,11,11,13,13,9,11,10,13,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,12,15,12,13,13,15,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,15,12,7,8,8,10,11,8,9,10,11,12,8,9,9,11,11,10,11,11,13,14,10,11,11,13,13,8,9,9,11,12,9,10,11,11,13,9,10,10,12,12,11,11,12,13,15,11,12,12,14,14,8,9,9,11,11,9,10,11,12,13,9,10,10,12,12,11,12,12,14,15,11,12,12,14,14,10,11,12,13,13,11,12,12,13,14,12,12,12,14,14,13,13,14,14,16,14,14,14,16,15,10,11,11,13,13,12,12,12,14,14,11,12,12,14,13,14,14,14,15,16,13,14,13,16,14,7,8,8,11,10,8,9,9,11,11,8,10,9,12,11,10,11,11,13,13,10,11,11,14,13,8,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,13,14,11,12,12,15,14,8,9,9,12,11,9,10,10,12,12,9,11,10,13,11,11,12,12,14,14,11,12,12,14,13,10,11,11,13,13,11,12,12,13,14,12,13,12,14,14,13,13,14,14,16,13,14,14,16,15,10,11,11,13,13,12,12,12,14,14,11,12,12,14,13,13,14,14,15,15,13,14,13,16,14,9,10,11,12,13,11,11,12,12,14,11,11,12,13,14,13,13,14,14,16,13,13,14,15,15,11,11,12,12,14,12,12,13,13,15,12,12,13,13,15,14,14,15,15,16,14,14,14,15,16,11,12,12,13,14,12,12,13,14,15,12,13,12,14,14,14,14,15,15,16,14,14,14,16,16,13,13,14,15,16,14,14,15,15,16,14,15,15,16,16,15,15,16,16,18,16,16,16,17,17,13,14,14,15,15,14,14,15,16,16,14,15,14,16,16,16,16,16,17,18,15,16,16,17,16,9,11,10,13,12,11,12,11,14,13,11,12,11,14,12,13,14,13,15,14,13,14,13,16,14,11,12,12,14,13,12,12,13,14,14,12,13,12,15,14,14,14,14,16,16,14,15,14,17,15,11,12,11,14,12,12,13,12,15,13,12,13,12,15,13,14,14,14,16,15,14,15,14,16,15,13,14,14,15,15,14,14,15,16,16,14,15,14,16,16,15,15,16,16,17,16,16,16,17,17,13,14,14,16,15,14,15,15,16,16,14,15,14,17,15,16,16,16,17,17,15,16,15,18,16,7,8,8,10,11,8,9,9,11,12,8,9,9,12,11,10,11,11,13,14,10,11,11,14,13,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,13,14,11,12,12,14,14,8,9,9,12,11,9,10,11,12,13,9,11,10,13,12,11,12,12,14,14,11,12,12,14,13,10,11,11,13,13,11,12,12,13,14,11,12,12,14,14,13,13,14,14,16,13,14,14,16,15,10,12,11,13,13,12,12,12,14,14,11,12,12,14,13,14,14,14,15,16,13,14,14,16,14,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,11,12,13,14,11,12,12,14,14,9,9,10,11,12,10,10,11,12,13,10,10,11,12,13,12,12,13,14,15,12,12,13,14,15,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,15,15,12,13,13,15,14,11,11,12,13,14,12,12,13,13,15,12,12,13,14,15,14,14,15,14,16,14,14,15,15,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,14,14,15,15,16,16,14,15,14,17,15,8,9,9,11,11,9,10,10,12,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,13,9,10,10,12,12,10,10,11,12,13,10,12,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,12,12,11,11,12,13,13,10,12,10,13,12,12,13,13,15,15,12,13,13,15,13,11,12,12,14,14,12,12,13,14,14,12,13,13,15,14,13,13,14,13,16,14,15,14,16,16,11,12,12,14,14,13,13,13,15,15,12,13,12,15,14,14,15,15,16,17,14,15,13,16,13,10,11,11,13,14,11,12,12,13,15,11,12,12,14,14,13,14,14,15,16,13,14,14,16,16,11,11,12,12,14,12,12,13,13,15,12,13,13,13,15,14,14,15,14,17,14,14,15,15,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,16,16,13,14,14,14,16,14,14,15,14,17,14,15,15,14,17,16,16,17,15,18,16,16,17,16,18,13,14,14,16,16,14,15,15,17,16,14,15,15,17,16,16,17,17,18,18,16,17,16,18,17,10,11,11,14,13,11,12,12,14,14,11,13,12,15,14,14,14,14,16,15,14,15,14,16,15,11,12,12,14,13,12,13,13,15,14,13,14,13,15,14,14,15,15,16,16,14,15,15,17,15,11,12,12,14,14,13,13,13,15,15,12,13,13,15,14,15,15,15,17,17,14,15,15,17,15,13,14,14,16,15,14,15,15,16,16,15,15,15,17,16,16,16,16,16,17,16,17,16,18,17,14,14,14,16,16,15,15,15,16,16,14,15,14,17,16,16,17,17,17,18,16,17,16,18,16,7,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,11,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,11,10,13,12,11,12,12,13,14,11,12,12,14,14,8,9,9,11,11,9,10,10,12,12,9,10,10,13,12,11,12,12,14,14,11,12,11,14,13,10,11,12,13,13,11,12,12,13,14,12,13,12,14,14,13,13,14,14,16,13,14,14,16,15,10,11,11,13,13,11,12,12,14,14,11,12,12,14,13,13,14,14,15,16,13,14,13,16,14,8,9,9,11,11,9,10,11,12,13,9,10,10,12,12,11,12,13,13,14,11,12,12,14,14,9,10,10,12,12,10,10,11,12,13,11,12,11,13,13,12,12,13,13,15,12,13,13,15,15,9,10,10,12,12,10,11,12,13,14,10,11,10,13,12,12,13,13,14,15,12,13,12,15,13,12,12,12,14,14,12,12,13,14,15,13,13,13,15,15,14,14,15,13,16,14,15,15,16,16,11,12,12,14,14,12,13,13,14,15,12,13,12,14,14,14,14,15,16,16,13,14,13,16,14,8,9,9,11,11,9,10,10,12,12,9,10,10,12,12,11,12,12,14,14,11,12,11,14,14,9,10,10,12,12,10,11,11,13,13,10,11,11,13,13,12,13,13,14,15,12,13,13,15,14,9,10,9,12,11,10,11,10,13,12,10,11,10,13,12,12,13,12,15,14,12,13,12,15,14,11,12,12,14,14,12,13,13,14,15,12,13,13,15,15,14,14,15,15,17,14,15,15,16,16,11,12,11,14,13,12,13,12,15,14,12,13,12,15,13,14,15,14,16,15,13,15,14,17,14,10,11,11,13,14,11,12,13,13,15,11,12,12,14,14,14,14,15,15,17,13,14,14,15,16,11,12,12,14,14,12,12,13,14,15,13,13,13,15,15,14,15,15,15,17,15,15,15,16,16,11,12,12,13,14,13,13,14,14,15,12,13,13,14,15,14,15,15,16,17,14,15,15,16,16,14,14,14,16,16,14,14,15,15,17,15,15,15,17,16,16,16,17,16,18,16,17,17,18,17,13,14,14,15,16,14,15,15,16,17,14,15,15,16,16,16,17,17,17,18,16,16,16,17,16,10,11,11,14,13,11,12,12,14,14,11,12,12,15,13,13,14,14,16,15,13,14,14,16,15,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,17,16,11,12,11,14,12,12,13,13,15,13,12,13,12,15,13,14,15,15,16,15,14,15,14,17,14,13,14,14,16,16,14,15,15,16,17,14,15,15,16,17,16,16,17,17,18,16,17,17,18,18,13,14,14,16,13,14,15,15,17,14,14,15,14,17,14,16,17,16,17,16,16,17,16,18,15,8,11,11,13,13,10,12,12,14,14,11,12,12,14,14,13,13,14,15,16,13,14,14,16,15,10,11,11,14,14,11,12,12,14,15,11,12,12,15,14,13,14,14,15,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,14,15,16,16,14,15,14,16,16,12,13,13,15,15,12,13,14,15,16,13,14,14,16,16,14,15,15,16,17,15,15,16,17,17,13,14,14,16,15,14,15,15,16,16,14,15,14,16,16,16,16,16,17,17,15,16,16,18,16,10,11,11,13,14,11,12,12,14,15,11,12,12,15,14,13,14,14,16,16,13,14,14,16,16,11,11,12,14,14,12,12,13,14,15,12,13,13,15,15,14,14,15,15,17,14,14,15,16,16,11,12,12,15,14,12,13,13,15,15,12,13,13,15,15,14,15,15,17,17,14,15,15,17,16,13,12,14,14,16,13,13,15,14,17,14,13,15,15,17,15,14,16,15,18,16,15,16,16,18,13,14,14,16,16,14,15,15,17,17,14,15,15,17,16,16,17,17,18,18,16,17,16,18,17,10,11,11,14,13,11,12,12,14,14,11,13,12,15,14,13,14,14,15,16,13,14,14,16,16,11,12,12,14,14,12,13,13,14,15,12,13,13,15,15,14,14,15,15,16,14,15,15,17,16,11,12,12,14,14,13,13,13,15,15,12,13,13,15,14,14,15,15,16,17,14,15,14,17,15,13,14,13,16,15,14,14,14,15,16,14,15,14,16,16,15,15,16,16,17,16,16,16,18,17,14,14,14,16,16,15,15,15,17,16,14,15,14,17,16,16,16,17,17,18,16,17,16,18,16,11,13,13], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+439987);
/* memory initializer */ allocate([15,15,12,13,14,15,16,12,14,14,15,15,14,15,15,16,17,14,15,15,17,17,12,13,14,14,16,13,14,14,14,16,14,14,14,15,16,15,15,16,15,18,15,16,16,17,17,13,14,14,16,16,14,14,15,16,16,14,15,14,16,16,15,16,16,17,18,15,16,16,18,17,14,14,16,13,17,15,15,16,14,18,15,15,16,14,18,16,16,18,15,19,17,17,18,16,18,15,16,15,17,17,15,16,17,18,18,16,16,16,18,17,17,18,18,19,19,17,18,17,19,18,11,12,12,15,14,13,13,14,15,16,13,14,13,16,14,15,15,15,16,17,15,16,15,17,16,12,13,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,16,16,17,16,16,16,18,17,12,13,13,15,15,14,14,15,16,16,13,14,13,16,15,16,16,16,17,18,15,16,15,17,16,14,15,14,17,15,14,15,15,16,16,15,16,15,17,16,16,15,16,15,17,17,18,17,18,17,15,15,15,16,17,16,16,16,17,17,15,16,15,17,16,17,18,18,18,18,16,17,16,18,15,8,11,11,13,13,11,12,12,14,14,10,12,12,14,14,13,14,14,15,16,13,14,13,16,15,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,14,14,15,15,16,14,14,14,16,16,10,11,11,14,14,11,12,12,14,15,11,12,12,15,14,13,14,14,16,16,13,14,14,16,15,13,14,14,15,16,14,14,15,16,16,14,15,15,16,16,15,16,16,16,18,16,16,16,17,17,12,13,13,15,15,13,14,14,16,16,12,14,13,16,15,15,16,15,17,17,14,16,15,17,16,10,11,11,13,14,11,12,13,14,15,11,13,12,14,14,14,14,15,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,14,15,13,14,13,15,15,14,15,15,16,17,14,15,15,17,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,15,15,16,17,14,15,15,16,16,14,14,14,16,16,14,14,15,16,16,15,15,15,16,16,16,16,17,16,18,16,17,17,18,18,13,13,14,15,16,14,14,15,16,17,13,14,14,16,16,16,16,17,17,18,15,16,15,17,16,10,11,11,14,13,11,12,12,14,14,11,12,12,15,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,17,16,11,12,11,14,14,12,13,13,15,15,12,13,12,15,14,14,15,14,16,16,14,15,14,17,16,14,14,14,16,16,14,15,15,16,17,14,15,15,17,17,16,16,17,17,18,16,17,17,18,18,13,14,12,16,14,14,15,13,17,15,13,15,13,17,14,16,16,15,18,16,15,17,14,18,15,11,12,12,14,15,13,13,14,14,16,13,14,13,15,14,15,15,16,16,17,15,16,15,17,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,16,15,15,16,15,18,16,16,16,18,17,12,13,13,15,15,14,14,15,15,16,13,14,13,15,15,16,16,16,16,18,15,16,15,17,16,15,15,15,17,16,15,15,16,16,17,16,16,16,18,17,16,16,17,15,18,17,18,17,19,18,14,14,15,15,17,15,15,16,16,17,14,15,15,16,16,17,17,18,17,19,16,17,15,17,15,11,13,12,15,15,12,14,14,15,15,12,14,13,16,15,15,15,15,17,17,14,15,15,17,16,12,14,14,16,16,14,14,15,16,16,14,14,14,16,16,15,16,17,17,18,15,16,16,18,17,12,14,13,16,14,13,14,14,16,15,13,15,14,16,14,15,16,16,17,17,15,16,15,18,15,15,15,16,17,17,15,16,16,17,18,16,16,16,18,18,17,17,18,18,19,17,17,18,19,19,14,15,14,17,13,15,16,15,18,14,15,16,15,18,14,17,18,17,18,16,16,18,16,19,15,2,5,5,4,7,7,4,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,6,7,8,8,9,10,8,9,10,8,9,10,10,10,12,10,11,12,8,10,10,10,11,12,10,11,11,6,8,7,8,10,9,8,10,9,8,10,10,10,11,11,10,12,11,8,10,9,10,12,11,10,12,10,5,8,8,8,10,10,8,10,10,7,9,10,9,10,11,9,11,11,8,10,10,10,12,12,10,12,11,7,9,9,9,10,11,9,11,11,9,9,11,10,11,12,10,11,12,9,11,11,11,12,12,11,12,12,7,9,9,10,11,11,10,12,11,9,11,10,11,11,12,11,13,12,10,11,11,12,13,13,11,13,11,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,11,7,10,9,9,11,11,9,11,10,7,9,9,10,11,12,10,11,11,10,11,11,11,11,13,12,13,13,9,10,11,12,12,13,11,12,11,7,9,9,9,11,11,9,11,10,9,11,11,11,12,12,11,12,12,9,11,9,10,12,11,10,12,11,3,9,15,17,20,21,22,23,5,5,7,9,11,13,17,20,9,5,5,6,8,10,15,18,11,7,5,4,6,9,13,17,14,9,7,5,6,7,10,14,17,10,8,6,6,4,5,8,20,14,13,10,8,4,3,4,23,17,16,14,12,6,4,4,2,7,14,16,17,17,18,20,6,3,5,8,10,11,13,15,13,5,3,5,8,9,11,12,15,7,4,3,5,7,9,11,16,10,7,5,6,7,9,10,17,11,8,7,7,6,8,8,19,13,11,9,9,8,8,9,20,14,13,11,10,8,9,9,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,4,5,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,5,5,4,10,10,5,10,10,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,9,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,4,7,7,6,7,8,6,8,7,7,7,8,7,7,8,8,8,8,7,7,7,8,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,9,8,9,8,8,8,8,8,8,9,8,9,9,8,8,8,9,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,8,9,9,8,8,8,9,9,9,8,9,8,2,5,6,5,7,8,5,8,7,5,7,7,7,7,9,8,9,9,5,7,7,8,9,9,7,9,7,6,8,8,8,9,10,8,9,9,8,9,10,9,9,11,10,10,11,8,10,9,10,10,11,9,10,10,6,8,8,8,9,9,8,10,9,8,9,10,9,10,10,10,11,10,8,10,9,10,11,10,9,11,9,6,8,8,7,9,9,8,9,9,7,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,9,9,9,10,10,9,10,10,9,9,10,10,9,11,10,11,11,9,10,10,10,11,11,10,11,10,6,9,8,9,10,10,9,10,9,8,10,10,9,9,10,10,11,11,9,10,10,10,11,11,9,11,9,6,8,8,8,9,9,7,9,9,8,9,9,9,9,10,9,10,10,7,9,9,9,10,10,9,10,9,6,8,9,9,9,10,9,10,10,9,10,10,9,9,11,10,11,11,8,10,10,10,11,11,9,10,9,7,9,9,9,10,10,9,10,10,9,10,10,10,10,11,10,11,11,9,10,9,10,11,11,10,11,9,2,3,3,3,3,3,3,2,6,6,9,9,5,7,8,10,11,5,8,7,11,10,8,10,11,12,13,8,11,10,13,12,6,7,8,10,11,7,8,10,10,12,8,9,9,12,11,10,10,12,11,14,10,11,12,14,13,6,8,7,11,10,8,9,9,11,12,7,10,8,12,10,10,12,12,13,14,10,12,10,14,11,9,10,11,11,12,10,10,11,11,13,11,12,12,13,13,12,11,13,11,15,13,14,13,14,14,9,11,10,12,11,11,12,12,13,13,10,11,10,13,11,13,13,14,14,14,12,13,11,14,11,7,8,9,11,12,9,9,11,12,13,9,10,10,13,12,11,12,13,13,15,11,12,12,14,14,9,10,10,12,13,10,10,12,12,14,11,11,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,12,13,10,11,11,13,14,10,12,11,14,13,12,13,13,14,15,12,13,13,15,14,12,12,13,13,14,12,13,13,13,15,13,14,14,14,15,14,14,15,14,16,14,15,15,16,16,12,13,13,14,14,13,13,14,15,14,12,13,13,15,14,14,15,15,15,16,14,15,14,16,14,7,9,8,12,11,9,10,10,12,13,9,11,9,13,12,11,12,12,14,14,11,13,12,15,13,9,10,10,13,12,10,11,12,13,14,10,12,11,14,13,12,13,13,14,15,13,13,13,15,14,9,10,10,13,12,11,11,11,13,13,10,12,10,14,12,13,13,13,14,15,12,13,12,15,13,12,13,13,14,14,12,13,13,14,15,13,14,13,15,15,14,14,15,14,16,14,15,15,16,15,12,13,12,14,13,13,13,13,15,14,12,13,13,15,13,14,15,15,16,15,14,15,14,16,14,11,12,12,13,14,12,13,14,14,15,12,13,13,14,15,14,14,15,15,16,14,15,15,16,16,12,13,13,14,15,13,13,14,14,16,13,14,14,15,15,15,15,16,15,17,15,15,15,16,16,12,13,13,14,15,13,14,14,15,16,13,14,14,15,15,15,15,16,16,17,15,15,15,17,16,14,15,15,16,16,15,15,16,15,16,15,16,16,16,17,16,16,17,16,18,16,16,17,18,17,14,15,15,16,16,15,16,16,16,17,15,16,15,17,16,16,17,17,17,18,16,16,16,17,16,11,12,12,14,13,12,13,13,15,14,12,14,13,15,14,14,15,15,16,16,14,15,14,16,15,12,13,13,15,14,13,14,14,15,15,13,14,14,16,15,15,15,15,16,16,15,16,15,17,16,12,13,13,15,14,13,14,14,15,15,13,14,13,16,14,15,15,15,16,16,15,15,15,17,15,14,15,15,16,16,15,15,15,16,16,15,16,16,17,17,16,16,17,17,17,16,17,17,18,17,14,15,15,16,15,15,15,16,16,16,15,15,15,17,15,17,17,17,18,17,16,17,16,18,16,6,9,9,12,12,8,10,10,12,13,9,11,10,13,12,10,12,12,14,14,11,13,12,14,14,8,10,10,12,12,9,10,11,12,14,10,11,11,13,13,12,12,13,13,15,12,13,13,15,14,9,10,10,13,13,10,11,11,13,13,10,12,10,14,13,12,13,13,14,15,12,13,13,15,14,11,12,12,13,14,12,12,13,13,15,12,13,13,14,14,13,13,14,13,16,14,15,15,16,15,11,12,12,14,14,13,13,13,15,14,12,13,13,15,14,14,15,15,16,15,14,14,14,16,14,7,9,10,12,12,9,10,11,13,13,9,11,10,13,13,11,12,13,14,15,12,13,13,15,14,9,10,11,12,13,10,10,12,13,14,11,11,12,14,14,12,12,14,14,15,13,13,13,15,15,9,11,11,13,13,11,12,12,14,14,10,12,10,14,13,13,14,13,15,15,12,14,13,15,14,12,12,13,13,15,12,12,14,13,15,13,14,14,15,15,14,14,15,14,17,14,15,15,16,16,12,13,13,15,14,13,14,14,15,15,12,14,13,15,14,14,15,15,16,16,14,15,14,16,14,7,10,10,12,12,10,11,11,12,13,10,12,10,14,12,12,13,13,14,15,12,13,13,15,14,9,11,10,13,12,10,10,12,12,14,11,13,12,14,13,13,13,14,13,15,13,14,14,15,14,10,11,11,13,13,12,12,12,13,14,10,12,10,14,12,13,14,14,15,15,13,14,13,15,13,12,13,13,14,14,12,12,13,14,15,13,14,14,15,15,13,13,14,13,15,14,15,15,16,16,12,13,13,14,14,13,14,14,15,15,12,13,13,15,13,15,15,15,16,16,13,14,13,16,13,11,12,13,14,14,12,13,14,14,15,12,13,13,15,15,14,14,15,15,17,14,15,15,16,16,12,13,14,14,15,13,13,14,14,16,13,14,14,15,16,14,14,16,15,17,15,15,16,16,16,12,13,13,15,15,13,14,14,15,16,13,14,14,15,16,15,15,16,17,17,15,16,15,17,16,14,15,15,15,16,15,15,16,15,17,15,15,16,16,17,16,16,16,16,18,16,16,17,17,17,14,15,15,16,16,15,16,16,16,17,15,16,15,17,16,16,17,17,17,17,16,17,16,18,17,11,12,12,14,14,13,13,14,14,15,13,14,13,15,14,14,15,15,15,16,14,15,15,17,15,12,13,13,15,14,13,13,14,15,15,14,15,14,16,15,15,15,15,15,16,15,16,15,17,16,12,13,13,15,15,14,14,14,15,16,13,14,13,16,15,15,15,16,16,17,15,16,15,17,15,14,15,15,16,16,14,15,15,16,16,15,16,16,17,16,15,15,16,15,17,16,17,17,18,17,14,15,15,16,16,15,16,16,16,17,14,15,15,17,16,17,17,17,17,18,15,16,16,18,15,6,9,9,12,12,9,10,11,12,13,8,10,10,13,12,11,12,13,14,14,10,12,12,14,13,9,10,10,12,13,10,10,12,13,14,10,11,11,13,13,12,13,13,14,15,12,13,13,15,14,8,10,10,12,12,10,11,11,13,13,9,11,10,13,13,12,13,13,14,15,12,13,12,15,13,11,12,12,14,14,12,13,13,13,15,13,13,13,14,15,14,14,15,14,16,14,15,15,15,15,11,12,12,14,13,12,13,13,15,14,12,13,12,15,13,14,14,15,16,16,13,14,13,16,13,7,10,10,12,12,10,10,12,12,14,10,11,11,13,12,12,13,13,13,15,12,13,13,15,14,10,11,11,13,13,10,10,12,12,14,12,12,12,14,13,13,13,14,13,15,13,14,14,15,14,9,10,11,13,13,11,12,12,13,14,10,12,10,14,12,13,13,14,14,15,13,13,12,15,13,12,13,13,14,14,12,13,13,14,15,13,14,14,15,15,13,13,15,13,16,15,15,15,16,16,12,13,13,14,14,13,14,14,15,15,12,13,12,15,14,15,15,15,16,16,13,14,13,15,13,7,10,9,12,12,9,10,11,13,13,9,11,10,13,13,11,13,13,14,15,11,13,12,15,14,9,11,11,13,13,10,10,12,13,14,11,12,12,14,14,12,13,14,14,15,13,13,13,15,15,9,11,10,13,12,11,12,11,14,14,10,12,10,14,13,13,14,13,15,15,12,14,12,15,14,12,13,13,14,15,13,13,14,14,15,13,14,14,15,15,14,14,15,14,17,14,15,15,16,16,12,13,12,15,13,13,14,14,15,15,12,14,13,15,13,14,15,15,16,16,14,15,14,16,14,11,12,12,14,14,13,13,14,14,15,13,14,13,15,15,14,15,15,16,17,14,15,15,16,15,12,13,13,15,15,13,13,14,15,16,14,14,14,16,15,15,15,16,15,17,15,16,15,17,16,12,13,13,14,15,14,14,15,15,16,13,14,13,15,15,15,15,16,16,17,15,15,15,16,15,14,15,15,16,16,14,15,15,16,17,15,16,16,17,17,16,15,16,15,17,16,17,17,17,17,14,15,15,15,16,15,15,16,16,17,14,15,15,16,16,16,16,17,17,18,15,16,15,17,15,11,13,12,14,14,12,13,13,15,15,12,14,13,15,14,14,15,15,16,16,14,15,14,16,15,12,13,13,15,15,13,14,14,15,16,13,14,14,16,16,15,15,16,16,17,15,16,15,17,16,12,13,13,15,14,13,14,14,16,15,13,14,13,16,14,15,16,15,17,16,15,15,14,18,15,14,15,15,16,16,15,15,16,16,17,15,16,15,17,16,16,16,17,17,18,16,17,17,18,17,14,15,15,16,15,15,16,15,17,16,15,15,15,17,15,16,17,17,18,17,16,17,16,18,15,10,12,12,14,14,12,13,13,14,14,12,13,13,14,14,13,14,14,15,15,13,14,14,16,15,11,12,13,14,14,12,13,13,15,15,12,13,13,15,15,13,14,15,15,16,14,15,15,16,16,12,13,13,14,14,13,13,14,15,15,13,14,13,15,15,14,15,15,16,16,14,15,14,16,15,13,14,14,15,15,13,14,14,15,16,14,14,15,16,16,14,15,15,15,17,15,16,16,17,17,13,14,14,15,15,14,15,15,16,16,14,15,15,16,16,15,16,16,16,17,15,16,15,17,16,11,12,12,14,14,12,13,13,14,15,12,13,13,15,14,13,14,14,15,16,13,14,14,16,15,12,13,13,14,15,13,13,14,15,15,13,14,14,15,15,14,14,15,15,17,14,15,15,16,16,12,13,13,15,15,13,14,14,15,15,13,14,13,15,15,14,15,15,16,17,14,15,15,16,16,13,13,14,15,16,14,14,15,15,16,14,15,15,16,16,15,15,16,15,18,15,16,16,17,17,14,15,15,16,16,15,15,15,16,16,14,15,15,17,16,16,16,16,17,17,15,16,16,17,16,10,12,12,14,14,12,13,13,14,15,12,13,13,15,14,14,14,15,15,16,14,15,14,16,15,12,13,13,15,14,13,13,14,15,15,13,14,14,15,15,14,14,15,15,16,14,15,15,16,16,12,13,13,15,15,13,14,14,15,16,13,14,13,15,14,15,15,15,16,16,14,15,15,16,15,13,14,14,16,15,14,14,14,15,16,14,15,15,16,16,15,15,16,15,17,16,17,16,17,17,14,14,15,15,16,15,15,16,16,16,14,15,14,16,15,16,16,16,17,17,15,16,15,17,15,11,13,13,14,15,13,13,14,15,15,13,14,13,15,15,14,15,15,15,16,14,15,15,17,15,13,13,14,15,15,13,14,15,15,16,14,14,14,16,16,15,14,16,15,17,15,16,16,17,16,13,14,14,15,15,14,14,14,16,16,13,15,14,16,15,15,15,16,17,17,15,16,15,17,16,14,15,15,15,16,15,15,16,15,17,15,16,16,16,17,16,16,17,15,18,16,17,17,17,17,14,15,15,16,16,15,16,16,17,17,15,16,15,17,16,16,17,17,18,18,16,17,15,18,16,10,12,12,14,14,13,13,14,14,15,13,14,13,15,14,14,15,15,15,16,15,15,15,16,15,12,13,13,15,14,12,12,14,14,15,14,15,14,16,15,15,14,15,14,17,15,16,16,17,16,12,13,13,14,15,14,14,15,15,16,13,14,12,16,14,15,16,16,16,17,15,16,14,17,15,14,15,14,16,15,14,14,15,15,15,15,16,15,17,16,15,14,16,14,16,16,17,17,18,17,14,14,15,15,16,15,16,16,16,17,14,15,14,16,15,16,16,17,17,17,15,16,14,17,14,10,12,12,14,13,12,13,13,14,14,11,13,12,14,14,13,14,14,15,16,13,14,14,16,15,12,13,13,14,14,13,13,14,15,15,13,14,13,15,15,14,14,15,15,16,14,15,15,16,16,11,13,12,14,14,12,13,13,15,15,12,13,13,15,15,14,15,15,16,16,13,14,14,16,15,13,14,14,15,15,14,15,15,15,16,14,15,15,16,16,15,16,16,16,17,16,16,16,17,17,13,14,14,15,15,14,15,15,16,16,13,14,14,16,15,15,16,16,17,17,15,15,15,17,15,11,12,12,14,14,12,13,13,14,15,12,13,13,15,14,14,14,15,15,16,14,14,14,16,15,12,13,13,15,14,13,13,14,15,15,13,14,14,16,15,14,15,15,15,16,15,15,15,16,16,12,13,13,14,15,13,13,14,15,15,13,14,13,15,15,15,15,15,16,16,14,15,14,16,15,14,14,15,16,16,14,15,15,15,16,15,16,15,16,16,15,15,16,15,17,16,16,16,17,17,13,14,14,15,16,14,15,15,16,16,14,14,14,16,16,16,16,16,17,17,15,15,15,17,15,11,12,12,14,14,12,13,13,14,15,12,13,13,15,14,14,14,14,15,16,13,14,14,16,15,12,13,13,15,15,13,13,14,15,16,13,14,14,15,15,14,15,15,16,17,14,15,15,17,16,12,13,13,15,14,13,14,14,15,15,13,14,13,15,15,14,15,15,16,16,14,15,14,17,15,14,15,15,16,16,14,15,15,16,17,15,15,15,17,17,15,16,16,16,17,16,17,16,17,17,13,15,14,16,15,14,15,15,16,16,14,15,14,16,15,16,16,16,17,17,15,16,15,17,15,10,12,12,14,14,13,13,14,14,15,13,14,13,15,14,14,15,15,15,17,14,15,15,16,15,12,13,13,15,14,12,12,14,14,15,14,15,14,16,15,15,14,16,15,17,15,16,16,17,16,12,13,13,14,15,14,14,15,15,16,12,14,12,15,14,15,16,16,16,17,15,16,14,17,14,14,15,14,16,16,14,14,15,15,16,15,16,16,17,16,15,14,16,14,17,16,17,17,18,17,14,14,15,15,16,15,15,16,16,17,14,15,14,16,15,16,17,17,17,18,15,16,14,17,14,11,13,13,15,14,13,13,14,15,15,12,14,13,15,15,14,15,15,15,17,14,15,14,16,15,13,14,14,15,15,13,14,15,15,16,14,15,14,16,16,15,15,16,16,17,15,16,16,17,17,13,14,13,15,15,14,14,14,16,16,13,15,14,16,15,15,16,16,17,17,15,16,14,17,15,15,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,15,17,16,17,17,17,17,18,18,14,15,15,17,15,15,16,16,17,16,15,16,15,17,15,16,17,17,17,17,16,17,15,18,15,7,8,8,10,10,8,9,9,10,11,8,9,9,10,10,9,10,10,11,11,9,10,10,11,11,8,9,9,10,10,9,9,10,11,11,9,10,10,11,11,10,10,11,11,11,10,11,11,11,11,8,9,9,10,10,9,10,10,11,11,9,10,9,11,11,10,11,11,11,11,10,11,10,11,11,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,12,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,12,11,11,11,11,12,11,8,9,10,11,11,9,10,11,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,10,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,12,12,12,11,12,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,8,10,9,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,12,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,10,11,11,12,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,12,12,13,13,13,13,13,13,13,13,13,8,10,10,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,11,12,10,11,11,12,12,11,11,11,12,12,11,11,11,12,12,10,10,11,11,12,11,11,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,11,12,12,11,12,11,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,13,12,12,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,11,12,12,12,12,12,12,12,13,12,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,11,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,10,10,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,11,11,11,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,11,12,12,11,12,11,12,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,10,12,11,11,11,11,12,12,11,12,11,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,11,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,11,11,12,12,11,12,12,12,12,11,12,11,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,12,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,11,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,12,13,12,13,12,12,13,13,13,12,12,13,13,13,12,13,13,13,13,12,12,12,12,13,12,12,13,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,13,13,13,13,12,13,13,12,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,13,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,11,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,12,13,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,11,12,12,12,12,12,13,13,11,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,13,13,13,13,13,12,13,12,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,13,13,13,13,13,13,13,13,13,12,1,5,5,5,7,8,5,8,7,5,7,8,7,8,10,8,10,10,5,8,7,8,10,10,7,10,8,6,8,9,9,10,12,9,11,11,9,10,11,11,11,13,11,13,13,9,11,11,11,12,13,11,13,11,6,9,8,9,11,11,9,12,10,9,11,11,11,11,13,11,13,13,9,11,10,11,13,13,11,13,11,6,9,9,8,10,11,9,12,11,8,10,11,10,11,13,11,13,13,9,11,11,11,13,12,11,13,11,8,10,10,9,11,12,10,12,12,10,10,12,11,11,14,12,13,14,10,12,12,12,13,13,11,14,11,8,11,10,11,12,13,11,14,12,10,12,11,11,12,14,13,15,14,10,12,12,13,14,15,12,14,12,5,9,9,9,11,12,8,11,10,9,11,11,11,11,13,11,12,13,8,11,10,11,13,13,10,13,11,8,10,11,11,12,14,11,13,12,10,12,12,12,12,14,14,15,14,10,11,12,13,14,15,11,14,12,8,10,10,10,12,12,9,12,11,10,12,12,11,11,14,12,13,13,10,12,10,12,14,13,11,13,11,6,7,7,7,7,7,7,7,7,7,7,8,7,8,8,7,8,8,7,8,7,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,8,8,8,8,8,8,9,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,8,8,8,8,8,9,8,8,9,8,7,8,8,7,8,8,7,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,9,8,7,8,8,8,8,9,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,9,9,9,8,9,9,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,7,8,8,7,8,8,8,8,8,8,8,9,8,8,9,7,8,8,8,8,8,8,8,8,7,8,8,8,8,8,8,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,8,8,9,8,8,8,8,8,9,9,9,9,9,8,8,8,8,9,9,8,9,8,2,5,5,4,7,7,4,7,7,5,7,8,7,8,10,8,9,9,5,7,7,8,9,9,7,10,8,5,7,8,8,9,10,8,10,10,8,9,10,10,10,12,10,12,12,8,10,10,10,12,12,10,12,11,5,8,7,8,10,10,8,10,9,8,10,10,10,11,12,10,12,12,8,10,9,10,12,12,10,12,10,5,8,8,7,10,10,8,10,10,7,9,10,9,10,12,10,12,12,8,10,10,10,12,12,10,12,11,7,9,10,9,11,12,10,12,11,9,9,12,11,10,14,12,12,13,10,12,11,12,13,13,11,14,12,7,10,9,10,11,11,10,12,11,9,11,11,11,11,13,12,14,13,10,12,12,12,14,14,11,14,12,5,8,8,8,10,10,7,10,10,8,10,10,10,11,12,10,12,12,7,10,9,10,12,12,9,12,10,7,9,10,10,11,12,10,11,11,10,12,12,11,12,14,12,14,14,9,11,11,12,13,14,11,13,11,7,10,9,10,11,12,9,12,11,10,11,12,11,12,14,12,13,13,9,12,9,12,13,12,11,14,10,4,6,6,9,9,6,8,8,10,10,6,8,8,10,10,8,10,10,12,13,8,10,10,13,12,6,8,8,10,10,8,8,9,10,11,8,9,9,11,11,10,10,11,12,13,10,11,11,13,13,6,8,8,10,10,8,9,9,11,11,8,9,8,11,10,10,11,11,13,13,10,11,10,13,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,12,15,13,13,13,15,14,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,15,12,6,8,8,10,11,8,9,10,11,12,8,9,9,11,11,10,11,12,13,14,10,11,11,13,13,8,9,9,11,12,9,10,11,12,13,9,10,10,12,13,11,12,13,13,15,11,12,12,14,14,8,9,9,11,12,9,10,11,12,13,9,10,10,13,12,11,12,13,14,15,11,12,12,14,13,10,11,12,13,14,11,12,13,13,15,12,13,13,14,14,13,13,14,14,16,14,15,14,16,15,10,12,11,14,13,12,12,13,14,14,11,12,12,14,14,14,14,15,15,16,13,14,14,16,14,6,8,8,11,10,8,9,9,11,11,8,10,9,12,11,10,11,11,13,13,10,12,11,14,13,8,9,9,12,11,9,10,10,12,13,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,8,9,9,12,11,9,10,10,13,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,13,10,11,12,13,14,11,12,13,13,14,12,13,12,14,14,13,13,14,14,16,14,15,14,16,16,10,12,11,14,13,12,13,13,14,14,11,13,12,15,13,14,14,15,16,16,13,14,13,16,14,9,10,11,12,13,11,11,12,13,14,11,11,12,13,14,13,13,14,14,16,13,14,14,15,15,11,11,12,13,14,12,12,13,13,15,12,13,13,14,15,14,14,15,15,17,14,14,15,16,16,11,12,12,13,14,12,12,13,14,15,12,13,12,14,15,14,14,15,15,17,14,15,14,16,16,13,14,14,15,16,14,14,15,15,17,14,15,15,16,16,15,16,17,16,18,16,17,16,17,17,13,14,14,16,15,14,15,15,16,16,14,15,14,16,15,16,16,17,17,18,16,16,16,17,16,9,11,10,13,12,11,12,11,14,13,11,12,11,14,13,13,14,14,16,15,13,14,13,16,14,11,12,12,14,13,12,12,13,14,14,12,13,13,15,14,14,14,15,16,16,14,15,14,17,15,11,12,11,14,13,12,13,13,15,14,12,13,12,15,13,14,15,14,16,16,14,15,14,17,15,13,14,14,15,16,14,14,15,16,16,14,15,15,16,16,15,16,16,16,17,16,16,16,17,17,13,14,14,16,15,14,15,15,17,16,14,15,14,17,15,16,17,17,17,17,16,16,16,18,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,11,13,14,10,11,11,14,13,8,9,9,11,12,9,10,10,12,13,9,10,10,13,12,11,11,12,13,15,11,12,12,15,14,8,9,9,12,11,9,10,11,12,13,9,11,10,13,12,11,12,12,14,15,11,13,12,15,14,10,11,11,13,14,11,12,12,13,14,11,12,12,14,14,13,13,14,14,16,13,14,14,16,15,11,12,11,14,13,12,13,13,14,14,11,13,12,14,13,14,14,15,16,16,13,14,14,16,14,8,9,9,11,12,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,12,14,14,9,9,10,11,13,10,10,12,12,14,10,10,11,13,13,12,12,13,14,16,12,12,13,15,15,9,10,10,13,12,10,11,11,13,14,10,12,11,14,13,12,13,13,15,15,12,13,13,15,15,11,11,12,13,15,12,12,13,13,15,12,13,13,14,15,14,14,15,15,17,14,15,15,16,16,11,13,12,15,14,13,13,13,15,15,12,14,13,15,14,15,15,15,16,16,14,15,15,17,15,7,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,9,10,10,12,12,10,10,11,12,13,10,11,11,14,13,12,12,13,14,15,12,13,13,15,14,9,10,10,12,12,10,11,11,13,13,10,11,10,14,12,12,13,13,15,15,12,13,12,15,13,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,14,13,14,13,16,14,15,15,16,16,11,12,12,14,14,13,13,14,15,15,12,13,12,15], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+450227);
/* memory initializer */ allocate([14,15,15,15,16,16,14,15,14,17,14,10,11,12,13,14,11,12,13,14,15,11,12,12,14,15,13,14,15,15,17,14,14,14,16,16,11,12,13,12,15,12,12,14,13,16,13,13,14,13,16,14,14,15,14,17,15,15,15,15,17,11,13,12,15,15,13,13,14,15,16,12,14,13,16,15,15,15,15,17,17,15,15,15,17,16,14,14,15,14,16,14,14,16,14,17,15,15,15,14,17,16,16,17,15,18,17,17,17,16,18,14,15,15,17,16,15,16,16,17,17,15,16,15,17,16,17,17,17,18,18,16,17,16,18,17,10,11,11,14,13,11,12,12,14,14,11,13,12,15,14,14,14,14,16,16,14,15,14,16,15,11,12,12,15,13,12,13,13,15,14,13,14,13,16,14,14,15,15,16,16,15,16,15,17,16,11,13,12,15,14,13,13,14,15,15,12,14,13,16,14,15,15,15,17,17,14,16,15,17,16,14,14,14,16,15,14,15,15,16,16,15,16,15,17,16,16,16,16,16,17,16,17,17,18,17,14,15,15,16,16,15,15,16,17,16,14,15,15,17,16,17,17,17,18,18,16,17,16,18,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,12,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,11,10,13,12,11,12,13,14,15,11,12,12,15,14,8,9,9,12,11,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,12,14,13,11,11,12,13,14,11,12,13,13,15,12,13,13,14,14,13,14,14,14,16,14,15,14,16,16,10,11,11,14,13,11,12,12,14,14,11,12,12,14,13,13,14,14,15,16,13,14,13,16,14,7,9,9,11,11,9,10,11,12,13,9,10,10,12,12,11,12,13,14,15,11,12,12,14,14,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,13,15,12,13,13,15,15,9,10,10,12,12,10,11,11,13,13,10,11,10,13,12,12,13,13,14,15,12,13,12,15,13,11,12,12,14,14,12,12,13,14,15,13,14,13,15,15,14,13,15,13,16,15,15,15,16,16,11,12,12,14,14,12,13,13,14,15,12,13,12,15,14,14,15,15,16,17,13,14,13,16,13,8,9,9,12,11,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,12,15,14,9,10,10,12,13,10,11,12,13,14,10,11,11,14,13,12,13,13,15,15,12,13,13,15,15,9,10,9,13,11,10,11,10,13,13,10,12,10,14,12,12,13,12,15,15,12,13,12,15,14,11,12,13,14,15,12,13,14,14,15,13,13,13,15,15,14,15,15,15,17,15,15,15,16,16,11,12,11,15,13,12,13,13,15,14,12,13,12,16,13,14,15,15,16,16,14,15,14,17,14,10,11,11,13,14,11,12,13,14,15,11,12,12,14,14,14,14,15,15,17,14,14,14,15,16,11,12,13,14,15,12,13,14,14,16,13,14,13,15,15,14,15,16,15,17,15,15,15,17,17,11,12,12,13,15,13,13,14,14,16,12,13,13,14,15,15,15,15,16,17,14,15,15,16,16,14,15,15,16,16,14,15,15,16,17,15,15,16,16,17,16,16,17,16,18,17,17,17,18,18,14,14,15,15,16,15,15,15,16,17,14,15,15,16,16,16,17,17,17,18,16,16,16,17,16,10,11,11,14,13,11,13,12,15,14,11,13,12,15,14,14,15,14,16,16,13,15,14,17,15,11,12,13,15,15,12,13,14,15,16,13,14,13,16,15,15,15,15,16,17,15,15,15,17,16,11,13,11,15,12,13,14,13,16,13,12,14,12,16,13,15,15,15,17,15,14,16,14,17,14,14,15,15,16,17,15,15,16,16,17,15,16,15,17,17,16,16,17,17,18,16,17,17,18,18,14,15,14,17,13,15,16,15,17,15,15,16,15,17,14,16,17,16,18,16,16,17,16,18,15,9,11,11,13,13,10,12,12,14,14,11,12,12,14,14,13,14,14,15,16,13,14,14,16,16,10,11,12,14,14,11,12,13,14,15,11,13,13,15,15,13,14,14,15,16,14,15,15,16,16,11,12,12,14,14,12,13,13,15,15,12,13,12,15,14,14,15,15,16,16,14,15,14,17,16,12,13,13,15,16,13,13,14,15,16,13,14,14,16,16,14,15,16,16,17,15,16,16,17,17,13,14,14,16,15,14,15,15,17,16,14,15,14,17,15,16,16,17,17,17,16,16,16,18,16,10,11,12,14,14,11,12,13,14,15,11,13,12,15,15,13,14,15,16,16,14,15,15,17,16,11,11,13,14,15,12,12,14,14,16,12,13,14,15,15,14,14,15,16,17,15,15,15,17,17,12,13,12,15,15,13,14,14,16,15,13,14,13,16,15,15,16,15,17,17,15,16,15,17,16,13,12,15,14,16,14,13,15,14,17,14,13,15,15,17,15,14,17,15,18,16,15,17,17,18,14,15,15,17,16,15,16,16,17,17,15,16,15,17,16,16,17,17,18,18,16,17,16,18,17,10,11,11,14,14,11,12,12,14,15,11,13,12,15,14,13,14,14,16,16,14,15,14,16,16,11,12,12,14,14,12,12,13,15,15,12,13,13,15,15,14,14,15,16,16,14,15,15,17,16,11,12,12,15,15,13,13,13,15,15,12,13,13,15,15,15,15,15,17,17,14,15,15,17,16,13,14,13,16,15,14,14,14,16,16,14,15,14,17,16,15,15,16,16,17,16,17,16,18,17,14,15,15,16,16,15,15,15,17,17,14,15,15,17,16,16,17,17,18,18,16,17,16,18,16,12,13,13,15,15,13,14,14,16,16,13,14,14,16,16,14,15,16,16,18,15,16,16,17,17,13,13,14,14,16,14,14,15,15,17,14,14,15,15,17,15,15,17,15,18,16,16,17,17,18,13,14,14,16,16,14,15,15,16,17,14,15,15,17,16,16,17,16,17,18,16,17,16,18,17,15,14,16,13,18,16,15,17,14,18,16,15,17,14,18,17,16,18,15,19,17,17,18,16,19,15,16,16,17,17,16,17,17,18,18,16,17,16,18,17,18,18,18,19,18,17,18,17,19,17,11,12,12,15,15,13,13,14,15,16,13,14,13,16,15,15,15,15,16,17,15,16,15,17,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,15,15,15,16,16,17,16,16,16,18,17,12,13,13,15,15,14,14,15,16,16,13,14,13,16,15,16,16,16,17,17,15,16,15,18,16,15,15,15,17,15,14,15,15,16,16,16,17,16,17,16,16,16,17,16,17,17,18,17,19,18,15,15,16,17,17,16,16,16,17,17,15,16,15,17,16,17,18,18,18,18,16,17,16,18,16,9,11,11,13,13,11,12,12,14,14,10,12,12,14,14,13,14,14,15,16,13,14,14,16,15,11,12,12,14,14,12,12,13,14,15,12,13,13,15,15,14,14,15,16,17,14,15,15,16,16,10,12,11,14,14,11,13,13,15,15,11,13,12,15,14,14,14,15,16,16,13,14,14,16,15,13,14,14,15,16,14,14,15,15,17,14,15,15,16,17,16,16,16,16,18,16,16,17,17,17,12,13,13,16,15,13,14,14,16,16,12,14,13,16,15,15,16,16,17,17,14,16,15,17,16,10,11,11,14,14,11,12,13,14,15,11,12,12,15,14,14,14,15,16,16,13,14,14,16,16,11,12,12,14,15,12,13,14,15,15,13,13,13,15,15,14,15,15,16,17,15,15,15,16,17,11,12,12,14,14,12,13,13,15,15,12,13,12,15,15,14,15,15,16,17,14,15,14,16,16,14,14,15,16,16,14,15,15,16,17,15,16,15,17,17,16,16,17,16,18,16,17,17,18,18,13,13,14,15,16,14,14,15,16,17,14,14,14,16,15,16,16,17,17,18,15,16,15,17,16,10,12,11,14,14,11,13,13,15,15,11,13,12,15,15,14,15,15,16,16,13,15,14,16,16,12,12,13,15,15,13,13,14,15,16,13,14,14,16,15,15,15,16,16,17,15,15,15,17,17,11,13,11,15,14,12,14,13,16,15,12,14,12,16,14,15,15,15,17,17,14,15,14,17,15,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,17,18,16,17,17,18,18,13,14,12,16,14,14,15,13,17,15,14,15,13,17,14,16,17,15,18,17,15,17,14,18,15,11,12,12,14,15,13,13,14,15,16,13,14,13,16,15,15,15,16,16,17,15,15,15,16,16,12,13,13,15,15,13,13,14,15,16,14,15,14,16,16,15,15,16,16,18,16,16,16,18,17,12,13,13,15,15,14,14,15,15,16,13,14,13,15,15,16,16,16,17,18,15,16,15,17,16,15,16,15,17,16,15,15,16,16,17,16,17,16,17,17,16,16,17,16,18,17,18,18,18,18,14,15,15,15,17,16,15,17,16,17,14,15,15,16,16,17,17,18,18,19,16,16,16,17,16,12,13,13,15,15,13,14,14,16,16,13,14,14,16,16,15,16,16,17,17,15,16,15,18,16,13,14,14,16,16,14,15,15,16,17,14,15,15,17,16,16,16,17,17,18,16,17,16,18,18,13,14,13,16,14,14,15,14,17,15,14,15,14,17,14,16,17,16,18,17,15,17,15,18,15,15,16,16,17,18,16,16,17,17,18,16,17,17,17,18,17,17,18,18,19,17,18,18,19,18,15,16,14,17,13,16,17,15,18,14,16,17,15,18,14,18,18,17,19,16,17,18,16,19,15,2,5,5,4,7,7,4,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,6,7,8,8,9,10,8,9,10,8,9,10,10,10,12,10,11,11,8,10,10,10,11,12,10,11,11,6,8,7,8,10,9,8,10,9,8,10,10,10,11,11,10,12,11,8,10,9,10,11,11,10,12,10,5,8,8,8,10,10,8,10,10,7,9,10,9,10,11,9,11,11,8,10,10,10,11,12,10,12,11,7,9,9,9,10,11,9,11,11,9,9,11,10,11,12,11,11,12,9,11,11,11,12,12,11,12,12,7,9,9,10,11,11,10,12,11,9,11,10,11,11,12,11,13,12,10,11,11,12,13,13,11,13,11,5,8,8,8,10,10,8,10,10,8,10,10,10,11,12,10,12,11,7,10,9,9,11,11,9,11,10,7,9,9,10,11,12,10,11,11,10,11,11,11,11,13,12,13,13,9,10,11,11,12,13,11,12,11,7,9,9,9,11,11,9,11,10,9,11,11,11,12,12,11,12,12,9,11,9,11,12,11,10,12,11,3,9,14,16,17,19,22,22,5,4,6,9,11,13,17,20,9,5,5,6,9,11,15,19,11,7,5,5,7,9,13,17,14,9,7,6,6,7,11,14,16,11,9,7,6,4,4,8,19,15,13,11,9,4,3,4,21,16,16,15,12,6,4,4,2,7,13,15,16,17,19,20,6,3,4,7,9,10,12,15,13,4,3,4,7,8,11,13,14,7,4,4,6,7,10,11,16,9,7,6,7,8,9,10,16,9,8,7,7,6,8,8,18,12,10,10,9,8,8,9,20,14,13,12,11,8,9,9,1,4,5,5,10,10,5,10,10,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,10,10,10,7,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,6,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,6,7,8,6,8,7,6,7,7,7,7,8,7,8,8,6,7,7,7,8,8,7,8,7,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,9,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,9,10,8,9,9,9,10,9,9,10,9,7,8,8,8,9,9,8,9,9,8,8,9,9,9,9,9,9,9,8,9,9,9,10,9,9,9,9,7,9,9,9,9,10,9,10,9,9,9,9,9,9,10,10,10,10,9,9,9,10,10,10,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,9,9,10,9,7,9,9,9,9,10,9,10,9,9,9,9,9,9,10,10,10,10,9,9,9,10,10,10,9,10,9,7,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,9,10,8,9,8,9,9,9,9,10,9,1,5,5,5,7,9,5,9,7,5,7,8,7,7,10,9,10,10,5,8,7,9,10,10,7,10,7,6,9,9,9,10,12,9,11,11,9,10,11,11,11,13,12,13,13,9,11,11,12,13,13,11,13,11,6,9,9,9,11,11,9,12,10,9,11,11,11,11,13,12,13,13,9,11,10,12,13,13,11,13,11,6,9,9,9,11,12,9,12,11,9,10,11,10,10,13,12,13,13,9,11,11,12,13,12,11,13,11,7,9,10,9,10,12,10,12,11,10,10,12,10,10,12,12,12,13,10,11,11,12,12,13,10,12,10,7,10,10,11,11,14,11,14,11,10,12,11,11,11,14,14,14,14,10,11,12,14,14,14,11,14,11,6,9,9,9,11,12,9,12,11,9,11,11,11,11,13,12,12,13,9,11,10,12,13,13,10,13,10,7,10,10,11,11,14,11,14,11,10,12,11,11,11,14,14,15,14,10,11,12,13,14,15,11,14,11,7,10,9,10,11,12,9,12,10,10,11,11,10,10,12,12,13,12,9,12,10,12,13,12,10,12,10,2,3,3,3,3,3,3,2,6,6,10,10,5,7,8,11,12,5,8,7,12,11,9,11,11,13,15,9,11,11,15,13,6,7,8,11,11,7,7,9,11,13,8,9,9,13,12,11,11,12,12,15,11,12,12,15,14,6,8,7,11,11,8,9,9,12,13,7,9,7,13,11,11,12,12,14,15,11,12,11,15,12,10,11,11,12,14,10,11,12,12,15,12,13,13,14,15,13,12,14,12,16,15,15,15,16,16,10,11,11,14,12,12,13,13,15,14,10,12,11,15,12,15,15,15,16,17,13,14,12,17,12,6,8,8,12,12,8,9,10,13,13,8,9,9,13,13,12,12,13,15,16,12,13,13,16,15,8,9,10,12,13,9,9,11,13,14,10,11,11,14,14,13,13,14,15,16,13,14,14,16,16,8,10,9,13,13,10,11,11,14,14,9,10,10,14,13,13,14,14,16,17,13,13,13,16,15,12,13,13,14,16,13,13,14,14,16,14,14,14,16,16,15,15,16,15,18,16,17,17,18,18,12,13,13,15,15,14,14,14,16,16,13,14,13,16,15,16,16,17,18,18,15,16,15,18,15,6,8,8,12,12,8,9,9,13,13,8,10,9,13,13,12,13,13,15,16,12,13,12,16,15,8,9,10,13,13,9,10,10,13,14,10,11,11,14,14,13,13,13,15,16,13,14,14,17,16,8,10,9,13,13,10,11,11,14,14,9,11,9,14,13,13,14,14,16,16,13,14,13,16,14,12,13,13,15,16,13,13,14,15,16,14,14,14,16,16,15,15,16,15,18,17,17,17,18,18,12,13,13,16,14,14,14,14,16,16,13,14,13,16,14,16,17,17,18,18,15,16,15,18,15,11,12,13,14,16,13,13,14,15,17,13,14,14,16,17,16,16,17,17,19,16,17,17,18,19,13,13,14,16,16,14,14,15,16,17,14,15,15,17,17,17,16,17,17,19,17,17,18,19,19,13,14,14,16,16,14,14,15,17,18,14,15,14,17,17,17,17,18,18,19,17,17,17,18,19,16,16,16,17,18,17,17,17,18,19,17,17,17,18,19,18,18,19,18,20,19,20,19,21,20,16,17,17,18,18,17,17,18,19,19,17,17,17,19,18,19,19,19,19,20,19,19,19,20,19,11,13,12,16,14,13,14,14,17,16,13,14,13,17,15,16,17,17,18,18,16,17,16,19,17,13,14,14,16,16,14,14,14,17,17,14,15,15,17,16,17,17,17,19,19,17,18,17,19,18,13,14,13,17,16,14,15,15,17,17,14,15,14,18,16,17,17,17,19,19,17,17,16,19,17,16,17,17,18,19,17,17,17,18,18,17,18,17,19,18,18,19,18,19,19,19,20,19,20,20,16,17,16,18,17,17,17,17,18,18,17,18,17,19,17,19,19,19,19,20,18,19,19,20,18,6,8,8,12,12,8,9,9,13,13,8,10,9,13,13,11,13,13,15,16,12,13,13,16,15,8,9,9,13,13,9,9,10,13,14,10,11,11,14,14,12,12,13,14,16,13,14,14,17,16,8,10,9,13,13,10,11,11,14,14,9,11,10,14,13,13,14,14,16,16,13,14,13,16,15,12,13,13,14,16,12,13,14,14,16,13,14,14,16,16,15,14,16,15,18,16,17,17,18,17,12,13,13,16,15,14,14,14,16,16,13,14,13,16,15,16,16,17,17,17,15,16,15,18,15,7,9,9,13,13,9,9,11,13,14,9,10,10,14,13,12,13,14,15,16,12,14,13,17,15,9,9,10,13,14,10,9,11,13,15,11,11,11,14,14,13,12,14,14,17,14,14,14,17,16,9,10,10,14,13,11,11,11,14,14,10,11,10,15,13,14,14,14,16,17,13,14,13,17,14,13,13,14,14,16,13,13,14,14,17,14,14,14,16,16,15,14,16,15,18,17,17,17,18,18,13,14,13,16,15,14,14,15,17,16,13,14,13,17,15,17,16,17,17,17,15,16,14,18,14,7,9,9,13,13,9,10,10,13,14,9,11,10,14,13,13,14,14,16,16,13,14,14,17,15,9,10,10,14,13,9,10,11,13,14,11,12,11,15,14,13,13,14,14,16,14,15,15,17,17,9,10,10,14,14,11,12,12,14,15,10,11,10,15,13,14,15,15,17,17,14,15,13,17,14,13,14,13,16,16,13,13,14,15,16,14,15,15,17,17,15,14,16,15,18,17,18,17,20,18,13,14,14,16,16,15,15,15,17,17,13,14,13,17,15,17,17,18,18,18,15,16,14,19,14,12,13,13,15,16,13,13,15,16,17,13,14,14,16,16,15,15,17,17,19,16,17,17,19,18,13,13,14,15,17,14,13,15,15,17,14,15,15,16,17,16,15,18,16,19,17,17,17,18,19,13,14,14,17,16,14,15,15,17,17,14,15,14,17,16,17,17,17,18,19,16,17,16,19,17,16,16,17,16,18,16,16,17,16,19,17,17,18,18,19,18,17,18,17,21,19,19,19,20,19,16,17,17,18,18,17,17,18,18,19,16,17,16,18,18,19,19,19,19,20,18,18,17,20,18,11,13,13,16,15,13,14,14,16,17,13,15,14,17,16,16,17,17,18,18,17,17,17,19,18,13,14,13,17,16,14,13,14,16,17,15,16,15,18,16,17,16,17,17,19,18,18,18,20,18,13,14,14,16,17,15,15,15,17,18,14,15,14,18,16,18,18,18,19,20,17,18,16,20,17,16,17,16,18,18,16,16,17,18,18,17,18,18,19,18,18,17,19,17,20,19,20,19,22,20,16,16,17,18,18,18,17,17,19,19,16,17,16,18,17,19,20,19,22,21,18,19,18,21,17,6,8,8,12,12,8,9,10,13,13,8,9,9,13,13,12,13,13,15,16,11,13,13,16,15,8,9,10,13,13,9,10,11,13,14,10,11,11,14,14,13,13,14,15,16,13,14,14,16,16,8,9,9,13,13,10,11,11,14,14,9,10,9,14,13,13,14,14,16,17,12,14,12,16,14,12,13,13,15,16,13,13,14,15,16,13,14,14,15,17,15,15,16,15,18,16,16,17,17,17,12,13,13,16,14,13,14,14,16,16,12,14,13,16,14,16,17,17,18,18,15,15,14,18,14,7,9,9,13,13,9,10,11,13,14,9,10,10,14,13,13,14,14,15,17,13,14,14,16,15,9,10,10,14,14,10,10,11,13,15,11,12,12,15,14,14,13,15,14,17,14,15,15,17,17,9,10,10,13,14,11,11,12,14,15,9,11,10,14,13,14,15,15,16,18,13,14,13,16,14,13,14,14,16,16,13,13,14,15,17,15,15,15,16,17,15,14,16,15,18,17,17,18,19,18,13,14,14,16,16,14,15,15,17,17,13,14,13,16,15,17,17,18,18,18,15,16,14,18,15,7,9,9,13,13,9,10,10,13,14,9,11,10,14,13,12,13,14,15,16,12,14,13,16,15,9,10,10,13,14,10,10,11,13,14,11,11,11,15,14,13,13,14,14,16,14,14,14,17,16,9,10,9,14,13,11,11,11,14,14,10,11,9,15,13,14,14,14,16,16,13,14,12,17,14,13,13,14,15,16,13,13,14,15,16,14,15,14,16,17,15,14,16,14,18,16,17,17,18,18,13,14,13,16,14,14,14,14,16,16,13,14,13,17,14,17,17,17,18,18,15,16,14,18,15,11,13,13,16,16,13,14,15,16,17,13,14,14,17,16,16,17,17,18,19,17,17,17,19,18,13,14,14,17,17,13,13,15,16,18,15,15,15,17,17,17,16,18,17,20,18,17,18,19,19,13,14,14,16,17,15,15,16,16,18,14,15,14,16,16,17,17,18,18,20,17,18,16,18,17,16,17,16,19,18,16,16,17,18,19,18,18,18,19,19,18,17,18,17,21,20,19,19,21,21,16,16,17,18,18,17,17,18,19,19,16,17,16,19,18,20,20,20,19,21,18,18,17,20,18,12,13,13,16,15,13,14,14,16,16,13,14,13,17,16,16,17,17,18,18,15,17,15,19,17,13,14,14,16,17,14,14,15,16,17,14,15,15,17,17,16,16,17,17,18,17,17,17,19,19,13,14,13,17,15,14,15,15,17,16,14,15,13,17,15,17,18,17,19,18,16,17,15,20,16,16,17,17,18,18,16,16,17,18,18,17,18,17,19,18,17,17,18,18,20,19,20,19,20,19,16,16,16,19,16,17,17,17,19,18,16,17,16,19,16,19,19,19,19,19,18,19,17,19,17,11,13,13,16,16,13,14,14,17,17,13,14,14,17,17,15,17,17,19,19,16,18,17,20,19,12,14,14,17,17,13,14,15,17,18,14,15,15,17,18,16,16,17,18,20,17,18,18,20,18,13,14,14,17,17,14,15,15,17,18,14,15,15,17,17,17,18,17,19,19,17,18,17,19,19,15,16,16,18,18,15,16,17,18,19,16,17,17,19,19,17,17,18,18,21,18,19,19,21,19,16,17,17,18,18,17,17,18,19,19,17,18,17,19,19,19,19,19,20,20,18,19,18,21,19,12,13,13,16,16,13,14,14,16,17,13,15,14,17,16,15,16,17,17,19,16,17,17,19,18,13,13,14,16,17,14,13,15,16,17,14,15,15,17,17,15,15,17,17,20,17,17,18,19,18,13,14,14,17,16,15,15,15,17,18,14,15,14,17,16,17,17,17,18,18,16,17,16,19,17,16,15,17,17,19,16,15,17,16,19,17,16,17,18,19,17,16,19,16,20,19,18,19,19,19,16,17,17,18,18,17,17,17,18,19,16,17,16,19,18,20,19,19,20,19,18,18,17,20,17,11,13,13,16,16,13,14,15,16,17,14,15,14,18,16,17,17,17,18,21,17,18,17,20,19,13,14,14,17,16,13,14,15,16,18,15,16,15,18,17,17,16,17,17,19,17,18,18,20,19,13,14,14,16,17,15,15,16,17,18,14,15,14,18,17,17,18,18,19,20,17,18,16,19,17,16,17,15,19,18,16,16,16,18,18,17,18,17,20,19,18,17,18,17,20,20,20,19,22,20,16,17,17,18,19,18,18,18,19,20,16,17,16,19,18,20,19,19,20,20,18,19,17,20,17,13,14,14,16,17,14,14,16,16,18,14,16,15,17,16,16,16,17,17,18,17,17,16,19,18,14,14,15,16,17,14,14,16,16,18,16,16,16,17,17,16,15,17,16,19,18,18,18,19,19,14,15,15,17,17,15,16,16,17,18,14,16,14,18,16,17,17,18,18,19,16,17,16,19,17,16,16,17,16,18,16,16,17,16,19,18,18,18,17,18,17,16,18,16,20,19,19,19,19,19,16,17,17,18,18,17,17,18,19,19,16,17,16,19,17,18,19,19,19,20,17,18,16,20,16,11,14,13,17,17,14,14,16,16,18,14,16,14,19,16,18,18,19,18,19,18,19,18,21,18,13,15,14,18,16,14,14,16,16,18,16,17,16,19,17,18,16,19,17,20,19,19,19,21,19,13,14,15,17,18,17,16,17,17,19,14,16,14,18,16,20,19,19,20,21,18,19,16,21,17,17,18,16,19,17,16,16,17,18,18,19,19,18,21,18,17,17,18,17,20,20,20,20,22,20,17,17,18,18,20,19,19,19,18,20,16,17,17,19,19,21,21,21,20,21,17,19,17,23,17,11,13,13,16,16,13,14,14,17,17,13,14,14,17,17,16,17,17,19,20,15,16,16,19,19,13,14,14,16,17,14,15,15,17,18,14,15,15,17,17,17,17,18,19,19,17,17,18,19,19,13,14,14,17,16,14,15,15,17,17,13,15,14,18,17,17,18,18,19,20,16,17,16,19,18,16,16,17,18,18,17,17,17,18,19,17,18,17,19,19,19,19,19,19,20,19,20,19,20,20,15,16,16,18,17,16,17,17,20,18,15,16,16,19,17,19,19,19,20,20,17,18,17,21,17,11,13,13,16,16,13,14,15,16,17,13,15,14,17,16,17,17,18,18,20,17,17,17,19,19,13,14,14,17,17,14,14,15,17,18,15,15,15,18,17,17,17,18,17,20,18,18,17,20,18,13,14,14,16,17,15,15,16,17,18,14,15,13,17,17,17,18,18,19,20,17,17,16,19,17,16,17,17,18,18,16,16,17,18,18,18,18,18,19,19,18,17,19,18,21,19,20,20,20,20,16,15,17,18,18,17,17,18,18,20,16,16,16,18,17,20,19,20,21,22,17,18,17,20,17,12,13,13,16,16,13,14,15,16,17,13,14,14,17,16,16,17,18,18,19,15,16,16,19,18,13,14,14,16,17,14,14,15,16,17,14,15,15,17,17,16,16,17,17,19,17,17,17,19,18,13,14,13,17,16,14,15,15,17,17,13,15,13,17,16,17,17,17,19,19,15,17,15,19,17,16,17,17,18,18,16,16,17,17,19,17,18,17,19,19,18,17,19,17,19,19,19,19,20,19,15,17,15,19,16,17,17,16,19,18,16,17,15,18,16,19,19,19,20,19,17,19,16,19,16,11,14,14,17,17,15,14,16,16,18,15,16,14,18,16,18,18,19,18,21,18,19,18,20,18,13,15,14,18,17,14,14,16,16,18,16,17,16,19,17,17,17,19,17,22,19,19,19,21,19,13,14,15,17,18,17,16,17,17,19,14,16,14,18,16,19,19,19,20,21,18,18,16,20,17,17,18,16,19,18,15,17,17,19,19,19,19,18,21,19,18,17,20,17,21,22,21,20,21,21,17,16,19,18,20,19,18,19,18,20,16,17,16,19,18,21,20,21,19,23,18,19,16,20,17,13,14,14,17,16,14,14,15,16,18,14,16,14,17,16,16,16,17,17,19,16,17,16,19,17,14,15,15,17,17,14,14,16,16,17,15,16,16,18,17,16,16,17,17,19,17,18,17,19,18,14,15,14,17,16,16,16,16,17,17,14,16,14,17,16,18,18,18,18,19,16,17,15,19,16,17,17,17,18,18,16,15,17,17,18,18,18,18,19,19,17,16,18,16,19,19,19,19,19,19,16,17,16,19,16,18,18,17,19,18,16,17,16,19,16,19,19,20,19,19,17,18,16,20,16,6,8,8,10,10,8,9,9,10,11,8,10,9,11,10,9,10,10,11,11,9,10,10,11,11,8,9,9,10,10,9,9,10,11,11,10,10,10,11,11,10,11,11,11,11,10,11,11,11,11,8,9,9,11,10,10,10,10,11,11,9,10,9,11,11,10,11,11,11,11,10,11,10,11,11,10,10,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,9,10,11,11,10,10,11,11,11,10,10,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,11,11,11,10,10,11,11,12,11,11,11,12,12,11,11,12,12,12,11,11,12,12,12,10,10,10,11,11,11,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,11,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,10,9,11,11,10,10,10,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,10,11,11,10,11,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,10,11,11,11,11,11,12,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,11,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,11,12,11,11,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,12,12,12,13,12,10,11,11,12,11,11,11,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,12,8,10,10,11,11,10,10,11,11,11,10,11,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,11,11,11,10,10,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,10,11,11,11,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,11,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,13,12,13,13,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,13,13,12,13,13,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,13,13,13,13,12,13,13,13,13,8,10,10,11,11,10,10,11,11,11,9,11,10,11,11,10,11,11,12,12,10,11,11,12,12,10,10,11,11,11,10,11,11,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,11,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,11,12,12,12,11,11,11,12,12,12,12,12,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,12,13,12,12,13,12,13,12,13,13,13,13,13,12,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,13,13,13,12,13,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,12,13,12,13,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,12,13,13,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,12,13,12,12,13,12,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,13,12,13,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,11,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,13,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,12,13,13,12,12,12,13,13,12,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,12,13,13,13,12,13,13,13,13,12,12,12,12,12,12,12,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,13,12,13,13,12,13,12,13,12,12,13,13,13,13,12,13,12,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,12,12,12,11,12,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,12,12,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,12,13,12,13,13,12,13,12,13,12,2,5,5,5,7,8,5,8,7,5,7,7,7,7,9,7,9,9,5,7,7,8,9,9,7,9,7,6,8,8,8,9,10,8,9,9,8,9,10,9,9,11,10,11,11,8,9,9,10,11,11,9,11,10,6,8,8,8,9,9,8,10,9,8,9,9,9,10,11,10,11,10,8,10,9,10,11,11,9,11,9,6,8,8,7,9,9,8,10,9,7,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,11,10,7,9,9,8,10,10,9,10,10,9,9,10,10,10,11,10,11,11,9,10,10,10,11,11,10,11,10,7,9,9,9,9,10,9,10,9,8,10,9,9,9,11,10,11,11,9,10,10,10,11,11,9,11,9,6,8,8,8,9,10,7,9,9,8,9,9,9,10,10,9,10,10,7,9,9,9,10,10,9,10,9,7,9,9,9,9,10,9,10,9,9,10,10,9,9,11,10,11,11,8,9,10,10,11,11,9,11,9,7,9,9,9,10,10,8,10,10,9,10,10,10,10,11,10,11,11,9,10,9,10,11,11,10,11,10,5,7,7,6,7,7,6,7,7,6,7,7,7,8,8,7,8,8,6,7,7,7,8,8,7,8,8,7,7,8,7,8,8,7,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,7,7,8,8,7,8,8,8,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,6,8,8,7,8,8,7,8,8,7,8,8,8,8,9,8,9,9,8,8,8,8,9,9,8,9,8,7,8,8,8,8,9,8,9,9,8,8,9,8,9,9,9,9,9,8,9,9,9,9,9,9,9,9,7,8,8,8,9,9,8,9,8,8,8,8,8,9,9,9,9,9,8,9,8,9,9,9,9,9,9,6,8,8,7,8,8,7,8,8,8,8,8,8,8,9,8,9,9,7,8,8,8,9,9,8,9,8,7,8,8,8,8,9,8,9,8,8,8,9,9,9,9,9,9,9,8,8,8,9,9,9,8,9,9,7,8,8,8,9,9,8,9,8,8,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,1,5,5,5,7,8,5,8,7,5,7,8,8,8,10,8,10,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+460467);
/* memory initializer */ allocate([5,8,7,8,10,10,8,10,8,6,8,9,8,10,12,9,11,11,9,10,11,11,11,13,12,13,13,9,11,11,11,13,13,11,13,12,6,9,8,9,11,11,8,12,10,9,11,11,11,12,13,11,13,13,9,11,10,11,13,13,11,13,11,5,9,9,8,11,11,9,12,11,8,10,11,10,11,13,11,13,13,9,11,11,11,13,13,11,13,12,8,10,11,10,12,13,10,13,12,10,10,13,11,11,14,12,13,14,11,13,12,13,14,14,12,14,12,8,11,10,11,12,13,11,14,12,10,13,12,12,12,13,13,15,14,11,12,13,13,14,15,12,14,12,5,9,9,9,11,12,8,11,11,9,11,11,11,12,13,11,13,13,8,11,10,11,13,13,10,13,11,8,10,11,11,12,14,11,13,12,11,13,12,12,12,14,13,15,14,10,12,13,13,14,15,12,13,12,8,11,10,10,12,13,10,13,12,11,12,13,12,12,14,13,14,14,10,13,10,12,14,13,11,14,11,4,6,6,9,9,6,7,8,10,10,6,8,7,10,10,8,10,10,12,13,8,10,10,13,12,6,8,8,10,10,7,8,9,10,11,8,9,9,11,11,10,10,11,12,13,10,11,11,14,13,6,8,8,10,10,8,9,9,11,11,7,9,8,11,10,10,11,11,13,14,10,11,10,13,12,9,10,10,12,12,10,10,11,12,13,10,11,11,13,13,12,12,13,12,15,13,14,13,15,14,9,10,10,13,12,10,11,11,13,13,10,11,10,13,12,13,13,14,14,15,12,13,12,15,12,6,8,8,10,11,8,9,10,11,12,8,9,9,11,11,10,11,12,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,10,11,12,13,11,11,13,13,15,11,12,12,14,14,8,9,9,12,12,9,10,11,12,13,9,10,10,13,12,11,12,13,14,15,11,12,12,14,14,11,11,12,13,14,11,12,13,13,15,12,13,13,14,15,13,13,14,14,16,14,15,15,16,16,11,12,11,14,13,12,13,13,14,14,11,13,12,14,13,14,15,15,16,16,13,14,14,16,14,6,8,8,11,10,8,9,9,12,11,8,10,9,12,11,10,11,11,13,13,10,12,11,14,13,8,9,9,12,12,9,10,10,12,13,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,8,9,9,12,11,9,10,10,13,12,9,11,10,13,12,12,12,12,14,14,11,13,12,15,13,11,11,12,13,14,11,12,13,13,14,12,13,13,14,15,13,13,14,14,16,14,15,15,16,16,11,12,11,14,13,12,13,13,15,14,11,13,12,15,13,14,15,15,16,16,13,15,13,16,14,9,10,11,12,13,11,11,12,13,14,11,12,12,13,14,13,13,14,14,16,13,14,14,15,16,11,11,12,13,14,12,12,13,14,15,12,13,13,14,15,14,14,15,15,17,14,15,15,16,17,11,12,12,14,14,12,13,13,14,15,12,13,12,15,15,14,15,15,16,17,14,15,15,16,16,13,14,14,15,16,14,14,15,15,17,15,15,15,16,17,16,16,17,16,18,16,17,17,18,18,13,14,14,16,15,14,15,15,17,16,14,15,15,16,16,16,17,17,18,18,16,16,16,17,16,9,11,10,13,12,11,12,12,14,13,11,12,11,15,13,13,14,14,16,15,13,14,13,17,14,11,12,12,14,14,12,12,13,15,15,12,13,13,15,14,14,14,15,16,16,14,15,15,17,16,11,12,11,14,13,12,13,13,15,14,12,13,12,15,13,14,15,15,16,16,14,15,14,17,15,13,14,14,15,16,14,15,15,16,17,14,15,15,16,17,16,16,16,17,17,16,17,17,18,18,13,15,14,16,15,15,15,15,17,16,14,15,14,17,15,16,17,17,18,18,16,17,16,18,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,11,13,14,10,12,11,14,13,7,9,9,11,12,9,10,10,12,13,9,10,10,13,12,11,11,12,13,15,11,12,12,15,14,8,9,9,12,11,9,10,10,13,13,9,11,10,13,12,12,12,12,14,15,11,13,12,15,13,10,11,11,13,14,11,12,12,13,15,11,12,12,14,14,13,13,14,14,16,14,15,14,16,16,11,12,11,14,13,12,13,13,15,14,11,13,12,15,13,14,15,15,16,16,13,14,14,16,14,8,9,9,11,12,9,10,11,12,13,9,10,10,13,12,11,12,13,14,15,11,12,12,15,14,9,9,11,11,13,10,10,12,12,14,10,10,11,13,14,12,12,13,14,16,12,13,13,15,15,9,11,10,13,12,10,11,11,13,14,10,12,11,14,13,12,13,13,15,16,12,13,13,15,15,11,11,13,13,15,12,12,14,13,15,13,13,14,14,15,14,14,15,14,17,15,15,15,16,16,12,13,12,15,14,13,14,14,15,15,12,14,13,15,14,15,15,15,17,17,14,15,14,17,15,7,9,9,12,11,9,10,10,12,12,9,11,10,13,12,11,12,12,14,14,11,13,12,15,14,9,10,10,12,12,10,10,11,12,13,10,11,11,14,13,12,12,13,14,15,12,13,13,16,15,9,10,10,13,12,10,11,11,13,13,10,11,10,14,12,13,13,13,15,15,12,13,12,15,14,11,12,12,14,14,12,12,13,14,15,13,14,13,15,15,14,13,15,14,16,15,16,15,17,16,12,12,12,14,14,13,13,14,15,15,12,13,12,15,14,15,15,16,16,17,14,15,14,17,14,10,11,12,13,14,11,12,13,14,15,11,12,13,14,15,13,14,15,15,17,14,15,15,16,16,11,12,13,12,15,12,12,14,13,16,13,13,14,13,16,14,14,16,14,18,15,15,16,16,17,12,13,12,15,15,13,14,14,15,16,13,14,13,16,15,15,15,16,17,18,15,15,15,17,16,14,14,15,14,17,15,14,16,14,17,15,15,16,15,18,16,16,17,16,19,17,17,17,17,18,14,15,15,17,16,15,16,16,17,17,15,16,15,18,16,17,17,18,18,18,16,17,16,18,17,10,11,11,14,13,11,12,12,15,14,11,13,12,15,14,14,15,15,16,16,14,15,15,17,16,11,12,12,15,14,12,13,13,15,14,13,14,13,16,14,14,15,15,16,16,15,16,15,18,16,11,13,12,15,15,13,14,14,15,15,12,14,13,16,15,15,16,16,17,17,15,16,15,17,16,14,15,14,16,16,14,15,15,16,16,15,16,15,17,16,16,16,17,16,17,17,18,17,19,18,14,15,15,17,16,15,16,16,17,17,15,15,15,18,16,17,18,18,18,18,16,17,16,19,16,6,8,8,11,11,8,9,9,11,12,8,9,9,12,11,10,11,12,13,14,10,11,11,14,13,8,9,9,11,12,9,10,11,12,13,9,10,10,13,13,11,12,13,13,15,11,12,12,15,14,7,9,9,12,11,9,10,10,12,13,9,10,10,13,12,11,12,12,14,15,11,12,11,14,13,11,11,12,13,14,11,12,13,13,15,12,13,13,14,15,13,14,14,14,16,14,15,15,16,16,10,11,11,14,13,11,12,12,14,14,11,12,12,15,13,14,14,14,16,16,13,14,13,16,14,7,9,9,11,12,9,10,10,12,13,9,10,10,12,12,11,12,13,14,15,11,12,12,14,14,9,10,10,12,13,10,10,11,12,14,10,11,11,13,13,12,12,13,14,15,13,13,13,15,15,9,10,10,12,12,10,11,11,13,14,10,11,10,13,12,12,13,13,15,16,12,13,12,15,14,11,12,13,14,14,12,12,13,14,15,13,14,13,15,15,14,14,15,14,17,15,16,15,17,16,11,12,12,14,14,13,13,13,15,15,12,13,12,15,14,15,15,15,16,17,14,15,14,16,14,8,9,9,12,11,9,10,10,12,13,9,11,10,13,12,11,12,12,14,15,11,12,12,15,14,9,10,11,13,13,10,11,12,13,14,10,11,11,14,13,12,13,13,15,15,12,13,13,16,15,9,11,9,13,11,10,11,10,14,13,10,12,10,14,12,12,13,13,15,15,12,13,12,16,14,12,12,13,14,15,12,13,14,14,16,13,14,14,15,15,14,14,15,15,17,15,16,15,17,16,11,13,11,15,13,13,14,13,15,14,12,14,12,16,13,15,15,15,16,16,14,15,14,17,14,10,11,11,13,14,11,12,13,14,15,11,12,12,14,15,14,14,15,16,17,14,15,15,16,16,11,12,13,14,15,12,13,14,15,16,13,14,14,15,16,15,15,16,16,18,15,16,16,17,17,11,12,12,14,15,13,13,14,14,16,12,13,13,15,15,15,15,16,16,18,14,15,15,16,16,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,16,19,17,18,17,18,18,14,14,15,16,16,15,15,16,16,17,14,15,15,16,16,17,17,18,18,19,16,17,16,17,16,10,12,11,14,13,11,13,12,15,14,11,13,12,15,14,14,15,15,16,16,13,15,14,17,15,12,13,13,15,15,13,13,14,15,16,13,14,14,16,16,14,15,15,17,17,15,16,16,17,17,11,13,12,15,12,13,14,13,16,13,12,14,12,16,13,15,16,15,17,16,14,16,14,18,14,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,17,18,17,18,17,18,18,14,15,14,17,14,15,16,15,18,15,15,16,15,18,14,17,17,17,18,17,16,17,16,19,16,9,11,11,13,13,10,12,12,14,14,11,12,12,15,14,13,14,14,16,16,13,14,14,16,16,10,11,12,14,14,11,12,13,14,15,12,13,13,15,15,13,14,15,16,16,14,15,15,17,16,11,12,12,15,14,12,13,13,15,15,12,13,12,15,15,14,15,15,16,17,14,15,14,17,16,12,13,14,15,16,13,13,14,15,16,13,14,15,16,16,14,15,16,16,18,15,16,16,18,18,13,14,14,16,15,14,15,15,17,16,14,15,15,17,16,16,17,17,18,18,16,17,16,18,17,10,12,12,14,14,11,12,13,15,15,12,13,13,15,15,13,14,15,16,17,14,15,15,17,16,11,11,13,14,15,12,12,14,15,16,13,13,14,15,16,14,14,15,16,17,15,15,16,17,17,12,13,12,15,15,13,14,14,16,16,13,14,13,16,15,15,16,15,17,17,15,16,15,18,16,13,12,15,14,17,14,13,16,14,17,14,14,16,15,18,15,14,17,16,18,16,16,17,17,18,14,15,15,17,16,15,16,16,17,17,15,16,15,18,16,17,17,17,18,18,16,17,16,19,17,10,11,11,14,14,11,12,12,15,15,11,13,12,15,15,14,15,14,16,16,14,15,15,17,16,11,12,12,15,14,12,12,13,15,15,13,14,13,16,15,14,15,15,16,16,15,16,15,18,17,11,13,12,15,15,13,14,13,15,15,12,14,13,16,15,15,16,15,17,17,15,16,15,18,16,13,14,13,16,16,14,15,14,16,16,14,15,15,17,16,16,16,16,16,18,16,18,17,19,18,14,15,15,17,16,15,16,16,17,17,15,15,15,17,16,17,17,18,18,19,16,17,16,18,16,12,13,13,15,16,13,14,14,16,17,13,14,14,16,16,15,15,16,17,18,15,16,16,18,17,13,13,14,14,17,14,14,15,15,17,14,14,15,16,17,15,15,17,16,18,16,17,17,18,18,13,14,14,17,16,14,15,15,17,17,14,15,14,17,16,16,17,17,18,18,16,17,16,18,17,15,14,16,13,18,16,15,17,14,19,16,16,17,15,18,17,16,18,15,19,18,18,18,17,19,15,16,16,18,17,16,17,17,18,18,16,17,16,19,17,18,19,18,19,19,17,18,17,20,18,11,12,12,15,15,13,13,14,15,16,13,14,13,16,15,15,16,16,17,17,15,16,16,18,17,12,14,13,16,15,13,13,14,15,16,14,15,14,17,16,16,16,16,16,17,16,17,17,19,17,12,13,14,16,16,14,15,15,16,17,13,15,13,17,15,16,17,17,18,18,16,17,16,18,16,15,16,15,17,16,15,15,15,17,17,16,17,16,18,17,17,16,17,16,18,18,19,18,20,18,15,16,16,17,17,16,17,17,18,18,15,16,15,18,17,18,18,19,19,19,17,18,16,19,16,9,11,11,13,13,11,12,12,14,15,10,12,12,14,14,13,14,14,16,16,13,14,14,16,16,11,12,12,14,14,12,12,13,15,15,12,13,13,15,15,14,15,15,16,17,14,15,15,16,16,10,12,11,14,14,12,13,13,15,15,11,13,12,15,14,14,15,15,16,17,13,15,14,17,16,13,14,14,15,16,14,15,15,16,17,14,15,15,16,17,16,16,17,17,18,16,17,17,18,18,12,14,13,16,15,13,15,14,17,16,13,14,13,17,15,15,16,16,18,18,15,16,15,18,16,10,11,11,14,14,11,12,13,14,15,11,12,12,15,15,14,15,15,16,17,14,15,15,16,16,11,12,13,15,15,12,13,14,15,16,13,14,14,15,16,15,15,16,16,18,15,15,16,17,17,11,12,12,14,15,13,13,14,15,16,12,13,13,15,15,15,15,16,17,18,14,15,15,17,16,14,15,15,16,17,15,15,16,16,17,15,16,16,17,17,16,16,17,16,19,17,17,18,19,18,13,13,14,16,16,14,15,16,17,17,14,14,15,16,16,16,16,17,18,18,16,16,16,18,16,10,12,12,14,14,12,13,13,15,15,11,13,12,15,15,14,15,15,16,17,13,15,14,17,16,12,13,13,15,15,13,13,14,15,16,13,14,14,16,16,15,15,16,17,18,15,15,16,17,17,11,13,12,15,14,13,14,13,16,15,12,14,12,16,14,15,16,15,17,17,14,16,14,17,16,14,15,15,16,17,15,15,16,16,18,15,16,16,17,17,16,17,17,17,19,17,17,17,18,18,13,15,12,17,14,14,16,14,17,15,14,15,13,17,14,16,17,16,18,17,15,17,14,19,15,11,12,12,15,15,13,13,14,15,16,13,14,13,16,15,15,16,16,17,18,15,16,16,17,17,12,14,13,16,16,13,13,15,15,17,14,15,15,17,16,16,16,17,16,19,16,17,17,18,18,12,13,14,15,16,14,14,15,16,17,13,14,13,16,15,16,17,17,18,19,15,16,16,17,16,15,16,16,18,17,15,15,16,17,18,16,17,17,18,18,16,16,18,16,19,18,19,19,20,19,15,15,16,16,17,16,16,17,17,18,15,15,15,17,16,18,18,19,18,20,17,17,16,18,16,12,13,13,16,15,13,14,14,16,16,13,14,14,16,16,15,16,16,17,18,15,16,15,18,17,13,14,14,16,16,14,15,15,16,17,14,15,15,17,17,16,17,17,18,18,16,17,17,18,18,13,14,13,17,14,14,15,14,17,16,14,15,14,17,15,16,17,17,18,18,15,17,15,19,15,16,16,16,17,18,16,16,17,17,19,16,17,17,18,19,17,17,18,18,20,18,18,18,19,19,15,16,14,18,13,16,17,16,19,15,16,17,15,19,14,18,18,18,19,17,17,18,16,20,15,2,5,5,5,7,7,5,7,7,5,7,7,7,8,9,7,9,9,5,7,7,7,9,9,7,9,8,5,7,8,8,9,10,8,9,9,8,9,10,9,10,12,10,11,11,8,9,10,10,11,11,9,11,11,5,8,7,8,9,9,8,10,9,8,10,9,9,11,11,10,11,11,8,10,9,10,11,11,9,12,10,5,8,8,7,9,10,8,10,9,7,9,9,9,10,11,9,11,11,8,10,10,10,11,11,10,12,11,7,9,9,9,10,11,9,11,11,9,9,11,10,10,13,11,11,12,9,11,11,11,12,13,11,13,12,7,9,9,9,11,11,9,12,10,9,11,10,10,11,12,11,13,12,9,11,11,11,13,13,11,13,11,5,8,8,8,9,10,7,10,9,8,10,10,10,11,11,10,11,11,7,9,9,9,11,11,9,11,10,7,9,9,9,10,12,9,11,11,9,11,11,11,11,13,11,13,13,9,10,11,11,12,13,10,12,11,7,9,9,9,11,11,9,11,10,9,11,11,11,12,13,11,13,12,9,11,9,11,12,11,10,13,10,2,8,13,15,16,18,21,22,5,4,6,8,10,12,17,21,9,5,5,6,8,11,15,19,11,6,5,5,6,7,12,14,14,8,7,5,4,4,9,11,16,11,9,7,4,3,7,10,22,15,14,12,8,7,9,11,21,16,15,12,9,5,6,8,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,2,3,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,14,14,1,4,4,4,4,4,4,4,4,4,4,4,5,5,4,5,5,5,5,4,5,4,4,5,5,5,5,5,5,5,5,5,5,5,1,4,4,8,8,10,10,10,10,9,8,11,11,4,6,5,8,6,10,10,10,10,10,9,10,9,4,5,6,6,9,10,10,10,10,9,10,9,10,8,9,8,9,8,9,9,10,9,11,10,12,10,8,8,9,8,9,9,9,9,10,10,11,10,12,9,10,10,11,10,11,10,12,11,12,11,13,11,9,10,10,10,11,10,11,11,12,11,12,11,12,11,12,12,12,12,13,12,13,12,13,12,13,13,11,12,12,12,12,12,12,12,13,13,13,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,12,13,13,13,14,14,13,13,13,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,1,3,2,3,3,7,12,14,14,16,18,19,6,2,4,6,8,9,12,14,12,3,3,5,7,8,11,13,13,6,4,5,7,8,10,11,14,8,7,7,7,7,9,10,15,9,8,7,7,6,8,9,17,11,11,10,9,8,9,9,19,14,13,11,10,9,9,9,1,7,7,6,9,9,7,9,9,6,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,5,7,8,5,8,7,6,7,7,7,7,8,8,8,8,6,7,7,7,8,8,7,8,7,6,8,8,8,9,10,8,9,9,8,9,9,9,9,10,10,10,10,8,9,9,10,10,10,9,10,10,6,8,8,8,9,9,8,10,9,9,9,9,9,9,10,10,10,10,8,9,9,10,10,10,9,10,9,6,8,9,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,8,9,8,9,9,9,9,9,8,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,7,9,9,9,10,10,9,10,10,9,10,9,9,9,10,10,10,10,9,10,9,10,10,10,9,10,9,6,8,8,8,9,9,8,9,9,8,9,9,9,9,10,9,10,10,8,9,9,9,10,10,9,10,9,7,9,9,9,10,10,9,10,9,9,9,10,10,9,10,10,10,10,9,9,9,10,10,10,9,10,9,7,9,8,8,9,9,8,9,9,9,9,9,9,9,9,9,9,9,8,9,8,9,9,9,9,9,9,1,5,5,5,7,9,5,9,7,5,7,8,7,7,10,9,9,10,5,8,7,9,10,9,7,10,7,6,9,9,9,10,12,10,12,11,9,10,11,11,10,13,12,12,13,10,11,11,12,13,13,11,13,11,6,9,9,10,11,12,9,12,11,10,11,11,11,11,13,12,13,13,9,11,10,12,13,13,11,13,10,6,9,10,9,11,12,10,12,11,9,10,11,10,10,13,11,13,13,10,11,11,12,13,12,11,13,11,7,9,10,9,10,12,10,11,11,10,10,11,10,10,12,12,11,12,10,11,10,12,12,12,10,12,10,7,10,10,11,11,13,11,13,11,10,12,11,11,10,13,13,14,13,10,11,12,13,13,14,11,13,10,6,10,9,10,11,12,9,12,11,9,11,11,11,11,13,12,12,13,9,11,10,12,13,13,10,13,10,7,10,10,11,11,14,11,13,11,10,12,11,11,10,14,13,14,13,10,11,12,13,13,14,11,13,10,7,10,9,10,10,12,9,12,10,10,11,11,10,10,12,12,12,12,9,11,10,11,12,12,10,12,9,2,3,3,3,3,3,3,1,6,6,10,10,6,7,9,11,13,5,9,7,13,11,8,11,12,13,15,8,12,11,15,13,6,7,8,11,11,7,8,10,11,13,9,10,10,13,13,11,11,13,12,16,12,13,13,16,15,6,8,7,11,11,9,10,10,13,13,7,10,7,13,11,12,13,13,15,16,11,13,11,16,12,10,11,11,11,13,11,11,13,12,15,13,13,13,14,15,13,12,15,12,17,15,16,16,16,16,10,11,11,14,11,13,13,13,15,14,11,13,11,15,12,15,15,16,16,16,13,15,12,17,12,6,8,9,12,12,9,10,12,13,15,9,11,11,15,14,12,13,15,16,18,13,14,14,17,16,9,10,11,13,14,11,10,13,14,16,11,12,12,15,15,14,13,16,15,18,14,15,15,17,17,9,11,11,14,14,11,12,13,15,16,11,13,11,15,14,15,15,15,17,18,14,15,14,17,15,13,14,14,15,16,14,14,15,15,17,15,16,15,17,17,16,16,17,15,19,17,18,18,19,18,13,14,14,16,15,15,15,16,17,17,14,15,14,18,15,17,17,17,19,19,16,17,15,19,16,6,9,8,13,12,9,11,11,14,15,9,12,10,15,13,13,14,14,16,17,12,15,13,18,16,9,11,11,14,14,11,11,13,14,15,11,13,12,16,15,14,14,15,15,18,14,15,15,18,17,9,11,10,14,13,11,12,12,15,15,11,13,10,16,14,14,15,15,16,18,14,16,13,18,15,13,14,14,16,16,14,14,15,15,17,15,16,15,17,17,16,16,17,16,19,17,18,17,18,19,13,14,14,16,15,15,15,15,17,17,14,15,14,17,15,17,17,17,18,19,16,17,15,19,15,11,13,13,15,16,13,14,15,16,18,14,15,15,17,17,16,16,18,18,20,17,18,17,19,20,13,14,14,16,17,15,15,16,17,18,15,16,16,17,17,18,17,19,18,19,18,18,18,19,21,14,14,15,16,17,15,15,16,18,18,15,16,16,17,18,18,18,19,19,21,18,19,19,22,20,16,16,17,17,19,17,17,17,18,20,17,18,18,20,19,19,19,20,19,0,19,19,20,20,21,17,17,17,19,18,18,18,20,19,19,18,18,18,20,20,19,19,20,20,20,20,21,20,21,19,11,13,13,16,15,14,15,15,17,17,14,15,14,18,16,16,18,18,20,19,16,19,17,21,18,13,14,15,16,17,15,15,16,18,18,15,16,15,19,18,18,18,18,19,19,18,18,18,22,20,13,14,14,16,16,15,16,16,18,17,15,16,15,18,17,18,18,18,19,19,17,18,17,21,18,16,17,17,18,18,17,18,19,19,19,18,20,18,19,19,19,20,21,19,21,20,20,20,0,21,16,17,17,19,19,18,18,18,19,21,17,18,18,19,18,20,19,21,20,21,19,20,20,22,19,7,9,9,13,13,8,10,11,14,15,9,12,11,15,14,11,13,14,16,17,13,15,14,17,16,8,10,11,14,14,10,10,12,14,16,11,12,12,16,15,13,12,15,15,18,14,15,15,19,17,9,11,11,14,14,11,12,12,15,15,11,13,11,16,14,14,15,14,17,17,14,16,14,18,15,12,13,14,15,16,13,13,15,14,17,15,15,15,17,17,15,14,17,14,19,17,18,18,19,18,13,14,14,16,16,15,15,15,17,17,14,15,14,18,15,17,18,17,18,17,16,18,16,19,15,7,10,10,13,13,9,10,12,14,15,10,12,11,15,14,12,13,14,16,17,13,15,14,18,16,10,10,12,13,14,10,10,13,13,16,12,12,13,15,15,13,12,15,15,18,15,15,16,18,17,10,11,11,14,14,12,13,13,15,16,10,13,10,16,14,14,15,15,17,17,14,15,13,17,15,13,13,14,15,16,14,13,15,14,18,15,15,16,16,17,16,15,18,15,18,17,18,18,18,18,13,15,14,17,16,15,16,16,17,17,14,15,13,17,15,17,17,18,18,18,16,17,14,20,14,8,10,10,14,14,11,11,13,14,16,11,13,11,16,14,14,15,16,16,18,14,16,15,18,16,10,12,11,15,14,11,11,13,14,16,13,14,13,16,15,15,14,16,15,19,16,17,16,20,18,10,11,12,14,15,13,13,14,16,16,11,14,11,16,14,16,16,17,18,19,15,17,14,20,15,14,15,14,17,16,13,14,15,15,18,16,17,16,19,18,16,15,18,15,19,18,19,18,21,21,14,14,15,16,17,16,16,17,18,18,13,15,14,17,15,18,18,19,18,22,16,18,15,21,15,12,13,14,16,16,14,14,16,16,18,14,15,15,17,18,16,16,18,18,20,18,18,17,20,20,13,14,15,15,17,15,14,16,16,18,16,16,16,17,19,17,15,18,17,21,18,18,18,19,19,14,15,15,18,17,15,16,16,18,19,15,16,15,18,18,17,18,18,20,21,17,19,17,20,19,16,16,17,16,19,17,17,18,17,20,18,18,18,18,19,19,18,20,17,22,20,20,19,20,20,17,17,18,18,19,18,18,20,21,20,17,18,17,20,20,21,21,21,21,21,19,21,18,22,20,11,13,13,17,16,14,14,16,16,18,14,16,14,18,16,17,18,19,19,20,18,19,18,21,19,14,15,14,17,16,14,14,16,18,18,16,17,16,18,17,18,17,19,18,20,19,19,18,20,20,13,14,15,16,17,16,16,17,18,19,14,16,14,19,17,18,19,18,20,20,18,20,17,21,18,17,17,17,19,18,16,17,18,18,19,18,19,18,21,21,18,18,20,17,21,19,20,20,22,21,16,17,18,18,19,18,18,19,21,20,16,17,17,20,18,21,21,22,21,22,18,21,18,0,18,7,9,9,13,13,9,11,12,14,15,8,11,10,15,14,13,14,15,16,18,11,14,13,17,15,9,11,11,14,14,11,11,13,14,16,11,12,12,15,15,14,14,16,15,18,14,14,15,17,17,8,11,10,14,14,11,12,12,15,15,10,12,10,16,14,14,15,15,17,18,13,15,12,18,15,13,14,14,16,16,14,14,15,15,17,15,15,15,16,17,16,15,17,15,19,17,17,17,18,18,12,14,13,16,15,15,15,15,17,17,13,15,13,17,14,17,18,18,18,19,15,17,14,19,14,8,10,10,14,14,11,11,13,14,16,11,13,11,16,14,14,15,16,17,19,14,16,15,18,17,10,12,11,15,14,11,11,14,14,17,13,14,13,17,15,15,14,17,15,19,16,17,16,19,17,10,11,12,14,15,13,13,14,15,17,11,13,11,17,14,16,16,17,18,19,15,16,14,18,15,14,15,14,16,16,13,14,15,15,18,16,16,16,18,18,16,15,18,15,20,18,19,18,21,18,14,14,15,16,17,16,16,17,17,18,13,15,14,17,16,19,19,19,19,19,15,18,15,20,15,7,10,10,13,13,10,11,12,14,15,9,12,10,15,14,13,14,15,16,17,12,15,13,17,16,10,11,11,14,14,10,10,13,14,16,12,13,13,16,15,14,13,16,15,18,15,15,16,17,17,10,12,10,14,13,12,13,12,15,15,10,13,10,16,13,15,16,15,17,18,13,16,12,18,15,13,14,14,16,17,14,13,15,15,18,15,16,15,17,17,16,14,17,15,19,17,18,18,19,19,13,15,13,17,14,15,15,15,18,17,14,15,13,17,14,18,17,18,18,19,15,17,15,19,15,11,13,13,16,17,14,14,16,16,18,14,16,15,18,17,17,18,19,18,21,18,18,17,20,18,13,15,14,17,16,14,14,16,17,18,16,17,16,19,17,18,17,19,18,22,18,19,19,21,21,13,14,15,16,18,16,16,17,17,20,14,16,14,18,17,18,18,19,19,21,17,18,17,21,18,17,18,17,19,18,16,17,17,18,19,18,18,18,22,22,18,17,19,17,0,20,21,19,21,20,17,17,18,18,21,18,18,18,19,21,17,17,17,19,19,20,20,22,21,21,19,20,18,20,17,12,14,13,17,16,14,15,15,17,18,14,16,14,18,16,17,18,18,21,20,16,18,16,21,18,14,15,15,17,17,15,15,16,18,18,15,17,16,18,18,17,17,19,19,20,18,19,18,20,19,14,15,14,17,15,15,16,16,18,17,15,16,14,19,15,18,18,18,19,20,17,20,15,21,17,16,17,18,18,19,17,17,18,18,20,18,19,18,19,21,19,18,19,19,21,20,0,19,21,20,16,17,16,19,16,18,18,18,19,19,17,18,17,20,17,19,20,20,22,0,19,20,17,21,17,11,13,14,16,17,14,15,15,17,18,14,15,15,18,18,16,17,17,19,20,16,18,17,19,21,13,14,15,17,17,14,15,16,17,19,15,16,16,18,19,16,17,18,19,21,17,18,20,21,21,13,15,15,17,17,15,16,16,18,19,15,16,16,18,19,17,17,18,19,22,17,19,18,22,19,15,16,17,19,19,16,17,18,18,20,17,18,18,19,20,19,18,20,18,22,20,19,19,22,21,16,17,17,18,19,18,18,18,19,20,17,18,18,20,19,20,19,20,22,20,19,20,21,21,20,12,14,14,16,16,13,14,16,17,18,14,16,15,18,18,15,17,17,19,19,17,18,18,19,19,13,14,15,16,17,14,14,16,16,20,15,16,16,17,19,16,15,18,17,20,18,17,19,19,19,14,15,15,17,17,16,16,16,18,18,15,16,15,19,18,17,18,18,20,21,17,18,17,21,18,16,15,17,17,19,17,15,18,17,20,19,17,18,19,20,18,16,19,17,22,20,19,20,19,20,17,17,18,19,19,18,18,19,20,20,17,18,17,18,18,21,21,20,20,21,18,20,17,21,19,11,14,14,16,17,15,14,16,17,19,14,16,14,18,17,18,18,19,19,21,17,19,18,20,20,13,15,14,17,17,14,14,16,17,18,16,17,16,19,18,18,17,19,18,20,18,21,18,20,20,13,15,15,16,17,16,16,17,18,19,14,16,15,19,18,19,19,19,21,20,18,19,17,20,18,16,17,16,19,18,16,17,17,19,20,17,19,18,20,19,18,17,21,18,0,21,20,20,0,20,17,17,18,18,19,18,19,19,20,22,16,17,17,20,18,21,22,20,20,22,18,22,18,22,18,12,14,14,17,17,14,15,16,17,19,14,16,15,17,17,17,17,18,18,21,17,19,17,20,19,14,15,15,16,18,15,14,16,16,19,16,17,16,19,18,17,16,20,17,20,18,20,19,19,20,14,15,15,18,17,16,16,17,18,19,14,16,15,19,17,18,21,18,19,21,17,18,17,19,18,17,17,18,17,20,17,16,18,17,21,18,19,19,19,19,18,17,19,17,20,20,21,20,21,20,17,17,17,19,19,19,18,18,20,21,16,18,16,19,18,20,20,21,21,20,18,19,16,0,17,12,14,14,17,17,15,15,18,17,19,15,18,15,20,16,20,19,21,18,22,20,20,20,22,19,14,16,14,20,17,14,15,17,17,20,18,18,17,20,18,18,17,19,17,21,20,21,20,0,21,14,15,16,17,19,18,17,19,18,21,14,18,15,21,17,21,20,21,20,0,18,21,17,21,17,18,19,17,20,18,16,17,17,19,19,19,21,20,0,20,18,17,21,17,0,22,0,21,0,22,17,17,19,18,20,20,20,21,19,22,16,17,18,20,18,22,22,0,22,0,17,21,17,22,17,11,14,13,16,16,14,15,15,17,18,14,15,14,18,17,17,18,18,19,20,16,17,17,21,19,13,14,15,17,17,15,16,16,18,18,15,16,16,19,18,18,18,18,19,20,17,18,18,20,19,13,15,14,17,17,15,16,16,17,18,14,16,15,19,17,17,18,19,21,21,17,18,17,20,18,16,17,17,19,19,17,18,19,19,20,18,19,18,21,21,21,20,19,21,22,20,20,19,21,20,15,17,16,19,19,17,18,18,20,21,16,18,17,20,18,19,19,21,21,21,19,19,19,20,18,11,14,13,17,16,14,14,16,16,19,14,16,15,19,16,18,18,18,19,22,17,18,17,20,19,13,15,14,17,17,15,15,16,17,19,16,17,16,20,18,18,17,19,18,21,19,19,18,22,0,13,14,15,17,18,16,16,17,17,19,14,16,15,19,18,18,19,19,20,21,18,18,17,20,18,17,18,17,20,18,16,17,17,18,20,18,19,18,20,20,18,18,21,17,21,20,21,21,0,19,16,16,18,18,19,19,18,20,19,20,16,17,17,20,18,21,20,21,22,22,18,20,17,21,17,12,14,14,17,16,14,15,16,18,18,13,15,14,18,17,17,18,18,19,19,15,17,16,19,19,14,15,15,17,17,15,15,16,18,19,15,16,16,19,18,17,17,18,18,20,18,18,18,21,20,13,15,14,17,16,15,16,15,18,18,14,16,14,18,17,18,18,18,19,21,16,18,16,20,17,17,18,17,18,19,17,17,18,18,19,18,19,19,21,19,19,18,20,18,21,21,20,20,21,20,16,17,15,20,17,17,19,17,19,19,17,18,15,20,17,19,20,19,21,22,17,20,16,0,17,12,14,14,17,18,16,15,18,16,20,16,18,15,21,17,20,18,21,19,22,19,21,19,0,19,14,16,15,19,17,14,15,17,16,21,18,19,18,21,17,19,17,21,17,22,20,21,21,0,21,14,15,16,17,19,18,17,19,18,21,14,17,15,20,17,21,22,21,20,22,18,21,17,21,17,17,19,17,21,18,16,17,17,19,20,19,21,20,21,20,17,18,20,17,21,0,22,20,21,22,17,17,20,18,21,21,20,22,20,21,16,17,17,21,19,0,22,0,21,21,18,22,17,21,17,12,14,14,17,16,14,15,16,17,18,14,16,15,18,17,17,17,20,19,20,16,18,17,21,18,14,15,15,17,17,14,15,16,17,19,16,17,16,18,18,17,16,19,18,19,18,19,18,21,20,14,15,15,18,17,16,16,16,19,18,15,16,14,20,16,18,18,19,19,20,16,19,16,21,17,17,17,18,19,19,16,16,18,18,19,19,19,18,20,20,18,16,19,18,20,22,21,20,19,20,16,18,17,20,16,18,19,18,19,18,16,18,16,20,17,21,20,21,20,20,18,19,17,21,16,5,7,7,10,10,7,8,9,10,11,7,9,8,11,10,9,10,10,11,11,9,10,10,11,11,7,9,9,10,10,8,9,10,10,11,9,10,10,11,11,10,10,11,11,11,10,11,11,12,12,7,9,9,10,10,9,10,10,11,11,8,10,9,11,10,10,11,11,11,11,10,11,10,11,11,10,10,10,11,11,10,10,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,12,10,10,10,11,11,10,11,11,11,11,10,11,10,11,11,11,12,11,12,12,11,12,11,12,11,8,9,9,11,11,9,10,10,11,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,8,9,9,11,11,9,10,10,11,11,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,11,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,13,13,13,12,12,12,13,13,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,13,12,12,12,12,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,9,9,11,11,9,10,10,11,11,9,10,10,12,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,11,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,12,12,12,11,11,11,12,12,11,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,9,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,10,10,11,11,12,11,11,12,12,12,11,11,12,12,12,11,11,12,12,13,12,12,12,12,12,10,11,11,12,12,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,13,12,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,12,12,12,13,12,8,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,12,12,12,10,11,10,12,12,10,10,11,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,10,11,11,12,12,11,12,12,12,12,10,12,11,12,12,12,12,12,13,13,12,13,12,13,12,11,12,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,12,11,11,11,12,12,11,12,12,12,13,11,12,12,12,12,12,12,12,13,13,12,12,13,13,13,11,12,12,12,12,12,12,12,12,13,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,11,12,12,12,12,12,13,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,11,12,12,13,12,12,13,12,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,8,9,9,11,11,9,10,10,11,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,9,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,11,12,12,12,11,12,12,12,12,9,10,10,11,11,10,11,11,12,12,10,11,10,12,12,11,12,12,12,12,11,12,11,12,12,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,12,12,11,12,12,12,12,11,12,11,12,12,12,12,12,12,12,12,12,12,12,12,8,10,10,11,11,10,10,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,10,11,11,12,12,10,11,12,12,12,11,12,12,12,12,12,12,12,12,13,12,12,12,13,13,10,10,11,12,12,11,12,12,12,12,10,11,10,12,12,12,12,12,13,13,12,12,12,13,12,11,12,12,12,12,11,12,12,12,13,12,12,12,13,13,12,12,13,12,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,11,12,12,13,12,12,13,13,13,13,12,13,12,13,12,9,10,10,11,11,10,11,11,12,12,10,11,11,12,12,11,12,12,12,12,11,12,11,12,12,10,11,11,12,12,11,11,12,12,12,11,11,12,12,12,12,12,12,12,13,12,12,12,13,12,10,11,10,12,11,11,12,11,12,12,11,12,11,12,12,12,12,12,12,12,12,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,12,13,12,13,13,13,13,11,12,11,12,12,12,12,12,13,12,12,12,12,12,12,12,13,12,13,13,12,12,12,13,12,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,12,13,13,13,12,13,13,13,13,11,12,12,12,13,12,12,13,13,13,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,11,12,12,12,12,12,12,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,13,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,13,13,13,12,13,12,13,13,11,12,12,12,12,12,12,13,13,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,11,12,12,12,12,12,13,12,13,13,12,12,12,13,12,13,13,13,13,13,12,13,12,13,13,12,12,12,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,13,12,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,12,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,11,12,12,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,12,12,12,12,12,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,12,12,13,13,13,13,12,13,12,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,12,12,13,13,12,12,12,13,13,11,12,12,12,12,12,12,13,13,13,12,12,12,13,13,12,12,13,13,13,12,13,13,13,13,11,12,12,12,12,12,12,12,13,13,12,12,12,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,12,13,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,13,13,13,13,13,12,12,12,13,13,13,13,13,13,13,12,13,13,13,13,13,13,13,13,13,13,13,13,13,13,10,11,11,12,12,11,12,12,12,13,11,12,12,13,12,12,13,13,13,13,12,13,12,13,13,11,12,12,13,13,12,12,12], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+470707);
/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE+480947);
/* memory initializer */ allocate([9,12,12,18,10,10,13,13,18,14,14,12,12,18,11,11,13,13,18,14,14,13,13,18,10,10,12,12,17,11,11,12,12,18,14,14,12,12,18,14,14,13,13,18,14,14,13,13,19,14,15,12,12,18,14,14,12,12,18,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,16,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,12,14,15,15,12,12,13,15,15,11,11,14,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,16,16,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,14,15,12,12,15,15,15,12,12,15,16,16,12,12,15,15,15,12,12,14,15,15,12,12,15,15,15,12,12,13,13,13,11,11,14,14,15,11,11,14,14,14,12,12,14,15,15,10,10,15,15,15,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,14,15,15,12,12,14,14,15,11,11,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,15,15,10,10,14,15,15,11,11,15,15,15,10,10,15,15,15,12,12,15,15,15,14,14,15,15,15,11,11,15,15,15,11,11,15,15,15,11,11,14,10,10,10,10,15,9,9,12,11,15,10,10,12,12,15,11,11,11,11,15,13,13,12,12,16,10,10,12,12,15,13,13,12,12,15,9,9,11,11,15,10,10,13,12,15,13,13,11,11,15,10,10,12,12,15,13,13,12,12,15,9,9,11,11,15,10,10,12,12,15,13,13,11,11,15,11,11,12,12,15,13,13,13,13,15,10,10,11,11,15,11,11,12,12,15,13,14,11,11,15,14,14,13,13,16,14,14,20,19,15,14,14,11,11,15,13,14,12,12,15,14,14,11,11,14,13,13,10,10,14,14,13,11,11,15,13,14,12,12,15,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,15,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,14,14,11,11,15,15,15,12,12,15,15,15,13,13,16,14,14,12,12,15,15,15,13,13,15,15,15,12,12,15,15,15,12,12,14,10,10,13,13,17,9,9,12,12,17,9,9,13,13,17,11,11,12,12,18,14,14,12,12,18,10,10,13,13,18,14,13,12,12,18,9,9,12,12,18,10,10,12,13,18,14,14,12,12,17,9,9,12,12,17,13,14,12,12,17,9,9,12,12,17,10,10,12,12,17,14,14,11,11,18,11,11,12,12,18,14,14,12,13,18,10,10,12,12,18,11,11,12,12,18,14,14,11,11,18,15,15,12,12,18,14,14,13,13,18,14,15,12,12,17,14,14,12,12,17,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,11,11,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,14,15,15,11,11,14,15,15,12,12,14,15,15,11,11,15,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,15,16,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,12,12,15,16,16,12,12,15,15,15,12,12,15,15,15,12,12,15,15,15,12,12,13,13,13,12,12,14,14,14,11,11,14,14,14,12,12,14,14,14,10,10,15,15,15,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,14,14,12,12,15,15,14,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,14,14,11,11,15,14,14,10,10,14,15,15,12,12,14,14,14,12,12,14,15,15,10,10,14,15,15,11,11,15,15,15,10,10,15,15,15,12,12,15,14,14,13,13,15,15,15,10,10,15,14,14,11,11,15,15,15,10,10,14,10,10,10,10,14,9,9,12,12,15,10,10,12,12,14,11,11,11,11,15,13,14,12,12,15,10,10,13,13,15,13,13,12,12,15,9,9,12,12,15,10,10,13,13,15,13,14,11,11,15,10,10,12,12,15,13,13,12,12,15,9,9,11,11,15,10,10,12,12,15,13,13,11,11,15,11,11,12,12,15,13,13,13,13,15,10,10,11,11,15,11,11,12,12,15,14,14,11,11,15,14,14,13,13,15,14,14,20,19,15,14,14,11,11,15,14,14,12,12,15,14,14,11,11,14,13,13,11,11,15,13,13,11,11,15,14,13,12,12,15,14,14,11,12,15,14,14,11,11,15,14,14,12,12,14,14,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,14,14,11,11,14,14,14,12,12,15,15,15,13,13,16,14,14,12,12,15,15,15,13,13,15,14,14,12,12,15,15,15,12,12,15,11,11,13,13,18,10,10,12,12,17,11,11,12,12,18,12,12,11,11,18,14,14,12,12,18,10,10,13,13,18,14,14,12,12,18,10,10,12,12,18,11,11,12,12,18,14,14,12,12,18,11,11,12,13,18,14,14,12,12,18,10,10,12,12,18,11,11,12,12,18,14,14,11,11,18,11,11,12,12,18,14,14,12,12,17,10,10,11,11,17,12,12,11,11,17,14,14,11,11,18,15,15,12,12,18,14,14,13,13,18,15,15,11,11,18,15,14,12,12,18,15,15,11,11,14,8,8,11,11,14,15,15,10,10,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,11,11,15,15,15,12,12,14,15,15,10,10,15,15,15,11,11,15,15,15,12,12,15,15,15,11,11,15,15,15,13,13,14,15,15,10,10,15,15,15,11,11,15,15,15,12,12,15,15,15,12,12,15,16,16,12,12,15,14,14,11,11,15,15,15,11,11,15,15,15,12,12,16,15,15,13,13,15,16,16,13,13,16,15,15,12,12,15,15,15,12,12,15,15,15,12,12,14,13,13,11,11,14,14,14,11,11,14,14,14,12,12,15,14,14,11,11,15,15,14,11,11,15,14,14,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,12,12,15,14,14,11,11,15,14,15,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,11,11,15,14,14,11,11,15,15,14,12,12,15,14,14,12,12,15,15,15,10,11,15,14,14,11,11,15,15,15,10,10,15,15,15,12,12,16,14,14,13,13,15,15,15,11,11,15,14,14,11,11,15,15,15,11,11,14,11,11,9,9,14,10,10,12,12,15,11,11,12,12,15,12,12,12,12,15,14,14,13,13,15,11,11,12,12,15,14,14,13,13,14,10,10,12,12,15,11,11,13,13,15,14,14,12,12,15,10,10,12,12,14,14,14,13,13,14,10,10,11,11,15,11,11,12,12,15,14,14,12,12,15,12,12,13,13,15,14,14,14,14,15,11,11,11,11,15,12,11,12,12,15,14,14,11,11,15,15,15,13,14,15,14,14,20,19,15,14,14,12,12,15,14,14,13,13,15,14,14,12,12,14,13,13,10,10,14,13,13,11,11,14,13,13,11,11,15,14,14,12,12,15,14,14,12,12,15,14,14,12,11,14,14,14,13,13,15,14,14,11,11,15,14,14,11,11,15,14,14,14,14,15,14,14,11,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,15,14,14,14,14,15,14,14,12,12,15,14,14,13,13,15,14,14,11,11,14,14,14,12,12,15,14,14,13,13,15,15,15,13,13,15,14,14,13,13,15,15,15,13,13,15,14,14,13,13,15,15,15,13,13,15,14,14,13,13,18,15,15,12,12,18,15,15,12,12,18,16,16,11,11,18,17,17,12,12,18,15,15,13,13,18,17,17,12,12,18,15,15,12,12,18,15,16,12,12,18,17,17,12,12,18,15,15,13,12,17,16,17,12,12,17,15,15,11,12,18,15,15,12,12,18,17,17,11,11,18,16,16,12,12,18,17,16,12,12,18,15,15,11,11,18,15,15,12,12,18,17,17,11,11,18,17,17,12,12,18,16,16,13,13,18,17,17,11,11,17,16,16,11,11,18,17,17,11,11,15,15,15,11,11,16,15,15,11,11,16,15,15,11,11,16,15,15,12,12,17,15,15,14,14,16,15,15,11,11,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,18,15,15,13,13,16,15,15,11,11,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,17,15,15,13,13,16,15,15,12,12,17,16,15,14,14,16,15,15,11,11,16,15,15,12,12,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,18,14,15,13,13,18,15,15,14,14,18,15,15,13,13,15,13,13,12,12,15,14,14,12,12,16,14,14,12,12,16,14,14,12,12,17,14,15,12,12,16,14,14,12,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,17,14,14,12,12,16,14,14,12,12,17,14,14,13,13,15,15,15,11,11,16,14,14,12,12,17,14,14,12,12,16,15,15,12,12,17,14,14,13,12,16,15,15,11,11,16,14,14,12,12,17,15,15,11,11,17,15,15,13,13,17,14,14,13,13,18,15,15,12,12,17,14,14,12,12,17,15,15,12,12,14,15,15,9,9,14,15,15,12,12,15,16,15,13,13,15,15,15,14,14,15,15,15,21,19,15,15,15,13,13,15,15,15,19,19,15,15,15,12,12,15,16,16,14,14,15,15,15,19,19,15,16,15,13,13,15,16,16,19,20,15,15,15,12,13,15,16,16,14,14,15,15,15,20,19,15,15,15,14,14,15,16,16,19,19,15,15,15,14,13,15,15,15,14,14,15,15,15,19,19,15,16,16,20,19,15,17,16,21,20,15,15,15,20,19,15,16,16,20,20,15,15,15,19,20,14,13,13,10,10,14,14,14,11,11,14,14,14,12,12,15,14,14,13,13,15,15,14,20,20,15,14,14,12,12,14,14,14,19,19,15,14,14,11,11,15,14,14,12,12,15,14,14,20,19,15,14,14,12,12,14,14,14,20,20,14,14,14,11,11,15,14,14,12,12,15,14,14,20,21,15,14,14,13,13,15,14,14,20,20,15,14,14,12,12,15,14,14,13,13,14,15,15,20,20,15,15,15,20,19,15,14,14,20,19,15,15,15,20,20,15,14,14,21,20,15,15,15,20,20,1,6,6,6,7,7,7,8,8,7,8,8,10,11,11,9,8,8,8,8,8,11,11,12,9,8,8,5,7,7,9,11,11,10,11,11,10,11,11,12,14,14,11,12,12,10,12,12,13,14,14,12,12,12,5,6,6,7,6,6,8,7,7,8,7,7,11,10,10,10,7,7,9,8,8,12,11,11,10,7,7,7,7,7,11,10,10,12,10,10,11,10,10,15,13,13,13,10,10,12,11,11,15,13,13,14,11,11,7,7,7,11,11,11,12,11,11,12,11,11,14,14,14,13,12,12,12,12,12,16,15,15,14,12,12,0,10,10,0,11,11,0,12,12,0,11,11,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,7,8,8,12,11,10,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,12,11,11,12,11,11,15,14,14,14,12,12,13,12,12,15,14,14,15,13,13,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,13,13,0,15,14,0,12,12,3,5,5,0,8,8,0,8,8,0,9,9,0,10,10,0,8,8,0,8,8,0,10,10,0,8,8,0,7,7,0,8,8,0,7,7,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,7,7,0,6,6,0,7,7,0,7,7,0,10,10,0,6,6,0,7,7,0,10,10,0,5,5,0,8,8,0,7,7,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,0,6,6,0,9,10,0,10,10,0,10,10,0,11,11,0,9,9,0,10,10,0,11,11,0,9,9,0,8,8,0,8,8,0,8,8,0,9,9,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,0,8,8,0,7,7,0,7,7,0,8,8,0,9,9,0,7,7,0,7,7,0,8,8,0,6,6,0,6,6,0,10,10,0,10,10,0,10,10,0,12,12,0,9,9,0,10,10,0,12,12,0,9,9,0,8,8,0,7,7,0,7,7,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,6,6,1,6,6,5,7,8,0,8,8,6,9,9,7,10,10,0,8,8,0,9,9,0,12,12,0,8,8,4,7,7,6,10,10,0,12,12,7,11,11,8,12,12,0,12,12,0,13,12,0,15,15,0,12,12,0,7,7,0,7,7,0,7,7,0,8,8,0,10,10,0,7,7,0,8,8,0,11,11,0,7,7,5,7,7,8,9,9,0,10,10,8,9,9,11,11,11,0,10,9,0,11,11,0,13,13,0,10,10,6,7,7,8,10,10,0,12,12,9,10,10,10,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,10,10,0,11,11,0,11,11,0,11,11,0,13,13,0,11,11,0,11,11,0,15,15,0,10,10,0,8,8,0,10,10,0,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,11,11,0,7,7,0,10,10,0,12,12,0,10,10,0,12,12,0,12,12,0,13,13,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,9,9,0,0,0,8,8,0,0,0,9,9,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,5,5,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,7,7,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,7,7,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,9,9,0,0,0,10,10,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,11,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,8,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,5,16,9,9,13,18,21,4,2,21,6,6,10,15,21,16,19,6,5,7,10,13,16,8,6,5,4,4,8,13,16,8,5,6,4,4,7,12,15,13,10,9,7,7,9,13,16,18,15,13,12,9,7,10,14,21,18,13,13,7,5,8,12,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,4,4,4,4,4,4,4,4,3,4,4,5,5,4,4,5,5,5,4,5,4,5,5,5,5,6,5,6,5,6,5,6,5,1,4,4,8,8,8,8,9,9,10,10,10,10,4,6,5,8,7,9,9,9,9,10,9,11,9,4,5,6,7,8,9,9,9,9,9,10,9,10,8,9,8,9,8,10,9,11,9,12,10,12,10,8,8,9,8,9,9,10,9,11,10,12,10,12,9,10,10,11,10,12,11,12,11,12,12,12,12,9,10,10,11,11,11,11,11,12,12,12,12,12,10,11,11,12,12,12,12,12,12,12,12,12,12,10,11,11,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,13,12,13,12,13,12,12,11,12,12,12,12,12,12,13,12,12,12,12,12,12,12,12,13,13,12,13,12,13,12,13,12,12,12,13,12,13,12,13,12,13,12,13,12,12,12,1,3,2,3,3,4,13,9,9,12,15,17,4,2,18,5,7,10,14,18,11,8,6,5,6,8,11,14,8,5,5,3,5,8,11,13,9,6,7,5,5,7,9,10,11,10,9,8,6,6,8,10,14,14,11,11,9,8,9,10,17,17,14,13,10,9,10,10,1,9,9,6,9,9,5,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,7,7,7,7,7,7,7,8,8,9,9,9,9,7,7,8,8,8,9,9,9,9,7,8,6,7,7,8,8,8,8,8,8,9,8,8,10,9,9,10,8,8,10,8,8,10,9,9,10,8,8,6,6,6,8,6,6,8,7,7,8,7,7,10,8,8,9,7,7,9,7,7,10,8,9,9,7,7,7,7,7,10,8,8,11,8,8,10,8,8,12,9,9,12,8,8,11,9,9,12,9,9,11,8,8,7,7,7,10,9,9,10,9,9,10,9,9,11,10,10,10,9,9,11,9,9,11,10,10,11,9,9,9,8,8,10,9,9,10,9,9,11,9,9,11,10,10,11,9,9,11,9,9,11,10,10,11,9,9,8,8,8,11,9,9,11,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,9,12,8,8,8,7,7,10,9,9,10,9,9,11,9,9,11,11,11,11,9,9,11,10,10,11,11,11,11,9,9,10,9,9,11,9,9,11,9,10,11,10,9,11,10,10,11,9,9,11,9,10,11,10,10,11,9,9,1,6,6,7,7,7,7,8,8,7,9,9,11,11,11,9,8,8,8,9,9,12,11,11,9,8,8,6,7,7,10,11,10,10,10,10,11,11,10,14,13,14,12,11,11,11,11,11,15,14,14,13,12,12,5,6,6,8,5,5,8,7,7,8,8,8,12,10,10,9,7,7,9,7,8,12,10,10,10,7,7,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,10,10,11,10,10,16,13,14,14,10,10,7,7,7,12,11,11,12,11,11,11,11,11,16,15,15,14,12,12,12,11,11,16,15,16,14,12,12,10,9,9,14,11,11,13,11,11,12,11,11,16,14,14,14,11,11,12,11,11,17,15,15,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,16,14,13,14,10,10,12,10,10,17,14,14,14,10,10,8,7,7,13,11,11,12,11,11,12,11,11,16,15,14,14,12,12,12,11,11,16,15,14,15,12,12,11,10,10,13,11,11,13,12,11,13,11,11,17,14,14,14,11,11,13,11,11,17,14,15,14,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,7,7,14,14,7,7,7,15,15,0,12,12,15,15,0,13,13,15,15,7,8,8,15,15,10,10,10,16,16,9,8,8,15,15,0,13,13,18,17,0,13,13,16,16,8,8,8,15,15,12,11,11,16,16,9,8,8,15,15,0,13,13,18,18,0,13,13,16,16,0,14,14,17,17,0,20,0,19,20,0,12,12,16,16,0,16,16,20,22,0,14,14,16,16,0,14,14,17,17,0,20,22,20,19,0,13,13,15,16,0,17,18,0,21,0,15,15,16,16,5,7,7,13,13,8,9,9,14,14,10,10,10,14,14,0,20,22,18,18,0,22,21,18,17,9,10,10,14,14,12,12,12,17,17,12,10,10,14,14,0,0,20,17,17,0,22,21,17,18,11,10,10,14,14,14,13,13,18,18,12,11,11,14,14,0,22,21,18,19,0,20,0,17,17,0,22,0,18,18,0,0,0,0,0,0,20,20,17,17,0,22,0,22,21,0,21,0,19,18,0,22,22,18,18,0,0,0,0,0,0,21,0,17,17,0,22,0,20,20,0,0,0,19,18,6,6,6,12,12,8,6,6,10,10,8,6,6,13,12,0,10,10,11,11,0,11,11,13,13,8,7,7,13,13,11,9,9,13,13,10,6,6,12,12,0,10,10,14,14,0,10,10,13,13,9,7,7,13,13,12,10,10,13,13,10,6,6,12,12,0,11,11,15,15,0,10,10,13,13,0,12,12,15,14,0,19,20,16,17,0,9,9,13,13,0,14,14,20,21,0,12,11,13,12,0,12,12,15,14,0,20,19,17,17,0,10,10,12,13,0,15,15,22,21,0,12,12,12,13,0,10,10,12,12,0,11,11,15,15,0,11,11,15,15,0,15,15,22,22,0,16,17,0,0,0,11,11,15,15,0,14,14,18,18,0,11,11,16,16,0,16,15,0,21,0,16,16,0,0,0,12,12,15,15,0,14,14,19,19,0,11,11,15,15,0,15,15,22,0,0,16,16,22,0,0,16,16,0,21,0,0,0,0,0,0,15,15,19,20,0,18,18,0,0,0,17,17,0,0,0,17,17,0,0,0,0,0,0,0,0,16,15,22,21,0,20,20,0,0,0,18,18,0,0,0,10,10,12,12,0,10,10,11,11,0,11,11,12,12,0,11,11,9,9,0,13,12,12,12,0,11,11,13,13,0,13,13,12,12,0,10,10,12,12,0,13,12,13,13,0,12,12,12,12,0,11,11,13,13,0,13,13,12,12,0,10,10,12,12,0,13,13,14,13,0,12,12,12,12,0,14,13,13,14,0,20,21,15,15,0,11,11,12,12,0,15,16,20,20,0,12,13,10,10,0,13,13,14,13,0,20,20,15,15,0,11,11,12,12,0,16,17,21,21,0,13,13,11,11,6,7,7,16,15,11,9,9,14,15,12,9,9,16,16,0,13,13,15,15,0,14,14,17,17,10,9,9,16,16,14,12,12,16,16,12,9,9,15,15,0,13,13,17,18,0,13,13,15,15,12,10,10,17,17,15,12,12,17,17,13,9,9,16,16,0,13,13,18,19,0,14,14,16,16,0,15,15,18,18,0,0,0,20,19,0,12,12,17,16,0,16,17,0,21,0,14,15,16,16,0,15,15,18,18,0,0,22,19,21,0,13,13,16,16,0,18,17,22,22,0,15,15,16,16,7,7,7,13,13,11,10,10,15,15,12,10,10,14,14,0,21,0,18,17,0,21,22,18,18,11,10,10,15,15,14,12,12,17,17,14,11,11,14,14,0,21,20,18,18,0,22,21,18,17,12,11,10,16,16,16,14,14,17,19,14,11,11,15,15,0,0,22,19,19,0,21,22,18,18,0,21,0,18,19,0,0,0,22,0,0,22,21,17,17,0,0,0,20,22,0,0,21,18,18,0,0,0,19,20,0,0,0,0,0,0,0,21,17,17,0,0,0,22,21,0,0,0,19,19,10,9,9,14,13,13,10,10,12,12,13,10,10,14,14,0,13,13,12,12,0,15,14,16,15,13,10,10,14,14,15,12,12,14,14,15,10,10,14,14,0,14,14,15,15,0,14,13,14,14,13,10,10,15,15,17,13,13,15,15,14,10,10,14,14,0,14,14,15,16,0,14,14,15,15,0,15,15,16,16,0,21,22,17,18,0,12,12,14,14,0,17,17,20,21,0,14,14,14,14,0,15,15,16,16,0,21,22,18,18,0,13,13,14,14,0,18,18,22,0,0,15,15,14,14,0,11,11,13,13,0,12,12,16,15,0,12,12,16,16,0,16,16,0,0,0,16,17,0,22,0,12,12,16,16,0,14,14,17,18,0,11,11,16,16,0,15,15,0,21,0,16,16,21,22,0,12,12,16,16,0,15,15,19,19,0,12,12,17,16,0,16,16,21,22,0,16,16,0,0,0,17,17,0,22,0,0,0,0,0,0,15,15,19,20,0,17,19,0,0,0,17,17,22,0,0,17,17,0,22,0,0,0,0,0,0,15,15,21,0,0,19,20,0,0,0,19,18,22,0,0,11,12,14,14,0,11,11,14,14,0,12,12,15,15,0,13,13,13,13,0,14,14,16,16,0,12,12,15,15,0,14,14,16,15,0,11,11,15,15,0,13,13,16,16,0,13,13,15,15,0,12,12,15,15,0,15,14,16,16,0,11,11,15,15,0,14,14,17,17,0,13,13,15,15,0,15,15,16,16,0,0,0,18,18,0,12,12,14,14,0,16,16,22,0,0,14,14,15,15,0,15,15,16,17,0,21,22,18,18,0,13,13,15,14,0,18,17,22,0,0,14,14,15,15,8,8,8,16,15,12,10,10,16,15,12,10,10,16,16,0,14,14,16,17,0,14,14,17,16,12,10,10,17,18,14,12,12,18,18,14,10,10,16,16,0,14,14,18,18,0,14,14,16,16,12,9,9,16,16,17,13,13,16,17,14,9,9,15,15,0,14,14,18,19,0,13,13,15,15,0,15,15,18,19,0,0,0,22,21,0,13,13,16,16,0,16,16,22,0,0,15,15,16,16,0,14,14,18,17,0,0,0,20,0,0,13,13,16,16,0,18,18,0,0,0,15,15,16,16,8,7,7,13,13,12,10,10,15,15,12,10,10,14,14,0,22,22,19,18,0,0,0,18,18,12,10,10,15,15,14,13,13,17,17,14,11,11,15,15,0,19,20,18,18,0,22,21,17,18,13,11,11,15,15,16,13,13,18,18,14,11,11,14,15,0,22,21,20,19,0,22,21,17,17,0,0,22,19,18,0,0,0,0,0,0,22,20,17,17,0,0,0,21,20,0,0,0,19,17,0,0,22,19,19,0,0,0,0,0,0,22,20,18,17,0,0,0,0,0,0,0,0,18,18,0,10,10,14,14,0,11,11,14,14,0,11,11,15,15,0,14,14,14,14,0,15,15,16,16,0,11,11,16,16,0,13,13,16,16,0,11,11,15,15,0,14,14,16,16,0,14,14,15,15,0,11,11,15,15,0,13,13,15,15,0,10,10,15,15,0,15,15,17,17,0,14,14,14,14,0,16,16,16,16,0,0,22,19,19,0,13,13,14,14,0,17,17,0,0,0,15,15,14,14,0,16,16,17,17,0,0,22,18,18,0,13,13,14,14,0,21,18,0,0,0,15,15,14,14,0,11,11,13,13,0,12,12,15,15,0,12,12,16,15,0,16,16,0,0,0,17,17,22,22,0,12,12,16,16,0,14,14,18,18,0,11,12,16,16,0,15,16,0,21,0,16,16,22,21,0,12,12,16,16,0,15,15,19,20,0,11,12,16,16,0,15,15,20,22,0,16,16,0,22,0,17,17,22,0,0,0,0,0,0,0,15,15,21,22,0,19,18,0,0,0,17,17,0,0,0,17,17,0,22,0,0,0,0,0,0,16,15,22,0,0,19,19,0,0,0,17,18,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,15,15,0,13,13,14,14,0,15,15,16,17,0,12,12,16,16,0,14,14,16,16,0,12,11,15,16,0,14,14,16,17,0,14,14,16,16,0,13,12,16,16,0,15,15,16,16,0,11,11,15,15,0,14,14,16,16,0,14,14,15,15,0,15,15,18,17,0,0,22,0,20,0,13,13,15,15,0,16,17,22,22,0,14,14,15,15,0,15,15,17,18,0,20,0,19,19,0,13,13,15,15,0,18,18,22,0,0,14,14,15,15,0,11,11,16,16,0,14,14,17,16,0,13,13,17,17,0,16,16,17,17,0,17,17,18,19,0,12,12,16,17,0,15,15,18,18,0,12,12,16,16,0,16,16,19,18,0,16,16,17,16,0,12,13,17,17,0,17,16,18,17,0,13,12,16,16,0,16,16,18,19,0,16,16,16,17,0,16,16,18,18,0,22,0,22,22,0,13,13,16,16,0,19,18,22,20,0,16,15,16,16,0,16,17,18,18,0,0,0,22,20,0,14,14,16,16,0,19,19,0,0,0,16,16,16,16,0,9,9,13,13,0,13,13,15,15,0,14,14,15,15,0,0,22,17,18,0,22,0,18,19,0,12,12,15,15,0,15,16,17,17,0,14,14,14,14,0,22,0,18,18,0,21,22,17,17,0,13,13,15,15,0,17,17,17,18,0,14,14,15,15,0,22,21,21,19,0,20,21,17,17,0,21,21,19,18,0,0,0,0,0,0,21,21,17,17,0,0,0,22,22,0,0,22,19,18,0,0,21,19,18,0,0,0,0,22,0,19,20,17,17,0,0,0,0,22,0,0,0,19,18,0,19,19,15,16,0,21,19,16,17,0,0,21,17,17,0,0,22,17,17,0,22,22,18,19,0,20,20,16,16,0,0,22,18,18,0,20,19,16,17,0,22,21,20,19,0,0,21,17,17,0,21,20,17,17,0,0,0,18,18,0,19,19,17,16,0,22,0,19,19,0,21,22,17,18,0,0,22,19,18,0,0,0,19,20,0,19,19,16,16,0,22,22,22,0,0,20,22,16,16,0,22,20,18,19,0,0,0,20,19,0,20,20,16,16,0,0,0,0,0,0,22,20,17,16,0,11,11,13,13,0,14,13,15,15,0,13,13,16,15,0,18,17,21,0,0,18,18,21,0,0,12,12,15,15,0,15,16,17,18,0,12,12,15,15,0,17,17,22,20,0,17,18,22,0,0,12,12,17,16,0,16,17,19,19,0,13,13,16,16,0,17,17,0,22,0,17,17,0,21,0,18,18,20,22,0,0,0,0,0,0,15,15,21,20], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+491187);
/* memory initializer */ allocate([20,19,0,0,0,18,18,22,0,0,17,17,22,0,0,0,0,0,0,0,15,16,20,22,0,20,21,0,0,0,19,18,0,0,0,15,15,19,19,0,17,16,20,20,0,16,17,20,21,0,18,17,0,0,0,19,19,0,0,0,15,15,21,19,0,19,19,0,0,0,15,15,22,22,0,18,18,0,22,0,17,18,22,21,0,15,15,20,19,0,19,19,0,0,0,15,15,20,22,0,18,19,20,0,0,18,17,21,21,0,18,18,19,22,0,0,0,0,0,0,15,15,20,19,0,19,19,0,0,0,18,18,21,22,0,18,18,22,0,0,0,0,0,0,0,15,15,19,20,0,21,21,0,0,0,17,17,20,20,0,12,12,17,17,0,14,14,16,17,0,13,14,17,17,0,16,16,17,17,0,17,17,17,19,0,13,13,17,17,0,16,16,18,18,0,13,13,16,16,0,16,16,18,18,0,16,16,17,17,0,13,13,17,17,0,17,17,18,17,0,12,12,15,16,0,17,18,19,20,0,16,16,16,16,0,17,16,18,19,0,0,22,21,22,0,14,14,16,16,0,19,19,0,0,0,16,16,16,16,0,16,16,18,17,0,0,22,21,21,0,14,14,16,16,0,22,20,22,0,0,16,16,15,15,0,9,9,13,13,0,14,14,15,15,0,14,14,14,14,0,22,22,18,18,0,0,22,18,18,0,12,12,15,15,0,16,16,18,17,0,14,14,14,14,0,20,21,18,18,0,22,21,17,17,0,13,13,15,15,0,17,17,18,18,0,14,14,14,14,0,0,21,18,19,0,0,22,17,17,0,22,22,19,18,0,0,0,0,0,0,19,21,17,17,0,0,0,22,20,0,0,21,18,19,0,0,22,18,18,0,0,0,0,22,0,20,22,17,17,0,0,0,20,22,0,0,0,18,18,0,19,21,16,16,0,20,22,16,17,0,20,0,17,17,0,22,0,18,17,0,21,0,18,19,0,20,20,17,17,0,22,0,18,18,0,21,20,17,17,0,0,20,20,19,0,0,21,18,17,0,21,21,17,17,0,22,0,18,17,0,19,19,17,17,0,0,22,20,21,0,0,21,17,17,0,22,0,18,18,0,0,0,20,22,0,20,19,16,16,0,0,0,0,0,0,22,22,17,17,0,22,0,18,19,0,0,0,21,20,0,19,21,16,17,0,0,0,0,0,0,22,22,17,16,0,11,11,13,13,0,13,13,15,15,0,13,13,15,15,0,17,17,22,21,0,18,18,22,0,0,12,13,16,15,0,15,16,18,18,0,13,13,16,16,0,17,17,0,22,0,17,17,22,22,0,13,13,16,16,0,16,16,19,18,0,13,13,16,16,0,18,17,0,20,0,18,17,20,0,0,17,17,21,0,0,0,0,0,0,0,15,15,21,22,0,19,20,0,0,0,18,18,0,0,0,18,17,0,0,0,0,0,0,0,0,16,16,22,22,0,20,20,0,0,0,21,19,0,0,0,15,15,20,19,0,16,16,22,20,0,17,17,0,22,0,18,18,0,22,0,19,17,0,0,0,15,16,22,20,0,18,19,0,0,0,16,16,22,20,0,18,18,0,22,0,18,18,22,0,0,16,16,21,20,0,19,20,0,22,0,16,16,0,22,0,18,18,0,22,0,18,18,0,21,0,19,18,0,22,0,0,0,0,0,0,16,16,21,20,0,20,0,0,0,0,18,18,21,0,0,18,18,0,0,0,0,0,0,0,0,16,16,21,19,0,0,0,0,0,0,18,18,0,21,3,4,5,8,8,12,10,10,12,12,12,10,10,12,12,13,11,11,12,12,13,12,12,12,12,13,10,10,13,13,13,13,13,13,13,13,10,10,13,13,13,11,11,13,13,14,13,13,12,12,13,10,10,13,13,13,13,13,13,13,13,10,10,12,12,13,11,11,13,13,13,13,13,12,12,13,12,12,13,13,13,13,13,13,13,14,11,11,12,12,14,12,12,13,12,14,14,14,12,12,13,14,14,13,13,14,13,13,13,13,14,14,14,12,12,14,13,13,13,13,14,14,14,12,12,12,8,8,11,11,12,12,12,11,11,12,11,11,10,10,13,12,12,10,10,13,12,12,10,10,13,12,12,12,12,14,12,12,12,12,13,13,13,11,11,14,12,12,11,11,14,12,12,12,12,14,12,12,12,12,13,12,12,12,12,13,13,13,11,11,14,12,12,11,11,14,12,12,12,12,14,13,13,12,12,14,12,12,12,11,14,13,13,11,11,14,13,12,11,11,14,13,13,11,11,14,13,13,12,12,14,12,12,12,12,15,13,13,12,12,14,12,12,11,11,14,13,13,11,11,12,9,9,10,10,12,7,7,11,11,12,9,9,12,12,13,10,10,10,10,14,14,14,11,11,13,9,9,12,12,14,14,14,12,12,13,8,8,11,11,14,9,9,12,12,14,14,14,11,11,13,9,9,12,12,14,14,14,12,12,14,8,8,11,11,14,9,9,12,12,14,14,14,11,11,14,10,10,12,12,14,14,14,13,13,14,9,9,11,11,14,10,10,12,12,14,14,14,11,11,14,14,15,12,12,15,14,14,14,14,15,14,14,11,11,14,14,14,12,12,14,14,14,11,11,14,11,11,10,10,14,10,10,10,10,14,10,10,10,10,15,11,11,9,9,14,12,12,9,9,15,11,11,11,11,15,13,13,11,11,15,10,10,10,10,15,11,11,10,10,15,13,13,11,11,15,11,11,11,11,15,13,13,11,11,15,10,10,10,10,15,11,11,10,10,15,13,13,11,11,15,12,12,11,11,15,13,13,11,11,15,11,11,10,10,15,12,12,10,10,15,13,13,10,10,15,14,14,11,11,15,13,13,11,11,15,14,14,10,11,15,13,13,10,10,15,13,14,10,10,14,13,13,10,10,14,13,13,10,10,14,13,13,10,10,14,13,13,9,9,14,14,14,9,9,15,14,14,11,11,15,14,14,10,10,15,14,14,10,10,15,14,14,11,11,15,14,14,10,10,15,14,14,11,11,15,14,14,10,10,14,14,14,10,10,15,14,14,10,10,14,14,14,10,10,15,14,14,11,11,15,14,14,11,11,14,14,14,10,10,15,14,14,10,10,14,14,14,9,9,15,15,15,11,11,15,14,14,12,12,15,15,14,10,10,15,14,14,10,10,14,15,15,9,9,14,10,10,12,12,17,9,9,12,12,17,10,10,13,13,17,11,11,12,12,18,14,14,12,12,17,10,10,13,13,17,14,14,12,12,17,9,9,12,12,17,11,11,12,12,17,14,14,12,12,18,10,10,13,13,18,14,14,13,13,18,9,9,12,12,18,10,10,13,13,18,14,14,12,12,18,11,11,13,13,18,14,14,13,13,18,10,10,12,12,17,11,11,12,12,17,14,14,12,12,18,15,15,13,13,18,14,14,14,14,18,15,15,12,12,18,14,14,12,12,18,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,15,15,12,12,14,15,15,11,11,15,15,15,11,11,14,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,14,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,12,12,15,15,15,12,12,14,15,15,12,12,14,15,14,12,12,14,15,15,11,11,15,14,14,12,12,15,15,15,12,12,15,16,16,12,12,15,15,15,12,12,15,15,15,12,12,15,15,15,12,12,13,13,13,11,10,14,14,15,11,11,14,14,14,12,12,15,14,14,10,10,15,15,15,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,14,15,15,12,12,14,14,14,12,12,14,15,15,11,11,14,15,15,12,12,15,15,15,11,11,15,15,15,12,12,15,14,14,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,10,10,15,15,16,12,12,15,15,15,14,14,15,15,15,11,11,15,15,15,12,12,15,15,15,11,11,14,11,11,10,10,15,9,9,12,12,15,10,10,12,12,15,11,11,11,11,15,14,14,12,12,15,10,10,13,13,15,14,14,12,12,15,9,9,12,12,15,10,10,13,13,15,13,13,12,11,15,10,10,12,12,15,14,14,12,12,15,9,9,11,11,15,11,11,12,12,15,13,13,11,11,15,11,11,13,13,15,13,14,13,14,15,11,11,11,11,15,11,11,12,12,15,14,14,11,11,15,14,14,13,13,15,14,14,20,20,15,14,14,12,12,15,14,14,12,12,15,14,14,11,11,14,13,13,10,10,14,13,13,12,12,14,14,13,12,12,15,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,14,14,13,13,15,14,14,12,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,15,14,14,12,11,15,14,14,12,12,15,14,14,13,13,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,15,15,13,13,15,15,15,13,13,15,14,14,13,13,15,15,15,13,13,15,14,15,12,12,15,15,15,13,13,14,10,10,12,13,17,9,9,12,12,17,10,10,13,13,17,11,11,12,12,18,14,14,12,12,18,10,10,13,13,18,14,14,12,12,17,9,9,12,12,18,10,11,13,13,18,14,14,12,12,17,10,10,12,12,17,14,14,12,12,17,9,9,12,12,17,11,11,12,12,17,14,14,12,12,18,11,11,12,12,18,14,14,13,13,18,11,11,12,12,18,11,11,12,12,18,14,14,12,12,18,15,15,12,12,18,14,14,13,13,18,15,15,12,12,17,14,14,12,12,17,15,15,12,12,13,7,7,11,11,14,15,15,11,11,14,15,15,11,11,14,15,14,12,12,15,15,15,12,11,14,15,15,12,12,14,15,15,12,12,14,15,15,11,11,14,15,15,11,11,15,15,15,13,13,14,15,15,11,11,14,15,15,13,12,14,15,15,11,11,14,15,15,11,11,15,15,15,13,13,14,15,15,12,12,15,15,15,12,12,15,15,15,11,11,15,15,15,11,11,15,15,15,12,12,15,15,15,13,13,15,16,16,12,12,15,15,15,12,13,15,15,15,12,12,15,15,15,12,12,13,13,13,11,11,14,14,14,11,11,14,14,14,12,12,14,14,14,10,10,15,14,14,11,11,14,15,15,12,12,14,14,14,12,12,14,15,15,11,11,14,15,14,12,12,15,14,14,11,11,14,15,15,12,12,14,14,14,11,11,14,15,15,11,11,14,14,14,12,12,15,15,14,11,11,15,15,15,12,12,15,14,14,12,12,14,15,15,11,11,14,15,14,11,11,15,15,15,10,10,15,15,15,12,12,15,14,14,14,13,15,15,15,11,11,15,15,15,11,11,15,15,15,10,10,14,11,11,10,10,15,9,9,12,12,15,10,10,12,12,15,11,11,11,11,15,14,14,12,12,15,10,10,13,13,15,13,13,12,12,15,9,9,12,12,15,11,11,13,13,15,14,14,12,12,15,10,10,13,13,15,13,14,12,12,15,9,9,12,12,15,10,10,13,13,15,13,13,11,11,15,11,11,13,13,15,14,14,13,13,15,10,10,11,11,15,11,11,12,12,15,14,14,11,11,15,14,14,13,13,15,14,14,21,20,15,14,14,11,11,15,14,14,12,12,15,14,14,11,11,14,13,13,10,10,14,13,13,11,11,15,14,14,12,12,15,14,14,12,12,14,14,14,12,12,15,14,14,12,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,15,14,14,13,13,15,14,14,12,12,15,14,14,13,13,14,14,14,11,11,15,14,14,11,11,14,14,14,13,13,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,14,14,14,13,13,15,15,15,13,13,16,14,14,12,13,15,15,15,13,13,15,14,14,12,12,15,15,15,13,13,15,11,11,13,12,18,10,10,12,12,17,11,11,12,12,18,12,12,11,11,18,14,14,12,12,18,11,11,13,13,17,14,14,12,12,18,10,10,12,12,18,12,12,12,12,18,14,15,12,12,18,11,11,13,13,18,14,14,12,12,17,10,10,12,12,18,11,11,12,12,18,15,14,12,12,17,12,12,12,12,17,14,14,12,12,17,11,11,11,11,17,12,12,12,11,17,15,15,11,11,18,15,15,12,12,18,14,15,13,13,18,15,15,11,11,17,15,15,12,12,18,15,15,11,11,14,9,9,11,11,14,15,15,11,11,15,15,15,11,11,15,15,15,12,11,15,15,15,12,12,15,15,15,11,11,15,15,15,13,13,14,15,15,11,11,15,15,15,11,11,15,15,15,13,13,15,15,15,11,11,15,15,15,13,13,15,15,15,11,11,15,15,15,11,11,15,15,15,13,13,15,15,15,12,12,15,15,15,13,13,15,15,14,11,11,15,15,15,12,12,15,15,15,12,12,16,15,15,13,13,15,16,16,13,13,16,15,15,12,12,15,15,15,13,12,15,15,15,12,12,13,12,12,11,11,14,14,14,11,11,14,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,14,14,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,12,12,15,14,14,11,11,15,14,14,12,12,15,14,14,12,12,14,15,15,11,11,15,14,14,12,12,15,14,14,11,11,15,15,15,12,12,15,14,14,12,12,15,15,15,11,11,15,14,14,11,11,15,14,15,11,11,15,15,15,12,12,15,14,14,13,13,16,15,15,11,11,15,14,14,12,12,15,15,15,11,11,14,11,11,9,9,15,10,10,12,12,14,11,11,12,12,15,12,12,12,12,15,14,14,13,13,15,11,11,13,13,15,14,14,13,13,15,10,10,12,12,15,12,12,13,13,15,14,14,13,13,15,11,11,12,12,15,14,14,13,13,14,10,10,12,12,15,12,12,13,13,15,14,14,12,12,15,12,12,13,13,15,14,14,15,15,15,11,11,12,12,15,12,12,12,13,15,14,14,12,12,15,15,15,14,14,15,14,14,20,20,15,14,14,12,12,15,14,14,13,13,15,14,14,12,12,14,13,13,10,10,14,13,13,11,11,14,13,13,12,12,14,14,14,12,12,15,14,14,13,13,15,14,14,12,12,14,14,14,14,14,14,14,14,11,11,15,14,14,12,12,15,14,14,14,14,15,14,14,12,12,14,14,14,14,14,14,14,14,11,11,15,14,14,12,12,14,14,14,14,14,15,14,14,12,12,15,14,14,13,13,15,14,14,12,12,15,14,14,12,12,14,14,14,14,13,15,15,15,14,14,15,14,14,13,13,15,15,15,14,14,15,14,14,13,13,15,15,15,13,13,14,13,13,13,13,18,15,15,12,12,18,15,15,13,12,18,15,16,11,11,18,16,17,12,12,18,15,15,13,13,18,17,17,12,12,18,15,15,12,12,17,15,15,12,12,18,17,17,12,12,18,15,15,13,13,18,16,17,12,12,17,15,15,12,12,18,15,15,12,12,18,16,17,11,12,18,16,16,12,12,17,16,17,12,12,18,15,15,11,11,18,15,15,12,12,18,17,17,11,11,17,17,17,12,12,18,16,16,13,13,18,17,17,11,11,18,16,16,12,12,18,17,17,11,11,15,14,14,11,11,16,15,15,11,11,16,15,15,12,12,16,15,15,12,12,17,15,15,14,13,16,15,15,12,12,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,18,15,15,13,13,16,15,15,11,11,17,15,15,14,14,16,15,15,11,11,16,15,15,12,12,17,15,15,13,13,16,15,15,12,12,17,16,15,14,14,16,14,15,12,12,16,15,15,12,12,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,15,12,13,11,11,15,14,14,12,12,16,14,14,12,12,16,14,14,12,12,16,14,14,12,12,16,14,14,13,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,17,14,14,12,12,16,14,14,12,12,17,14,14,13,13,15,15,15,12,12,16,14,14,12,12,17,14,14,12,12,17,15,15,12,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,17,15,15,12,12,18,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,12,12,14,15,15,9,9,15,15,15,12,12,15,15,15,13,13,15,15,15,14,14,15,15,15,19,19,15,15,16,13,13,15,15,16,19,20,15,15,15,13,12,15,16,16,14,14,15,15,15,19,19,15,15,15,13,13,15,16,15,20,19,14,15,15,13,13,15,15,15,14,14,15,15,15,19,19,15,15,15,14,14,15,16,16,19,20,15,15,15,14,14,15,15,15,14,14,15,15,15,19,19,15,15,15,20,19,15,16,16,20,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,20,14,13,13,10,10,14,14,14,11,11,14,14,14,12,12,15,14,14,13,13,15,14,14,19,20,15,14,14,12,12,14,14,14,20,19,14,14,14,11,11,15,14,14,12,12,15,14,14,20,20,15,14,14,12,12,14,14,14,20,19,14,14,14,11,11,15,14,14,12,12,15,14,14,19,20,15,14,14,13,13,15,14,14,22,19,15,15,14,12,12,15,14,14,13,13,14,15,15,22,20,15,15,15,20,20,15,14,14,21,20,15,15,15,20,21,15,14,14,20,20,14,15,15,20,20,1,6,6,7,7,7,7,7,7,7,8,8,10,11,11,9,8,8,8,8,8,11,11,11,10,8,8,5,7,7,9,11,11,10,11,11,10,11,11,12,13,14,11,12,12,10,11,11,13,14,14,12,12,12,5,6,6,8,6,6,8,7,7,8,7,7,11,10,10,10,7,7,9,7,7,12,11,11,11,7,7,7,7,7,11,10,10,12,10,10,11,10,10,15,13,13,13,10,10,12,11,11,15,13,13,14,11,11,7,7,7,11,11,11,12,11,11,12,11,11,14,14,14,14,12,12,12,12,12,16,15,15,14,12,12,0,10,10,0,11,11,0,11,12,0,11,11,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,8,8,8,12,10,10,12,10,10,13,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,13,11,11,12,11,11,15,14,14,14,12,12,13,12,12,15,14,14,15,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,13,13,0,14,15,0,12,12,3,4,4,0,8,8,0,8,8,0,9,9,0,10,10,0,8,8,0,9,9,0,10,10,0,8,8,0,7,7,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,7,7,0,6,6,0,7,7,0,7,7,0,10,10,0,6,6,0,7,7,0,10,10,0,6,5,0,8,8,0,7,7,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,0,6,6,0,9,10,0,10,10,0,10,10,0,11,11,0,9,9,0,10,10,0,11,11,0,9,9,0,8,8,0,8,8,0,8,8,0,9,9,0,9,9,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,7,7,0,7,7,0,8,8,0,9,9,0,7,7,0,7,7,0,9,9,0,6,6,0,6,6,0,10,10,0,10,10,0,10,10,0,12,12,0,9,9,0,10,10,0,12,12,0,9,9,0,8,8,0,7,7,0,8,8,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,7,7,1,5,5,5,8,8,0,8,8,6,9,9,8,10,10,0,8,8,0,9,9,0,12,12,0,8,8,4,7,7,6,10,10,0,12,12,7,11,11,9,12,12,0,12,12,0,13,13,0,15,15,0,12,12,0,7,7,0,7,7,0,8,8,0,8,8,0,10,10,0,7,7,0,8,8,0,11,11,0,7,7,5,7,7,9,9,9,0,11,10,9,9,9,11,12,12,0,10,10,0,11,11,0,13,13,0,11,11,6,7,7,9,10,10,0,12,12,10,11,11,11,12,12,0,12,12,0,13,13,0,15,15,0,12,12,0,10,10,0,11,11,0,11,11,0,12,12,0,13,13,0,11,11,0,12,12,0,15,15,0,11,11,0,8,8,0,10,10,0,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,11,11,0,7,7,0,10,10,0,12,12,0,10,10,0,12,13,0,12,12,0,13,13,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,7,0,0,0,8,8,0,0,0,8,8,0,0,0,11,11,0,0,0,0,0,0,0,0,10,9,0,0,0,0,0,0,0,0,9,9,0,0,0,10,11,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,5,5,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,5,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,5,6,0,0,0,7,7,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,11,0,0,0,9,9,0,0,0,10,10,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,11,12,0,0,0,0,0,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,8,8,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,7,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,7,7,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,11,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,8,8,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,9,9,0,0,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,10,0,0,0,9,9,0,0,0,10,10,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,16,9,9,12,17,18,4,2,18,6,5,9,13,15,10,7,7,6,7,9,13,13,8,5,6,5,5,7,11,12,8,4,7,4,3,6,10,12,11,8,9,7,6,8,11,12,15,13,13,11,9,7,10,12,16,12,16,12,6,5,8,11,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,4,4,4,4,4,4,4,4,2,4,4,5,5,4,5,5,6,5,4,5,5,5,6,5,5,6,6,6,5,6,5,6,6,1,4,4,7,7,8,8,9,9,10,10,11,11,4,6,5,8,7,9,8,10,9,11,10,11,11,4,5,6,7,8,8,9,9,10,10,10,10,11,8,9,8,10,8,10,9,11,10,11,11,11,11,8,8,9,8,10,9,10,10,11,11,11,11,11,9,10,10,11,11,11,11,11,11,12,11,12,11,9,10,10,10,11,11,11,11,11,11,12,11,12,10,11,11,12,11,12,12,12,12,12,12,12,12,10,11,11,11,11,12,12,12,13,12,12,12,12,11,12,12,12,12,13,13,12,12,12,12,12,12,11,12,12,12,12,13,13,12,13,12,12,12,12,12,13,13,13,13,13,13,12,13,12,13,12,12,12,13,13,13,13,13,13,13,12,13,12,12,12,1,3,2,3,3,4,9,8,8,10,13,16,4,2,9,5,7,10,14,18,9,7,6,5,7,9,12,16,7,5,5,3,5,8,11,13,8,7,7,5,5,7,9,11,10,10,9,8,6,6,8,10,13,14,13,11,9,8,9,10,17,18,16,14,11,10,10,10,1,9,9,6,9,9,5,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,1,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,6,7,7,7,7,7,7,7,8,8,9,9,9,8,7,7,8,8,8,9,9,9,9,8,8,6,7,7,9,8,8,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,8,9,10,8,8,7,6,6,8,6,6,9,6,6,9,7,7,10,8,8,9,6,6,9,7,7,10,9,8,9,7,7,7,7,7,11,8,8,11,9,9,10,9,9,12,9,9,12,8,8,11,9,9,12,9,9,12,8,8,8,7,7,10,9,9,10,9,9,10,9,9,11,10,11,11,9,9,11,9,9,11,11,11,11,9,9,10,8,8,11,9,9,10,9,9,11,9,9,11,10,10,11,9,9,11,9,9,12,10,10,11,9,9,8,8,8,11,9,9,12,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,10,12,8,8,9,7,7,11,9,9,11,10,10,11,9,9,11,11,11,11,9,9,11,10,10,12,11,11,11,9,10,10,9,9,11,9,9,11,10,10,11,10,10,11,11,11,11,9,9,11,9,10,11,11,11,11,9,9,1,7,7,7,8,8,7,8,8,7,9,9,10,11,11,9,8,8,7,8,9,11,11,11,9,8,8,6,7,7,10,10,10,10,10,10,10,10,10,14,14,14,12,11,11,10,11,11,15,14,14,13,11,11,6,6,6,8,5,5,8,7,7,8,7,7,11,10,10,9,7,7,9,7,7,12,10,10,10,7,7,6,8,7,12,10,10,12,10,10,11,10,10,15,14,13,13,10,10,11,10,10,16,14,14,14,10,10,7,7,7,12,11,11,12,11,11,11,11,11,16,14,14,13,12,12,11,11,11,17,15,15,14,12,12,10,9,9,13,11,11,13,11,11,12,11,11,16,14,13,14,11,11,12,11,11,17,15,14,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,16,13,14,13,10,10,11,10,10,17,14,14,14,10,10,7,7,7,12,11,11,12,11,11,12,11,11,15,14,15,14,12,12,12,11,11,17,15,15,14,12,12,10,10,9,13,11,11,13,11,11,13,11,11,16,14,14,14,11,11,13,11,11,16,15,15,15,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,7,7,14,14,7,7,7,15,15,0,13,13,16,16,0,13,13,15,15,7,8,8,15,15,9,10,10,17,16,9,8,8,15,15,0,13,13,18,17,0,13,13,16,16,8,8,8,15,15,12,11,11,16,17,9,8,8,14,14,0,13,13,18,17,0,13,13,16,15,0,14,14,18,17,0,20,22,18,20,0,12,12,16,16,0,16,16,22,20,0,14,14,16,16,0,14,14,17,17,0,22,22,22,19,0,12,13,16,16,0,17,17,0,0,0,15,15,16,16,5,7,7,13,13,9,9,9,15,14,10,10,10,14,14,0,21,21,18,17,0,21,22,18,17,9,10,10,14,14,12,12,12,17,17,12,10,10,14,14,0,19,21,18,17,0,20,22,18,18,11,10,10,14,14,14,13,13,18,17,12,11,11,14,14,0,22,19,17,18,0,20,0,18,17,0,22,21,17,17,0,0,0,0,0,0,20,22,17,17,0,22,0,21,19,0,22,0,18,18,0,0,22,18,19,0,0,0,0,0,0,19,21,17,17,0,0,0,20,20,0,0,0,18,18,6,6,6,13,12,8,6,6,11,11,8,6,6,13,13,0,9,9,11,11,0,11,11,14,14,9,7,7,13,13,11,9,9,13,13,10,6,6,13,13,0,10,10,14,14,0,10,10,13,13,9,7,7,13,14,13,9,9,13,13,10,6,6,13,12,0,11,11,15,15,0,10,10,13,13,0,12,12,15,15,0,19,0,17,17,0,9,9,13,13,0,13,14,19,20,0,11,11,13,13,0,11,11,14,14,0,19,20,17,18,0,10,10,13,13,0,15,15,21,19,0,12,12,13,13,0,10,10,12,13,0,11,11,15,15,0,11,11,15,15,0,15,15,22,0,0,16,17,22,0,0,11,11,15,15,0,14,14,18,17,0,11,11,15,16,0,15,15,22,21,0,16,16,0,20,0,12,12,16,15,0,15,14,19,19,0,11,11,16,16,0,15,15,21,0,0,16,15,0,0,0,16,16,22,21,0,0,0,0,0,0,15,15,20,20,0,18,18,0,0,0,16,17,0,0,0,17,17,0,22,0,0,0,0,0,0,15,15,21,22,0,20,18,0,0,0,18,17,22,0,0,10,10,12,11,0,10,10,10,10,0,11,11,12,12,0,11,11,9,9,0,13,13,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,12,13,13,0,12,12,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,13,13,14,0,12,12,12,12,0,13,14,14,14,0,20,21,15,15,0,12,11,12,12,0,15,16,20,22,0,13,12,11,11,0,13,13,14,13,0,20,0,16,15,0,12,12,12,12,0,16,16,22,21,0,13,13,12,12,6,7,7,16,16,11,9,9,15,15,12,9,9,16,16,0,13,13,14,14,0,14,14,16,17,10,9,9,16,16,14,12,12,16,16,12,9,9,15,15,0,13,13,18,18,0,13,13,15,16,12,10,10,17,18,15,12,12,17,17,13,9,9,16,16,0,13,13,17,18,0,14,14,16,16,0,15,15,18,18,0,22,0,20,20,0,12,12,16,16,0,16,16,20,22,0,14,14,16,16,0,15,14,18,18,0,0,22,19,21,0,13,13,16,17,0,17,17,22,22,0,15,15,16,16,7,7,7,14,14,11,10,10,15,15,12,10,10,15,14,0,22,0,18,18,0,0,21,17,18,11,10,10,15,15,14,12,12,17,17,14,11,11,15,15,0,22,20,18,18,0,0,20,18,17,12,10,10,16,16,17,14,14,19,18,14,11,11,15,15,0,21,22,19,19,0,21,22,18,18,0,22,0,19,21,0,0,0,0,0,0,22,22,18,17,0,0,0,21,20,0,22,22,20,19,0,0,22,20,20,0,0,0,0,0,0,20,21,17,17,0,0,22,21,21], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+501427);
/* memory initializer */ allocate([0,0,0,18,18,10,9,9,14,14,13,10,10,13,13,13,10,11,14,14,0,13,13,12,12,0,15,15,16,16,13,10,10,15,15,15,12,12,14,14,15,10,10,14,15,0,14,14,16,15,0,14,14,15,15,13,10,10,15,15,18,13,13,15,15,15,10,10,14,15,0,14,14,16,16,0,14,14,15,15,0,15,15,16,16,0,22,0,18,18,0,12,13,14,14,0,17,17,22,0,0,14,14,14,14,0,15,15,16,16,0,22,0,18,17,0,13,13,14,14,0,19,18,21,22,0,15,15,14,14,0,11,11,13,13,0,12,12,16,16,0,12,12,16,16,0,15,16,21,0,0,16,17,0,22,0,12,12,16,16,0,14,14,17,18,0,11,11,16,16,0,15,15,21,22,0,16,16,0,0,0,12,12,16,16,0,15,15,0,19,0,12,12,16,17,0,16,16,22,0,0,16,16,0,22,0,17,17,0,22,0,0,0,0,0,0,15,15,20,19,0,18,18,0,0,0,17,18,0,0,0,17,17,0,0,0,0,0,0,0,0,15,15,0,22,0,20,18,0,0,0,18,18,22,22,0,11,11,14,14,0,12,12,14,14,0,12,12,15,15,0,13,13,14,14,0,14,14,17,16,0,12,12,16,16,0,14,14,16,16,0,11,11,15,15,0,13,13,16,16,0,13,13,15,15,0,12,12,15,15,0,15,14,16,16,0,11,11,15,15,0,14,14,17,17,0,13,13,15,15,0,15,15,17,17,0,0,0,19,18,0,13,12,15,15,0,16,16,0,0,0,14,14,15,15,0,14,14,16,17,0,22,0,18,18,0,13,13,15,15,0,17,17,0,0,0,14,14,15,15,8,8,8,16,16,12,10,10,16,16,13,9,9,16,16,0,14,14,17,17,0,14,14,17,16,12,10,10,18,17,14,11,11,18,18,14,9,10,16,16,0,13,13,18,19,0,14,13,16,16,12,9,9,16,16,17,13,13,17,17,14,9,9,15,15,0,14,14,19,20,0,13,13,15,15,0,15,15,18,19,0,0,22,22,22,0,13,13,17,17,0,16,16,19,21,0,14,14,16,16,0,14,14,18,18,0,0,0,0,0,0,13,13,16,16,0,18,18,0,0,0,15,15,16,16,8,7,7,14,14,12,10,10,15,15,13,10,10,15,14,0,22,0,18,18,0,22,0,18,18,12,10,10,16,15,15,12,12,17,17,14,11,11,15,15,0,20,21,19,18,0,0,0,17,18,13,11,11,15,15,16,13,13,18,18,15,11,11,14,14,0,22,21,19,19,0,21,22,18,18,0,22,22,20,18,0,0,0,0,0,0,22,19,17,17,0,0,0,22,21,0,0,22,19,17,0,0,22,19,19,0,0,0,0,0,0,22,21,18,17,0,0,0,22,0,0,0,0,19,19,0,10,10,14,14,0,11,11,15,14,0,11,11,15,15,0,14,14,15,14,0,15,15,16,16,0,11,11,16,16,0,13,13,16,16,0,11,11,15,15,0,14,14,17,16,0,14,14,15,15,0,11,11,16,16,0,14,13,15,15,0,11,11,15,15,0,15,15,17,17,0,14,14,15,14,0,16,16,17,17,0,0,22,18,18,0,13,13,15,15,0,17,17,22,0,0,15,15,15,14,0,15,16,16,17,0,0,22,18,19,0,13,13,15,15,0,20,18,21,0,0,15,15,14,14,0,11,11,13,13,0,12,12,16,16,0,12,12,16,15,0,15,16,22,22,0,17,17,0,0,0,12,12,16,16,0,14,14,18,18,0,11,11,16,16,0,15,16,22,20,0,16,16,0,22,0,12,12,16,16,0,15,15,18,20,0,11,11,16,16,0,15,15,0,0,0,16,16,0,0,0,17,17,22,0,0,0,0,0,0,0,15,15,0,21,0,18,18,0,0,0,17,16,0,0,0,17,17,22,22,0,0,0,0,0,0,15,15,21,0,0,20,22,0,0,0,18,18,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,16,16,0,13,13,15,15,0,15,15,17,17,0,13,12,16,16,0,14,14,16,16,0,12,11,16,16,0,14,14,17,17,0,14,14,16,16,0,12,12,16,16,0,15,15,17,16,0,11,11,15,16,0,14,14,17,17,0,14,14,16,16,0,15,15,18,18,0,0,0,22,19,0,13,13,15,16,0,16,17,0,0,0,14,14,16,16,0,15,15,18,17,0,0,0,20,20,0,13,13,16,15,0,17,17,22,22,0,14,14,15,15,0,11,11,16,16,0,13,13,16,17,0,13,13,17,18,0,16,16,17,17,0,17,17,18,18,0,12,12,17,17,0,16,15,18,18,0,12,12,16,16,0,16,16,18,18,0,15,15,17,17,0,12,12,17,17,0,16,16,19,18,0,12,12,16,17,0,16,16,19,19,0,15,16,16,17,0,16,16,19,17,0,0,0,20,22,0,13,13,16,16,0,19,18,21,0,0,15,15,16,16,0,16,16,18,18,0,0,0,22,21,0,14,14,16,16,0,21,19,21,22,0,16,16,16,16,0,9,9,14,14,0,13,13,15,15,0,14,14,15,15,0,0,20,18,19,0,0,22,18,18,0,12,12,15,15,0,15,15,17,18,0,14,13,14,14,0,20,0,18,18,0,21,0,18,17,0,13,13,15,16,0,17,17,18,18,0,14,14,15,15,0,22,22,20,19,0,20,21,18,18,0,20,22,19,19,0,0,0,0,0,0,20,20,17,17,0,0,22,22,21,0,22,0,18,18,0,20,22,19,19,0,0,0,0,0,0,21,21,17,18,0,0,0,21,20,0,0,22,19,18,0,18,18,15,15,0,22,21,17,16,0,0,22,17,17,0,20,22,18,18,0,0,22,20,20,0,21,19,16,16,0,21,21,18,18,0,19,19,17,17,0,0,22,19,19,0,22,20,17,17,0,21,19,16,16,0,22,22,19,18,0,19,20,16,16,0,22,21,19,21,0,21,22,17,18,0,21,20,18,18,0,0,0,19,20,0,20,19,16,16,0,22,22,0,0,0,21,21,17,16,0,22,20,19,18,0,0,0,20,20,0,20,19,16,16,0,0,0,0,0,0,21,22,17,17,0,11,11,13,13,0,13,13,15,16,0,13,13,16,16,0,17,18,21,0,0,17,18,0,0,0,12,12,15,16,0,15,15,19,18,0,12,12,16,16,0,17,17,22,0,0,17,17,0,22,0,12,12,17,16,0,16,16,19,20,0,12,12,16,16,0,17,17,0,0,0,17,17,0,21,0,17,16,22,0,0,0,0,0,0,0,15,15,20,22,0,20,18,0,0,0,18,18,0,0,0,17,17,21,0,0,0,0,0,0,0,15,15,21,22,0,19,20,22,0,0,19,18,0,0,0,14,14,18,18,0,16,16,22,20,0,16,16,22,19,0,17,17,20,22,0,19,19,0,0,0,15,15,20,0,0,18,21,0,20,0,15,15,21,20,0,18,17,0,0,0,17,17,0,22,0,15,15,19,19,0,19,18,0,0,0,15,15,20,0,0,18,18,22,22,0,17,17,0,20,0,18,18,0,0,0,0,22,0,0,0,15,15,19,20,0,20,19,0,0,0,17,17,20,21,0,17,18,20,22,0,0,0,0,22,0,15,15,20,20,0,22,20,0,0,0,17,18,20,0,0,12,12,17,16,0,14,14,17,17,0,13,13,17,17,0,16,16,18,18,0,17,16,17,17,0,13,13,17,17,0,15,16,18,18,0,13,13,16,16,0,16,16,18,18,0,16,16,17,16,0,13,13,16,16,0,17,17,18,17,0,12,12,15,16,0,17,17,19,19,0,16,16,16,16,0,16,17,19,18,0,0,0,21,22,0,14,14,16,16,0,18,18,0,22,0,16,16,16,16,0,16,16,18,17,0,0,0,21,20,0,14,14,16,16,0,21,22,22,0,0,16,16,16,16,0,9,9,14,13,0,13,14,15,16,0,14,13,15,14,0,22,0,18,18,0,21,0,17,18,0,13,13,15,15,0,15,16,18,17,0,14,14,15,14,0,20,22,18,18,0,22,21,17,17,0,13,13,15,15,0,17,17,19,19,0,14,14,14,14,0,0,22,18,18,0,0,22,17,17,0,0,22,19,20,0,0,0,0,0,0,21,20,17,16,0,0,0,21,22,0,0,0,18,19,0,0,0,18,18,0,0,0,0,0,0,22,0,17,17,0,0,0,20,22,0,0,0,18,19,0,18,19,16,16,0,22,20,17,17,0,22,22,17,18,0,22,22,18,17,0,0,22,18,19,0,20,20,17,18,0,0,22,19,18,0,22,22,17,17,0,22,0,19,19,0,0,22,18,18,0,20,22,17,17,0,0,22,18,18,0,19,20,17,17,0,22,0,20,19,0,22,21,17,17,0,0,0,18,18,0,0,0,22,19,0,20,0,17,17,0,22,0,0,22,0,0,20,17,18,0,22,0,19,19,0,0,0,0,19,0,19,21,17,17,0,0,0,0,0,0,20,21,17,16,0,11,11,13,13,0,13,13,16,16,0,13,13,15,16,0,17,17,21,22,0,17,18,0,0,0,12,12,16,16,0,15,15,18,18,0,13,13,16,16,0,17,16,21,21,0,17,17,0,0,0,13,13,16,16,0,16,16,19,18,0,13,13,16,16,0,17,17,0,22,0,17,18,20,22,0,17,18,0,0,0,0,0,0,0,0,15,15,20,0,0,18,19,0,0,0,17,17,0,0,0,18,17,22,0,0,0,0,0,0,0,15,16,21,20,0,20,20,0,0,0,18,19,0,0,0,15,15,22,22,0,17,16,20,22,0,17,17,20,22,0,18,18,0,21,0,19,18,0,0,0,16,16,20,20,0,19,19,22,0,0,15,16,21,22,0,18,19,22,0,0,17,18,0,0,0,16,16,22,0,0,19,19,0,21,0,15,16,20,0,0,18,18,0,22,0,18,17,0,0,0,18,18,0,0,0,0,0,0,0,0,16,16,22,21,0,20,21,0,0,0,17,18,22,0,0,18,18,0,0,0,0,0,0,0,0,16,16,20,19,0,22,21,0,0,0,18,18,22,22,3,4,4,8,8,11,9,9,12,12,11,10,10,12,12,12,10,10,11,11,12,12,12,12,12,12,11,11,13,13,12,12,12,13,13,12,10,10,12,12,12,11,11,13,13,12,13,13,13,13,12,11,11,13,13,12,12,12,13,13,12,10,10,12,12,12,11,11,13,13,12,13,13,12,12,12,11,11,13,13,12,13,13,13,13,12,11,11,12,12,12,11,11,12,12,12,13,13,12,12,12,13,13,13,13,12,13,13,13,13,13,13,13,12,12,12,13,13,13,13,12,13,13,12,12,11,8,8,10,10,12,11,11,11,11,12,10,10,10,10,13,11,11,10,10,13,11,11,10,10,13,12,12,12,12,13,11,11,11,11,13,12,12,11,11,13,12,12,11,11,13,12,12,12,11,13,12,12,12,12,13,11,11,11,11,13,12,12,11,11,13,11,12,11,11,13,12,12,11,11,14,12,12,11,11,13,11,11,11,11,14,12,12,11,11,13,11,12,10,10,14,12,12,11,11,14,12,12,11,11,14,11,11,11,11,14,12,12,11,11,13,12,12,11,11,14,12,12,11,11,11,8,8,10,10,12,7,7,10,10,12,9,9,11,11,13,9,9,9,9,13,13,13,10,10,13,9,9,12,12,13,13,13,12,12,13,9,8,11,11,13,10,10,12,12,14,13,13,11,11,13,9,9,11,11,13,13,13,12,12,13,9,9,10,10,13,10,10,11,11,13,13,13,10,10,14,10,10,11,11,14,14,14,12,12,13,9,9,10,10,13,10,10,11,11,14,13,14,10,10,14,14,14,11,12,14,14,14,14,14,14,13,13,10,10,13,14,14,11,11,14,14,14,10,10,14,9,9,9,9,14,9,9,9,9,14,10,10,9,9,14,10,10,8,8,14,11,11,8,8,15,11,11,10,10,15,12,12,10,10,15,10,10,10,10,15,11,11,10,10,15,13,13,10,10,15,11,11,10,10,15,12,12,10,10,15,10,10,10,10,15,11,11,10,10,15,13,13,10,10,15,11,11,10,10,15,12,12,10,10,15,11,11,9,9,15,11,11,9,9,15,13,13,9,9,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,12,9,9,15,13,13,9,9,14,12,12,9,9,14,13,13,9,9,14,13,13,9,9,14,13,13,7,7,14,13,13,8,8,15,14,14,10,10,15,14,14,10,10,15,14,14,10,10,15,14,14,10,10,15,14,14,9,9,15,14,14,10,10,15,14,14,10,10,14,14,14,9,9,15,14,14,10,10,14,14,14,9,9,15,14,14,10,10,15,14,14,10,10,14,14,14,9,9,14,14,14,9,9,14,14,14,8,8,15,14,14,10,10,15,14,14,11,11,15,14,14,9,9,15,14,14,9,9,14,14,14,8,8,13,9,9,12,12,17,11,11,12,12,17,12,12,12,12,17,12,12,11,11,18,15,15,12,12,17,12,12,12,12,17,14,15,13,13,17,12,12,12,12,17,13,13,12,13,17,15,15,12,12,18,13,13,13,13,18,15,15,13,13,18,12,12,12,12,18,13,13,13,13,18,15,15,12,12,18,13,13,12,12,18,15,15,13,13,18,13,13,12,12,17,13,13,12,12,17,15,15,12,12,18,15,15,13,13,18,15,15,13,14,18,15,16,12,12,18,15,15,12,12,18,16,16,12,12,13,8,8,10,10,14,15,14,11,11,14,15,15,12,12,15,14,14,12,11,15,15,15,12,12,15,15,15,12,12,15,15,15,13,13,15,15,15,12,12,15,15,15,13,13,15,15,15,13,13,15,15,15,13,13,15,15,16,13,13,15,15,15,12,12,15,15,15,13,13,15,15,15,13,13,15,15,15,13,13,15,15,15,13,13,15,15,14,12,12,15,15,15,12,12,16,15,14,12,12,16,15,15,13,13,16,16,16,13,13,16,15,15,12,12,15,15,15,13,13,15,15,15,12,12,13,12,12,10,10,14,14,14,11,11,15,14,14,12,12,15,14,14,11,11,15,14,14,11,11,15,15,15,13,13,15,14,14,13,13,15,15,15,12,12,15,14,15,13,13,16,15,15,12,12,15,15,15,13,13,16,14,14,13,13,15,15,15,12,12,15,15,15,13,13,16,15,15,12,12,16,15,15,12,12,16,14,14,13,13,15,15,15,11,11,15,15,15,12,12,16,15,15,11,11,16,15,15,13,13,16,14,15,14,14,16,15,15,12,12,16,15,14,12,12,16,15,15,12,12,14,10,10,9,9,14,11,11,12,12,14,12,12,13,13,14,12,12,12,12,15,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,12,12,13,13,15,13,13,14,14,15,14,14,13,13,15,13,13,13,14,15,14,14,15,15,15,12,12,13,13,15,13,13,14,14,15,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,13,13,12,12,15,13,13,13,13,15,14,14,13,12,15,15,15,14,15,15,15,14,20,20,15,14,14,13,13,15,14,14,13,13,15,14,14,13,13,14,12,12,9,9,14,14,14,12,12,14,13,13,12,13,14,14,14,12,12,15,14,14,12,12,15,14,14,14,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,15,15,15,14,14,15,14,14,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,15,15,15,15,14,15,15,15,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,14,15,15,14,14,15,15,15,14,14,15,14,14,14,14,15,15,15,14,14,15,14,14,13,14,15,15,15,14,14,13,10,10,12,12,17,11,11,12,12,17,12,12,12,12,17,12,12,11,11,17,15,15,12,11,18,13,13,13,13,18,15,15,13,13,17,12,12,12,12,18,13,13,13,13,17,15,15,12,12,17,12,12,12,12,17,15,15,13,13,17,12,12,12,12,17,13,13,12,12,17,15,15,12,12,18,14,13,12,12,18,15,15,13,13,18,13,13,12,12,18,13,13,12,12,18,16,16,12,12,18,16,16,12,12,18,15,15,13,13,18,16,16,12,12,17,15,15,12,12,17,16,16,12,12,13,8,8,10,10,14,14,15,12,12,14,15,15,12,12,15,14,14,12,12,15,15,14,12,12,15,15,15,13,13,15,15,15,13,13,15,15,15,12,12,16,15,15,13,13,16,15,15,13,13,15,15,15,12,12,15,15,15,14,14,15,15,15,12,12,15,15,15,13,13,16,15,15,13,13,15,15,15,13,13,16,15,15,13,13,15,15,14,12,12,15,15,15,12,12,16,14,15,13,13,16,15,15,13,13,15,16,15,13,13,16,15,14,13,13,16,15,15,13,13,16,15,15,13,13,13,12,12,11,11,14,14,14,11,11,14,14,14,12,12,15,14,14,11,11,16,14,14,11,11,15,15,15,12,13,16,14,14,13,13,15,15,15,12,12,15,14,14,13,13,16,15,15,12,12,15,15,15,12,12,15,14,14,13,13,15,15,15,12,12,15,14,14,12,12,16,15,15,12,12,16,15,15,12,12,16,14,14,13,13,15,15,15,11,11,15,15,14,12,12,16,15,15,11,11,16,15,15,12,12,16,14,14,13,13,16,15,15,11,11,16,14,14,12,12,16,15,15,11,11,14,10,10,9,9,14,11,11,12,12,14,12,12,13,14,14,12,12,12,12,14,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,12,12,13,13,15,13,13,14,14,15,15,15,14,14,15,13,13,14,14,15,15,15,15,15,15,12,12,13,13,15,13,13,14,14,15,14,14,13,13,15,13,13,14,14,15,14,14,15,15,15,12,12,13,13,15,13,13,13,13,14,14,14,13,13,15,15,15,14,15,15,15,15,21,19,15,14,14,13,13,15,14,14,14,14,14,14,14,13,13,14,12,12,9,9,14,14,14,12,12,14,14,13,13,13,14,14,14,12,12,14,14,14,12,12,15,14,14,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,15,15,15,15,15,15,14,14,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,14,15,15,15,15,15,14,15,13,13,15,14,14,14,14,15,14,14,13,13,15,14,14,13,13,14,15,15,14,14,15,15,15,14,14,15,14,14,14,14,15,15,15,15,15,15,14,14,14,13,14,15,15,14,14,13,10,10,12,12,18,12,12,12,12,17,12,12,12,12,18,13,13,11,11,18,15,14,11,11,17,13,13,13,13,18,15,15,12,12,18,12,12,12,12,17,13,13,12,12,18,15,15,12,12,18,13,13,13,12,18,15,15,13,13,18,13,13,12,12,18,13,13,12,12,18,15,15,12,12,17,13,13,12,12,17,15,15,12,12,17,12,12,11,11,17,13,13,11,11,17,15,15,11,11,18,16,16,12,12,18,15,15,13,13,18,15,15,11,11,17,15,15,12,12,18,15,15,11,11,13,8,8,10,10,14,14,14,11,11,15,15,15,12,12,15,14,14,11,11,16,14,14,12,12,15,15,15,12,12,15,15,15,13,13,15,15,15,12,12,15,15,15,12,12,16,15,15,13,13,15,15,15,12,12,15,15,15,13,13,16,15,15,12,12,15,15,15,12,12,16,15,15,13,13,16,15,15,12,12,15,15,15,13,13,15,14,14,12,12,15,15,15,12,12,16,15,14,12,12,16,15,15,13,13,16,16,16,13,13,16,14,15,13,13,15,15,15,13,13,16,15,15,12,12,13,12,12,10,10,14,14,14,11,11,15,14,14,12,12,15,14,14,11,11,16,14,14,11,11,15,14,15,12,12,15,14,14,13,13,15,15,15,12,12,15,14,14,12,12,15,14,15,12,12,15,15,15,12,12,16,14,14,13,13,15,15,15,11,12,16,14,14,12,12,16,15,15,12,12,15,15,15,12,12,16,14,14,12,12,15,15,15,11,11,15,14,14,11,12,15,15,14,11,11,16,15,15,12,12,16,14,14,13,13,16,15,15,11,11,16,14,14,12,12,16,15,15,11,11,13,10,10,8,8,14,12,12,12,12,14,12,12,13,13,14,12,12,12,12,14,14,14,13,13,15,13,13,14,14,15,15,14,15,15,15,13,13,13,13,15,13,13,14,14,15,14,15,14,14,15,13,13,13,13,15,15,15,15,15,15,12,12,13,12,15,13,13,14,14,15,14,14,13,13,15,13,13,14,13,15,15,15,16,16,15,13,13,12,12,15,13,13,13,13,14,14,14,12,12,15,15,15,14,14,15,15,15,20,20,15,14,14,13,13,15,15,14,14,14,15,14,14,13,13,13,12,12,9,9,14,13,13,12,12,14,13,13,12,12,14,14,14,12,12,14,14,14,13,13,15,14,14,13,13,15,14,14,14,14,15,15,14,12,12,15,14,14,13,13,15,14,15,14,15,15,14,14,13,13,15,14,14,14,14,15,14,14,12,12,15,14,14,13,13,14,15,14,15,14,15,14,14,13,13,15,14,14,14,14,15,14,14,12,12,15,14,14,13,13,15,15,15,14,14,15,15,15,14,14,16,14,14,14,14,15,15,15,14,14,15,14,14,14,14,14,15,15,14,14,13,13,13,12,13,17,15,15,12,12,17,15,15,12,12,18,15,15,11,11,17,16,16,11,11,18,16,16,13,13,18,17,16,13,13,18,16,16,12,12,18,16,16,12,12,18,17,17,12,12,17,16,16,12,13,17,16,16,12,13,17,16,16,12,12,17,16,16,12,12,18,17,16,12,12,18,16,16,12,12,17,16,17,12,12,18,15,15,11,11,18,15,15,12,12,17,17,17,11,11,17,17,17,12,12,17,16,16,13,13,18,16,16,11,11,18,16,16,12,12,18,17,16,11,11,14,14,14,10,10,16,15,14,11,11,16,15,15,12,12,16,14,14,12,12,17,14,14,13,13,17,15,15,13,13,17,15,15,14,14,16,15,15,12,12,16,15,15,13,13,18,15,15,14,14,16,15,15,12,12,16,15,15,14,14,16,15,15,12,12,16,15,15,13,13,17,15,15,13,13,17,15,15,13,13,17,15,15,14,14,16,14,14,12,12,17,15,15,12,12,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,17,15,14,13,13,17,15,15,14,14,17,15,15,13,13,14,12,12,11,11,15,14,14,12,12,16,14,14,12,12,16,14,14,11,11,17,14,14,12,12,16,15,14,13,13,16,14,14,13,13,16,15,15,12,12,16,14,14,13,13,17,15,15,13,13,16,15,15,13,13,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,16,15,15,12,12,17,15,15,12,12,17,14,14,13,13,16,15,15,12,12,16,14,14,12,12,16,15,15,12,12,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,12,12,14,14,14,8,8,14,14,14,13,13,14,15,15,14,14,14,14,14,14,14,15,15,15,19,19,15,15,15,14,14,15,15,16,20,19,15,15,15,14,14,15,16,16,15,15,15,15,15,19,19,15,15,15,14,14,15,16,16,19,20,15,15,15,14,14,15,15,15,15,15,15,15,15,19,19,15,15,15,15,15,15,15,16,19,20,15,14,15,14,14,15,15,15,15,15,15,15,15,20,19,15,15,15,21,19,15,16,16,20,20,15,15,14,19,19,15,15,16,20,21,15,15,15,20,19,13,12,12,9,9,14,14,14,12,12,14,13,13,13,13,14,14,14,13,13,15,14,14,20,19,15,14,14,14,13,15,14,14,19,19,15,15,14,13,13,15,14,14,14,14,15,15,15,19,20,15,14,14,13,13,15,14,14,20,19,14,15,14,13,13,15,14,14,14,13,15,15,15,19,20,15,15,14,14,14,15,14,14,21,19,15,15,15,13,13,15,14,14,14,14,14,15,15,20,20,15,15,15,21,20,15,14,14,19,20,15,15,15,20,20,15,14,14,19,20,15,15,15,21,19,1,6,6,6,7,7,7,8,8,7,8,8,10,11,11,9,8,8,7,8,8,11,11,11,9,8,8,6,7,7,9,11,11,9,11,11,10,11,11,12,13,13,11,12,12,10,11,11,13,14,14,12,12,12,6,6,6,8,6,6,8,7,7,9,7,7,11,10,10,10,6,6,9,7,7,12,10,10,11,6,7,7,7,7,11,10,10,12,10,10,11,10,10,14,13,13,13,10,10,12,11,11,15,13,13,14,10,10,8,7,7,12,11,11,12,11,11,11,11,11,14,14,14,13,12,12,12,11,11,15,15,15,13,12,12,0,10,10,0,11,11,0,11,11,0,11,11,0,14,14,0,11,11,0,11,11,0,15,15,0,11,11,7,8,8,12,10,10,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,12,11,11,12,11,11,16,14,14,14,12,12,13,12,12,15,14,14,15,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,12,12,0,14,14,0,12,12,2,3,3,0,8,8,0,8,8,0,9,9,0,9,9,0,9,9,0,9,9,0,9,9,0,8,8,0,6,6,0,7,7,0,7,7,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,8,8,0,6,6,0,6,6,0,6,6,0,8,8,0,9,9,0,7,7,0,8,8,0,9,9,0,6,6,0,8,8,0,9,9,0,9,9,0,10,10,0,10,10,0,10,10,0,10,10,0,11,11,0,9,9,0,7,7,0,10,10,0,10,10,0,12,11,0,12,12,0,11,11,0,11,11,0,12,12,0,10,10,0,7,7,0,10,10,0,10,10,0,12,12,0,11,12,0,11,11,0,11,11,0,11,11,0,10,10,0,8,8,0,9,9,0,9,9,0,10,10,0,10,10,0,10,9,0,10,10,0,10,10,0,9,9,0,6,6,0,10,10,0,10,10,0,11,11,0,12,12,0,11,11,0,11,11,0,12,12,0,11,11,0,7,7,0,9,9,0,9,9,0,11,11,0,11,11,0,10,10,0,10,10,0,11,11,0,9,9,1,5,5,6,7,7,0,8,8,6,9,9,8,11,11,0,8,8,0,9,9,0,12,12,0,8,8,5,7,7,7,10,10,0,12,12,8,11,11,9,12,12,0,11,12,0,12,12,0,15,15,0,12,12,0,6,6,0,6,6,0,7,7,0,7,7,0,10,10,0,7,7,0,8,8,0,11,11,0,7,7,6,7,7,10,9,9,0,11,10,10,9,9,12,12,12,0,10,10,0,11,11,0,13,13,0,11,11,7,6,6,10,10,10,0,11,11,11,11,11,12,12,12,0,11,11,0,12,12,0,15,15,0,11,11,0,11,11,0,11,11,0,12,12,0,12,12,0,14,14,0,12,12,0,12,12,0,15,15,0,11,11,0,8,8,0,10,10,0,11,11,0,11,11,0,12,12,0,12,12,0,11,11,0,15,15,0,11,11,0,6,6,0,10,10,0,12,12,0,10,10,0,13,13,0,12,12,0,13,13,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,0,0,8,8,0,0,0,9,9,0,0,0,10,10,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,6,6,0,0,0,7,7,0,0,0,8,8,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,7,7,0,0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,0,0,0,0,0,0,8,8,0,0,0,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,8,8,0,0,0,10,10,0,0,0,9,9,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,0,0,0,0,0,9,9,0,0,0,11,10,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,11,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,0,10,10,0,0,0,11,11,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,11,11,0,0,0,0,0,0,0,0,10,10,0,0,0,13,13,0,0,0,0,0,0,0,0,14,13,0,0,0,0,0,0,0,0,13,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,14,14,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,12,13,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,11,11,0,0,0,14,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,0,0,11,11,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,12,12,0,0,0,0,0,0,0,0,12,12,0,0,0,14,14,0,0,0,0,0,0,0,0,14,14,0,0,0,0,0,0,0,0,12,12,0,0,0,13,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,12,9,8,12,15,17,4,2,11,6,5,9,13,15,11,7,8,7,7,10,14,13,8,5,7,5,5,8,12,12,8,4,7,4,3,6,11,12,11,8,9,7,6,8,11,12,15,13,14,12,9,7,10,13,16,12,17,12,7,5,8,11,3,4,4,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,13,14,16,16,16,16,1,4,4,4,4,4,4,4,4,1,4,4,6,6,5,5,5,6,6,5,6,5,6,6,6,6,7,7,7,6,7,6,7,7,1,4,4,7,7,8,8,9,9,10,10,11,11,4,6,5,8,6,9,8,10,9,10,10,11,10,5,5,6,6,8,8,9,9,10,10,10,10,11,7,8,8,9,8,10,9,10,9,11,10,11,10,7,8,8,8,10,9,10,10,10,10,11,10,11,9,10,10,11,11,11,11,12,11,12,11,12,11,9,10,10,11,11,11,11,11,11,11,12,11,12,11,11,11,12,12,12,12,12,12,12,12,12,11,11,12,11,12,12,12,12,12,12,12,12,11,12,12,12,12,12,13,12,13,12,12,12,12,12,12,12,12,12,13,13,13,13,12,13,12,12,12,12,12,13,13,12,13,12,13,12,13,12,12,12,12,13,13,13,13,13,13,12,12,12,12,12,11,12,1,3,2,3,3,3,7,7,9,13,16,3,2,4,6,10,13,17,7,4,4,6,9,12,14,7,6,6,5,7,9,12,10,10,9,6,6,9,12,14,14,13,9,8,10,11,18,18,15,13,11,10,11,1,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,7,7,7,7,7,7,7,7,7,8,8,9,8,8,8,7,7,8,8,8,9,8,8,9,7,7,6,6,6,9,8,7,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,8,8,10,8,8,7,6,6,9,6,6,9,7,7,9,7,7,10,8,8,9,6,6,9,7,7,10,8,8,9,7,7,7,8,8,11,9,9,11,9,9,11,8,9,12,9,9,12,8,8,11,9,9,12,9,9,12,8,8,8,7,7,10,9,9,10,10,9,10,9,9,11,10,10,11,9,9,11,9,9,11,10,11,11,9,9,10,8,8,11,9,9,10,9,9,11,9,9,11,10,10], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+511667);
/* memory initializer */ allocate([11,9,9,11,9,9,11,10,10,11,9,9,9,8,8,11,9,9,12,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,9,12,8,8,9,7,7,11,9,9,11,10,10,11,9,9,11,11,11,11,9,9,11,10,10,11,11,11,11,9,9,10,9,9,11,9,9,11,10,10,11,9,9,11,10,10,11,9,9,11,9,10,11,10,10,11,9,9,1,6,6,7,8,8,7,8,8,7,9,8,10,11,11,9,8,8,7,8,8,11,11,11,9,8,8,6,7,7,10,10,10,10,10,10,10,10,10,14,13,13,12,11,11,10,10,10,14,14,13,12,11,11,6,6,6,8,5,5,8,7,7,9,7,7,11,10,10,9,7,7,9,7,7,12,10,10,10,7,7,7,8,8,12,11,10,12,10,10,11,10,10,15,13,13,13,10,10,11,10,10,17,14,13,13,10,10,7,7,7,12,11,12,12,11,11,12,11,11,16,14,14,13,12,12,12,11,11,17,15,14,14,12,12,10,9,9,13,11,11,13,11,11,13,11,11,17,14,13,14,11,11,12,11,11,16,15,14,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,15,13,13,14,11,10,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,12,11,11,12,11,11,17,14,14,14,12,12,12,11,11,16,15,15,14,12,12,10,10,10,13,11,11,13,11,11,13,11,12,16,14,14,14,11,11,13,12,11,16,15,15,14,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,7,7,14,14,7,7,7,14,14,0,13,13,16,16,0,13,13,15,14,7,8,8,15,15,9,10,10,16,16,9,8,8,15,15,0,13,13,17,16,0,13,13,15,16,8,8,8,15,15,12,11,11,16,16,9,8,8,14,14,0,13,13,17,18,0,13,13,15,15,0,14,14,16,16,0,0,0,19,18,0,12,12,16,15,0,15,16,0,20,0,14,14,16,16,0,14,14,17,17,0,0,0,19,18,0,12,12,15,15,0,17,17,0,20,0,14,14,16,16,5,6,7,12,12,9,9,9,14,14,10,10,10,14,14,0,21,21,18,17,0,20,20,18,17,9,10,10,14,14,12,12,12,16,16,12,10,10,14,14,0,20,19,18,17,0,0,20,17,18,11,10,10,14,14,14,13,13,18,18,13,11,11,14,14,0,20,20,17,18,0,21,21,17,17,0,21,0,18,18,0,0,0,0,0,0,20,19,16,17,0,0,0,19,19,0,0,0,18,18,0,21,21,18,18,0,0,0,0,0,0,20,20,16,17,0,0,0,21,21,0,0,0,18,19,6,6,6,13,12,8,6,6,11,11,8,6,6,13,13,0,9,9,11,11,0,11,10,14,14,9,7,7,13,13,11,9,9,13,13,10,6,6,13,13,0,10,10,14,15,0,10,10,13,13,9,7,7,13,13,13,10,9,13,13,10,6,6,13,13,0,10,10,15,14,0,10,10,13,13,0,11,11,15,15,0,19,20,17,17,0,9,9,13,13,0,13,13,20,20,0,11,11,13,13,0,11,11,15,15,0,19,19,17,17,0,10,10,13,13,0,15,15,20,20,0,12,12,13,13,0,10,10,12,12,0,11,11,15,15,0,11,11,15,15,0,15,15,20,0,0,16,16,0,21,0,11,11,15,15,0,14,14,18,17,0,11,11,15,15,0,15,16,19,20,0,16,16,21,21,0,12,12,15,15,0,15,14,18,18,0,11,11,16,16,0,15,15,21,21,0,16,15,0,0,0,16,16,21,0,0,0,0,0,0,0,14,14,20,20,0,18,18,0,0,0,16,17,21,0,0,16,16,21,21,0,0,0,0,0,0,15,15,21,21,0,20,19,0,21,0,17,17,0,0,0,10,10,12,11,0,10,10,10,11,0,11,11,12,12,0,11,11,9,9,0,13,13,11,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,12,12,13,13,0,12,12,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,13,14,14,0,12,12,12,12,0,14,14,14,13,0,19,20,15,15,0,12,11,12,12,0,15,15,21,20,0,13,13,11,11,0,13,13,13,13,0,19,0,15,15,0,12,12,12,12,0,17,16,19,0,0,13,13,12,12,7,7,7,16,16,11,9,9,15,15,12,9,9,16,16,0,13,13,15,14,0,14,14,17,16,10,9,9,16,16,14,11,11,17,16,12,9,8,15,15,0,13,13,18,18,0,13,13,15,15,12,10,10,18,17,15,12,12,17,17,14,9,9,16,16,0,13,13,18,19,0,14,13,17,16,0,14,14,18,18,0,0,0,20,21,0,12,12,16,16,0,16,16,20,21,0,14,14,17,16,0,14,14,18,19,0,0,0,19,21,0,13,13,17,17,0,17,17,0,21,0,15,15,16,16,8,7,7,14,14,11,10,10,15,15,12,10,10,15,15,0,20,20,18,18,0,0,0,17,17,11,10,10,16,16,14,12,12,18,17,14,11,11,15,15,0,20,21,18,18,0,0,19,18,17,12,10,10,16,16,17,14,14,19,19,14,11,11,15,15,0,21,21,19,19,0,21,20,19,18,0,21,0,18,19,0,0,0,0,0,0,20,20,18,17,0,21,0,0,0,0,0,0,19,18,0,0,0,18,19,0,0,0,0,0,0,0,21,17,18,0,0,0,0,21,0,0,21,18,19,11,9,9,14,14,13,10,10,13,13,13,11,11,15,15,0,13,13,12,12,0,15,15,16,16,13,10,10,15,15,16,12,12,15,15,15,10,10,15,15,0,14,13,16,15,0,14,13,15,15,13,10,10,15,15,18,14,14,15,15,15,10,10,14,15,0,14,14,16,16,0,14,14,16,15,0,15,15,17,16,0,21,0,18,18,0,12,13,15,15,0,16,16,0,0,0,14,14,15,15,0,15,15,16,16,0,21,20,18,18,0,13,13,15,15,0,19,18,0,0,0,15,15,15,15,0,11,11,13,13,0,12,12,16,16,0,12,12,16,16,0,15,16,20,0,0,16,17,0,0,0,12,12,16,16,0,14,14,18,18,0,11,11,16,17,0,15,15,20,0,0,16,16,0,0,0,12,12,16,16,0,15,15,19,19,0,11,11,17,17,0,16,16,21,0,0,16,16,0,0,0,17,17,20,20,0,0,0,0,0,0,15,15,20,0,0,17,18,0,0,0,17,17,0,0,0,16,16,0,21,0,0,0,0,0,0,15,15,21,0,0,19,18,0,0,0,18,17,0,0,0,11,11,14,14,0,11,11,15,15,0,12,12,16,16,0,13,13,14,14,0,14,14,17,17,0,12,12,16,16,0,14,14,16,16,0,11,11,16,15,0,13,13,16,17,0,13,13,16,16,0,12,12,15,16,0,15,14,16,16,0,11,11,15,15,0,14,14,17,17,0,13,13,16,16,0,15,14,18,18,0,21,0,19,19,0,13,13,15,15,0,16,16,20,20,0,14,14,16,15,0,14,14,17,17,0,21,0,20,18,0,13,13,15,15,0,17,17,0,0,0,14,14,16,15,8,8,8,16,16,12,9,9,16,16,13,9,9,16,16,0,14,14,18,17,0,14,14,16,17,12,10,10,18,17,14,11,11,18,18,14,9,9,16,16,0,13,13,18,18,0,13,13,17,16,12,9,9,16,17,17,13,13,16,16,14,9,9,15,15,0,14,14,20,20,0,13,13,15,15,0,15,14,18,18,0,0,0,20,21,0,12,13,16,17,0,16,16,20,21,0,14,14,16,17,0,14,14,18,17,0,0,0,20,21,0,13,13,16,16,0,19,17,0,21,0,14,15,16,16,8,7,7,14,13,12,10,10,15,15,13,10,10,15,15,0,21,21,18,19,0,20,21,18,18,12,10,10,16,15,15,12,12,17,17,14,11,11,15,15,0,21,21,19,18,0,0,21,17,18,13,11,11,15,15,16,13,13,18,19,15,11,11,15,14,0,21,0,19,19,0,0,21,18,18,0,0,21,19,19,0,0,0,0,0,0,20,19,17,17,0,0,0,21,0,0,21,0,18,19,0,0,20,20,19,0,0,0,0,0,0,21,20,18,17,0,0,0,0,20,0,0,0,18,19,0,10,10,15,14,0,11,11,14,14,0,11,11,15,16,0,14,14,15,15,0,15,15,16,16,0,11,11,16,16,0,14,13,16,16,0,11,11,15,15,0,14,14,16,16,0,14,14,15,15,0,11,11,15,15,0,13,13,15,15,0,11,11,15,15,0,15,15,18,17,0,14,14,15,15,0,15,16,18,18,0,0,0,20,20,0,14,13,16,15,0,17,17,21,0,0,15,15,15,15,0,16,15,17,17,0,0,0,19,19,0,13,13,15,15,0,20,19,0,0,0,15,15,15,15,0,11,11,13,13,0,12,12,16,16,0,12,12,16,16,0,15,15,21,21,0,17,16,0,0,0,12,12,16,16,0,14,14,17,17,0,11,11,16,16,0,15,15,0,0,0,16,16,21,0,0,12,12,17,16,0,14,15,20,20,0,11,11,16,16,0,15,15,0,20,0,16,16,0,21,0,16,17,21,0,0,0,0,0,0,0,15,15,0,21,0,18,18,0,0,0,17,16,0,0,0,17,17,21,0,0,0,0,0,0,0,15,15,0,20,0,19,20,21,0,0,17,18,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,16,16,0,13,13,15,15,0,15,15,17,17,0,13,12,17,16,0,14,14,17,16,0,11,11,16,16,0,14,14,17,17,0,14,14,17,17,0,12,12,16,16,0,15,15,17,17,0,11,11,16,16,0,14,14,17,17,0,14,14,16,16,0,15,15,18,17,0,0,0,19,0,0,13,13,16,16,0,16,16,0,21,0,14,14,16,16,0,15,15,18,17,0,0,0,19,19,0,13,13,16,16,0,18,17,0,21,0,14,15,16,16,0,11,11,16,16,0,13,13,17,17,0,13,13,17,17,0,16,16,16,17,0,16,16,18,18,0,12,12,17,17,0,16,15,18,17,0,12,12,16,16,0,16,15,19,19,0,16,15,17,17,0,12,12,17,18,0,16,16,18,18,0,12,12,16,16,0,16,16,19,19,0,15,16,17,17,0,15,16,18,18,0,0,0,20,20,0,13,13,16,16,0,18,18,21,20,0,15,15,16,16,0,16,16,19,18,0,0,0,19,20,0,14,14,17,17,0,19,19,0,21,0,15,16,16,16,0,9,9,14,14,0,13,13,15,15,0,14,14,15,15,0,0,21,19,19,0,0,21,18,18,0,12,12,15,15,0,15,15,18,18,0,14,13,15,15,0,21,21,18,19,0,21,20,18,18,0,13,13,16,16,0,17,17,18,19,0,14,14,15,15,0,0,21,19,19,0,21,20,18,19,0,20,20,19,19,0,0,0,0,0,0,19,20,17,17,0,0,0,21,21,0,21,0,18,20,0,21,0,18,21,0,0,0,0,0,0,21,21,19,18,0,0,0,0,0,0,0,0,19,19,0,18,18,15,15,0,18,20,17,16,0,20,0,17,17,0,21,0,17,17,0,21,20,19,20,0,19,19,16,16,0,21,21,17,18,0,19,19,17,17,0,20,21,21,21,0,20,20,18,18,0,19,19,16,16,0,0,21,18,19,0,18,19,16,17,0,21,21,19,20,0,21,19,18,18,0,21,20,19,21,0,0,0,20,21,0,19,19,17,16,0,0,0,0,0,0,21,20,17,17,0,20,21,19,18,0,0,0,0,21,0,19,18,16,17,0,0,0,0,0,0,20,20,17,17,0,11,11,14,14,0,13,13,16,16,0,13,13,16,16,0,17,17,21,0,0,17,18,0,0,0,12,12,16,16,0,15,15,17,18,0,12,12,16,16,0,16,16,0,20,0,17,17,0,21,0,12,12,17,17,0,16,16,19,20,0,12,12,17,17,0,17,17,0,20,0,17,17,0,0,0,17,17,21,0,0,0,0,0,0,0,15,15,0,20,0,19,19,0,0,0,18,18,0,0,0,17,17,0,0,0,0,0,0,0,0,15,15,0,0,0,20,19,0,0,0,19,18,0,0,0,14,14,21,19,0,16,16,20,21,0,16,16,20,20,0,17,17,20,0,0,17,17,20,20,0,15,15,20,20,0,19,18,20,0,0,15,15,20,20,0,17,18,21,20,0,17,17,20,21,0,15,15,19,19,0,19,18,21,21,0,15,15,19,20,0,17,18,0,0,0,17,17,20,20,0,17,18,20,21,0,0,0,0,0,0,15,15,20,20,0,19,19,0,0,0,17,17,19,21,0,17,17,0,21,0,0,0,0,21,0,15,15,20,19,0,0,20,0,0,0,17,17,21,20,0,12,12,16,16,0,14,14,17,17,0,13,13,17,17,0,16,16,17,18,0,17,16,18,18,0,13,13,18,17,0,15,16,19,18,0,13,13,16,16,0,16,16,19,19,0,16,16,17,17,0,13,12,17,17,0,16,16,18,17,0,12,12,16,16,0,17,17,19,18,0,16,15,16,16,0,16,17,18,19,0,0,0,20,20,0,14,14,17,16,0,18,18,21,0,0,16,16,16,16,0,16,16,18,17,0,0,21,21,21,0,14,14,16,16,0,21,20,21,0,0,16,16,16,16,0,10,10,14,14,0,14,14,15,16,0,14,14,15,15,0,0,21,18,18,0,0,21,18,19,0,13,13,16,16,0,16,16,18,17,0,14,14,15,15,0,20,0,18,18,0,21,0,18,17,0,13,13,16,15,0,17,17,19,19,0,14,14,15,15,0,20,20,18,19,0,0,0,18,17,0,0,21,18,18,0,0,0,0,0,0,20,21,18,17,0,0,0,0,0,0,0,0,19,19,0,0,21,18,18,0,0,0,0,0,0,21,0,18,17,0,0,0,0,21,0,0,0,19,20,0,19,19,16,16,0,0,21,18,17,0,21,0,18,18,0,20,0,19,18,0,21,20,19,19,0,21,19,17,18,0,0,21,19,19,0,21,19,18,18,0,21,0,20,18,0,0,21,18,18,0,20,21,17,17,0,21,0,18,18,0,21,19,17,17,0,21,0,0,20,0,0,20,17,18,0,0,0,19,20,0,0,0,20,19,0,19,21,17,18,0,21,0,0,0,0,21,21,18,17,0,0,21,18,18,0,0,0,0,21,0,20,19,16,17,0,0,0,0,0,0,21,20,17,17,0,11,11,13,13,0,13,13,16,16,0,13,13,16,16,0,17,17,0,21,0,18,19,21,0,0,12,12,16,16,0,15,15,19,18,0,13,13,16,16,0,16,17,21,19,0,17,17,21,21,0,13,13,16,16,0,16,16,20,18,0,13,13,16,16,0,17,17,0,0,0,18,18,0,0,0,18,17,0,20,0,0,0,0,0,0,15,15,21,21,0,19,18,0,0,0,17,17,21,21,0,17,17,0,0,0,0,0,0,0,0,15,15,20,21,0,20,20,0,0,0,19,19,0,0,0,14,15,21,19,0,16,16,0,21,0,17,16,21,21,0,17,18,21,20,0,18,18,0,21,0,16,16,0,20,0,19,19,0,0,0,16,15,0,20,0,18,18,0,0,0,17,17,0,21,0,16,16,20,20,0,20,19,0,0,0,15,16,21,22,0,18,18,0,0,0,18,17,0,0,0,18,18,0,0,0,0,0,0,0,0,16,16,21,20,0,19,20,0,0,0,18,17,21,0,0,17,18,0,0,0,0,0,0,0,0,16,16,0,20,0,0,20,0,0,0,18,18,22,0,2,3,4,7,7,10,12,12,12,12,10,11,11,13,13,11,12,12,11,11,12,12,12,12,12,11,13,13,13,13,12,12,12,13,14,12,13,13,13,13,12,13,13,13,13,12,13,13,13,13,11,13,13,13,13,12,12,12,14,14,12,13,13,12,12,12,12,13,13,13,12,13,13,13,13,12,13,13,13,13,12,12,12,14,14,12,13,13,12,12,12,13,13,13,13,12,13,13,12,12,12,13,13,13,13,12,12,12,14,14,12,13,13,12,12,12,13,13,13,13,12,13,13,12,12,10,10,11,10,10,11,11,11,11,11,11,9,9,10,10,12,11,11,10,10,12,10,10,10,10,13,12,12,12,12,13,11,11,11,11,13,12,12,12,12,13,11,11,11,11,13,12,12,12,12,13,12,12,12,12,13,11,11,11,11,13,12,12,12,12,13,11,11,11,11,13,12,12,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,13,11,11,11,11,13,12,12,11,11,11,11,11,10,10,11,11,11,9,9,11,12,12,11,11,12,12,12,9,9,13,13,13,10,10,13,13,13,11,11,13,13,13,14,14,13,13,13,11,10,13,13,14,12,12,13,13,13,11,11,13,13,13,11,11,13,13,13,14,14,13,13,13,10,10,13,13,13,11,11,13,13,13,10,10,13,14,13,11,11,13,14,14,14,14,13,13,13,10,10,13,14,14,11,11,13,13,13,10,10,13,14,14,11,11,13,13,13,14,14,14,13,13,10,10,13,14,14,11,11,13,13,13,10,10,14,12,12,9,9,14,12,12,9,9,14,11,11,9,9,14,12,12,8,8,14,11,11,7,7,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,15,12,12,9,9,14,13,13,9,9,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,15,12,12,9,9,15,13,13,9,9,13,12,12,9,9,13,13,13,8,8,13,13,13,9,9,13,13,13,7,7,14,13,13,8,8,14,14,14,10,10,15,14,14,11,11,14,14,14,9,9,15,14,14,10,10,15,14,14,9,9,14,14,14,10,10,15,14,14,11,11,15,14,14,9,9,14,14,14,10,10,14,14,14,9,9,15,14,15,10,10,15,14,14,11,11,14,14,14,9,9,14,14,14,9,9,14,14,14,8,8,15,14,14,10,10,15,14,14,11,11,14,14,14,9,9,15,14,14,9,9,14,14,14,8,8,12,12,12,13,13,16,16,16,11,11,17,16,16,12,12,17,16,16,11,11,17,16,16,11,11,17,17,16,13,13,17,16,16,13,13,18,17,16,12,12,17,16,16,13,13,17,16,17,12,12,18,17,17,13,13,17,16,16,14,14,18,17,17,12,12,18,16,16,13,13,17,17,17,13,12,17,17,17,13,13,17,16,16,13,13,18,17,17,12,12,17,16,16,13,12,17,17,17,12,12,18,17,17,13,13,18,16,16,14,14,18,17,17,12,12,17,17,17,13,13,18,17,18,12,12,13,14,14,10,10,16,14,14,13,13,17,15,15,14,14,17,14,14,12,13,16,14,14,13,13,17,15,15,14,14,16,16,16,15,15,17,15,15,14,14,17,16,16,14,15,17,15,15,14,14,17,15,16,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,14,17,15,15,14,14,16,16,16,15,15,17,15,15,13,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,13,11,11,10,10,16,14,14,13,12,16,14,14,13,13,16,15,14,12,12,16,14,14,12,12,16,15,15,14,14,16,14,14,14,14,17,15,15,13,13,16,15,15,14,14,17,15,15,13,14,17,15,15,14,14,17,15,14,14,14,17,15,15,13,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,17,14,14,14,14,17,15,15,13,13,17,15,15,13,13,17,15,15,13,13,17,15,15,14,14,17,15,15,14,14,17,15,15,13,13,17,15,15,13,13,17,15,15,13,13,14,14,15,8,8,14,14,14,19,19,14,15,15,18,19,14,14,14,19,18,14,14,14,19,19,15,15,15,19,18,15,16,16,19,19,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,15,15,19,19,16,16,16,20,19,15,15,15,19,18,15,16,16,20,19,15,15,15,18,18,15,15,15,19,20,15,16,16,19,19,15,15,15,20,19,15,15,15,20,19,15,15,15,19,18,15,15,15,19,19,15,16,16,19,20,15,15,15,19,19,15,15,15,19,20,15,15,15,19,19,14,12,12,9,9,14,14,14,19,19,14,14,14,19,19,14,14,15,20,19,15,14,14,18,19,15,15,15,19,19,15,15,14,20,19,15,15,15,20,19,15,15,14,20,19,15,15,15,20,19,15,15,15,19,20,15,14,14,19,20,15,15,15,20,20,15,14,14,20,19,15,15,15,19,19,15,15,15,19,19,15,14,14,19,19,15,15,15,19,20,15,15,15,20,20,15,15,15,19,19,15,15,15,20,19,16,14,14,19,19,15,15,15,20,19,15,14,15,20,19,14,15,15,20,19,12,12,12,13,13,16,16,16,11,11,16,16,16,12,12,17,16,16,11,11,17,15,16,11,11,17,17,17,13,13,18,16,17,13,13,18,17,17,13,12,17,16,17,13,13,17,17,17,13,13,16,16,16,12,12,17,16,16,13,13,17,16,16,12,12,17,16,16,12,13,17,17,17,12,12,17,17,17,13,13,18,16,16,13,13,18,17,17,12,12,18,17,17,12,12,17,17,17,12,12,17,17,17,12,12,17,16,16,13,13,17,17,17,12,12,17,16,16,12,12,17,17,17,12,12,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,17,14,14,13,13,16,14,14,13,13,17,15,15,15,15,16,16,16,15,15,17,15,15,14,14,17,15,15,15,15,17,15,15,14,14,17,15,15,14,14,16,16,16,15,15,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,16,16,16,15,15,18,15,15,14,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,16,16,15,15,17,15,15,14,13,17,15,15,14,14,17,15,15,13,13,13,11,11,11,11,16,14,14,12,12,16,14,14,13,13,16,15,14,12,12,17,14,14,12,12,17,15,15,13,13,17,14,14,14,14,17,15,15,13,13,17,14,15,14,13,17,15,15,13,13,16,15,15,13,13,16,14,14,14,14,17,15,15,13,13,16,14,14,13,13,16,15,15,13,13,17,15,15,13,13,17,14,14,14,14,17,15,15,12,12,17,15,15,13,13,17,15,15,12,12,16,15,15,13,13,17,14,14,13,14,17,15,15,12,12,17,14,14,13,13,17,15,15,12,12,14,14,14,8,8,14,14,14,18,18,14,15,15,19,19,14,14,14,19,19,14,15,14,18,19,15,15,15,18,19,15,16,16,20,20,15,15,15,19,20,15,16,16,19,20,15,15,15,19,20,15,15,16,19,19,15,16,16,20,20,15,15,15,20,19,15,16,16,20,19,15,15,15,19,20,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,16,15,20,19,15,15,15,19,19,15,15,15,19,20,15,16,16,20,20,15,15,15,19,19,15,15,15,20,20,15,15,15,19,19,14,12,12,9,9,14,14,14,18,18,14,14,14,19,20,14,14,14,18,18,14,14,14,18,19,15,15,15,19,20,15,14,14,19,19,15,15,15,19,19,15,14,15,19,19,15,15,15,18,20,15,15,15,19,19,15,14,14,19,19,15,15,15,20,19,15,15,14,20,20,15,15,15,19,19,15,15,15,19,19,15,14,14,19,19,15,15,15,19,19,15,14,14,19,20,14,15,15,19,19,15,15,15,19,19,15,14,14,20,19,15,15,15,19,19,15,14,14,20,19,15,15,15,19,19,13,12,12,13,13,17,17,16,11,11,16,16,16,12,12,17,17,16,11,11,17,16,16,11,11,17,17,17,13,13,17,16,16,13,13,18,17,17,12,12,17,16,16,13,13,18,17,17,12,12,18,17,17,13,13,18,16,17,13,13,17,17,17,12,12,18,17,17,13,13,18,17,17,12,12,17,16,17,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,17,17,17,11,11,17,17,17,12,12,18,16,16,13,13,18,17,17,12,11,17,16,16,12,12,18,17,17,11,11,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,17,14,14,12,12,16,14,14,13,13,17,15,15,14,14,17,16,16,15,16,18,15,15,14,14,17,15,15,14,14,17,15,15,14,14,18,15,15,14,14,16,16,16,15,16,18,15,15,14,14,17,16,15,14,14,18,15,15,14,14,17,15,15,14,14,17,16,16,15,15,18,14,15,13,13,17,15,15,14,14,18,15,15,13,13,17,15,15,14,14,17,16,15,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,13,11,11,10,10,16,14,14,12,12,16,14,14,12,12,17,14,15,11,11,17,14,14,11,11,17,15,15,13,13,17,14,14,14,13,17,15,15,13,13,16,15,15,13,13,17,15,15,13,13,17,15,15,13,13,17,14,14,14,14,17,15,15,13,13,17,14,15,13,13,16,15,15,13,13,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,16,14,14,12,12,17,15,15,12,12,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,12,12,13,15,14,8,8,14,14,14,19,19,14,15,15,18,19,14,14,14,18,19,14,15,14,19,19,15,16,15,19,19,15,16,16,19,20,15,15,15,19,19,15,16,16,19,19,15,16,16,19,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,19,15,15,15,19,19,15,15,15,19,19,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,15,15,19,19,15,15,15,19,19,15,16,15,19,19,15,16,16,21,19,15,15,15,20,20,15,15,15,20,21,15,15,15,19,20,14,12,12,8,8,14,14,14,19,19,14,13,13,19,19,14,14,14,19,19,14,13,14,19,19,15,15,15,20,20,15,14,14,20,19,15,15,15,19,20,15,14,14,19,20,15,15,15,20,19,15,15,15,19,20,15,14,14,20,20,15,15,15,20,19,15,14,14,19,19,15,15,15,19,19,15,15,15,20,19,15,14,14,21,19,15,15,15,20,21,15,14,14,21,19,15,15,15,19,19,15,15,15,20,20,15,14,14,19,21,15,15,15,19,19,15,14,14,19,20,15,15,15,19,19,13,12,12,13,13,17,16,16,11,11,17,16,15,12,12,18,16,16,11,11,17,16,16,11,11,18,17,17,13,13,18,16,16,13,13,17,17,17,12,13,18,17,16,13,13,18,17,17,13,13,17,17,17,13,13,17,16,16,13,13,18,16,17,12,12,17,16,16,13,12,17,17,17,12,12,18,17,17,13,12,18,16,16,13,13,18,17,17,12,12,17,16,16,12,12,17,17,17,11,11,17,16,16,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,17,17,17,11,11,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,17,14,14,12,12,16,14,14,13,13,17,15,15,14,14,17,15,16,15,15,17,15,15,14,14,17,15,16,14,15,18,15,15,14,14,17,15,15,14,14,16,16,16,15,15,18,15,15,13,14,17,15,15,14,14,18,15,15,14,14,17,15,15,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,17,15,15,14,14,17,16,16,15,15,17,15,15,13,13,17,15,15,14,14,18,15,15,13,13,13,11,11,10,10,16,14,14,12,12,16,14,14,13,13,17,14,14,11,11,17,14,14,12,12,17,15,15,14,14,17,14,14,14,14,17,15,15,13,13,17,15,14,13,13,16,15,15,13,13,16,15,15,13,13,17,14,14,14,14,17,15,15,13,13,17,14,14,13,13,16,15,15,13,13,16,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,16,15,15,12,12,17,15,15,13,13,17,14,14,13,13,17,15,15,12,12,17,14,14,12,12,16,15,15,12,12,14,14,14,8,8,14,14,14,18,18,14,15,15,19,18,14,14,14,18,18,14,14,14,18,19,15,16,15,19,19,15,17,16,20,20,15,15,15,19,19,15,16,16,19,19,15,15,15,19,19,15,16,15,18,19,15,16,16,20,20,15,15,15,19,19,15,16,16,19,20,15,15,15,19,19,15,15,16,19,19,15,16,16,20,20,15,15,15,19,19,15,15,15,19,20,15,15,15,19,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,20,15,16,16,20,20,15,15,15,19,19,13,12,12,8,8,14,14,14,19,20,14,14,14,19,19,14,14,14,18,19,14,14,14,19,20,15,15,15,19,20,15,14,14,21,20,15,15,15,20,20,15,15,14,19,19,15,15,15,19,19,15,15,15,19,19,15,14,14,19,20,15,15,15,19,20,15,14,14,19,19,15,15,15,19,19,15,15,15,19,19,16,14,14,19,19,15,15,15,20,20,15,14,14,21,19,15,15,15,19,19,15,15,15,19,20,16,14,14,19,20,15,15,15,19,19,15,14,14,19,19,15,15,15,20,19,1,6,6,6,7,7,7,8,8,7,8,8,10,11,11,9,8,8,7,9,9,11,12,12,9,8,8,6,7,7,9,11,11,10,11,11,10,11,11,13,13,13,11,12,12,10,11,11,13,14,14,12,12,12,6,6,6,8,6,6,8,6,6,9,7,7,12,10,10,10,6,6,9,7,7,12,10,10,11,7,6,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,10,10,12,11,11,15,13,13,14,11,11,8,7,7,12,11,11,12,11,11,11,11,11,14,14,14,13,12,12,12,11,11,16,15,15,14,12,12,0,10,10,0,11,11,0,12,12,0,11,11,0,14,14,0,11,11,0,11,11,0,15,15,0,11,11,7,8,8,13,10,10,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,8,7,7,12,11,11,13,11,11,12,11,11,15,14,14,14,12,12,13,12,12,15,14,14,15,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,12,12,0,15,14,0,12,12,1,3,3,0,8,8,0,8,8,0,10,10,0,9,9,0,10,10,0,10,10,0,9,9,0,10,10,0,7,7,0,7,7,0,7,7,0,8,8,0,8,8,0,8,8,0,9,9,0,8,8,0,8,8,0,7,7,0,8,8,0,8,8,0,10,10,0,9,9,0,9,9,0,10,10,0,9,9,0,10,10,0,8,8,0,11,11,0,11,11,0,12,12,0,11,11,0,12,12,0,12,12,0,12,12,0,12,12,0,8,8,0,11,11,0,11,11,0,13,12,0,12,12,0,13,12,0,13,13,0,12,12,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,11,11,0,11,11,0,13,12,0,12,12,0,12,12,0,12,12,0,11,11,0,12,12,0,8,8,0,12,12,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,12,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,4,4,0,7,7,0,8,8,0,9,9,0,12,12,0,8,8,0,9,9,0,12,12,0,8,8,0,6,6,0,11,11,0,11,11,0,12,12,0,14,14,0,11,11,0,12,12,0,14,14,0,11,11,0,6,6,0,6,5,0,7,6,0,7,7,0,10,10,0,6,6,0,7,7,0,10,10,0,7,7,0,7,7,0,10,10,0,11,11,0,11,11,0,14,14,0,10,10,0,12,12,0,14,14,0,12,12,0,6,6,0,11,11,0,11,11,0,12,12,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,11,11,0,11,11,0,12,12,0,15,15,0,12,12,0,11,11,0,15,15,0,11,11,0,6,6,0,11,11,0,12,12,0,12,12,0,15,15,0,11,11,0,12,12,0,14,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,7,8,10,13,14,4,2,4,6,8,11,12,7,4,3,5,8,12,14,8,5,4,4,8,12,12,9,7,7,7,9,10,11,13,11,11,9,7,8,10,13,11,10,6,5,7,9,3,4,4,5,4,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,12,14,14,14,15,15,1,4,4,4,4,4,4,4,4,1,4,4,6,6,5,5,5,7,5,5,5,5,6,7,7,6,7,7,7,6,7,7,7,7,1,3,4,7,7,8,8,9,9,9,10,10,10,5,6,5,8,7,9,8,9,9,10,9,11,10,5,5,7,7,8,8,9,9,9,9,10,10,11,8,9,8,10,9,10,9,10,9,11,10,11,10,8,8,9,9,10,9,10,9,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,10,12,12,12,12,12,12,12,11,12,12,12,11,11,11,12,12,12,12,12,12,12,11,12,11,12,11,11,13,12,12,12,13,12,12,12,12,11,12,11,11,13,13,13,12,12,12,12,12,12,11,11,11,10,13,13,13,12,13,12,13,11,13,10,12,11,11,13,13,12,13,12,12,12,12,11,12,11,11,11,1,3,2,3,2,3,6,7,10,14,16,3,2,5,7,11,14,17,6,5,5,7,10,12,14,7,7,6,6,7,9,13,10,11,9,6,6,9,11,15,15,13,10,9,10,12,18,18,16,14,12,13,16,1,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,7,7,7,8,8,7,7,7,7,8,8,8,8,9,8,7,7,8,8,8,9,9,9,9,7,7,6,6,6,9,7,7,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,8,8,10,8,8,7,6,6,9,6,6,9,6,6,9,7,7,10,8,8,9,6,6,9,7,7,10,8,8,9,7,7,7,8,8,11,9,9,11,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,10,9,12,8,8,8,7,7,10,9,9,11,9,9,11,9,9,11,11,10,11,9,9,11,10,9,11,10,11,11,9,9,10,8,8,11,9,9,11,9,9,11,9,9,11,10,10,11,9,9,11,9,9,11,10,10,11,9,9,9,8,8,12,9,9,12,9,9,11,9,9,12,9,9,12,8,8,12,9,9,12,9,9,12,8,8,9,7,7,11,9,10,11,10,9,11,9,9,11,11,11,11,9,9,11,10,10,11,11,11,11,9,9,10,9,9,11,9,9,11,10,10,11,10,9,11,10,10,11,9,9,11,10,10,11,10,11,11,9,9,1,6,6,6,8,8,7,8,8,7,9,8,10,11,11,9,8,8,7,8,8,11,11,11,9,8,8,6,7,7,10,10,10,10,10,10,10,10,10,14,13,13,12,11,11,10,10,10,14,14,13,13,11,11,6,6,6,8,5,5,8,7,7,8,7,7,11,9,9,9,7,7,8,7,7,12,10,10,10,7,7,7,8,8,12,11,11,12,10,10,11,10,10,14,13,13,13,10,10,11,10,11,16,14,14,13,10,10,7,8,7,12,12,12,12,11,11,12,11,11,16,14,15,13,12,12,11,11,11,17,15,14,14,13,13,10,9,9,13,11,11,13,11,11,12,11,11,16,14,13,14,11,11,12,11,11,16,15,14,14,11,11,7,8,8,12,11,11,12,10,10,12,10,10,16,14,13,13,11,11,12,10,10,16,14,14,13,10,10,8,8,8,12,12,12,12,11,11,12,11,11,16,14,15,14,12,12,12,11,11,16,15,15,14,12,12,10,10,10,13,11,11,13,11,11,12,12,12,16,14,14,14,11,11,12,11,11,17,14,15,14,11,11,2,3,3,3,3,3,3,2,6,6,14,14,6,8,8,14,14,7,7,7,14,14,0,13,13,15,16,0,13,13,15,15,7,8,8,15,15,9,10,10,16,16,9,8,8,14,15,0,13,13,17,17,0,13,13,16,16,8,8,8,15,15,12,11,11,16,16,9,8,8,14,14,0,13,13,17,17,0,13,13,15,15,0,14,14,16,16,0,0,0,18,19,0,12,12,16,15,0,16,16,0,20,0,14,14,16,16,0,14,14,17,17,0,0,0,19,19,0,12,12,15,15,0,18,17,21,21,0,14,14,16,16,5,7,7,12,13,9,10,9,14,14,11,10,10,14,14,0,0,0,18,17,0,20,21,18,18,9,10,10,14,14,12,12,12,17,16,12,10,10,14,14,0,20,20,18,17,0,21,21,17,17,11,10,10,14,14,15,13,13,18,18,13,11,11,14,14,0,20,0,18,18,0,20,21,18,17,0,21,0,18,19,0,0,0,0,21,0,21,20,16,17,0,0,0,21,21,0,0,0,20,18,0,20,0,17,18,0,0,0,0,0,0,0,20,16,17,0,0,0,20,0,0,0,0,18,18,6,6,6,13,13,8,5,5,11,11,9,6,6,13,13,0,9,9,12,12,0,10,10,14,14,9,7,7,13,13,12,9,9,13,13,10,6,6,13,13,0,10,10,14,14,0,10,10,13,13,9,7,7,13,13,13,10,10,13,13,11,6,6,13,13,0,10,10,15,15,0,10,10,13,13,0,12,11,15,15,0,20,19,17,16,0,9,9,13,13,0,13,13,20,19,0,11,11,13,13,0,11,11,15,15,0,20,19,17,17,0,10,10,13,13,0,14,15,0,21,0,12,12,13,13,0,10,10,12,12,0,11,11,15,15,0,11,11,15,15,0,15,15,20,20,0,16,16,0,0,0,11,11,15,15,0,14,14,17,17,0,11,11,15,15,0,15,15,20,21,0,16,16,21,21,0,12,12,15,15,0,15,15,18,20,0,11,11,16,15,0,15,15,21,21,0,16,16,0,21,0,16,16,0,0,0,0,0,0,0,0,14,14,21,21,0,17,18,0,0,0,16,17,20,0,0,16,16,0,0,0,0,0,0,0,0,15,15,20,20,0,19,18,0,21,0,18,17,0,0,0,10,10,11,11,0,10,10,10,10,0,11,11,12,12,0,11,11,9,9,0,13,13,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,12,12,13,13,0,12,12,12,12,0,11,11,12,12,0,13,13,12,12,0,10,10,12,12,0,13,13,13,13,0,12,12,12,12,0,14,13,13,13,0,19,21,15,15,0,12,11,12,12,0,16,15,19,19,0,13,13,11,11,0,13,13,13,13,0,0,21,15,16,0,12,12,12,12,0,16,16,19,21,0,13,13,12,12,7,7,7,16,16,11,9,9,16,16,12,9,9,16,16,0,13,13,16,16,0,14,14,17,16,11,9,9,16,16,14,12,11,17,17,13,8,9,15,15,0,13,13,19,19,0,13,13,16,15,12,10,10,17,17,15,12,12,19,18,14,9,9,17,16,0,14,14,18,0,0,14,13,16,16,0,14,15,18,17,0,21,0,19,21,0,12,12,16,16,0,16,16,0,0,0,14,14,16,16,0,14,14,18,18,0,0,21,20,0,0,13,13,16,17,0,18,18,0,0,0,15,14,17,16,8,7,7,14,14,11,10,10,15,15,13,10,10,15,15,0,21,20,19,19,0,21,0,17,18,11,10,10,15,16,14,12,12,18,18,14,11,11,15,14,0,21,20,18,19,0,0,21,18,18,12,11,11,16,16,16,14,14,18,20,14,11,11,16,15,0,20,20,19,19,0,0,20,18,18,0,21,0,18,19,0,0,0,0,0,0,20,20,17,18,0,0,0,20,20,0,0,0,19,19,0,0,0,20,18,0,0,0,0,0,0,0,21,18,18,0,21,21,0,21,0,0,0,19,20,11,9,9,14,14,13,10,10,14,14,13,11,11,15,15,0,13,13,13,13,0,14,14,16,16,13,11,11,15,15,16,12,12,15,15,14,10,10,14,14,0,14,14,16,16,0,14,14,15,15,13,10,10,15,15,17,13,14,15,16,15,10,10,15,15,0,14,14,17,16,0,14,14,15,15,0,15,15,17,17,0,0,21,18,18,0,13,13,15,15,0,16,16,21,20,0,14,14,15,14,0,15,14,16,17,0,0,20,20,19,0,13,13,15,15,0,19,18,0,0,0,15,15,15,15,0,11,11,14,14,0,12,12,16,16,0,12,12,16,16,0,15,16,21,21,0,16,17,21,0,0,12,12,17,16,0,14,14,18,19,0,11,11,16,16,0,15,15,20,21,0,16,16,21,0,0,12,12,17,16,0,15,15,19,19,0,12,12,16,17,0,16,15,0,0,0,16,16,0,0,0,17,17,0,21,0,0,0,0,0,0,14,15,20,0,0,17,17,0,0,0,17,17,0,0,0,17,16,0,0,0,0,0,0,0,0,15,15,0,0,0,18,18,0,0,0,18,17,0,0,0,11,11,14,14,0,12,12,15,15,0,12,12,15,15,0,13,13,14,14,0,14,14,17,17,0,12,12,16,16,0,14,14,16,16,0,11,11,15,15,0,13,13,16,17,0,13,13,16,16,0,12,12,15,15,0,14,14,17,16,0,11,11,15,15,0,14,14,17,17,0,13,13,16,16,0,15,15,17,18,0,21,20,20,21,0,12,12,15,15,0,16,16,20,21,0,14,14,15,15,0,14,14,17,17,0,0,0,18,19,0,12,13,15,15,0,18,17,21,0,0,14,15,15,15,8,8,8,16,16,12,10,10,16,16,13,9,9,16,16,0,14,14,18,17,0,14,14,16,17,12,10,10,18,17,14,12,11,18,18,14,9,9,16,16,0,13,13,18,18,0,13,13,17,16,12,9,9,16,17,17,13,13,17,17,14,9,9,15,15,0,14,14,20,19,0,13,13,16,16,0,15,15,19,18,0,0,0,20,19,0,12,13,17,17,0,16,16,20,0,0,14,14,16,17,0,14,14,19,18,0,0,0,20,20,0,13,13,16,16,0,18,17,0,0,0,15,15,16,16,9,7,7,14,14,12,10,10,15,15,13,10,10,15,15,0,21,0,18,19,0,20,21,19,18,12,10,10,16,15,15,13,13,18,18,14,11,11,15,15,0,0,0,19,18,0,0,21,18,18,13,11,11,15,15,16,14,14,17,19,15,11,11,15,15,0,21,21,20,18,0,0,21,18,18,0,0,21,21,19,0,0,0,0,0,0,19,20,18,17,0,0,0,21,21,0,21,0,20,18,0,0,21,19,19,0,0,0,0,0,0,20,21,17,17,0,0,0,0,0,0,21,0,18,20,0,10,10,14,14,0,11,11,15,15,0,11,11,15,15,0,14,14,15,15,0,15,15,16,16,0,11,12,16,16,0,13,13,16,16,0,11,11,15,15,0,14,14,17,17,0,14,14,15,15,0,11,11,16,15,0,14,14,15,15,0,11,11,15,15,0,15,15,17,17,0,14,14,15,15,0,16,16,18,18,0,0,0,20], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+521907);
/* memory initializer */ allocate([19,0,14,13,16,15,0,17,17,21,0,0,15,15,15,15,0,16,15,17,16,0,20,0,20,18,0,13,14,15,15,0,19,18,0,21,0,15,15,15,15,0,11,11,14,14,0,12,12,16,16,0,12,12,16,16,0,16,15,20,21,0,17,16,0,0,0,12,12,16,16,0,14,14,18,18,0,11,11,16,16,0,15,15,21,20,0,16,16,0,0,0,12,12,16,17,0,15,14,19,19,0,11,12,16,16,0,15,15,21,0,0,16,16,0,0,0,16,17,0,0,0,0,0,0,0,0,15,15,21,0,0,17,17,0,0,0,17,17,0,0,0,17,16,0,0,0,0,0,0,0,0,15,15,0,20,0,19,20,0,0,0,17,17,0,0,0,12,12,15,15,0,12,12,15,15,0,12,12,16,16,0,13,13,15,15,0,15,15,17,17,0,13,13,17,16,0,14,14,17,17,0,11,11,16,16,0,14,14,17,17,0,13,13,16,16,0,12,12,16,16,0,15,15,16,17,0,11,11,15,16,0,14,14,17,17,0,13,14,16,16,0,15,15,18,18,0,21,20,20,19,0,13,13,16,17,0,16,16,0,0,0,14,14,16,16,0,15,15,18,18,0,0,0,20,19,0,13,13,16,16,0,17,17,0,0,0,14,14,16,16,0,11,11,16,16,0,13,13,18,17,0,13,13,17,17,0,16,16,17,17,0,16,16,17,18,0,12,12,17,17,0,15,15,18,18,0,12,12,16,16,0,16,16,19,19,0,15,15,16,17,0,12,12,17,17,0,17,17,18,18,0,12,12,17,17,0,16,16,19,19,0,15,16,17,17,0,16,16,18,17,0,0,0,21,21,0,13,13,16,16,0,17,17,0,20,0,15,15,16,17,0,16,16,19,18,0,0,21,20,21,0,14,14,17,16,0,20,0,0,0,0,15,16,16,17,0,9,9,14,14,0,13,13,16,16,0,14,14,15,15,0,0,20,19,19,0,0,0,19,19,0,12,12,15,15,0,15,16,19,18,0,14,14,15,15,0,21,0,18,18,0,20,0,17,18,0,13,13,16,16,0,17,17,17,19,0,14,14,16,15,0,21,20,20,19,0,0,0,19,19,0,0,0,19,18,0,0,0,0,0,0,20,20,17,18,0,0,0,21,21,0,0,0,18,18,0,21,0,18,19,0,0,0,0,0,0,20,21,18,18,0,0,0,20,21,0,0,0,19,19,0,18,18,15,15,0,20,21,17,17,0,19,21,17,17,0,0,0,17,18,0,0,0,20,19,0,19,19,17,17,0,0,0,18,18,0,19,20,16,17,0,0,21,20,20,0,19,20,19,18,0,19,20,16,16,0,0,0,18,19,0,19,20,17,17,0,0,21,0,20,0,21,21,17,19,0,20,0,19,20,0,0,0,20,0,0,19,18,17,16,0,0,0,0,0,0,0,20,17,17,0,20,21,18,20,0,0,0,0,21,0,19,20,17,17,0,0,0,0,0,0,20,21,17,17,0,11,11,14,14,0,13,13,16,17,0,13,13,16,16,0,17,17,0,21,0,18,17,21,0,0,13,13,16,16,0,15,15,18,18,0,12,12,16,16,0,17,16,21,0,0,17,17,0,0,0,12,12,17,17,0,17,17,19,21,0,13,12,16,16,0,17,17,0,0,0,17,17,0,0,0,18,17,0,21,0,0,0,0,0,0,15,15,20,0,0,20,18,0,0,0,17,18,0,0,0,16,17,0,0,0,0,0,0,0,0,15,15,0,0,0,19,19,0,0,0,18,18,0,0,0,14,14,18,18,0,16,16,0,21,0,16,16,21,21,0,17,17,0,20,0,17,17,20,0,0,16,15,0,0,0,20,20,0,0,0,15,15,20,20,0,17,17,21,0,0,17,18,20,20,0,15,15,20,20,0,18,18,0,0,0,15,15,19,20,0,17,18,0,0,0,17,17,20,20,0,18,17,21,0,0,0,0,0,21,0,15,15,20,20,0,19,19,0,0,0,17,17,21,0,0,17,17,0,0,0,0,0,21,0,0,15,15,19,19,0,20,21,0,0,0,18,17,21,21,0,12,12,16,16,0,14,14,17,17,0,13,13,17,18,0,16,16,18,17,0,16,16,18,18,0,13,13,18,18,0,15,16,19,18,0,13,13,16,16,0,16,16,20,18,0,16,16,17,17,0,12,13,17,17,0,17,16,18,18,0,12,12,16,16,0,17,16,20,19,0,16,16,16,16,0,16,17,18,20,0,0,0,21,20,0,14,14,17,16,0,19,18,0,20,0,16,16,17,16,0,16,16,17,18,0,0,21,21,21,0,14,14,16,16,0,20,20,21,0,0,16,16,16,16,0,10,10,14,14,0,14,14,15,16,0,14,14,15,15,0,0,21,18,18,0,0,21,18,19,0,13,13,16,16,0,16,16,18,18,0,14,14,15,15,0,21,0,18,18,0,21,0,18,18,0,13,13,16,16,0,17,17,19,20,0,14,14,15,15,0,0,0,18,20,0,0,21,18,18,0,0,21,19,18,0,0,0,0,0,0,20,21,18,17,0,0,0,21,21,0,0,0,19,19,0,21,0,18,19,0,0,0,0,0,0,21,20,17,17,0,0,21,20,0,0,0,0,19,19,0,19,20,15,16,0,0,20,18,17,0,20,21,17,18,0,21,0,18,18,0,0,0,19,19,0,20,20,17,18,0,0,0,18,19,0,20,20,18,17,0,0,0,0,20,0,0,21,17,18,0,20,21,17,17,0,0,0,18,18,0,19,19,17,17,0,0,0,21,21,0,20,20,17,17,0,0,0,21,19,0,0,0,20,19,0,21,20,17,18,0,0,0,0,0,0,0,20,18,17,0,21,20,18,18,0,0,0,20,21,0,20,20,17,17,0,0,0,0,0,0,20,0,17,17,0,11,11,13,14,0,13,13,16,16,0,13,13,16,16,0,17,17,0,0,0,17,18,0,0,0,13,13,16,16,0,15,16,18,18,0,13,13,16,17,0,16,17,20,0,0,17,18,20,0,0,13,13,17,17,0,16,16,20,21,0,13,13,16,16,0,17,17,21,0,0,17,18,0,0,0,17,18,0,21,0,0,0,0,0,0,15,15,20,0,0,19,19,0,0,0,17,17,0,0,0,18,17,21,20,0,0,0,0,0,0,16,16,20,21,0,21,20,0,21,0,19,21,0,0,0,15,15,0,0,0,16,17,0,19,0,16,16,0,0,0,17,17,0,0,0,19,18,0,0,0,16,16,20,20,0,20,18,21,0,0,15,15,21,21,0,18,18,0,0,0,18,19,0,0,0,16,15,0,21,0,20,19,0,0,0,16,16,0,0,0,20,18,0,21,0,17,18,21,0,0,18,19,0,0,0,0,0,0,0,0,16,16,20,20,0,19,20,0,0,0,17,17,0,0,0,18,17,20,21,0,0,0,0,0,0,16,16,0,20,0,20,22,0,0,0,18,18,0,22,2,4,4,8,8,10,12,12,11,11,9,11,11,12,13,11,12,12,11,11,11,12,12,12,12,10,13,12,13,13,11,12,12,13,13,11,12,12,13,13,11,12,13,13,13,11,13,13,13,13,10,13,13,12,13,11,12,12,14,14,11,13,12,12,12,11,12,12,13,13,11,13,13,12,12,11,13,13,13,13,11,12,12,13,13,11,13,13,12,12,11,12,12,13,13,11,13,13,12,12,11,13,13,13,13,11,12,12,14,14,11,13,13,12,12,11,12,12,13,13,11,13,13,12,12,11,10,10,10,10,12,10,10,11,11,11,8,8,11,11,13,10,10,10,10,12,10,10,10,10,13,11,11,11,11,13,10,10,11,11,13,11,11,12,12,13,11,11,11,11,13,11,11,12,12,13,11,11,12,12,13,10,10,11,11,13,11,11,11,11,13,11,10,11,11,13,11,11,11,11,13,11,11,11,11,13,10,10,11,11,13,11,11,11,11,12,10,11,11,11,13,11,11,11,11,13,11,11,11,11,13,10,10,11,11,13,11,11,11,11,13,11,11,11,11,13,11,11,11,11,11,10,10,10,10,12,10,10,9,9,12,12,12,11,11,13,12,12,9,9,13,12,12,10,10,12,12,12,12,12,13,13,13,14,14,13,12,12,11,11,13,13,13,12,12,13,12,12,11,11,13,12,13,11,11,13,13,13,14,14,13,12,12,10,10,13,13,13,11,11,13,12,12,10,10,13,13,13,11,11,13,13,13,14,14,13,12,12,10,10,13,13,13,11,11,13,12,13,10,10,13,13,13,11,11,13,13,13,14,14,13,12,12,10,10,13,13,13,11,11,13,13,12,10,10,14,12,12,8,8,14,12,12,9,9,14,11,11,9,9,14,12,12,8,8,14,11,11,7,7,14,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,12,9,9,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,14,12,12,9,9,14,13,13,9,9,14,13,13,9,9,15,12,12,9,9,15,13,13,9,9,14,12,12,9,9,14,13,13,9,9,14,13,13,9,9,15,12,12,9,9,14,13,13,9,9,14,12,12,9,9,14,13,13,9,9,13,12,12,8,8,13,13,13,8,8,14,13,13,9,9,13,13,13,7,7,14,13,13,8,8,14,14,14,10,10,14,14,14,11,11,14,14,14,9,9,14,14,14,10,10,14,14,14,9,9,14,14,14,10,9,15,14,14,11,11,14,14,14,9,9,14,14,14,10,10,14,14,14,9,9,14,14,14,9,9,15,14,14,11,11,14,14,14,8,8,14,14,14,9,9,14,14,14,8,8,14,14,14,9,9,15,14,14,11,11,14,14,14,8,8,14,14,14,9,9,14,14,14,8,8,12,12,12,13,13,16,15,15,11,11,16,15,16,12,12,17,16,16,11,11,17,15,15,12,11,16,16,16,12,13,16,15,15,13,13,16,16,16,12,12,16,16,15,13,13,16,16,16,12,12,16,16,16,13,13,17,16,16,14,14,17,17,16,12,12,17,16,16,13,13,17,17,16,12,13,16,16,17,13,12,17,16,16,14,13,17,16,16,12,12,17,16,16,12,12,17,16,17,12,12,17,17,17,13,13,16,16,16,13,14,17,17,16,12,12,16,16,16,13,13,17,17,17,12,12,13,14,14,10,10,16,14,14,12,12,16,15,15,14,14,16,14,14,12,12,15,14,14,13,13,17,15,15,14,13,16,16,15,15,15,16,15,15,14,14,16,15,15,14,14,17,15,15,14,14,16,15,15,14,14,16,16,15,15,15,17,15,15,13,13,16,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,15,15,15,15,16,14,14,13,13,16,15,15,14,14,16,14,14,13,13,17,15,15,14,14,16,16,15,15,15,17,14,14,13,13,16,15,15,14,14,17,14,14,13,13,13,11,11,10,10,16,14,14,13,13,15,14,14,13,13,16,14,14,12,12,16,14,14,12,12,15,15,15,14,14,16,14,14,14,14,16,15,14,14,14,16,14,14,14,14,16,15,15,14,13,16,15,15,14,14,16,14,14,14,14,17,15,15,14,14,16,14,14,14,14,16,15,15,13,14,16,15,15,14,14,16,14,14,14,14,16,15,15,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,14,14,16,14,14,14,14,17,15,15,13,13,16,15,14,13,13,17,15,15,13,13,14,14,14,9,9,14,14,14,17,17,14,15,15,18,18,14,14,14,18,19,14,14,14,18,18,15,15,15,19,18,15,16,15,18,20,15,15,15,18,19,15,15,15,19,19,15,15,15,18,20,15,15,15,18,19,15,15,16,20,18,15,15,15,18,18,15,15,15,19,19,15,15,15,18,19,15,15,15,18,19,15,15,15,19,19,14,15,14,19,19,15,15,15,20,19,15,14,14,19,18,14,15,15,18,19,15,15,16,20,20,14,14,14,18,19,15,15,15,19,18,14,14,14,18,18,14,12,12,9,9,13,14,14,18,18,14,13,13,18,19,14,14,14,18,18,14,14,14,18,18,15,15,15,19,19,15,14,14,19,18,14,15,15,19,18,15,14,14,18,18,15,15,15,19,18,14,15,15,19,19,15,14,14,19,18,14,15,15,19,18,15,14,14,19,18,14,15,15,19,18,15,15,15,21,18,15,14,14,19,18,14,15,15,18,19,14,15,14,20,19,14,15,15,18,19,14,15,15,19,19,15,14,14,19,20,14,15,15,18,18,14,14,14,19,19,14,15,15,19,18,12,12,12,13,13,16,15,15,11,11,16,15,15,12,12,16,16,16,11,11,16,15,15,11,11,16,16,16,13,13,17,16,16,13,13,17,17,17,12,12,16,16,16,13,13,17,16,17,13,12,15,16,16,12,12,16,15,15,13,13,17,16,16,12,12,16,16,15,12,12,16,16,16,12,12,17,17,16,13,12,16,16,16,13,13,17,16,16,12,12,17,16,16,12,12,17,17,16,12,12,16,17,16,12,12,17,15,15,13,13,17,16,16,12,12,16,16,16,12,12,16,16,16,12,12,13,13,13,9,9,15,14,14,13,13,16,15,14,14,14,16,14,14,13,13,15,14,14,13,13,17,15,15,14,14,16,15,15,15,15,16,15,15,14,14,16,15,15,15,15,17,15,15,14,14,16,15,15,14,14,16,15,15,15,15,17,14,15,14,14,16,15,15,14,14,17,15,15,13,14,17,15,15,14,14,16,15,15,15,15,17,14,14,13,13,16,15,15,14,14,17,14,14,13,13,17,15,15,14,14,16,15,16,15,15,17,14,14,13,13,16,15,15,14,14,18,14,14,13,13,13,11,11,11,11,15,14,14,12,12,15,14,14,13,13,16,14,14,12,12,16,13,14,12,12,16,15,15,13,13,16,14,14,14,14,16,15,15,13,13,16,14,14,13,13,16,14,15,13,13,15,15,15,13,13,16,14,14,14,13,16,14,14,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,13,13,16,14,14,14,14,16,15,15,12,12,16,14,14,13,13,16,15,15,12,12,16,15,15,13,13,16,14,14,14,14,17,15,14,12,12,16,14,14,13,13,16,15,15,12,12,14,14,14,8,8,14,14,14,17,18,14,15,15,17,18,14,14,14,17,18,14,14,14,18,18,14,15,15,18,18,14,16,15,19,19,15,15,15,18,19,15,16,15,20,19,15,15,15,18,18,14,15,15,18,19,15,16,16,20,19,15,15,15,19,17,14,15,15,20,18,14,15,15,18,18,14,15,15,18,19,14,15,15,19,20,14,14,14,18,18,14,15,15,18,19,14,14,14,18,19,14,15,15,19,18,15,16,16,20,21,14,14,15,19,19,14,15,15,19,19,14,14,14,19,18,13,12,12,9,9,13,14,14,18,19,14,14,14,18,19,14,14,14,18,18,14,14,14,18,18,14,15,15,19,19,15,14,14,19,18,15,15,15,19,19,15,14,14,19,20,14,15,15,18,19,14,15,15,20,18,15,14,14,18,18,14,15,15,18,18,14,14,14,19,19,14,15,15,18,18,14,15,15,19,18,15,14,14,19,19,14,15,15,19,18,15,14,14,19,18,14,14,15,18,19,14,15,15,19,18,15,14,14,18,19,14,15,14,19,20,14,14,14,19,19,14,15,15,19,19,12,12,12,13,13,16,16,16,11,11,16,16,16,12,12,17,16,16,11,11,17,15,15,11,11,16,16,16,13,13,17,15,16,13,13,16,16,16,12,12,17,16,16,13,13,17,17,16,12,12,17,17,16,13,13,17,16,16,13,13,17,17,17,12,12,17,16,16,13,13,17,17,17,12,12,16,16,16,12,12,17,15,15,13,13,17,16,16,11,11,17,16,16,12,12,16,16,16,11,11,16,17,16,12,12,17,16,16,13,13,17,17,16,12,12,17,17,16,12,12,17,16,16,11,11,13,14,14,9,9,16,14,14,13,13,16,14,15,14,14,16,14,14,12,12,16,14,14,13,13,17,15,15,14,14,16,15,15,15,15,17,15,15,14,14,16,15,15,14,14,17,15,15,14,14,16,15,15,14,14,16,15,15,15,16,17,14,15,14,14,16,15,15,14,14,17,15,15,14,14,16,15,15,14,14,16,15,15,15,15,17,14,14,13,13,16,15,15,14,14,16,14,14,13,13,17,15,15,14,14,16,16,15,15,15,17,14,14,13,13,16,15,15,14,14,17,14,14,13,13,13,11,11,10,10,16,14,14,12,12,15,13,13,13,12,16,14,14,11,11,16,14,14,11,11,16,14,15,13,14,16,14,14,13,13,16,15,15,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,13,13,17,14,14,14,14,17,15,15,13,13,16,14,15,13,13,16,15,15,13,13,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,15,15,12,12,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,17,14,14,12,12,16,15,15,12,12,13,14,14,8,8,13,14,14,18,18,13,15,15,17,18,14,14,14,18,19,14,14,14,19,18,14,15,15,19,18,15,15,16,21,18,15,15,15,19,19,14,16,16,19,19,14,15,15,18,19,14,15,15,19,20,14,16,16,19,18,15,15,15,18,19,14,15,15,19,18,15,15,15,18,18,15,15,15,20,18,15,16,16,20,19,14,15,14,18,19,14,15,16,19,20,14,15,15,19,18,15,15,15,19,18,15,16,16,20,19,15,14,14,18,18,14,15,15,19,19,14,15,15,18,18,13,12,12,8,8,13,14,14,19,18,14,13,13,20,18,14,14,14,19,18,14,13,13,18,19,14,15,15,20,19,15,14,14,19,19,14,15,15,19,18,15,14,14,20,20,15,15,15,19,18,14,15,15,19,18,15,14,14,19,18,14,15,15,20,19,14,14,14,20,19,14,15,15,19,18,15,15,15,18,18,15,14,14,18,18,14,15,15,19,19,14,14,14,19,19,14,15,15,19,19,15,15,15,19,18,15,14,14,20,19,15,15,15,19,19,14,14,14,20,19,14,15,15,20,20,12,12,12,13,13,17,16,16,11,11,16,16,15,12,12,17,16,16,11,11,17,15,15,11,11,17,17,17,13,13,17,16,16,13,13,17,17,17,12,12,17,16,16,13,13,17,17,16,12,13,16,17,16,13,13,17,16,15,13,13,17,16,16,12,12,17,16,16,12,13,17,16,17,12,12,17,17,17,12,12,17,16,15,13,13,17,16,16,12,12,17,16,16,12,12,17,16,16,11,11,16,16,16,12,12,17,15,15,13,13,17,16,15,11,11,16,16,16,12,12,17,16,16,11,11,13,14,14,9,9,16,14,14,13,13,16,14,15,14,14,16,14,14,12,12,16,14,14,13,13,17,15,15,14,15,16,15,15,15,15,17,15,15,14,14,16,15,15,15,14,16,15,15,14,14,16,15,15,14,14,16,15,16,15,15,17,15,14,14,14,16,15,15,14,14,17,15,15,13,13,16,15,15,14,14,16,16,16,15,15,17,14,14,13,13,16,15,15,14,14,18,14,15,13,13,16,15,15,14,14,16,16,15,15,15,16,14,14,13,13,16,15,15,14,14,17,14,15,13,13,13,11,11,10,10,15,14,14,12,12,15,14,14,13,13,16,14,14,12,12,16,13,14,12,12,16,14,15,14,13,16,14,14,14,14,16,15,15,13,13,16,14,14,13,13,16,15,15,13,13,15,15,15,13,13,16,14,14,14,14,17,15,15,13,13,16,14,14,13,13,16,15,15,13,13,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,14,15,12,12,16,15,15,13,13,16,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,15,15,12,12,14,14,14,8,8,14,14,14,17,17,14,15,15,18,18,14,14,14,18,17,14,14,14,18,18,14,15,15,18,20,15,16,15,19,18,15,15,15,19,18,15,15,16,19,18,15,15,15,18,18,14,15,15,18,18,15,16,16,18,19,15,15,15,18,18,15,15,15,19,20,15,15,15,18,18,15,15,15,18,18,15,16,16,19,19,15,14,15,19,19,15,15,15,19,20,14,14,15,18,18,15,15,15,19,19,15,16,16,19,19,15,15,14,18,19,15,15,15,20,20,15,15,14,18,18,13,12,12,8,8,13,14,14,18,18,14,14,14,18,18,14,14,14,18,20,14,14,14,18,18,14,15,15,19,18,15,14,14,18,19,15,15,15,18,19,15,14,14,18,19,15,15,15,18,18,14,15,14,18,19,15,14,14,21,19,15,15,15,19,18,14,14,14,19,18,14,15,15,19,18,15,15,15,20,19,15,14,14,20,18,14,15,15,18,19,14,14,14,19,18,14,15,15,18,19,15,15,15,18,19,15,14,14,19,19,15,15,15,19,19,14,14,14,19,20,14,15,15,18,19,1,6,6,7,8,8,7,8,8,7,9,9,10,12,11,9,8,8,7,9,9,11,12,12,9,9,9,6,7,7,10,11,11,10,11,11,10,11,11,13,13,14,12,12,12,11,11,11,14,14,14,12,12,12,6,5,5,9,6,5,9,6,6,9,7,7,12,10,10,11,6,6,10,7,7,13,10,10,12,7,7,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,9,9,12,11,11,16,13,13,15,11,11,8,7,7,12,12,12,12,11,11,12,11,11,14,14,14,14,12,12,12,12,12,16,15,15,14,12,12,0,10,10,0,12,12,0,12,12,0,11,11,0,14,14,0,11,11,0,12,12,0,15,15,0,11,11,8,8,8,13,11,11,13,10,10,13,11,11,15,13,13,14,11,11,12,10,10,16,14,14,14,10,10,9,7,7,13,11,11,13,11,11,12,11,11,16,14,14,14,12,12,13,12,12,15,14,14,15,13,12,0,11,11,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,13,12,0,14,15,0,12,12,1,3,3,0,9,9,0,9,9,0,10,10,0,9,9,0,10,10,0,10,10,0,9,9,0,10,10,0,7,7,0,7,7,0,6,6,0,8,8,0,7,7,0,8,8,0,8,9,0,8,8,0,8,8,0,7,7,0,9,9,0,8,8,0,10,10,0,9,9,0,10,10,0,10,10,0,9,9,0,10,10,0,9,9,0,11,11,0,11,11,0,12,12,0,11,11,0,12,12,0,13,13,0,12,12,0,13,12,0,8,8,0,12,12,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,13,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,11,11,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,12,12,0,12,12,0,8,8,0,12,12,0,12,12,0,13,13,0,13,13,0,13,14,0,14,13,0,13,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,7,7,0,8,8,0,9,9,0,12,12,0,8,8,0,9,9,0,12,12,0,8,8,0,6,6,0,11,11,0,12,12,0,12,12,0,15,15,0,11,11,0,12,12,0,15,15,0,12,12,0,5,5,0,5,5,0,6,6,0,7,7,0,11,11,0,6,6,0,7,7,0,10,11,0,6,6,0,7,7,0,11,11,0,12,12,0,11,11,0,15,15,0,10,10,0,12,12,0,15,15,0,12,12,0,6,6,0,12,12,0,12,12,0,12,12,0,15,15,0,11,11,0,12,12,0,15,15,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,11,12,0,15,16,0,11,11,0,6,6,0,11,12,0,12,12,0,12,12,0,16,15,0,12,12,0,13,12,0,15,14,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,7,8,10,13,16,3,2,5,7,9,13,16,6,4,4,6,10,14,15,7,5,5,7,10,13,14,9,8,9,9,9,11,13,12,11,12,9,7,8,11,14,12,10,6,5,7,10,3,5,4,5,4,5,4,5,5,5,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,2,5,4,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,15,15,1,4,4,4,4,4,4,4,4,1,4,4,7,7,4,5,6,7,7,4,6,5,7,7,7,6,7,6,7,7,7,6,7,6,1,3,3,8,8,10,10,10,10,10,10,10,10,5,7,5,9,8,10,10,10,10,11,10,11,10,5,5,7,8,9,10,10,11,10,10,11,10,11,10,10,10,11,11,11,11,11,11,11,10,11,11,10,10,10,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,12,11,11,11,11,11,11,12,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,11,11,11,11,11,11,11,12,11,13,11,11,11,11,11,11,11,11,11,11,11,12,11,13,1,3,2,3,2,3,6,7,9,13,17,3,2,5,7,9,13,17,6,5,5,6,9,12,16,7,7,6,6,7,10,13,10,10,9,7,6,10,13,13,13,12,10,10,11,15,17,17,17,14,14,15,17,1,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,6,7,6,8,8,7,7,8,7,8,8,9,9,9,8,7,7,8,8,8,9,9,9,9,8,8,6,6,6,9,7,7,9,7,7,9,8,8,10,8,8,10,8,8,10,8,8,10,9,8,10,8,8,7,6,6,9,6,6,9,6,6,9,7,7,10,8,8,10,6,6,9,7,7,10,8,8,10,6,6,7,7,7,11,9,9,11,9,9,10,9,9,12,10,10,12,8,8,11,9,9,13,9,10,12,8,8,8,7,7,11,9,10,11,10,10,10,9,9,11,11,11,11,9,9,11,10,9,12,11,11,11,9,10,10,8,8,11,9,10,11,9,9,11,9,9,12,10,10,11,9,9,11,9,9,12,10,11,11,9,9,8,8,8,12,9,9,12,9,9,11,9,9,13,9,9,13,8,8,12,9,9,13,10,10,12,8,8,9,7,7,11,10,10,11,10,10,11,10,10,12,11,11,11,10,9,11,10,10,11,11,11,11,9,9,11,9,9,12,10,10,11,10,10,12,10,10,11,11,11,11,9,9,11,10,10,12,11,11,11,9,9,1,7,7,6,8,8,7,8,8,7,9,9,11,11,11,9,8,8,7,9,9,11,12,11,9,9,9,6,7,7,10,11,11,10,10,10,10,11,11,15,14,14,12,12,12,11,11,11,14,14,14,12,12,12,5,6,6,8,5,5,8,7,7,8,8,8,12,10,10,10,7,7,8,7,7,12,10,10,10,7,7,6,7,7,12,11,11,12,10,10,11,10,10,14,14,13,13,10,10,11,10,10,16,14,14,14,11,10,7,7,7,13,12,12,12,12,11,11,11,11,15,14,17,13,12,12,12,11,11,15,15,15,14,13,13,10,9,9,14,12,11,13,11,11,12,11,11,16,15,14,14,11,11,12,11,11,17,14,14,15,11,11,7,8,8,12,11,11,13,10,10,11,10,10,17,14,13,14,10,10,12,10,10,18,15,15,14,10,10,8,7,7,13,12,12,13,11,11,12,11,11,16,14,15,14,12,12,12,11,11,18,16,16,14,12,12,11,10,10,13,12,11,13,11,11,13,12,12,0,15,14,14,11,11,13,11,11,16,15,15,15,11,11,2,3,3,3,3,3,3,1,7,7,14,14,6,8,8,15,16,7,8,8,16,15,0,14,14,17,17,0,14,14,16,16,7,9,9,16,16,10,11,11,17,18,9,8,8,16,16,0,14,14,19,19,0,14,14,17,16,8,9,9,16,16,12,12,12,17,17,10,9,9,16,16,0,15,14,18,20,0,14,14,17,17,0,15,15,18,17,0,21,0,0,21,0,13,13,17,17,0,17,17,0,0,0,15,15,17,17,0,15,15,17,18,0,0,0,0,21,0,13,13,17,17,0,18,18,0,21,0,16,15,17,18,6,7,7,14,14,9,10,10,16,16,11,10,10,15,15,0,21,0,20,21,0,0,0,18,20,10,10,10,15,16,12,13,13,18,18,12,11,11,15,15,0,0,0,20,20,0,0,21,19,19,12,11,11,15,15,15,14,14,18,18,13,11,11,15,16,0,0,0,20,19,0,0,0,20,21,0,0,20,19,19,0,0,0,0,0,0,20,0,17,18,0,0,21,0,0,0,0,0,21,0,0,21,0,20,19,0,0,0,0,0,0,21,0,18,18,0,0,0,21,0,0,0,0,0,20,7,6,6,13,13,9,6,6,12,12,9,7,7,14,14,0,10,10,12,12,0,11,11,15,15,9,7,7,14,14,12,9,9,14,14,10,7,7,14,13,0,11,11,16,15,0,11,11,14,14,9,7,7,14,14,13,10,10,14,14,11,7,7,14,13,0,11,11,16,16,0,11,11,14,14,0,12,12,16,16,0,19,0,17,18,0,10,10,14,14,0,15,14,0,0,0,12,12,14,14,0,12,12,15,15,0,20,0,18,19,0,10,10,14,14,0,16,15,0,20,0,13,13,14,14,0,11,11,13,13,0,12,13,16,16,0,12,12,16,16,0,16,16,0,21,0,17,18,0,0,0,12,12,16,16,0,15,15,18,0,0,12,12,16,16,0,17,16,21,21,0,16,17,0,0,0,13,13,17,16,0,16,16,20,21,0,12,12,17,16,0,17,17,0,21,0,17,17,21,21,0,17,18,0,0,0,0,0,0,0,0,15,15,0,0,0,18,21,0,0,0,18,19,0,0,0,18,17,21,21,0,0,0,0,0,0,16,16,0,0,0,0,0,0,0,0,19,19,0,0,0,11,11,12,12,0,11,11,10,10,0,12,12,13,13,0,12,12,9,9,0,14,14,13,13,0,12,12,13,13,0,14,14,12,13,0,11,11,12,12,0,13,13,13,13,0,13,13,13,13,0,12,12,13,13,0,14,14,12,12,0,11,11,12,12,0,14,13,14,14,0,13,13,13,13,0,15,15,14,15,0,0,0,16,16,0,12,12,13,13,0,16,17,20,21,0,14,13,12,12,0,14,14,14,14,0,21,0,16,16,0,12,12,13,13,0,18,17,21,0,0,14,14,13,13,7,8,8,17,17,11,10,10,18,18,12,10,10,17,17,0,15,15,20,18,0,15,15,17,17,11,9,9,17,17,14,12,12,19,19,13,9,9,16,16,0,15,14,0,19,0,14,14,16,16,12,10,10,20,18,16,13,13,21,20,14,10,10,17,17,0,15,15,21,20,0,15,14,17,17,0,15,15,21,21,0,0,21,0,0,0,13,13,18,18,0,19,16,0,0,0,15,15,17,16,0,16,16,0,21,0,0,0,0,21,0,13,14,18,17,0,20,19,0,0,0,15,15,18,18,8,7,7,15,15,12,11,11,17,16,13,11,11,16,16,0,0,0,21,20,0,0,0,0,20,11,10,10,17,17,14,13,13,19,18,14,11,11,16,16,0,20,0,21,19,0,0,21,0,20,12,11,11,17,17,16,15,15,0,19,14,11,11,17,16,0,21,0,0,19,0,0,0,21,20,0,0,21,20,0,0,0,0,0,0,0,0,0,19,21,0,0,0,0,0,0,0,0,19,20,0,0,0,20,21,0,0,0,0,0,0,20,0,19,21,0,0,0,0,0,0,0,0,21,20,11,10,9,15,15,14,11,11,15,15,14,11,11,16,16,0,14,14,14,14,0,16,15,17,16,13,11,11,16,16,16,13,13,16,16,15,10,10,15,15,0,14,15,17,17,0,14,14,16,15,13,11,11,16,16,17,15,14,16,16,15,10,10,15,15,0,15,15,17,18,0,15,15,16,16,0,16,16,17,17,0,21,0,21,20,0,13,13,15,15,0,18,18,0,21,0,15,15,15,15,0,16,16,17,17,0,0,0,0,18,0,13,13,15,15,0,19,18,0,0,0,15,15,16,16,0,12,12,15,15,0,13,13,17,17,0,13,13,17,18,0,16,17,21,0,0,20,18,0,0,0,13,13,17,17,0,15,15,0,18,0,12,12,17,18,0,16,16,0,0,0,17,17,21,0,0,13,13,18,18,0,16,16,21,21,0,12,12,17,18,0,16,17,21,0,0,17,17,0,21,0,17,18,0,0,0,0,0,0,0,0,16,15,0,21,0,21,19,0,0,0,18,18,0,0,0,18,19,0,0,0,0,0,0,0,0,16,16,21,21,0,20,19,0,0,0,19,21,0,21,0,12,12,15,15,0,12,12,15,16,0,13,13,16,16,0,14,14,15,15,0,16,15,17,17,0,13,13,17,17,0,15,15,16,18,0,12,12,16,16,0,14,14,17,17,0,15,14,16,16,0,13,13,16,16,0,16,15,17,17,0,12,12,16,16,0,15,15,18,18,0,14,14,17,16,0,16,16,17,18,0,0,0,20,21,0,13,13,16,17,0,17,17,0,0,0,15,15,16,16,0,15,16,17,17,0,0,0,19,0,0,13,13,15,16,0,19,18,0,0,0,16,15,16,17,8,8,8,17,17,13,11,10,17,18,13,10,10,17,17,0,15,15,20,19,0,15,15,17,17,12,10,10,19,18,15,12,12,20,18,14,10,10,17,16,0,15,15,20,20,0,14,15,16,16,13,10,10,17,17,17,14,14,0,18,15,10,10,17,17,0,16,15,20,20,0,14,14,17,17,0,15,16,20,20,0,0,21,0,0,0,13,13,17,17,0,18,17,0,0,0,15,16,17,18,0,15,15,18,21,0,0,0,21,0,0,13,13,18,18,0,19,19,0,0,0,16,16,18,17,9,8,8,15,15,12,11,11,16,16,13,11,11,16,15,0,0,0,0,21,0,21,0,19,19,12,11,11,17,18,15,13,13,18,19,14,11,11,16,16,0,0,21,21,19,0,0,0,21,20,13,11,11,18,17,17,14,15,20,21,15,11,12,16,16,0,0,0,20,0,0,0,21,0,19,0,0,0,0,19,0,0,0,0,0,0,21,21,19,19,0,0,0,21,0,0,0,0,19,21,0,0,0,19,20,0,0,0,21,0,0,0,21,19,19,0,0,0,0,0,0,0,0,21,20,0,11,11,15,15,0,12,12,15,16,0,12,12,16,16,0,15,15,16,15,0,16,16,17,17,0,12,12,17,17,0,14,14,17,17,0,11,11,16,16,0,15,15,19,18,0,15,15,16,16,0,12,12,17,16,0,14,15,16,16,0,11,11,15,15,0,16,16,18,19,0,15,15,15,16,0,17,17,18,20,0,21,0,21,19,0,14,14,16,16,0,18,18,0,0,0,16,16,15,15,0,16,16,18,17,0,0,0,19,20,0,14,14,16,16,0,19,19,0,0,0,16,17,15,15,0,12,12,14,15,0,13,13,16,17,0,12,12,17,17,0,17,16,0,0,0,18,17,21,0,0,13,13,19,17,0,15,15,20,21,0,12,12,17,17,0,17,17,0,0,0,17,17,0,0,0,13,13,17,18,0,16,16,21,0,0,12,12,17,17,0,17,17,0,0,0,17,17,0,0,0,18,21,0,0,0,0,0,0,0,0,15,15,21,0,0,20,21,0,0,0,18,19,0,0,0,18,17,0,0,0,0,0,0,0,0,16,16,21,0,0,21,21,0,0,0,18,19,0,0,0,12,12,16,16,0,13,13,16,17,0,13,13,17,16,0,14,14,16,16,0,16,15,19,18,0,13,13,17,17,0,15,15,18,18,0,12,12,16,16,0,15,15,18,19,0,15,15,17,16,0,13,13,17,17,0,16,16,18,17,0,12,12,17,16,0,15,15,18,18,0,15,15,17,17,0,16,16,0,19,0,0,0,0,0,0,14,14,16,17,0,18,18,0,0,0,15,15,17,17,0,16,16,21,19,0,21,0,21,21,0,13,14,16,16,0,19,19,0,0,0,15,16,16,16,0,11,11,17,16,0,15,14,19,18,0,14,14,19,19,0,18,17,18,20,0,17,17,18,19,0,13,13,17,17,0,16,17,21,18,0,13,13,17,16,0,18,17,19,0,0,16,17,18,18,0,12,12,19,18,0,18,18,20,20,0,13,13,17,17,0,17,17,21,0,0,16,17,17,18,0,18,17,19,18,0,0,0,0,0,0,14,14,17,17,0,19,19,21,0,0,16,16,16,17,0,17,17,19,20,0,0,0,0,21,0,15,15,17,18,0,21,21,0,0,0,17,17,17,18,0,10,10,15,15,0,15,14,17,18,0,14,14,16,16,0,0,0,18,0,0,21,0,19,0,0,13,13,17,16,0,17,17,18,0,0,14,14,16,15,0,0,0,21,0,0,21,0,19,18,0,13,13,17,17,0,18,18,20,20,0,15,15,16,16,0,0,0,21,21,0,0,0,20,20,0,0,0,19,0,0,0,0,0,0,0,21,20,18,18,0,0,0,0,0,0,0,0,0,20,0,0,0,0,20,0,0,0,0,0,0,0,0,19,18,0,0,0,0,21,0,0,0,18,20,0,18,19,16,17,0,21,19,17,17,0,0,21,18,18,0,0,21,20,19,0,0,0,20,20,0,0,21,17,17,0,0,0,19,19,0,20,20,17,17,0,0,0,0,20,0,0,20,18,18,0,21,20,17,17,0,0,0,20,21,0,19,0,17,17,0,0,21,0,0,0,20,0,18,19,0,0,0,21,21,0,0,0,0,21,0,20,20,17,17,0,0,0,0,0,0,21,0,18,17,0,0,0,20,19,0,0,0,0,21,0,20,20,17,17,0,0,0,0,0,0,21,21,18,18,0,12,12,15,14,0,14,14,17,17,0,14,14,17,16,0,18,18,21,0,0,19,20,0,0,0,13,13,18,17,0,16,16,19,18,0,13,13,17,17,0,17,17,0,0,0,17,17,21,0,0,13,13,17,17,0,17,17,21,20,0,13,13,18,17,0,18,19,21,21,0,19,18,0,0,0,18,17,0,0,0,0,0,0,0,0,15,16,0,0,0,21,21,0,0,0,20,18,21,0,0,17,18,0,0,0,0,0,0,0,0,15,16,0,0,0,0,20,0,0,0,0,19,0,0,0,15,15,18,19,0,18,17,21,0,0,16,18,0,20,0,17,18,21,0,0,18,20,0,0,0,16,16,21,21,0,19,20,21,0,0,16,15,0,21,0,18,20,0,0,0,18,19,0,0,0,16,15,21,21,0,21,0,0,0,0,16,15,21,0,0,20,19,0,0,0,18,21,21,0,0,20,18,0,0,0,0,0,0,0,0,16,16,0,20,0,21,0,0,0,0,17,18,20,21,0,18,18,21,21,0,0,0,0,0,0,16,16,20,0,0,0,21,0,0,0,21,18,0,0,0,12,12,20,17,0,15,15,19,18,0,14,14,19,18,0,18,17,21,19,0,17,17,21,17,0,13,13,21,19,0,16,17,20,19,0,13,13,16,16,0,17,17,20,21,0,16,16,19,17,0,13,13,18,18,0,17,19,19,19,0,13,13,17,17,0,18,18,0,19,0,16,17,18,18,0,16,17,19,21,0,0,0,0,0,0,15,15,16,17,0,20,19,21,0,0,17,17,17,17,0,17,17,21,19,0,0,0,0,0,0,15,15,17,17,0,21,0,0,0,0,18,18,17,17,0,10,10,15,15,0,15,15,17,17,0,15,14,16,16,0,0,0,21,19,0,21,21,19,21,0,13,13,17,16,0,17,17,18,19,0,14,15,16,15,0,0,0,21,19,0,21,21,18,19,0,14,14,16,17,0,18,18,18,19,0,15,15,15,16,0,0,21,0,21,0,0,0,19,20,0,0,0,21,19,0,0,0,0,0,0,21,21,19,17,0,0,0,0,0,0,0,0,21,21,0,21,0,0,21,0,0,0,0,0,0,21,21,19,18,0,0,0,0,0,0,0,0,0,19,0,21,18,18,17,0,21,0,20,20,0,0,0,18,20,0,0,21,18,21,0,0,0,21,18,0,0,0,0,19,0,0,0,21,21,0,20,21,17,19,0,21,0,21,0,0,21,0,18,18,0,20,21,17,18,0,0,0,21,19,0,20,21,17,18,0,0,0,21,21,0,0,0,20,19,0,0,0,21,21,0,0,0,0,0,0,21,21,19,18,0,0,0,0,0,0,0,21,19,18,0,21,21,19,0,0,0,0,21,0,0,21,21,18,17,0,0,0,0,0,0,21,0,21,18,0,12,12,14,14,0,15,14,17,17,0,14,14,17,16,0,19,17,0,0,0,19,19,0,0,0,13,13,17,17,0,17,17,20,20,0,13,13,18,18,0,18,17,0,0,0,18,21,0,0,0,13,13,17,17,0,18,18,21,20,0,14,14,18,19,0,19,18,21,0,0,19,19,0,0,0,20,18,20,0,0,0,0,0,0,0,15,16,0,0,0,21,21,0,0,0,19,19,0,0,0,18,18,0,0,0,0,0,0,0,0,16,16,0,21,0,0,0,0,0,0,19,20,0,0,0,15,15,20,21,0,17,17,21,21,0,17,17,0,0,0,19,18,0,0,0,18,19,0,0,0,17,16,0,21,0,0,20,0,0,0,16,16,0,20,0,19,19,0,21,0,19,18,0,21,0,16,16,0,0,0,21,21,0,0,0,16,16,0,0,0,21,21,0,0,0,19,19,0,0,0,20,0,0,0,0,0,0,0,0,0,17,17,0,21,0,0,20,0,0,0,20,18,21,21,0,19,18,0,20,0,0,0,0,0,0,16,17,21,0,0,0,21,0,0,0,19,20,21,20,2,3,4,9,9,10,12,12,12,11,10,12,12,13,12,11,13,12,11,11,11,12,12,12,11,11,13,13,13,13,11,12,12,14,14,12,13,13,13,13,11,13,13,13,13,11,13,13,13,13,11,13,13,13,13,11,12,12,14,14,12,13,13,12,12,11,13,13,13,13,11,13,13,12,12,11,13,13,13,13,12,12,13,14,14,12,13,13,12,12,11,13,13,13,13,11,13,13,12,12,11,13,13,13,13,12,13,13,14,14,12,13,13,12,12,11,13,13,13,13,11,13,13,12,12,11,10,10,10,10,12,10,10,11,11,12,9,9,11,11,13,11,11,10,10,13,10,10,10,10,13,11,11,12,12,13,10,10,12,12,14,12,11,12,12,13,11,11,11,12,13,12,12,12,12,13,11,11,12,12,13,10,10,12,12,14,11,11,12,12,13,11,11,12,12,13,11,11,12,12,14,12,12,12,12,14,10,10,11,11,14,12,11,11,11,13,11,11,11,11,13,12,12,11,11,14,12,12,12,11,14,10,10,11,11,14,12,11,11,11,13,11,11,11,11,13,12,12,11,11,11,11,11,10,10,12,10,11,9,9,12,12,12,11,11,13,12,12,9,9,13,13,13,10,10,13,13,13,12,12,13,13,13,14,14,13,12,12,11,11,14,13,13,12,12,14,13,13,11,11,13,13,13,12,11,13,13,13,14,14,13,12,12,10,10,14,13,13,11,11,13,13,13,10,10,13,13,13,11,11,14,13,13,14,14,14,12,12,10,10,13,13,13,11,11,13,13,13,10,10,13,13,13,11,11,14,13,13,14,14,14,13,13,10,10,13,13,13,11,11,13,13,13,10,10,14,12,12,8,8,14,12,12,9,9,14], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+532147);
/* memory initializer */ allocate([11,11,9,9,14,12,12,8,8,14,12,12,7,7,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,12,13,9,9,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,10,10,15,13,13,9,9,15,13,13,10,10,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,14,13,12,9,9,14,13,13,9,9,15,13,13,10,10,15,12,12,10,10,15,13,13,9,9,15,13,13,9,9,14,13,13,9,9,14,12,12,8,8,13,13,13,8,8,14,14,13,9,9,14,14,13,7,7,14,14,14,8,8,14,14,14,10,10,15,14,14,12,12,14,14,14,9,9,15,14,14,10,10,14,14,14,9,9,14,14,14,10,9,15,14,14,12,12,14,14,14,9,9,15,14,14,10,10,14,14,14,9,9,15,14,15,9,9,15,14,14,11,11,14,14,14,8,8,14,14,14,9,9,14,14,14,8,8,14,15,14,10,10,15,14,14,11,11,14,14,14,8,8,15,14,14,9,9,14,14,14,8,8,12,12,12,13,13,16,16,15,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,17,16,17,13,13,17,16,16,14,14,17,17,16,12,12,18,16,16,13,13,17,16,17,12,12,17,17,17,13,13,18,16,16,14,14,18,17,17,12,12,17,17,17,13,13,18,17,17,13,13,17,17,17,13,13,17,16,16,14,14,17,17,17,12,12,16,16,17,13,13,17,17,16,12,12,18,17,17,13,13,18,16,16,14,14,18,17,17,12,12,19,16,17,13,13,17,16,17,12,12,13,14,14,10,10,16,14,14,13,13,17,15,15,14,14,17,14,14,13,13,16,14,14,13,13,17,16,15,14,14,16,16,16,15,15,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,16,15,14,14,16,16,16,15,15,18,15,15,13,13,16,16,15,14,14,17,15,15,14,13,17,15,15,14,14,16,16,16,15,15,18,15,14,13,13,17,15,15,14,14,18,14,15,13,13,18,15,15,14,14,16,16,16,15,15,17,15,15,13,13,17,15,15,14,14,17,15,15,13,13,13,11,11,10,10,16,14,14,13,13,17,14,15,14,14,17,15,15,12,12,17,14,14,12,12,16,15,15,14,14,16,14,14,14,14,16,15,15,14,14,16,15,15,14,14,16,15,15,14,14,16,15,15,14,14,16,15,14,15,15,17,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,15,16,14,14,16,14,14,14,14,17,15,15,13,13,17,15,15,13,13,16,15,15,13,13,17,16,16,14,14,17,15,14,15,14,17,15,15,13,13,17,15,15,13,13,17,15,15,13,13,14,14,14,9,9,14,14,14,18,19,14,15,15,19,18,14,14,14,19,19,15,14,14,19,19,15,16,16,19,19,15,16,16,19,19,15,15,15,19,19,15,16,16,19,20,15,15,15,19,19,15,15,15,19,19,15,16,16,20,20,15,15,15,18,19,15,15,16,19,20,15,15,15,19,18,15,15,15,18,18,15,16,16,21,20,15,15,15,19,19,15,15,15,19,19,15,15,14,19,20,15,15,15,20,19,15,16,16,19,20,15,15,15,19,19,15,15,15,20,21,15,14,15,19,19,14,12,12,9,9,14,14,15,21,19,14,14,14,18,19,14,15,15,19,20,14,14,14,19,19,15,15,15,19,20,15,15,14,21,19,15,15,15,20,19,15,14,15,20,21,15,15,15,18,18,15,15,15,20,21,16,14,14,18,19,15,15,15,20,19,15,15,15,18,21,15,15,15,19,19,15,15,15,19,20,16,15,14,20,19,15,16,15,19,19,15,15,15,19,0,14,15,15,19,19,15,15,15,19,19,15,15,14,20,19,15,15,15,20,19,15,15,15,19,19,15,15,15,20,19,12,12,12,13,13,16,15,16,11,11,16,16,16,12,12,17,16,16,11,11,17,16,16,12,11,17,17,17,13,13,18,16,16,14,14,18,18,17,13,13,17,16,16,13,13,17,17,17,13,13,17,16,17,12,12,17,15,16,13,13,17,16,17,12,12,17,16,16,13,12,17,16,16,12,12,18,17,17,13,13,18,16,16,13,14,18,17,17,12,12,17,16,16,12,12,17,17,17,12,12,18,17,17,13,13,17,16,16,14,14,17,17,17,12,12,17,16,16,12,12,18,17,17,12,12,13,14,14,9,9,16,14,14,13,13,16,15,15,14,14,16,14,14,13,13,16,14,14,13,13,17,16,15,15,15,16,15,16,16,15,17,15,15,14,14,17,15,15,15,15,17,15,15,14,14,17,15,15,14,14,16,15,16,16,16,17,15,15,14,14,16,15,15,14,15,16,15,15,14,14,17,15,15,15,15,16,16,16,15,16,18,15,14,13,14,17,15,15,14,14,17,14,14,13,13,17,15,15,14,14,16,15,15,15,15,17,15,14,14,14,17,15,15,14,14,17,14,14,13,13,13,11,11,11,11,16,14,14,12,12,16,14,14,13,13,16,14,14,12,12,16,14,14,12,12,16,15,15,13,13,17,14,14,14,14,17,15,15,13,13,16,15,15,14,13,16,15,15,13,13,16,15,15,13,13,16,14,14,14,14,16,15,15,13,13,16,14,15,13,13,17,15,15,13,13,17,15,15,13,13,16,14,14,14,14,17,15,15,12,12,17,14,15,13,13,17,15,15,12,12,16,15,15,13,13,17,14,14,14,14,17,15,15,12,12,17,15,15,13,13,16,15,15,12,12,14,15,15,8,8,14,14,14,19,18,14,15,15,19,20,14,14,14,19,19,14,14,15,19,20,15,16,15,19,21,15,16,16,21,19,15,15,15,20,19,15,16,16,19,20,15,15,15,19,18,15,16,15,20,19,15,16,16,19,20,15,15,15,19,19,15,16,15,20,20,14,15,15,19,19,15,15,15,21,19,15,17,16,19,20,15,14,15,0,21,15,15,15,19,20,14,14,14,19,19,15,15,15,20,19,15,16,16,19,19,15,15,15,19,18,15,15,15,20,19,14,14,15,18,18,14,12,12,9,9,14,14,14,18,18,14,14,14,18,18,14,15,14,19,18,14,14,14,19,18,15,15,15,19,20,15,14,14,18,18,15,15,15,20,19,15,15,15,18,20,15,15,15,19,18,15,15,15,19,19,15,14,14,19,21,15,15,15,20,20,15,15,15,18,19,14,15,15,19,20,15,15,15,20,19,15,14,14,19,21,15,15,15,18,19,15,14,15,20,19,14,15,15,21,21,14,15,15,19,20,15,14,14,19,20,15,15,15,19,20,15,15,14,20,20,14,15,15,20,19,13,12,12,13,13,17,16,16,11,11,17,16,16,12,12,18,17,16,11,11,18,16,16,11,11,17,17,17,13,13,18,16,16,13,13,18,17,17,12,12,18,16,16,13,13,18,17,17,12,12,18,17,17,13,13,18,16,16,14,14,18,16,17,12,12,18,17,17,13,13,17,17,17,12,12,17,17,17,12,12,17,16,15,13,13,18,16,16,11,11,17,16,16,12,12,17,16,17,11,11,18,17,17,13,12,17,16,16,13,13,17,17,17,12,12,17,16,17,12,12,18,17,17,11,11,14,14,14,9,9,16,14,14,13,13,17,15,15,14,14,17,14,14,13,13,16,14,14,13,13,17,15,15,14,14,16,16,16,16,15,18,15,15,14,14,17,16,15,15,15,17,15,15,14,14,17,15,15,14,15,16,16,16,15,16,18,15,15,14,14,17,15,15,14,15,17,15,15,14,14,17,15,15,14,14,16,16,16,15,16,17,14,14,13,13,17,15,15,14,14,18,15,15,13,13,17,15,15,14,14,16,16,16,15,15,17,14,14,13,13,17,15,15,14,14,17,14,14,13,13,13,11,11,11,11,16,14,14,12,12,16,14,14,12,13,17,15,14,11,11,17,14,14,11,11,17,15,15,13,14,17,14,14,14,14,17,15,15,13,13,17,14,14,13,13,17,15,15,13,13,17,15,15,13,13,17,14,14,14,14,17,15,15,13,13,18,14,15,13,13,17,15,15,13,13,16,15,15,13,13,17,14,14,13,13,17,15,15,12,12,16,14,14,12,12,16,15,15,12,12,17,16,15,13,13,17,14,14,13,13,17,15,15,12,12,16,15,15,12,12,16,15,15,12,12,13,15,15,8,8,14,14,14,18,19,14,15,15,19,20,14,14,14,18,18,14,15,15,18,18,15,16,16,19,19,15,16,17,20,20,15,15,15,19,19,15,16,16,18,20,15,15,15,19,19,15,15,16,18,18,15,17,16,19,19,15,15,15,18,21,15,16,16,21,20,15,15,15,19,21,15,16,15,20,19,15,16,17,20,20,15,15,15,19,19,15,16,16,21,20,15,15,15,19,20,15,15,15,19,19,15,16,16,20,19,15,15,15,19,19,15,16,15,20,21,15,15,15,21,19,14,12,12,8,8,14,14,14,20,18,14,13,13,19,19,14,14,14,19,18,15,14,14,19,20,14,15,15,20,20,15,14,14,21,20,15,15,15,20,20,15,15,14,21,19,15,15,15,19,19,15,15,15,19,20,15,14,14,20,20,15,15,15,19,20,15,14,14,19,20,15,15,15,20,20,15,15,15,20,19,15,14,14,20,21,15,15,15,20,21,15,14,14,20,0,15,16,15,20,21,15,15,15,19,20,15,14,14,19,19,15,15,15,19,20,15,15,15,19,19,15,15,15,18,20,13,12,12,13,13,18,16,17,12,12,17,16,16,12,12,17,17,16,11,11,18,16,16,11,11,17,17,18,13,13,18,16,16,14,14,18,17,17,13,13,18,16,16,13,13,18,17,17,12,12,17,17,16,13,13,17,16,16,13,14,18,17,17,12,12,18,16,16,12,13,17,16,17,12,12,17,18,17,13,13,18,16,16,13,13,18,17,17,12,12,17,16,16,12,12,17,17,17,11,11,17,16,17,12,12,17,16,16,13,13,17,16,16,11,11,17,16,16,12,12,18,16,17,11,11,14,14,14,9,9,16,14,15,13,13,17,15,15,14,14,17,14,14,12,12,16,14,14,13,13,18,15,15,15,15,17,15,16,15,16,18,15,15,14,14,17,15,16,15,15,17,15,15,14,14,18,15,15,14,14,16,16,16,16,15,17,15,15,14,14,16,15,15,14,14,17,15,15,14,14,17,15,15,14,14,17,16,16,15,15,17,15,14,13,13,17,15,15,14,14,17,15,15,13,13,17,15,15,14,14,16,16,16,15,15,18,15,14,14,14,17,15,15,14,14,18,15,15,13,13,13,12,12,11,11,16,14,14,12,12,16,14,14,13,13,17,15,15,12,12,17,14,14,12,12,17,15,15,14,14,17,14,14,14,14,17,15,15,13,13,17,15,14,13,13,17,15,15,13,13,17,15,15,13,13,16,14,14,14,14,17,15,15,13,13,16,14,14,13,13,16,15,15,13,13,17,15,16,13,13,17,14,14,14,13,17,15,15,12,12,16,15,14,12,12,17,15,15,12,12,16,15,16,13,13,16,14,14,14,13,17,15,15,12,12,16,14,14,12,12,17,15,15,12,12,14,15,15,8,8,14,14,14,18,18,14,15,15,19,18,14,14,14,18,18,14,15,15,19,20,15,16,15,21,18,15,16,16,18,0,15,15,15,19,20,15,16,16,20,0,15,16,15,19,18,15,15,15,19,19,15,16,16,21,19,15,15,15,19,19,15,16,16,20,20,15,15,15,19,19,15,15,15,19,18,15,16,16,20,20,15,14,15,20,19,15,15,15,19,20,15,15,15,19,19,15,16,15,19,20,15,16,16,19,20,15,15,15,19,19,15,16,15,20,20,15,15,15,20,18,13,12,12,8,8,14,14,14,19,20,14,14,14,19,19,14,15,15,20,20,14,14,14,18,19,15,15,15,20,0,15,14,14,18,20,15,15,15,19,19,15,15,15,21,19,15,15,15,19,20,15,15,15,20,21,15,14,14,20,19,15,15,15,20,19,15,15,14,21,19,15,15,15,19,18,15,15,15,20,19,15,14,14,19,19,15,15,16,20,19,15,15,15,20,0,15,15,15,19,21,15,15,15,22,20,15,14,14,22,19,15,15,15,19,20,15,14,14,20,19,14,15,15,19,21,1,6,6,6,8,8,6,8,8,7,9,9,10,11,11,8,8,8,7,9,9,11,12,12,9,9,9,6,7,7,10,11,11,10,11,11,10,11,11,13,13,13,12,12,12,10,12,11,14,14,14,12,12,12,6,5,5,9,6,6,9,6,6,9,7,7,12,10,10,11,7,6,9,7,7,13,11,11,12,7,7,7,8,8,12,10,10,12,10,10,11,10,10,15,13,13,13,9,9,12,11,11,15,14,14,15,11,11,8,7,7,12,11,11,12,11,11,11,11,11,14,13,14,14,12,12,12,11,11,16,15,15,14,12,12,0,10,10,0,12,12,0,12,12,0,11,11,0,14,14,0,11,11,0,11,11,0,15,15,0,11,11,7,8,8,13,11,11,12,10,10,12,11,11,15,13,13,14,11,11,12,10,10,16,14,14,15,10,10,9,7,7,13,11,12,13,12,11,12,11,11,15,14,14,14,12,12,13,12,12,16,15,15,15,12,12,0,11,11,0,12,12,0,12,13,0,12,12,0,15,15,0,12,12,0,12,12,0,16,15,0,12,12,1,3,3,0,9,9,0,9,9,0,10,10,0,9,9,0,10,10,0,10,10,0,10,10,0,10,10,0,7,7,0,7,7,0,6,6,0,8,8,0,7,7,0,8,8,0,8,8,0,7,7,0,8,8,0,7,7,0,9,9,0,8,9,0,10,10,0,9,9,0,10,10,0,10,11,0,9,9,0,10,10,0,9,9,0,11,11,0,12,12,0,12,12,0,11,11,0,12,12,0,13,13,0,12,12,0,13,13,0,8,8,0,12,12,0,12,12,0,13,13,0,13,13,0,13,13,0,13,13,0,13,13,0,13,13,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,9,0,11,11,0,12,12,0,13,13,0,12,12,0,13,13,0,13,13,0,12,12,0,12,12,0,9,9,0,12,12,0,13,13,0,14,14,0,13,13,0,14,14,0,14,14,0,13,13,0,14,14,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,5,5,0,7,7,0,8,8,0,9,9,0,12,12,0,8,8,0,9,9,0,13,13,0,8,8,0,6,6,0,11,11,0,12,12,0,12,12,0,14,14,0,11,12,0,12,12,0,15,15,0,12,12,0,5,5,0,5,5,0,6,6,0,7,7,0,10,10,0,6,6,0,7,7,0,11,11,0,6,6,0,7,7,0,11,11,0,12,11,0,11,11,0,14,14,0,10,10,0,12,12,0,15,15,0,12,12,0,6,6,0,12,12,0,12,12,0,12,12,0,14,14,0,11,11,0,12,12,0,16,16,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,12,12,0,12,12,0,12,12,0,15,15,0,12,12,0,11,11,0,16,16,0,11,11,0,6,6,0,12,12,0,12,12,0,13,13,0,15,15,0,12,12,0,13,13,0,15,15,0,12,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,3,7,9,12,16,16,3,2,5,7,11,14,15,7,4,5,6,9,12,15,8,5,5,5,8,10,14,9,7,6,6,8,10,12,12,10,10,7,6,8,10,15,12,10,6,4,7,9,69,78,67,79,68,69,82,0,108,105,98,118,111,114,98,105,115,46,106,115,0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE+542387);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
    

  var _llvm_pow_f64=Math_pow;

   

  
  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    }  

   

   

   

   

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    } 

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  var _llvm_sqrt_f64=Math_sqrt;

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");


function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { Module["printErr"]("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { Module["printErr"]("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_vi": nullFunc_vi, "nullFunc_vii": nullFunc_vii, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "nullFunc_iii": nullFunc_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiii": invoke_iiiii, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iii": invoke_iii, "_llvm_pow_f64": _llvm_pow_f64, "_llvm_sqrt_f64": _llvm_sqrt_f64, "___setErrNo": ___setErrNo, "_time": _time, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_exit": _exit, "__exit": __exit, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_vi=env.nullFunc_vi;
  var nullFunc_vii=env.nullFunc_vii;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iii=env.invoke_iii;
  var _llvm_pow_f64=env._llvm_pow_f64;
  var _llvm_sqrt_f64=env._llvm_sqrt_f64;
  var ___setErrNo=env.___setErrNo;
  var _time=env._time;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _exit=env._exit;
  var __exit=env.__exit;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _ogg_stream_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = -1;
  return ($$0|0);
 }
 $3 = ((($0)) + 8|0);
 _memset(($3|0),0,352)|0;
 $4 = ((($0)) + 4|0);
 HEAP32[$4>>2] = 16384;
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 1024;
 $6 = (_malloc(16384)|0);
 HEAP32[$0>>2] = $6;
 $7 = (_malloc(4096)|0);
 $8 = ((($0)) + 16|0);
 HEAP32[$8>>2] = $7;
 $9 = (_malloc(8192)|0);
 $10 = ((($0)) + 20|0);
 HEAP32[$10>>2] = $9;
 $11 = ($6|0)==(0|0);
 do {
  if ($11) {
   $14 = $7;$16 = $7;
  } else {
   $12 = ($7|0)==(0|0);
   $13 = ($9|0)==(0|0);
   $or$cond = $13 | $12;
   if ($or$cond) {
    _free($6);
    $$pre = HEAP32[$8>>2]|0;
    $14 = $$pre;$16 = $$pre;
    break;
   }
   $19 = ((($0)) + 336|0);
   HEAP32[$19>>2] = $1;
   $$0 = 0;
   return ($$0|0);
  }
 } while(0);
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  _free($16);
 }
 $17 = HEAP32[$10>>2]|0;
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  _free($17);
 }
 _memset(($0|0),0,360)|0;
 $$0 = -1;
 return ($$0|0);
}
function _ogg_stream_clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return 0;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  _free($2);
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  _free($5);
 }
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _free($8);
 }
 _memset(($0|0),0,360)|0;
 return 0;
}
function _ogg_stream_packetin($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i$i = 0, $$$i73$i = 0, $$070$i = 0, $$282$i = 0, $$lcssa$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $$pre4 = 0, $$pre96$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($1)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($1)) + 16|0);
 $8 = $7;
 $9 = $8;
 $10 = HEAP32[$9>>2]|0;
 $11 = (($8) + 4)|0;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = ($0|0)==(0|0);
 if ($14) {
  $$070$i = -1;
  return ($$070$i|0);
 }
 $15 = HEAP32[$0>>2]|0;
 $16 = ($15|0)==(0|0);
 $17 = ($4|0)<(0);
 $or$cond = $16 | $17;
 if ($or$cond) {
  $$070$i = -1;
  return ($$070$i|0);
 }
 $18 = (($4|0) / 255)&-1;
 $19 = (($18) + 1)|0;
 $20 = ((($0)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0);
 $$pre96$i = ((($0)) + 8|0);
 if (!($22)) {
  $23 = HEAP32[$$pre96$i>>2]|0;
  $24 = (($23) - ($21))|0;
  HEAP32[$$pre96$i>>2] = $24;
  $25 = ($24|0)==(0);
  if (!($25)) {
   $26 = (($15) + ($21)|0);
   _memmove(($15|0),($26|0),($24|0))|0;
  }
  HEAP32[$20>>2] = 0;
 }
 $27 = ((($0)) + 4|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) - ($4))|0;
 $30 = HEAP32[$$pre96$i>>2]|0;
 $31 = ($29|0)>($30|0);
 do {
  if (!($31)) {
   $32 = (2147483647 - ($4))|0;
   $33 = ($28|0)>($32|0);
   if ($33) {
    $34 = HEAP32[$0>>2]|0;
    $35 = ($34|0)==(0|0);
    if (!($35)) {
     _free($34);
    }
    $36 = ((($0)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($37|0)==(0|0);
    if (!($38)) {
     _free($37);
    }
    $39 = ((($0)) + 20|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = ($40|0)==(0|0);
    if (!($41)) {
     _free($40);
    }
    _memset(($0|0),0,360)|0;
    $$070$i = -1;
    return ($$070$i|0);
   }
   $42 = (($28) + ($4))|0;
   $43 = ($42|0)<(2147482623);
   $44 = (($42) + 1024)|0;
   $$$i73$i = $43 ? $44 : $42;
   $45 = HEAP32[$0>>2]|0;
   $46 = (_realloc($45,$$$i73$i)|0);
   $47 = ($46|0)==(0|0);
   if (!($47)) {
    HEAP32[$27>>2] = $$$i73$i;
    HEAP32[$0>>2] = $46;
    break;
   }
   $48 = HEAP32[$0>>2]|0;
   $49 = ($48|0)==(0|0);
   if (!($49)) {
    _free($48);
   }
   $50 = ((($0)) + 16|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ($51|0)==(0|0);
   if (!($52)) {
    _free($51);
   }
   $53 = ((($0)) + 20|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ($54|0)==(0|0);
   if (!($55)) {
    _free($54);
   }
   _memset(($0|0),0,360)|0;
   $$070$i = -1;
   return ($$070$i|0);
  }
 } while(0);
 $56 = ((($0)) + 24|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = (($57) - ($19))|0;
 $59 = ((($0)) + 28|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = ($58|0)>($60|0);
 do {
  if ($61) {
   $$pre = ((($0)) + 16|0);
   $$pre4 = ((($0)) + 20|0);
   $$pre$phi5Z2D = $$pre4;$$pre$phiZ2D = $$pre;
  } else {
   $62 = (2147483646 - ($18))|0;
   $63 = ($57|0)>($62|0);
   if ($63) {
    $64 = HEAP32[$0>>2]|0;
    $65 = ($64|0)==(0|0);
    if (!($65)) {
     _free($64);
    }
    $66 = ((($0)) + 16|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = ($67|0)==(0|0);
    if (!($68)) {
     _free($67);
    }
    $69 = ((($0)) + 20|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     _free($70);
    }
    _memset(($0|0),0,360)|0;
    $$070$i = -1;
    return ($$070$i|0);
   }
   $72 = (($57) + ($19))|0;
   $73 = ($72|0)<(2147483615);
   $74 = (($72) + 32)|0;
   $$$i$i = $73 ? $74 : $72;
   $75 = ((($0)) + 16|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = $$$i$i << 2;
   $78 = (_realloc($76,$77)|0);
   $79 = ($78|0)==(0|0);
   if ($79) {
    $80 = HEAP32[$0>>2]|0;
    $81 = ($80|0)==(0|0);
    if (!($81)) {
     _free($80);
    }
    $82 = HEAP32[$75>>2]|0;
    $83 = ($82|0)==(0|0);
    if (!($83)) {
     _free($82);
    }
    $84 = ((($0)) + 20|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($85|0)==(0|0);
    if (!($86)) {
     _free($85);
    }
    _memset(($0|0),0,360)|0;
    $$070$i = -1;
    return ($$070$i|0);
   }
   HEAP32[$75>>2] = $78;
   $87 = ((($0)) + 20|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = $$$i$i << 3;
   $90 = (_realloc($88,$89)|0);
   $91 = ($90|0)==(0|0);
   if (!($91)) {
    HEAP32[$87>>2] = $90;
    HEAP32[$56>>2] = $$$i$i;
    $$pre$phi5Z2D = $87;$$pre$phiZ2D = $75;
    break;
   }
   $92 = HEAP32[$0>>2]|0;
   $93 = ($92|0)==(0|0);
   if (!($93)) {
    _free($92);
   }
   $94 = HEAP32[$75>>2]|0;
   $95 = ($94|0)==(0|0);
   if (!($95)) {
    _free($94);
   }
   $96 = HEAP32[$87>>2]|0;
   $97 = ($96|0)==(0|0);
   if (!($97)) {
    _free($96);
   }
   _memset(($0|0),0,360)|0;
   $$070$i = -1;
   return ($$070$i|0);
  }
 } while(0);
 $$pre$i = HEAP32[$$pre96$i>>2]|0;
 $98 = HEAP32[$0>>2]|0;
 $99 = (($98) + ($$pre$i)|0);
 _memcpy(($99|0),($2|0),($4|0))|0;
 $100 = HEAP32[$$pre96$i>>2]|0;
 $101 = (($100) + ($4))|0;
 HEAP32[$$pre96$i>>2] = $101;
 $102 = ($4|0)>(254);
 $103 = HEAP32[$$pre$phiZ2D>>2]|0;
 $104 = HEAP32[$59>>2]|0;
 $105 = HEAP32[$$pre$phi5Z2D>>2]|0;
 $106 = ((($0)) + 352|0);
 if ($102) {
  $$282$i = 0;$108 = $104;
  while(1) {
   $107 = (($103) + ($108<<2)|0);
   HEAP32[$107>>2] = 255;
   $109 = $106;
   $110 = $109;
   $111 = HEAP32[$110>>2]|0;
   $112 = (($109) + 4)|0;
   $113 = $112;
   $114 = HEAP32[$113>>2]|0;
   $115 = (($105) + ($108<<3)|0);
   $116 = $115;
   $117 = $116;
   HEAP32[$117>>2] = $111;
   $118 = (($116) + 4)|0;
   $119 = $118;
   HEAP32[$119>>2] = $114;
   $120 = (($$282$i) + 1)|0;
   $121 = ($120|0)<($18|0);
   $122 = (($104) + ($120))|0;
   if ($121) {
    $$282$i = $120;$108 = $122;
   } else {
    $$lcssa$i = $122;
    break;
   }
  }
 } else {
  $$lcssa$i = $104;
 }
 $123 = (($4|0) % 255)&-1;
 $124 = (($103) + ($$lcssa$i<<2)|0);
 HEAP32[$124>>2] = $123;
 $125 = (($105) + ($$lcssa$i<<3)|0);
 $126 = $125;
 $127 = $126;
 HEAP32[$127>>2] = $10;
 $128 = (($126) + 4)|0;
 $129 = $128;
 HEAP32[$129>>2] = $13;
 $130 = $106;
 $131 = $130;
 HEAP32[$131>>2] = $10;
 $132 = (($130) + 4)|0;
 $133 = $132;
 HEAP32[$133>>2] = $13;
 $134 = (($103) + ($104<<2)|0);
 $135 = HEAP32[$134>>2]|0;
 $136 = $135 | 256;
 HEAP32[$134>>2] = $136;
 $137 = (($104) + ($19))|0;
 HEAP32[$59>>2] = $137;
 $138 = ((($0)) + 344|0);
 $139 = $138;
 $140 = $139;
 $141 = HEAP32[$140>>2]|0;
 $142 = (($139) + 4)|0;
 $143 = $142;
 $144 = HEAP32[$143>>2]|0;
 $145 = (_i64Add(($141|0),($144|0),1,0)|0);
 $146 = tempRet0;
 $147 = $138;
 $148 = $147;
 HEAP32[$148>>2] = $145;
 $149 = (($147) + 4)|0;
 $150 = $149;
 HEAP32[$150>>2] = $146;
 $151 = ($6|0)==(0);
 if ($151) {
  $$070$i = 0;
  return ($$070$i|0);
 }
 $152 = ((($0)) + 328|0);
 HEAP32[$152>>2] = 1;
 $$070$i = 0;
 return ($$070$i|0);
}
function _ogg_stream_flush($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_ogg_stream_flush_i($0,$1,1)|0);
 return ($2|0);
}
function _ogg_stream_flush_i($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0117154 = 0, $$0118153 = 0, $$0120$lcssa$off0 = 0, $$0120$lcssa$off16 = 0, $$0120$lcssa$off24 = 0, $$0120$lcssa$off32 = 0, $$0120$lcssa$off40 = 0, $$0120$lcssa$off48 = 0, $$0120$lcssa$off56 = 0, $$0120$lcssa$off8 = 0, $$0120152$off0 = 0, $$0120152$off16 = 0, $$0120152$off24 = 0, $$0120152$off32 = 0, $$0120152$off40 = 0, $$0120152$off48 = 0, $$0120152$off56 = 0, $$0120152$off8 = 0, $$0122151 = 0;
 var $$0123$lcssa = 0, $$0123142 = 0, $$0124 = 0, $$0125 = 0, $$0132 = 0, $$028$lcssa$i = 0, $$02833$i = 0, $$034$i = 0, $$1 = 0, $$1119 = 0, $$1121$off0 = 0, $$1121$off16 = 0, $$1121$off24 = 0, $$1121$off32 = 0, $$1121$off40 = 0, $$1121$off48 = 0, $$1121$off56 = 0, $$1121$off8 = 0, $$1126$lcssa = 0, $$1126150 = 0;
 var $$129$lcssa$i = 0, $$12930$i = 0, $$131$i = 0, $$2$off0 = 0, $$2$off16 = 0, $$2$off24 = 0, $$2$off32 = 0, $$2$off40 = 0, $$2$off48 = 0, $$2$off56 = 0, $$2$off8 = 0, $$2127 = 0, $$2127138 = 0, $$2134 = 0, $$2139$off0 = 0, $$2139$off16 = 0, $$2139$off24 = 0, $$2139$off32 = 0, $$2139$off40 = 0, $$2139$off48 = 0;
 var $$2139$off56 = 0, $$2139$off8 = 0, $$303 = 0, $$3131141 = 0, $$lcssa = 0, $$lcssa$i = 0, $$lobit = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre169 = 0, $$pre6 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0;
 var $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0;
 var $199 = 0, $20 = 0, $200 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond12 = 0, $exitcond13 = 0, $or$cond = 0, $or$cond136 = 0, $or$cond305 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)<(255);
 $$ = $5 ? $4 : 255;
 $6 = ($0|0)==(0|0);
 if ($6) {
  $$0124 = 0;
  return ($$0124|0);
 }
 $7 = HEAP32[$0>>2]|0;
 $8 = ($7|0)==(0|0);
 $9 = ($$|0)==(0);
 $or$cond136 = $9 | $8;
 if ($or$cond136) {
  $$0124 = 0;
  return ($$0124|0);
 }
 $10 = ((($0)) + 332|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0);
 L7: do {
  if ($12) {
   $16 = ((($0)) + 16|0);
   $$0125 = 0;
   while(1) {
    $17 = ($$0125|0)<($$|0);
    if (!($17)) {
     $$2$off0 = 0;$$2$off16 = 0;$$2$off24 = 0;$$2$off32 = 0;$$2$off40 = 0;$$2$off48 = 0;$$2$off56 = 0;$$2$off8 = 0;$$2127 = $$0125;$$2134 = $2;
     label = 14;
     break L7;
    }
    $18 = HEAP32[$16>>2]|0;
    $19 = (($18) + ($$0125<<2)|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = $20 & 255;
    $22 = ($21|0)==(255);
    $23 = (($$0125) + 1)|0;
    if ($22) {
     $$0125 = $23;
    } else {
     $$2$off0 = 0;$$2$off16 = 0;$$2$off24 = 0;$$2$off32 = 0;$$2$off40 = 0;$$2$off48 = 0;$$2$off56 = 0;$$2$off8 = 0;$$2127 = $23;$$2134 = $2;
     label = 14;
     break;
    }
   }
  } else {
   $13 = ($4|0)>(0);
   if ($13) {
    $14 = ((($0)) + 16|0);
    $15 = ((($0)) + 20|0);
    $$0117154 = 0;$$0118153 = 0;$$0120152$off0 = -1;$$0120152$off16 = -1;$$0120152$off24 = -1;$$0120152$off32 = -1;$$0120152$off40 = -1;$$0120152$off48 = -1;$$0120152$off56 = -1;$$0120152$off8 = -1;$$0122151 = 0;$$1126150 = 0;
    while(1) {
     $24 = ($$0122151|0)>(4096);
     $25 = ($$0117154|0)>(3);
     $or$cond = $24 & $25;
     if ($or$cond) {
      $$0120$lcssa$off0 = $$0120152$off0;$$0120$lcssa$off16 = $$0120152$off16;$$0120$lcssa$off24 = $$0120152$off24;$$0120$lcssa$off32 = $$0120152$off32;$$0120$lcssa$off40 = $$0120152$off40;$$0120$lcssa$off48 = $$0120152$off48;$$0120$lcssa$off56 = $$0120152$off56;$$0120$lcssa$off8 = $$0120152$off8;$$0132 = 1;$$1126$lcssa = $$1126150;
      break;
     }
     $26 = HEAP32[$14>>2]|0;
     $27 = (($26) + ($$1126150<<2)|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = $28 & 255;
     $30 = (($29) + ($$0122151))|0;
     $31 = ($29|0)==(255);
     $32 = (($$0118153) + 1)|0;
     if ($31) {
      $$1 = 0;$$1119 = $$0118153;$$1121$off0 = $$0120152$off0;$$1121$off16 = $$0120152$off16;$$1121$off24 = $$0120152$off24;$$1121$off32 = $$0120152$off32;$$1121$off40 = $$0120152$off40;$$1121$off48 = $$0120152$off48;$$1121$off56 = $$0120152$off56;$$1121$off8 = $$0120152$off8;
     } else {
      $33 = HEAP32[$15>>2]|0;
      $34 = (($33) + ($$1126150<<3)|0);
      $35 = $34;
      $36 = $35;
      $37 = HEAP32[$36>>2]|0;
      $38 = (($35) + 4)|0;
      $39 = $38;
      $40 = HEAP32[$39>>2]|0;
      $41 = $37&255;
      $42 = (_bitshift64Lshr(($37|0),($40|0),8)|0);
      $43 = tempRet0;
      $44 = $42&255;
      $45 = (_bitshift64Lshr(($37|0),($40|0),16)|0);
      $46 = tempRet0;
      $47 = $45&255;
      $48 = (_bitshift64Lshr(($37|0),($40|0),24)|0);
      $49 = tempRet0;
      $50 = $48&255;
      $51 = $40&255;
      $52 = (_bitshift64Lshr(($37|0),($40|0),40)|0);
      $53 = tempRet0;
      $54 = $52&255;
      $55 = (_bitshift64Lshr(($37|0),($40|0),48)|0);
      $56 = tempRet0;
      $57 = $55&255;
      $58 = (_bitshift64Lshr(($37|0),($40|0),56)|0);
      $59 = tempRet0;
      $60 = $58&255;
      $$1 = $32;$$1119 = $32;$$1121$off0 = $41;$$1121$off16 = $47;$$1121$off24 = $50;$$1121$off32 = $51;$$1121$off40 = $54;$$1121$off48 = $57;$$1121$off56 = $60;$$1121$off8 = $44;
     }
     $61 = (($$1126150) + 1)|0;
     $62 = ($61|0)<($$|0);
     if ($62) {
      $$0117154 = $$1;$$0118153 = $$1119;$$0120152$off0 = $$1121$off0;$$0120152$off16 = $$1121$off16;$$0120152$off24 = $$1121$off24;$$0120152$off32 = $$1121$off32;$$0120152$off40 = $$1121$off40;$$0120152$off48 = $$1121$off48;$$0120152$off56 = $$1121$off56;$$0120152$off8 = $$1121$off8;$$0122151 = $30;$$1126150 = $61;
     } else {
      $$0120$lcssa$off0 = $$1121$off0;$$0120$lcssa$off16 = $$1121$off16;$$0120$lcssa$off24 = $$1121$off24;$$0120$lcssa$off32 = $$1121$off32;$$0120$lcssa$off40 = $$1121$off40;$$0120$lcssa$off48 = $$1121$off48;$$0120$lcssa$off56 = $$1121$off56;$$0120$lcssa$off8 = $$1121$off8;$$0132 = $2;$$1126$lcssa = $61;
      break;
     }
    }
    $63 = ($$1126$lcssa|0)==(255);
    if ($63) {
     $$2127138 = 255;$$2139$off0 = $$0120$lcssa$off0;$$2139$off16 = $$0120$lcssa$off16;$$2139$off24 = $$0120$lcssa$off24;$$2139$off32 = $$0120$lcssa$off32;$$2139$off40 = $$0120$lcssa$off40;$$2139$off48 = $$0120$lcssa$off48;$$2139$off56 = $$0120$lcssa$off56;$$2139$off8 = $$0120$lcssa$off8;$$pre$phiZ2D = $14;
    } else {
     $$2$off0 = $$0120$lcssa$off0;$$2$off16 = $$0120$lcssa$off16;$$2$off24 = $$0120$lcssa$off24;$$2$off32 = $$0120$lcssa$off32;$$2$off40 = $$0120$lcssa$off40;$$2$off48 = $$0120$lcssa$off48;$$2$off56 = $$0120$lcssa$off56;$$2$off8 = $$0120$lcssa$off8;$$2127 = $$1126$lcssa;$$2134 = $$0132;
     label = 14;
    }
   } else {
    $$2$off0 = -1;$$2$off16 = -1;$$2$off24 = -1;$$2$off32 = -1;$$2$off40 = -1;$$2$off48 = -1;$$2$off56 = -1;$$2$off8 = -1;$$2127 = 0;$$2134 = $2;
    label = 14;
   }
  }
 } while(0);
 do {
  if ((label|0) == 14) {
   $64 = ($$2134|0)==(0);
   if ($64) {
    $$0124 = 0;
    return ($$0124|0);
   } else {
    $$pre6 = ((($0)) + 16|0);
    $$2127138 = $$2127;$$2139$off0 = $$2$off0;$$2139$off16 = $$2$off16;$$2139$off24 = $$2$off24;$$2139$off32 = $$2$off32;$$2139$off40 = $$2$off40;$$2139$off48 = $$2$off48;$$2139$off56 = $$2$off56;$$2139$off8 = $$2$off8;$$pre$phiZ2D = $$pre6;
    break;
   }
  }
 } while(0);
 $65 = ((($0)) + 40|0);
 HEAP8[$65>>0]=1399285583&255;HEAP8[$65+1>>0]=(1399285583>>8)&255;HEAP8[$65+2>>0]=(1399285583>>16)&255;HEAP8[$65+3>>0]=1399285583>>24;
 $66 = ((($0)) + 44|0);
 HEAP8[$66>>0] = 0;
 $67 = ((($0)) + 45|0);
 HEAP8[$67>>0] = 0;
 $68 = HEAP32[$$pre$phiZ2D>>2]|0;
 $69 = HEAP32[$68>>2]|0;
 $70 = $69 >>> 8;
 $$lobit = $70 & 1;
 $71 = $$lobit ^ 1;
 $72 = $71&255;
 $73 = $72 | 2;
 $$303 = $12 ? $73 : $72;
 HEAP8[$67>>0] = $$303;
 $74 = ((($0)) + 328|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = ($75|0)!=(0);
 $77 = ($4|0)==($$2127138|0);
 $or$cond305 = $76 & $77;
 if ($or$cond305) {
  $78 = $$303 | 4;
  HEAP8[$67>>0] = $78;
 }
 HEAP32[$10>>2] = 1;
 $79 = ((($0)) + 46|0);
 HEAP8[$79>>0] = $$2139$off0;
 $80 = ((($0)) + 47|0);
 HEAP8[$80>>0] = $$2139$off8;
 $81 = ((($0)) + 48|0);
 HEAP8[$81>>0] = $$2139$off16;
 $82 = ((($0)) + 49|0);
 HEAP8[$82>>0] = $$2139$off24;
 $83 = ((($0)) + 50|0);
 HEAP8[$83>>0] = $$2139$off32;
 $84 = ((($0)) + 51|0);
 HEAP8[$84>>0] = $$2139$off40;
 $85 = ((($0)) + 52|0);
 HEAP8[$85>>0] = $$2139$off48;
 $86 = ((($0)) + 53|0);
 HEAP8[$86>>0] = $$2139$off56;
 $87 = ((($0)) + 336|0);
 $88 = HEAP32[$87>>2]|0;
 $89 = $88&255;
 $90 = ((($0)) + 54|0);
 HEAP8[$90>>0] = $89;
 $91 = $88 >>> 8;
 $92 = $91&255;
 $93 = ((($0)) + 55|0);
 HEAP8[$93>>0] = $92;
 $94 = $88 >>> 16;
 $95 = $94&255;
 $96 = ((($0)) + 56|0);
 HEAP8[$96>>0] = $95;
 $97 = $88 >>> 24;
 $98 = $97&255;
 $99 = ((($0)) + 57|0);
 HEAP8[$99>>0] = $98;
 $100 = ((($0)) + 340|0);
 $101 = HEAP32[$100>>2]|0;
 $102 = ($101|0)==(-1);
 if ($102) {
  HEAP32[$100>>2] = 0;
  $104 = 0;
 } else {
  $104 = $101;
 }
 $103 = (($104) + 1)|0;
 HEAP32[$100>>2] = $103;
 $105 = $104&255;
 $106 = ((($0)) + 58|0);
 HEAP8[$106>>0] = $105;
 $107 = $104 >>> 8;
 $108 = $107&255;
 $109 = ((($0)) + 59|0);
 HEAP8[$109>>0] = $108;
 $110 = $104 >>> 16;
 $111 = $110&255;
 $112 = ((($0)) + 60|0);
 HEAP8[$112>>0] = $111;
 $113 = $104 >>> 24;
 $114 = $113&255;
 $115 = ((($0)) + 61|0);
 HEAP8[$115>>0] = $114;
 $116 = ((($0)) + 62|0);
 $117 = $$2127138&255;
 $118 = ((($0)) + 66|0);
 HEAP16[$116>>1]=0&65535;HEAP16[$116+2>>1]=0>>>16;
 HEAP8[$118>>0] = $117;
 $119 = ($$2127138|0)>(0);
 if ($119) {
  $$0123142 = 0;$$3131141 = 0;$121 = $68;
  while(1) {
   $120 = (($121) + ($$3131141<<2)|0);
   $122 = HEAP32[$120>>2]|0;
   $123 = $122&255;
   $124 = (($$3131141) + 27)|0;
   $125 = (((($0)) + 40|0) + ($124)|0);
   HEAP8[$125>>0] = $123;
   $126 = $122 & 255;
   $127 = (($126) + ($$0123142))|0;
   $128 = (($$3131141) + 1)|0;
   $129 = HEAP32[$$pre$phiZ2D>>2]|0;
   $exitcond = ($128|0)==($$2127138|0);
   if ($exitcond) {
    break;
   } else {
    $$0123142 = $127;$$3131141 = $128;$121 = $129;
   }
  }
  $$pre = HEAP32[$0>>2]|0;
  $$pre169 = HEAP32[$3>>2]|0;
  $$0123$lcssa = $127;$$lcssa = $129;$136 = $$pre;$140 = $$pre169;
 } else {
  $$0123$lcssa = 0;$$lcssa = $68;$136 = $7;$140 = $4;
 }
 HEAP32[$1>>2] = $65;
 $130 = (($$2127138) + 27)|0;
 $131 = ((($0)) + 324|0);
 HEAP32[$131>>2] = $130;
 $132 = ((($1)) + 4|0);
 HEAP32[$132>>2] = $130;
 $133 = ((($0)) + 12|0);
 $134 = HEAP32[$133>>2]|0;
 $135 = (($136) + ($134)|0);
 $137 = ((($1)) + 8|0);
 HEAP32[$137>>2] = $135;
 $138 = ((($1)) + 12|0);
 HEAP32[$138>>2] = $$0123$lcssa;
 $139 = (($140) - ($$2127138))|0;
 HEAP32[$3>>2] = $139;
 $141 = (($$lcssa) + ($$2127138<<2)|0);
 $142 = $139 << 2;
 _memmove(($$lcssa|0),($141|0),($142|0))|0;
 $143 = ((($0)) + 20|0);
 $144 = HEAP32[$143>>2]|0;
 $145 = (($144) + ($$2127138<<3)|0);
 $146 = HEAP32[$3>>2]|0;
 $147 = $146 << 3;
 _memmove(($144|0),($145|0),($147|0))|0;
 $148 = HEAP32[$133>>2]|0;
 $149 = (($148) + ($$0123$lcssa))|0;
 HEAP32[$133>>2] = $149;
 $150 = ($1|0)==(0|0);
 if ($150) {
  $$0124 = 1;
  return ($$0124|0);
 }
 $151 = HEAP32[$1>>2]|0;
 $152 = ((($151)) + 22|0);
 HEAP8[$152>>0] = 0;
 $153 = HEAP32[$1>>2]|0;
 $154 = ((($153)) + 23|0);
 HEAP8[$154>>0] = 0;
 $155 = HEAP32[$1>>2]|0;
 $156 = ((($155)) + 24|0);
 HEAP8[$156>>0] = 0;
 $157 = HEAP32[$1>>2]|0;
 $158 = ((($157)) + 25|0);
 HEAP8[$158>>0] = 0;
 $159 = HEAP32[$132>>2]|0;
 $160 = ($159|0)>(0);
 if ($160) {
  $161 = HEAP32[$1>>2]|0;
  $$02833$i = 0;$$034$i = 0;
  while(1) {
   $166 = $$02833$i << 8;
   $167 = $$02833$i >>> 24;
   $168 = (($161) + ($$034$i)|0);
   $169 = HEAP8[$168>>0]|0;
   $170 = $169&255;
   $171 = $170 ^ $167;
   $172 = (2512 + ($171<<2)|0);
   $173 = HEAP32[$172>>2]|0;
   $174 = $173 ^ $166;
   $175 = (($$034$i) + 1)|0;
   $exitcond13 = ($175|0)==($159|0);
   if ($exitcond13) {
    $$028$lcssa$i = $174;
    break;
   } else {
    $$02833$i = $174;$$034$i = $175;
   }
  }
 } else {
  $$028$lcssa$i = 0;
 }
 $162 = HEAP32[$138>>2]|0;
 $163 = ($162|0)>(0);
 $164 = $$028$lcssa$i >>> 24;
 if ($163) {
  $165 = HEAP32[$137>>2]|0;
  $$12930$i = $$028$lcssa$i;$$131$i = 0;$181 = $164;
  while(1) {
   $176 = $$12930$i << 8;
   $177 = (($165) + ($$131$i)|0);
   $178 = HEAP8[$177>>0]|0;
   $179 = $178&255;
   $180 = $179 ^ $181;
   $182 = (2512 + ($180<<2)|0);
   $183 = HEAP32[$182>>2]|0;
   $184 = $183 ^ $176;
   $185 = (($$131$i) + 1)|0;
   $186 = $184 >>> 24;
   $exitcond12 = ($185|0)==($162|0);
   if ($exitcond12) {
    $$129$lcssa$i = $184;$$lcssa$i = $186;
    break;
   } else {
    $$12930$i = $184;$$131$i = $185;$181 = $186;
   }
  }
 } else {
  $$129$lcssa$i = $$028$lcssa$i;$$lcssa$i = $164;
 }
 $187 = $$129$lcssa$i&255;
 $188 = HEAP32[$1>>2]|0;
 $189 = ((($188)) + 22|0);
 HEAP8[$189>>0] = $187;
 $190 = $$129$lcssa$i >>> 8;
 $191 = $190&255;
 $192 = HEAP32[$1>>2]|0;
 $193 = ((($192)) + 23|0);
 HEAP8[$193>>0] = $191;
 $194 = $$129$lcssa$i >>> 16;
 $195 = $194&255;
 $196 = HEAP32[$1>>2]|0;
 $197 = ((($196)) + 24|0);
 HEAP8[$197>>0] = $195;
 $198 = $$lcssa$i&255;
 $199 = HEAP32[$1>>2]|0;
 $200 = ((($199)) + 25|0);
 HEAP8[$200>>0] = $198;
 $$0124 = 1;
 return ($$0124|0);
}
function _ogg_stream_pageout($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$09 = 0, $$not = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$09 = 0;
  return ($$09|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$09 = 0;
  return ($$09|0);
 }
 $5 = ((($0)) + 328|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 $8 = ((($0)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)!=(0);
 $$not = $10 ^ 1;
 $brmerge = $7 | $$not;
 if ($brmerge) {
  if ($10) {
   $11 = ((($0)) + 332|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==(0);
   if ($13) {
    label = 6;
   } else {
    $$0 = 0;
   }
  } else {
   $$0 = 0;
  }
 } else {
  label = 6;
 }
 if ((label|0) == 6) {
  $$0 = 1;
 }
 $14 = (_ogg_stream_flush_i($0,$1,$$0)|0);
 $$09 = $14;
 return ($$09|0);
}
function _oggpack_writeinit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 $5 = (_malloc(256)|0);
 $6 = ((($0)) + 8|0);
 HEAP32[$6>>2] = $5;
 $7 = ((($0)) + 12|0);
 HEAP32[$7>>2] = $5;
 HEAP8[$5>>0] = 0;
 $8 = ((($0)) + 16|0);
 HEAP32[$8>>2] = 256;
 return;
}
function _oggpack_writetrunc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 >> 3;
 $3 = ((($0)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  return;
 }
 $6 = $2 << 3;
 $7 = (($1) - ($6))|0;
 $8 = ((($0)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($2)|0);
 HEAP32[$3>>2] = $10;
 $11 = ((($0)) + 4|0);
 HEAP32[$11>>2] = $7;
 HEAP32[$0>>2] = $2;
 $12 = (3536 + ($7<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = HEAP8[$10>>0]|0;
 $15 = $14&255;
 $16 = $15 & $13;
 $17 = $16&255;
 HEAP8[$10>>0] = $17;
 return;
}
function _oggpack_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$phi$trans$insert = 0, $$pre = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2>>>0)>(32);
 do {
  if (!($3)) {
   $4 = HEAP32[$0>>2]|0;
   $5 = ((($0)) + 16|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = (($6) + -4)|0;
   $8 = ($4|0)<($7|0);
   $$phi$trans$insert = ((($0)) + 12|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($8) {
    $28 = $$pre;
   } else {
    $9 = ($$pre|0)==(0|0);
    if ($9) {
     return;
    }
    $10 = ($6|0)>(2147483391);
    if ($10) {
     break;
    }
    $11 = ((($0)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = (($6) + 256)|0;
    $14 = (_realloc($12,$13)|0);
    $15 = ($14|0)==(0|0);
    if ($15) {
     break;
    }
    HEAP32[$11>>2] = $14;
    $16 = HEAP32[$5>>2]|0;
    $17 = (($16) + 256)|0;
    HEAP32[$5>>2] = $17;
    $18 = HEAP32[$0>>2]|0;
    $19 = (($14) + ($18)|0);
    HEAP32[$$phi$trans$insert>>2] = $19;
    $28 = $19;
   }
   $20 = (3536 + ($2<<2)|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = $21 & $1;
   $23 = ((($0)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (($24) + ($2))|0;
   $26 = $22 << $24;
   $27 = HEAP8[$28>>0]|0;
   $29 = $27&255;
   $30 = $29 | $26;
   $31 = $30&255;
   HEAP8[$28>>0] = $31;
   $32 = ($25|0)>(7);
   if ($32) {
    $33 = HEAP32[$23>>2]|0;
    $34 = (8 - ($33))|0;
    $35 = $22 >>> $34;
    $36 = $35&255;
    $37 = HEAP32[$$phi$trans$insert>>2]|0;
    $38 = ((($37)) + 1|0);
    HEAP8[$38>>0] = $36;
    $39 = ($25|0)>(15);
    if ($39) {
     $40 = HEAP32[$23>>2]|0;
     $41 = (16 - ($40))|0;
     $42 = $22 >>> $41;
     $43 = $42&255;
     $44 = HEAP32[$$phi$trans$insert>>2]|0;
     $45 = ((($44)) + 2|0);
     HEAP8[$45>>0] = $43;
     $46 = ($25|0)>(23);
     if ($46) {
      $47 = HEAP32[$23>>2]|0;
      $48 = (24 - ($47))|0;
      $49 = $22 >>> $48;
      $50 = $49&255;
      $51 = HEAP32[$$phi$trans$insert>>2]|0;
      $52 = ((($51)) + 3|0);
      HEAP8[$52>>0] = $50;
      $53 = ($25|0)>(31);
      if ($53) {
       $54 = HEAP32[$23>>2]|0;
       $55 = ($54|0)==(0);
       $56 = (32 - ($54))|0;
       $57 = $22 >>> $56;
       $58 = $57&255;
       $$sink = $55 ? 0 : $58;
       $59 = HEAP32[$$phi$trans$insert>>2]|0;
       $60 = ((($59)) + 4|0);
       HEAP8[$60>>0] = $$sink;
      }
     }
    }
   }
   $61 = (($25|0) / 8)&-1;
   $62 = HEAP32[$0>>2]|0;
   $63 = (($62) + ($61))|0;
   HEAP32[$0>>2] = $63;
   $64 = HEAP32[$$phi$trans$insert>>2]|0;
   $65 = (($64) + ($61)|0);
   HEAP32[$$phi$trans$insert>>2] = $65;
   $66 = $25 & 7;
   HEAP32[$23>>2] = $66;
   return;
  }
 } while(0);
 $67 = ((($0)) + 8|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ($68|0)==(0|0);
 if (!($69)) {
  _free($68);
 }
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;
 return;
}
function _oggpack_writeclear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  _free($2);
 }
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;
 return;
}
function _oggpack_look($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$036 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(32);
 if ($2) {
  $$0 = -1;
  return ($$0|0);
 }
 $3 = (3536 + ($1<<2)|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + ($1))|0;
 $8 = HEAP32[$0>>2]|0;
 $9 = ((($0)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10) + -4)|0;
 $12 = ($8|0)<($11|0);
 if (!($12)) {
  $13 = (($7) + 7)|0;
  $14 = $13 >> 3;
  $15 = (($10) - ($14))|0;
  $16 = ($8|0)>($15|0);
  if ($16) {
   $$0 = -1;
   return ($$0|0);
  }
  $17 = ($7|0)==(0);
  if ($17) {
   $$0 = 0;
   return ($$0|0);
  }
 }
 $18 = ((($0)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = HEAP8[$19>>0]|0;
 $21 = $20&255;
 $22 = $21 >>> $6;
 $23 = ($7|0)>(8);
 if ($23) {
  $24 = ((($19)) + 1|0);
  $25 = HEAP8[$24>>0]|0;
  $26 = $25&255;
  $27 = (8 - ($6))|0;
  $28 = $26 << $27;
  $29 = $28 | $22;
  $30 = ($7|0)>(16);
  if ($30) {
   $31 = ((($19)) + 2|0);
   $32 = HEAP8[$31>>0]|0;
   $33 = $32&255;
   $34 = (16 - ($6))|0;
   $35 = $33 << $34;
   $36 = $35 | $29;
   $37 = ($7|0)>(24);
   if ($37) {
    $38 = ((($19)) + 3|0);
    $39 = HEAP8[$38>>0]|0;
    $40 = $39&255;
    $41 = (24 - ($6))|0;
    $42 = $40 << $41;
    $43 = $42 | $36;
    $44 = ($7|0)<(33);
    $45 = ($6|0)==(0);
    $or$cond = $45 | $44;
    if ($or$cond) {
     $$036 = $43;
    } else {
     $46 = (32 - ($6))|0;
     $47 = ((($19)) + 4|0);
     $48 = HEAP8[$47>>0]|0;
     $49 = $48&255;
     $50 = $49 << $46;
     $51 = $50 | $43;
     $$036 = $51;
    }
   } else {
    $$036 = $36;
   }
  } else {
   $$036 = $29;
  }
 } else {
  $$036 = $22;
 }
 $52 = $$036 & $4;
 $$0 = $52;
 return ($$0|0);
}
function _oggpack_adv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1))|0;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($0)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($4) + 7)|0;
 $9 = $8 >> 3;
 $10 = (($7) - ($9))|0;
 $11 = ($5|0)>($10|0);
 if ($11) {
  $18 = ((($0)) + 12|0);
  HEAP32[$18>>2] = 0;
  HEAP32[$0>>2] = $7;
  $$sink = 1;
  HEAP32[$2>>2] = $$sink;
  return;
 } else {
  $12 = (($4|0) / 8)&-1;
  $13 = ((($0)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) + ($12)|0);
  HEAP32[$13>>2] = $15;
  $16 = (($12) + ($5))|0;
  HEAP32[$0>>2] = $16;
  $17 = $4 & 7;
  $$sink = $17;
  HEAP32[$2>>2] = $$sink;
  return;
 }
}
function _oggpack_read($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$047 = 0, $$pre$phi49Z2D = 0, $$pre$phiZ2D = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(32);
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 do {
  if ($2) {
   $$pre48 = ((($0)) + 4|0);
   $$pre$phi49Z2D = $$pre48;$$pre$phiZ2D = $0;
  } else {
   $5 = (3536 + ($1<<2)|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ((($0)) + 4|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = (($8) + ($1))|0;
   $10 = HEAP32[$0>>2]|0;
   $11 = (($4) + -4)|0;
   $12 = ($10|0)<($11|0);
   if (!($12)) {
    $13 = (($9) + 7)|0;
    $14 = $13 >> 3;
    $15 = (($4) - ($14))|0;
    $16 = ($10|0)>($15|0);
    if ($16) {
     $$pre$phi49Z2D = $7;$$pre$phiZ2D = $0;
     break;
    }
    $17 = ($9|0)==(0);
    if ($17) {
     $$0 = 0;
     return ($$0|0);
    }
   }
   $18 = ((($0)) + 12|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = HEAP8[$19>>0]|0;
   $21 = $20&255;
   $22 = $21 >>> $8;
   $23 = ($9|0)>(8);
   if ($23) {
    $24 = ((($19)) + 1|0);
    $25 = HEAP8[$24>>0]|0;
    $26 = $25&255;
    $27 = (8 - ($8))|0;
    $28 = $26 << $27;
    $29 = $28 | $22;
    $30 = ($9|0)>(16);
    if ($30) {
     $31 = ((($19)) + 2|0);
     $32 = HEAP8[$31>>0]|0;
     $33 = $32&255;
     $34 = (16 - ($8))|0;
     $35 = $33 << $34;
     $36 = $35 | $29;
     $37 = ($9|0)>(24);
     if ($37) {
      $38 = ((($19)) + 3|0);
      $39 = HEAP8[$38>>0]|0;
      $40 = $39&255;
      $41 = (24 - ($8))|0;
      $42 = $40 << $41;
      $43 = $42 | $36;
      $44 = ($9|0)<(33);
      $45 = ($8|0)==(0);
      $or$cond = $45 | $44;
      if ($or$cond) {
       $$047 = $43;
      } else {
       $46 = (32 - ($8))|0;
       $47 = ((($19)) + 4|0);
       $48 = HEAP8[$47>>0]|0;
       $49 = $48&255;
       $50 = $49 << $46;
       $51 = $50 | $43;
       $$047 = $51;
      }
     } else {
      $$047 = $36;
     }
    } else {
     $$047 = $29;
    }
   } else {
    $$047 = $22;
   }
   $52 = $$047 & $6;
   $53 = (($9|0) / 8)&-1;
   $54 = (($19) + ($53)|0);
   HEAP32[$18>>2] = $54;
   $55 = (($10) + ($53))|0;
   HEAP32[$0>>2] = $55;
   $56 = $9 & 7;
   HEAP32[$7>>2] = $56;
   $$0 = $52;
   return ($$0|0);
  }
 } while(0);
 $57 = ((($0)) + 12|0);
 HEAP32[$57>>2] = 0;
 HEAP32[$$pre$phiZ2D>>2] = $4;
 HEAP32[$$pre$phi49Z2D>>2] = 1;
 $$0 = -1;
 return ($$0|0);
}
function _oggpack_bytes($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + 7)|0;
 $5 = (($4|0) / 8)&-1;
 $6 = (($5) + ($1))|0;
 return ($6|0);
}
function _oggpack_get_buffer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _vorbis_analysis_buffer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$137 = 0, $$lcssa = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre43 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 104|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 64|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  _free($7);
 }
 HEAP32[$6>>2] = 0;
 $9 = ((($5)) + 68|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _free($10);
 }
 HEAP32[$9>>2] = 0;
 $12 = ((($5)) + 72|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  _free($13);
 }
 HEAP32[$12>>2] = 0;
 $15 = ((($0)) + 20|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($16) + ($1))|0;
 $18 = ((($0)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($17|0)<($19|0);
 do {
  if ($20) {
   $$phi$trans$insert = ((($3)) + 4|0);
   $$pre43 = HEAP32[$$phi$trans$insert>>2]|0;
   $36 = $$pre43;
  } else {
   $21 = $1 << 1;
   $22 = (($16) + ($21))|0;
   HEAP32[$18>>2] = $22;
   $23 = ((($3)) + 4|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($24|0)>(0);
   if ($25) {
    $28 = ((($0)) + 8|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    $31 = $22 << 2;
    $32 = (_realloc($30,$31)|0);
    $33 = HEAP32[$28>>2]|0;
    HEAP32[$33>>2] = $32;
    $34 = HEAP32[$23>>2]|0;
    $35 = ($34|0)>(1);
    if ($35) {
     $44 = 1;
    } else {
     $36 = $34;
     break;
    }
    while(1) {
     $$pre = HEAP32[$18>>2]|0;
     $42 = HEAP32[$28>>2]|0;
     $43 = (($42) + ($44<<2)|0);
     $45 = HEAP32[$43>>2]|0;
     $46 = $$pre << 2;
     $47 = (_realloc($45,$46)|0);
     $48 = HEAP32[$28>>2]|0;
     $49 = (($48) + ($44<<2)|0);
     HEAP32[$49>>2] = $47;
     $50 = (($44) + 1)|0;
     $51 = HEAP32[$23>>2]|0;
     $52 = ($50|0)<($51|0);
     if ($52) {
      $44 = $50;
     } else {
      $36 = $51;
      break;
     }
    }
   } else {
    $26 = ((($0)) + 12|0);
    $27 = HEAP32[$26>>2]|0;
    $$lcssa = $27;
    return ($$lcssa|0);
   }
  }
 } while(0);
 $37 = ($36|0)>(0);
 $38 = ((($0)) + 12|0);
 $39 = HEAP32[$38>>2]|0;
 if (!($37)) {
  $$lcssa = $39;
  return ($$lcssa|0);
 }
 $40 = ((($0)) + 8|0);
 $41 = HEAP32[$15>>2]|0;
 $$137 = 0;$58 = $39;
 while(1) {
  $53 = HEAP32[$40>>2]|0;
  $54 = (($53) + ($$137<<2)|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = (($55) + ($41<<2)|0);
  $57 = (($58) + ($$137<<2)|0);
  HEAP32[$57>>2] = $56;
  $59 = (($$137) + 1)|0;
  $60 = HEAP32[$38>>2]|0;
  $exitcond = ($59|0)==($36|0);
  if ($exitcond) {
   $$lcssa = $60;
   break;
  } else {
   $$137 = $59;$58 = $60;
  }
 }
 return ($$lcssa|0);
}
function _vorbis_analysis_wrote($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$06667 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($1|0)<(1);
 if (!($6)) {
  $49 = ((($0)) + 20|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = (($50) + ($1))|0;
  $52 = ((($0)) + 16|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ($51|0)>($53|0);
  if ($54) {
   STACKTOP = sp;return;
  }
  HEAP32[$49>>2] = $51;
  $55 = ((($0)) + 28|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ($56|0)==(0);
  if (!($57)) {
   STACKTOP = sp;return;
  }
  $58 = ((($0)) + 48|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (($51) - ($59))|0;
  $61 = ((($5)) + 4|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ($60|0)>($62|0);
  if (!($63)) {
   STACKTOP = sp;return;
  }
  __preextrapolate_helper($0);
  STACKTOP = sp;return;
 }
 $7 = STACKTOP; STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);;
 $8 = ((($0)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 if ($10) {
  __preextrapolate_helper($0);
 }
 $11 = ((($5)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12*3)|0;
 (_vorbis_analysis_buffer($0,$13)|0);
 $14 = ((($0)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($0)) + 32|0);
 HEAP32[$16>>2] = $15;
 $17 = HEAP32[$11>>2]|0;
 $18 = ($17*3)|0;
 $19 = (($18) + ($15))|0;
 HEAP32[$14>>2] = $19;
 $20 = ((($3)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)>(0);
 if (!($22)) {
  STACKTOP = sp;return;
 }
 $23 = ((($0)) + 8|0);
 $$06667 = 0;$24 = $15;
 while(1) {
  $25 = ($24|0)>(64);
  $26 = HEAP32[$23>>2]|0;
  $27 = (($26) + ($$06667<<2)|0);
  $28 = HEAP32[$27>>2]|0;
  if ($25) {
   $29 = HEAP32[$11>>2]|0;
   $30 = ($24|0)>($29|0);
   $$ = $30 ? $29 : $24;
   $31 = (($28) + ($24<<2)|0);
   $32 = (0 - ($$))|0;
   $33 = (($31) + ($32<<2)|0);
   _vorbis_lpc_from_data($33,$7,$$,32);
   $34 = HEAP32[$23>>2]|0;
   $35 = (($34) + ($$06667<<2)|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = HEAP32[$16>>2]|0;
   $38 = (($36) + ($37<<2)|0);
   $39 = ((($38)) + -128|0);
   $40 = HEAP32[$14>>2]|0;
   $41 = (($40) - ($37))|0;
   _vorbis_lpc_predict($7,$39,32,$38,$41);
  } else {
   $42 = (($28) + ($24<<2)|0);
   $43 = HEAP32[$14>>2]|0;
   $44 = (($43) - ($24))|0;
   $45 = $44 << 2;
   _memset(($42|0),0,($45|0))|0;
  }
  $46 = (($$06667) + 1)|0;
  $47 = HEAP32[$20>>2]|0;
  $48 = ($46|0)<($47|0);
  if (!($48)) {
   break;
  }
  $$pre = HEAP32[$16>>2]|0;
  $$06667 = $46;$24 = $$pre;
 }
 STACKTOP = sp;return;
}
function __preextrapolate_helper($0) {
 $0 = $0|0;
 var $$05057 = 0, $$052 = 0, $$153 = 0, $$alloca_mul = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(64|0);
 $1 = sp;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 << 2;
 $$alloca_mul = $4;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $6 = ((($0)) + 28|0);
 HEAP32[$6>>2] = 1;
 $7 = ((($0)) + 48|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($3) - ($8))|0;
 $10 = ($9|0)>(32);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = ((($0)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)>(0);
 if (!($15)) {
  STACKTOP = sp;return;
 }
 $16 = ((($0)) + 8|0);
 $$05057 = 0;$17 = $3;
 while(1) {
  $18 = ($17|0)>(0);
  if ($18) {
   $19 = HEAP32[$16>>2]|0;
   $20 = (($19) + ($$05057<<2)|0);
   $21 = HEAP32[$20>>2]|0;
   $$052 = 0;
   while(1) {
    $22 = $$052 ^ -1;
    $23 = (($17) + ($22))|0;
    $24 = (($21) + ($23<<2)|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = (($5) + ($$052<<2)|0);
    HEAP32[$26>>2] = $25;
    $27 = (($$052) + 1)|0;
    $exitcond = ($27|0)==($17|0);
    if ($exitcond) {
     break;
    } else {
     $$052 = $27;
    }
   }
  }
  $28 = HEAP32[$7>>2]|0;
  $29 = (($17) - ($28))|0;
  _vorbis_lpc_from_data($5,$1,$29,16);
  $30 = HEAP32[$2>>2]|0;
  $31 = (($5) + ($30<<2)|0);
  $32 = HEAP32[$7>>2]|0;
  $33 = (0 - ($32))|0;
  $34 = (($31) + ($33<<2)|0);
  $35 = ((($34)) + -64|0);
  _vorbis_lpc_predict($1,$35,16,$34,$32);
  $36 = HEAP32[$2>>2]|0;
  $37 = ($36|0)>(0);
  if ($37) {
   $38 = HEAP32[$16>>2]|0;
   $39 = (($38) + ($$05057<<2)|0);
   $40 = HEAP32[$39>>2]|0;
   $$153 = 0;
   while(1) {
    $41 = (($5) + ($$153<<2)|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = $$153 ^ -1;
    $44 = (($36) + ($43))|0;
    $45 = (($40) + ($44<<2)|0);
    HEAP32[$45>>2] = $42;
    $46 = (($$153) + 1)|0;
    $exitcond1 = ($46|0)==($36|0);
    if ($exitcond1) {
     break;
    } else {
     $$153 = $46;
    }
   }
  }
  $47 = (($$05057) + 1)|0;
  $48 = HEAP32[$11>>2]|0;
  $49 = ((($48)) + 4|0);
  $50 = HEAP32[$49>>2]|0;
  $51 = ($47|0)<($50|0);
  if ($51) {
   $$05057 = $47;$17 = $36;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _vorbis_analysis_blockout($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$$i = 0, $$0$i = 0.0, $$0105116$i = 0, $$0106119$i = 0, $$0108115$i = 0, $$0170184 = 0, $$053$i = 0, $$055$i = 0, $$057$i = 0, $$110$i = 0, $$1107112$i = 0, $$180 = 0, $$2 = 0, $$in2021$i = 0, $$pre187 = 0, $$pre188 = 0, $$pre189 = 0, $$pre190 = 0, $$pre191 = 0;
 var $$pre193 = 0, $$sink = 0, $$sink$sink = 0, $$sink11 = 0, $$sink17$in = 0, $$sink5 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0.0, $237 = 0, $238 = 0;
 var $239 = 0.0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $narrow = 0, $not$181 = 0, $not$182 = 0, $not$194 = 0, $or$cond$i = 0, $or$cond$i3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 104|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 60|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 48|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 40|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($5) + ($13<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15|0) / 2)&-1;
 $17 = (($11) - ($16))|0;
 $18 = ((($1)) + 104|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($0)) + 28|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0);
 if ($22) {
  $$2 = 0;
  return ($$2|0);
 }
 $23 = ((($0)) + 32|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(-1);
 if ($25) {
  $$2 = 0;
  return ($$2|0);
 }
 $26 = ((($5)) + 2868|0);
 $27 = HEAP32[$7>>2]|0;
 $28 = ((($27)) + 168|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($27)) + 8|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (($29|0) / ($31|0))&-1;
 $33 = ((($0)) + 20|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (($34|0) / ($31|0))&-1;
 $36 = (($35) + -4)|0;
 $37 = ($32|0)>(0);
 $$$i = $37 ? $32 : 0;
 $38 = (($35) + 2)|0;
 $39 = ((($27)) + 164|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($38|0)>($40|0);
 $42 = ((($27)) + 160|0);
 if ($41) {
  $43 = $38 << 2;
  HEAP32[$39>>2] = $38;
  $44 = HEAP32[$42>>2]|0;
  $45 = (_realloc($44,$43)|0);
  HEAP32[$42>>2] = $45;
 }
 $46 = ($$$i|0)<($36|0);
 if ($46) {
  $47 = ((($27)) + 156|0);
  $48 = ((($0)) + 8|0);
  $49 = ((($27)) + 40|0);
  $50 = ((($27)) + 152|0);
  $$0106119$i = $$$i;
  while(1) {
   $51 = HEAP32[$47>>2]|0;
   $52 = (($51) + 1)|0;
   $53 = ($51|0)>(23);
   $$110$i = $53 ? 24 : $52;
   HEAP32[$47>>2] = $$110$i;
   $54 = HEAP32[$27>>2]|0;
   $55 = ($54|0)>(0);
   if ($55) {
    $$0105116$i = 0;$$0108115$i = 0;
    while(1) {
     $59 = HEAP32[$48>>2]|0;
     $60 = (($59) + ($$0105116$i<<2)|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = HEAP32[$30>>2]|0;
     $63 = Math_imul($62, $$0106119$i)|0;
     $64 = (($61) + ($63<<2)|0);
     $65 = HEAP32[$50>>2]|0;
     $66 = ($$0105116$i*7)|0;
     $67 = (($65) + (($66*144)|0)|0);
     $68 = (__ve_amp($27,$26,$64,$49,$67)|0);
     $69 = $68 | $$0108115$i;
     $70 = (($$0105116$i) + 1)|0;
     $71 = HEAP32[$27>>2]|0;
     $72 = ($70|0)<($71|0);
     if ($72) {
      $$0105116$i = $70;$$0108115$i = $69;
     } else {
      break;
     }
    }
    $73 = HEAP32[$42>>2]|0;
    $74 = (($$0106119$i) + 2)|0;
    $75 = (($73) + ($74<<2)|0);
    HEAP32[$75>>2] = 0;
    $76 = $69 & 1;
    $77 = ($76|0)==(0);
    if (!($77)) {
     $78 = (($$0106119$i) + 1)|0;
     $79 = (($73) + ($78<<2)|0);
     $80 = (($73) + ($$0106119$i<<2)|0);
     HEAP32[$80>>2] = 1;
     HEAP32[$79>>2] = 1;
    }
    $81 = $69 & 2;
    $82 = ($81|0)==(0);
    if (!($82)) {
     $83 = (($73) + ($$0106119$i<<2)|0);
     HEAP32[$83>>2] = 1;
     $84 = ($$0106119$i|0)>(0);
     if ($84) {
      $85 = (($$0106119$i) + -1)|0;
      $86 = (($73) + ($85<<2)|0);
      HEAP32[$86>>2] = 1;
     }
    }
    $87 = $69 & 4;
    $88 = ($87|0)==(0);
    if (!($88)) {
     HEAP32[$47>>2] = -1;
    }
   } else {
    $56 = HEAP32[$42>>2]|0;
    $57 = (($$0106119$i) + 2)|0;
    $58 = (($56) + ($57<<2)|0);
    HEAP32[$58>>2] = 0;
   }
   $89 = (($$0106119$i) + 1)|0;
   $90 = ($89|0)<($36|0);
   if ($90) {
    $$0106119$i = $89;
   } else {
    break;
   }
  }
 }
 $91 = HEAP32[$30>>2]|0;
 $92 = Math_imul($91, $36)|0;
 HEAP32[$28>>2] = $92;
 $93 = HEAP32[$10>>2]|0;
 $94 = HEAP32[$12>>2]|0;
 $95 = (($5) + ($94<<2)|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = (($96|0) / 4)&-1;
 $98 = (($97) + ($93))|0;
 $99 = ((($5)) + 4|0);
 $100 = HEAP32[$99>>2]|0;
 $101 = (($100|0) / 2)&-1;
 $102 = (($98) + ($101))|0;
 $103 = HEAP32[$5>>2]|0;
 $104 = (($103|0) / 4)&-1;
 $105 = (($102) + ($104))|0;
 $106 = ((($27)) + 176|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = (($92) - ($91))|0;
 $109 = ($107|0)<($108|0);
 L29: do {
  if ($109) {
   $$1107112$i = $107;
   while(1) {
    $112 = ($$1107112$i|0)<($105|0);
    if (!($112)) {
     $125 = 1;
     break;
    }
    HEAP32[$106>>2] = $$1107112$i;
    $113 = HEAP32[$42>>2]|0;
    $114 = (($$1107112$i|0) / ($91|0))&-1;
    $115 = (($113) + ($114<<2)|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ($116|0)!=(0);
    $118 = ($$1107112$i|0)>($93|0);
    $or$cond$i = $118 & $117;
    $110 = (($91) + ($$1107112$i))|0;
    if ($or$cond$i) {
     label = 22;
     break;
    }
    $111 = ($110|0)<($108|0);
    if ($111) {
     $$1107112$i = $110;
    } else {
     label = 23;
     break L29;
    }
   }
   if ((label|0) == 22) {
    $119 = ((($27)) + 172|0);
    HEAP32[$119>>2] = $$1107112$i;
    $125 = 0;
   }
   $122 = HEAP32[$5>>2]|0;
   $123 = HEAP32[$99>>2]|0;
   $124 = ($122|0)==($123|0);
   $$sink = $124 ? 0 : $125;
   $$sink$sink = $$sink;
  } else {
   label = 23;
  }
 } while(0);
 if ((label|0) == 23) {
  $120 = HEAP32[$23>>2]|0;
  $121 = ($120|0)==(0);
  if ($121) {
   $$2 = 0;
   return ($$2|0);
  } else {
   $$sink$sink = 0;
  }
 }
 $126 = ((($0)) + 44|0);
 HEAP32[$126>>2] = $$sink$sink;
 $127 = HEAP32[$95>>2]|0;
 $128 = (($127|0) / 4)&-1;
 $129 = (($128) + ($93))|0;
 $130 = (($5) + ($$sink$sink<<2)|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = (($131|0) / 4)&-1;
 $133 = (($129) + ($132))|0;
 $134 = (($131|0) / 2)&-1;
 $135 = (($133) + ($134))|0;
 $136 = HEAP32[$33>>2]|0;
 $not$181 = ($136|0)<($135|0);
 if ($not$181) {
  $$2 = 0;
  return ($$2|0);
 }
 $137 = ((($1)) + 84|0);
 $138 = HEAP32[$137>>2]|0;
 $139 = ($138|0)==(0|0);
 if (!($139)) {
  $$in2021$i = $138;
  while(1) {
   $140 = ((($$in2021$i)) + 4|0);
   $141 = HEAP32[$140>>2]|0;
   $142 = HEAP32[$$in2021$i>>2]|0;
   _free($142);
   _free($$in2021$i);
   $143 = ($141|0)==(0|0);
   if ($143) {
    break;
   } else {
    $$in2021$i = $141;
   }
  }
 }
 $144 = ((($1)) + 80|0);
 $145 = HEAP32[$144>>2]|0;
 $146 = ($145|0)==(0);
 if (!($146)) {
  $147 = ((($1)) + 68|0);
  $148 = HEAP32[$147>>2]|0;
  $149 = ((($1)) + 76|0);
  $150 = HEAP32[$149>>2]|0;
  $151 = (($150) + ($145))|0;
  $152 = (_realloc($148,$151)|0);
  HEAP32[$147>>2] = $152;
  $153 = HEAP32[$144>>2]|0;
  $154 = HEAP32[$149>>2]|0;
  $155 = (($154) + ($153))|0;
  HEAP32[$149>>2] = $155;
  HEAP32[$144>>2] = 0;
 }
 $156 = ((($1)) + 72|0);
 HEAP32[$156>>2] = 0;
 HEAP32[$137>>2] = 0;
 $157 = ((($0)) + 36|0);
 $158 = HEAP32[$157>>2]|0;
 $159 = ((($1)) + 24|0);
 HEAP32[$159>>2] = $158;
 $160 = HEAP32[$12>>2]|0;
 $161 = ((($1)) + 28|0);
 HEAP32[$161>>2] = $160;
 $162 = HEAP32[$126>>2]|0;
 $163 = ((($1)) + 32|0);
 HEAP32[$163>>2] = $162;
 $164 = ($160|0)==(0);
 L51: do {
  if ($164) {
   $165 = HEAP32[$6>>2]|0;
   $166 = HEAP32[$165>>2]|0;
   $167 = HEAP32[$2>>2]|0;
   $168 = ((($167)) + 28|0);
   $169 = HEAP32[$168>>2]|0;
   $170 = HEAP32[$10>>2]|0;
   $171 = HEAP32[$169>>2]|0;
   $172 = (($171|0) / 4)&-1;
   $173 = (($170) - ($172))|0;
   $174 = (($172) + ($170))|0;
   $$053$i = (($173) - ($172))|0;
   $$055$i = (($174) + ($172))|0;
   $175 = ((($166)) + 172|0);
   $176 = HEAP32[$175>>2]|0;
   $177 = ($176|0)>=($$053$i|0);
   $178 = ($176|0)<($$055$i|0);
   $or$cond$i3 = $177 & $178;
   if ($or$cond$i3) {
    $$sink11 = 0;
   } else {
    $179 = ((($166)) + 8|0);
    $180 = HEAP32[$179>>2]|0;
    $181 = (($$053$i|0) / ($180|0))&-1;
    $182 = (($$055$i|0) / ($180|0))&-1;
    $183 = ($181|0)<($182|0);
    if ($183) {
     $184 = ((($166)) + 160|0);
     $185 = HEAP32[$184>>2]|0;
     $$057$i = $181;
     while(1) {
      $188 = (($185) + ($$057$i<<2)|0);
      $189 = HEAP32[$188>>2]|0;
      $190 = ($189|0)==(0);
      $186 = (($$057$i) + 1)|0;
      if (!($190)) {
       $$sink11 = 0;
       break L51;
      }
      $187 = ($186|0)<($182|0);
      if ($187) {
       $$057$i = $186;
      } else {
       $$sink11 = 1;
       break;
      }
     }
    } else {
     $$sink11 = 1;
    }
   }
  } else {
   $not$182 = ($162|0)!=(0);
   $not$194 = ($158|0)!=(0);
   $narrow = $not$182 & $not$194;
   $$sink5 = $narrow&1;
   $$sink11 = $$sink5;
  }
 } while(0);
 $191 = ((($19)) + 8|0);
 HEAP32[$191>>2] = $$sink11;
 $192 = ((($1)) + 64|0);
 HEAP32[$192>>2] = $0;
 $193 = ((($0)) + 64|0);
 $194 = $193;
 $195 = $194;
 $196 = HEAP32[$195>>2]|0;
 $197 = (($194) + 4)|0;
 $198 = $197;
 $199 = HEAP32[$198>>2]|0;
 $200 = (_i64Add(($196|0),($199|0),1,0)|0);
 $201 = tempRet0;
 $202 = $193;
 $203 = $202;
 HEAP32[$203>>2] = $200;
 $204 = (($202) + 4)|0;
 $205 = $204;
 HEAP32[$205>>2] = $201;
 $206 = ((($1)) + 56|0);
 $207 = $206;
 $208 = $207;
 HEAP32[$208>>2] = $196;
 $209 = (($207) + 4)|0;
 $210 = $209;
 HEAP32[$210>>2] = $199;
 $211 = ((($0)) + 56|0);
 $212 = $211;
 $213 = $212;
 $214 = HEAP32[$213>>2]|0;
 $215 = (($212) + 4)|0;
 $216 = $215;
 $217 = HEAP32[$216>>2]|0;
 $218 = ((($1)) + 48|0);
 $219 = $218;
 $220 = $219;
 HEAP32[$220>>2] = $214;
 $221 = (($219) + 4)|0;
 $222 = $221;
 HEAP32[$222>>2] = $217;
 $223 = (($5) + ($160<<2)|0);
 $224 = HEAP32[$223>>2]|0;
 $225 = ((($1)) + 36|0);
 HEAP32[$225>>2] = $224;
 $226 = ((($19)) + 4|0);
 $227 = +HEAPF32[$226>>2];
 $228 = +HEAPF32[$9>>2];
 $229 = $227 > $228;
 if ($229) {
  HEAPF32[$9>>2] = $227;
  $245 = $227;
 } else {
  $245 = $228;
 }
 $230 = HEAP32[$2>>2]|0;
 $231 = ((($230)) + 28|0);
 $232 = HEAP32[$231>>2]|0;
 $233 = (($232) + ($160<<2)|0);
 $234 = HEAP32[$233>>2]|0;
 $235 = (($234|0) / 2)&-1;
 $236 = (+($235|0));
 $237 = ((($230)) + 8|0);
 $238 = HEAP32[$237>>2]|0;
 $239 = (+($238|0));
 $240 = $236 / $239;
 $241 = ((($232)) + 2936|0);
 $242 = +HEAPF32[$241>>2];
 $243 = $240 * $242;
 $244 = $243 + $245;
 $246 = $244 < -9999.0;
 $$0$i = $246 ? -9999.0 : $244;
 HEAPF32[$9>>2] = $$0$i;
 HEAPF32[$226>>2] = $$0$i;
 $247 = ((($3)) + 4|0);
 $248 = HEAP32[$247>>2]|0;
 $249 = $248 << 2;
 $250 = (($249) + 7)|0;
 $251 = $250 & -8;
 $252 = ((($1)) + 76|0);
 $253 = HEAP32[$252>>2]|0;
 $254 = ($251|0)>($253|0);
 $255 = ((($1)) + 68|0);
 $256 = HEAP32[$255>>2]|0;
 if ($254) {
  $257 = ($256|0)==(0|0);
  if (!($257)) {
   $258 = $256;
   $259 = (_malloc(8)|0);
   $260 = HEAP32[$137>>2]|0;
   $261 = ((($259)) + 4|0);
   HEAP32[$261>>2] = $260;
   HEAP32[$259>>2] = $258;
   HEAP32[$137>>2] = $259;
  }
  HEAP32[$252>>2] = $251;
  $262 = (_malloc($251)|0);
  HEAP32[$255>>2] = $262;
  HEAP32[$156>>2] = 0;
  $$pre187 = HEAP32[$247>>2]|0;
  $263 = $262;$265 = $$pre187;$270 = $251;
 } else {
  $263 = $256;$265 = $248;$270 = $253;
 }
 HEAP32[$156>>2] = $251;
 HEAP32[$1>>2] = $263;
 $264 = $265 << 2;
 $266 = (($264) + 7)|0;
 $267 = $266 & -8;
 $268 = (($267) + ($251))|0;
 $269 = ($268|0)>($270|0);
 if ($269) {
  $271 = ($263|0)==(0|0);
  if (!($271)) {
   $272 = $263;
   $273 = (_malloc(8)|0);
   $274 = HEAP32[$144>>2]|0;
   $275 = (($274) + ($251))|0;
   HEAP32[$144>>2] = $275;
   $276 = HEAP32[$137>>2]|0;
   $277 = ((($273)) + 4|0);
   HEAP32[$277>>2] = $276;
   HEAP32[$273>>2] = $272;
   HEAP32[$137>>2] = $273;
  }
  HEAP32[$252>>2] = $267;
  $278 = (_malloc($267)|0);
  HEAP32[$255>>2] = $278;
  HEAP32[$156>>2] = 0;
  $$pre188 = HEAP32[$247>>2]|0;
  $280 = $278;$281 = 0;$283 = $$pre188;$399 = $267;
 } else {
  $280 = $263;$281 = $251;$283 = $265;$399 = $270;
 }
 $279 = (($280) + ($281)|0);
 $282 = (($281) + ($267))|0;
 HEAP32[$156>>2] = $282;
 HEAP32[$19>>2] = $279;
 $284 = ($283|0)>(0);
 L75: do {
  if ($284) {
   $285 = ((($0)) + 8|0);
   $$0170184 = 0;$292 = $282;$294 = $399;$295 = $280;
   while(1) {
    $286 = HEAP32[$225>>2]|0;
    $287 = (($286) + ($17))|0;
    $288 = $287 << 2;
    $289 = (($288) + 7)|0;
    $290 = $289 & -8;
    $291 = (($290) + ($292))|0;
    $293 = ($291|0)>($294|0);
    if ($293) {
     $296 = ($295|0)==(0|0);
     if (!($296)) {
      $297 = $295;
      $298 = (_malloc(8)|0);
      $299 = HEAP32[$144>>2]|0;
      $300 = (($299) + ($292))|0;
      HEAP32[$144>>2] = $300;
      $301 = HEAP32[$137>>2]|0;
      $302 = ((($298)) + 4|0);
      HEAP32[$302>>2] = $301;
      HEAP32[$298>>2] = $297;
      HEAP32[$137>>2] = $298;
     }
     HEAP32[$252>>2] = $290;
     $303 = (_malloc($290)|0);
     HEAP32[$255>>2] = $303;
     HEAP32[$156>>2] = 0;
     $305 = $303;$306 = 0;
    } else {
     $305 = $295;$306 = $292;
    }
    $304 = (($305) + ($306)|0);
    $307 = (($306) + ($290))|0;
    HEAP32[$156>>2] = $307;
    $308 = HEAP32[$19>>2]|0;
    $309 = (($308) + ($$0170184<<2)|0);
    HEAP32[$309>>2] = $304;
    $310 = HEAP32[$19>>2]|0;
    $311 = (($310) + ($$0170184<<2)|0);
    $312 = HEAP32[$311>>2]|0;
    $313 = HEAP32[$285>>2]|0;
    $314 = (($313) + ($$0170184<<2)|0);
    $315 = HEAP32[$314>>2]|0;
    _memcpy(($312|0),($315|0),($288|0))|0;
    $316 = HEAP32[$19>>2]|0;
    $317 = (($316) + ($$0170184<<2)|0);
    $318 = HEAP32[$317>>2]|0;
    $319 = (($318) + ($17<<2)|0);
    $320 = HEAP32[$1>>2]|0;
    $321 = (($320) + ($$0170184<<2)|0);
    HEAP32[$321>>2] = $319;
    $322 = (($$0170184) + 1)|0;
    $323 = HEAP32[$247>>2]|0;
    $324 = ($322|0)<($323|0);
    if (!($324)) {
     break L75;
    }
    $$pre189 = HEAP32[$156>>2]|0;
    $$pre190 = HEAP32[$252>>2]|0;
    $$pre191 = HEAP32[$255>>2]|0;
    $$0170184 = $322;$292 = $$pre189;$294 = $$pre190;$295 = $$pre191;
   }
  }
 } while(0);
 $325 = HEAP32[$23>>2]|0;
 $326 = ($325|0)==(0);
 if (!($326)) {
  $327 = HEAP32[$10>>2]|0;
  $328 = ($327|0)<($325|0);
  if (!($328)) {
   HEAP32[$23>>2] = -1;
   $329 = ((($1)) + 44|0);
   HEAP32[$329>>2] = 1;
   $$2 = 1;
   return ($$2|0);
  }
 }
 $330 = HEAP32[$99>>2]|0;
 $331 = (($330|0) / 2)&-1;
 $332 = (($133) - ($331))|0;
 $333 = ($332|0)>(0);
 if (!($333)) {
  $$2 = 1;
  return ($$2|0);
 }
 $334 = HEAP32[$7>>2]|0;
 $335 = ((($334)) + 168|0);
 $336 = HEAP32[$335>>2]|0;
 $337 = ((($334)) + 8|0);
 $338 = HEAP32[$337>>2]|0;
 $339 = (($336|0) / ($338|0))&-1;
 $340 = (($339) + 2)|0;
 $341 = (($332|0) / ($338|0))&-1;
 $342 = ((($334)) + 160|0);
 $343 = HEAP32[$342>>2]|0;
 $344 = (($343) + ($341<<2)|0);
 $345 = (($340) - ($341))|0;
 $346 = $345 << 2;
 _memmove(($343|0),($344|0),($346|0))|0;
 $347 = HEAP32[$335>>2]|0;
 $348 = (($347) - ($332))|0;
 HEAP32[$335>>2] = $348;
 $349 = ((($334)) + 172|0);
 $350 = HEAP32[$349>>2]|0;
 $351 = ($350|0)>(-1);
 if ($351) {
  $352 = (($350) - ($332))|0;
  HEAP32[$349>>2] = $352;
 }
 $353 = ((($334)) + 176|0);
 $354 = HEAP32[$353>>2]|0;
 $355 = (($354) - ($332))|0;
 HEAP32[$353>>2] = $355;
 $356 = HEAP32[$33>>2]|0;
 $357 = (($356) - ($332))|0;
 HEAP32[$33>>2] = $357;
 $358 = HEAP32[$247>>2]|0;
 $359 = ($358|0)>(0);
 if ($359) {
  $360 = ((($0)) + 8|0);
  $361 = HEAP32[$360>>2]|0;
  $362 = HEAP32[$361>>2]|0;
  $363 = (($362) + ($332<<2)|0);
  $364 = $357 << 2;
  _memmove(($362|0),($363|0),($364|0))|0;
  $365 = HEAP32[$247>>2]|0;
  $366 = ($365|0)>(1);
  if ($366) {
   $369 = 1;
   while(1) {
    $$pre193 = HEAP32[$33>>2]|0;
    $367 = HEAP32[$360>>2]|0;
    $368 = (($367) + ($369<<2)|0);
    $370 = HEAP32[$368>>2]|0;
    $371 = (($370) + ($332<<2)|0);
    $372 = $$pre193 << 2;
    _memmove(($370|0),($371|0),($372|0))|0;
    $373 = (($369) + 1)|0;
    $374 = HEAP32[$247>>2]|0;
    $375 = ($373|0)<($374|0);
    if ($375) {
     $369 = $373;
    } else {
     break;
    }
   }
  }
 }
 $376 = HEAP32[$12>>2]|0;
 HEAP32[$157>>2] = $376;
 $377 = HEAP32[$126>>2]|0;
 HEAP32[$12>>2] = $377;
 HEAP32[$10>>2] = $331;
 $378 = HEAP32[$23>>2]|0;
 $379 = ($378|0)==(0);
 if ($379) {
  $$sink17$in = $332;
 } else {
  $380 = (($378) - ($332))|0;
  $381 = ($380|0)<(1);
  $$ = $381 ? -1 : $380;
  HEAP32[$23>>2] = $$;
  $382 = ($$|0)>($331|0);
  $383 = (($$) - ($331))|0;
  $384 = $382 ? 0 : $383;
  $$180 = (($384) + ($332))|0;
  $$sink17$in = $$180;
 }
 $385 = ($$sink17$in|0)<(0);
 $386 = $385 << 31 >> 31;
 $387 = $211;
 $388 = $387;
 $389 = HEAP32[$388>>2]|0;
 $390 = (($387) + 4)|0;
 $391 = $390;
 $392 = HEAP32[$391>>2]|0;
 $393 = (_i64Add(($389|0),($392|0),($$sink17$in|0),($386|0))|0);
 $394 = tempRet0;
 $395 = $211;
 $396 = $395;
 HEAP32[$396>>2] = $393;
 $397 = (($395) + 4)|0;
 $398 = $397;
 HEAP32[$398>>2] = $394;
 $$2 = 1;
 return ($$2|0);
}
function __ve_amp($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$0$us = 0.0, $$0187217$us = 0.0, $$0188$lcssa = 0, $$0188226 = 0, $$0188226$us = 0, $$0189231 = 0, $$0192224 = 0, $$0192224$us = 0, $$0196 = 0.0, $$0198$lcssa = 0.0, $$0198$lcssa$us = 0.0, $$0198213 = 0.0, $$0198213$us = 0.0, $$0218$us = 0.0, $$1 = 0, $$1$us = 0, $$1190228 = 0, $$1194215$us = 0, $$1197 = 0.0;
 var $$2 = 0, $$2$us = 0, $$200 = 0, $$200$us = 0, $$200$v = 0, $$200$v$us = 0, $$201 = 0.0, $$201$us = 0.0, $$202$us = 0, $$202$v$us = 0, $$203 = 0, $$203$us = 0, $$2191214 = 0, $$2191214$us = 0, $$3216$us = 0, $$alloca_mul = 0, $$phi$trans$insert = 0, $$pre = 0.0, $$sink = 0.0, $$sink211 = 0.0;
 var $$sroa$0$0$v = 0.0, $$sroa$0$1$v = 0.0, $$sroa$0206$1$in227 = 0.0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0.0;
 var $133 = 0.0, $134 = 0.0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0;
 var $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0.0;
 var $17 = 0.0, $170 = 0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0.0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0, $184 = 0, $185 = 0.0, $186 = 0.0, $187 = 0;
 var $188 = 0, $189 = 0, $19 = 0.0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0;
 var $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0;
 var $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0;
 var $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0, $78 = 0, $79 = 0, $8 = 0.0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0.0, $93 = 0, $94 = 0.0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond238 = 0, $exitcond239 = 0, $exitcond240 = 0, $exitcond6 = 0, $exitcond7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 12|0);
 $8 = +HEAPF32[$7>>2];
 $9 = $6 << 2;
 $$alloca_mul = $9;
 $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $11 = ((($0)) + 156|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)>(5);
 $14 = (($12|0) / 2)&-1;
 $15 = $13 ? $14 : 2;
 $16 = ((($1)) + 60|0);
 $17 = +HEAPF32[$16>>2];
 $18 = (($14) + -2)|0;
 $19 = (+($18|0));
 $20 = $17 - $19;
 $21 = $20 < 0.0;
 $$0196 = $21 ? 0.0 : $20;
 $22 = $$0196 > $17;
 $$1197 = $22 ? $17 : $$0196;
 $23 = ($6|0)>(0);
 if ($23) {
  $24 = ((($0)) + 36|0);
  $25 = HEAP32[$24>>2]|0;
  $$0189231 = 0;
  while(1) {
   $26 = (($2) + ($$0189231<<2)|0);
   $27 = +HEAPF32[$26>>2];
   $28 = (($25) + ($$0189231<<2)|0);
   $29 = +HEAPF32[$28>>2];
   $30 = $29 * $27;
   $31 = (($10) + ($$0189231<<2)|0);
   HEAPF32[$31>>2] = $30;
   $32 = (($$0189231) + 1)|0;
   $exitcond240 = ($32|0)==($6|0);
   if ($exitcond240) {
    break;
   } else {
    $$0189231 = $32;
   }
  }
 }
 $33 = ((($0)) + 16|0);
 _mdct_forward($33,$10,$10);
 $34 = +HEAPF32[$10>>2];
 $35 = $34 * $34;
 $36 = $35;
 $37 = ((($10)) + 4|0);
 $38 = +HEAPF32[$37>>2];
 $39 = $38;
 $40 = $39 * $39;
 $41 = $40 * 0.69999999999999996;
 $42 = $41 + $36;
 $43 = ((($10)) + 8|0);
 $44 = +HEAPF32[$43>>2];
 $45 = $44;
 $46 = $45 * $45;
 $47 = $46 * 0.20000000000000001;
 $48 = $42 + $47;
 $49 = $48;
 $50 = ((($4)) + 140|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = ($51|0)==(0);
 $53 = ((($4)) + 136|0);
 $54 = +HEAPF32[$53>>2];
 $55 = $49 + $54;
 $56 = ((($4)) + 132|0);
 if ($52) {
  $$sink = $49;$$sink211 = $55;
 } else {
  $57 = +HEAPF32[$56>>2];
  $58 = $57 + $49;
  $$sink = $55;$$sink211 = $58;
 }
 HEAPF32[$56>>2] = $$sink211;
 HEAPF32[$53>>2] = $$sink;
 $59 = (((($4)) + 72|0) + ($51<<2)|0);
 $60 = +HEAPF32[$59>>2];
 $61 = $$sink211 - $60;
 HEAPF32[$56>>2] = $61;
 HEAPF32[$59>>2] = $49;
 $62 = HEAP32[$50>>2]|0;
 $63 = (($62) + 1)|0;
 $64 = ($62|0)>(13);
 $$ = $64 ? 0 : $63;
 HEAP32[$50>>2] = $$;
 $65 = (($6|0) / 2)&-1;
 $66 = ($6|0)>(1);
 L9: do {
  if ($66) {
   $67 = $$sink211 * 0.0625;
   $68 = (HEAPF32[tempDoublePtr>>2]=$67,HEAP32[tempDoublePtr>>2]|0);
   $69 = $68 & 2147483647;
   $70 = (+($69>>>0));
   $71 = $70 * 7.1771142984289327E-7;
   $72 = $71 + -764.6162109375;
   $73 = $72;
   $74 = $73 * 0.5;
   $75 = $74 + -15.0;
   $76 = $75;
   $$1190228 = 0;$$sroa$0206$1$in227 = $76;$129 = $34;
   while(1) {
    $128 = $129 * $129;
    $130 = $$1190228 | 1;
    $131 = (($10) + ($130<<2)|0);
    $132 = +HEAPF32[$131>>2];
    $133 = $132 * $132;
    $134 = $133 + $128;
    $135 = (HEAPF32[tempDoublePtr>>2]=$134,HEAP32[tempDoublePtr>>2]|0);
    $136 = $135 & 2147483647;
    $137 = (+($136>>>0));
    $138 = $137 * 3.5885571492144663E-7;
    $139 = $138 + -382.30810546875;
    $140 = $139 < $$sroa$0206$1$in227;
    $$sroa$0$0$v = $140 ? $$sroa$0206$1$in227 : $139;
    $141 = $$sroa$0$0$v < $8;
    $$sroa$0$1$v = $141 ? $8 : $$sroa$0$0$v;
    $142 = $$1190228 >> 1;
    $143 = (($10) + ($142<<2)|0);
    HEAPF32[$143>>2] = $$sroa$0$1$v;
    $144 = (($$1190228) + 2)|0;
    $145 = ($144|0)<($65|0);
    if (!($145)) {
     break L9;
    }
    $146 = $$sroa$0206$1$in227 + -8.0;
    $$phi$trans$insert = (($10) + ($144<<2)|0);
    $$pre = +HEAPF32[$$phi$trans$insert>>2];
    $$1190228 = $144;$$sroa$0206$1$in227 = $146;$129 = $$pre;
   }
  }
 } while(0);
 $77 = ($15|0)>(0);
 if ($77) {
  $$0188226$us = 0;$$0192224$us = 0;
 } else {
  $$0188226 = 0;$$0192224 = 0;
  while(1) {
   $147 = (((($3) + ($$0192224<<4)|0)) + 4|0);
   $148 = HEAP32[$147>>2]|0;
   $149 = ($148|0)>(0);
   if ($149) {
    $150 = (($3) + ($$0192224<<4)|0);
    $151 = HEAP32[$150>>2]|0;
    $152 = (((($3) + ($$0192224<<4)|0)) + 8|0);
    $153 = HEAP32[$152>>2]|0;
    $$0198213 = 0.0;$$2191214 = 0;
    while(1) {
     $154 = (($151) + ($$2191214))|0;
     $155 = (($10) + ($154<<2)|0);
     $156 = +HEAPF32[$155>>2];
     $157 = (($153) + ($$2191214<<2)|0);
     $158 = +HEAPF32[$157>>2];
     $159 = $158 * $156;
     $160 = $159 + $$0198213;
     $161 = (($$2191214) + 1)|0;
     $exitcond7 = ($161|0)==($148|0);
     if ($exitcond7) {
      $$0198$lcssa = $160;
      break;
     } else {
      $$0198213 = $160;$$2191214 = $161;
     }
    }
   } else {
    $$0198$lcssa = 0.0;
   }
   $162 = (((($3) + ($$0192224<<4)|0)) + 12|0);
   $163 = +HEAPF32[$162>>2];
   $164 = $163 * $$0198$lcssa;
   $165 = (((($4) + (($$0192224*144)|0)|0)) + 68|0);
   $166 = HEAP32[$165>>2]|0;
   $167 = ($166|0)<(1);
   $$200$v = $167 ? 16 : -1;
   $$200 = (($$200$v) + ($166))|0;
   $168 = ((($4) + (($$0192224*144)|0)|0) + ($$200<<2)|0);
   $169 = +HEAPF32[$168>>2];
   $170 = $164 < $169;
   $171 = $170 ? $169 : $164;
   $172 = $164 > $169;
   $$201 = $172 ? $169 : $164;
   $173 = $$201 + -99999.0;
   $174 = $171 + 99999.0;
   $175 = ((($4) + (($$0192224*144)|0)|0) + ($166<<2)|0);
   HEAPF32[$175>>2] = $164;
   $176 = HEAP32[$165>>2]|0;
   $177 = (($176) + 1)|0;
   $178 = ($176|0)>(15);
   $$203 = $178 ? 0 : $177;
   HEAP32[$165>>2] = $$203;
   $179 = (((($1)) + 4|0) + ($$0192224<<2)|0);
   $180 = +HEAPF32[$179>>2];
   $181 = $180 + $$1197;
   $182 = $174 > $181;
   $183 = $$0188226 | 5;
   $$1 = $182 ? $183 : $$0188226;
   $184 = (((($1)) + 32|0) + ($$0192224<<2)|0);
   $185 = +HEAPF32[$184>>2];
   $186 = $185 - $$1197;
   $187 = $173 < $186;
   $188 = $$1 | 2;
   $$2 = $187 ? $188 : $$1;
   $189 = (($$0192224) + 1)|0;
   $exitcond239 = ($189|0)==(7);
   if ($exitcond239) {
    $$0188$lcssa = $$2;
    break;
   } else {
    $$0188226 = $$2;$$0192224 = $189;
   }
  }
  STACKTOP = sp;return ($$0188$lcssa|0);
 }
 while(1) {
  $78 = (((($3) + ($$0192224$us<<4)|0)) + 4|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = ($79|0)>(0);
  if ($80) {
   $107 = (($3) + ($$0192224$us<<4)|0);
   $98 = HEAP32[$107>>2]|0;
   $108 = (((($3) + ($$0192224$us<<4)|0)) + 8|0);
   $102 = HEAP32[$108>>2]|0;
   $$0198213$us = 0.0;$$2191214$us = 0;
   while(1) {
    $97 = (($98) + ($$2191214$us))|0;
    $99 = (($10) + ($97<<2)|0);
    $100 = +HEAPF32[$99>>2];
    $101 = (($102) + ($$2191214$us<<2)|0);
    $103 = +HEAPF32[$101>>2];
    $104 = $103 * $100;
    $105 = $104 + $$0198213$us;
    $106 = (($$2191214$us) + 1)|0;
    $exitcond6 = ($106|0)==($79|0);
    if ($exitcond6) {
     $$0198$lcssa$us = $105;
     break;
    } else {
     $$0198213$us = $105;$$2191214$us = $106;
    }
   }
  } else {
   $$0198$lcssa$us = 0.0;
  }
  $81 = (((($3) + ($$0192224$us<<4)|0)) + 12|0);
  $82 = +HEAPF32[$81>>2];
  $83 = $82 * $$0198$lcssa$us;
  $84 = (((($4) + (($$0192224$us*144)|0)|0)) + 68|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = ($85|0)<(1);
  $$200$v$us = $86 ? 16 : -1;
  $$200$us = (($$200$v$us) + ($85))|0;
  $87 = ((($4) + (($$0192224$us*144)|0)|0) + ($$200$us<<2)|0);
  $88 = +HEAPF32[$87>>2];
  $89 = $83 < $88;
  $$0187217$us = -99999.0;$$0218$us = 99999.0;$$1194215$us = $$200$us;$$3216$us = 0;
  while(1) {
   $90 = ($$1194215$us|0)<(1);
   $$202$v$us = $90 ? 16 : -1;
   $$202$us = (($$202$v$us) + ($$1194215$us))|0;
   $91 = ((($4) + (($$0192224$us*144)|0)|0) + ($$202$us<<2)|0);
   $92 = +HEAPF32[$91>>2];
   $93 = $$0187217$us < $92;
   $94 = $93 ? $92 : $$0187217$us;
   $95 = $$0218$us > $92;
   $$$0$us = $95 ? $92 : $$0218$us;
   $96 = (($$3216$us) + 1)|0;
   $exitcond = ($96|0)==($15|0);
   if ($exitcond) {
    break;
   } else {
    $$0187217$us = $94;$$0218$us = $$$0$us;$$1194215$us = $$202$us;$$3216$us = $96;
   }
  }
  $109 = $83 > $88;
  $110 = $89 ? $88 : $83;
  $$201$us = $109 ? $88 : $83;
  $111 = $$201$us - $$$0$us;
  $112 = $110 - $94;
  $113 = ((($4) + (($$0192224$us*144)|0)|0) + ($85<<2)|0);
  HEAPF32[$113>>2] = $83;
  $114 = HEAP32[$84>>2]|0;
  $115 = (($114) + 1)|0;
  $116 = ($114|0)>(15);
  $$203$us = $116 ? 0 : $115;
  HEAP32[$84>>2] = $$203$us;
  $117 = (((($1)) + 4|0) + ($$0192224$us<<2)|0);
  $118 = +HEAPF32[$117>>2];
  $119 = $118 + $$1197;
  $120 = $112 > $119;
  $121 = $$0188226$us | 5;
  $$1$us = $120 ? $121 : $$0188226$us;
  $122 = (((($1)) + 32|0) + ($$0192224$us<<2)|0);
  $123 = +HEAPF32[$122>>2];
  $124 = $123 - $$1197;
  $125 = $111 < $124;
  $126 = $$1$us | 2;
  $$2$us = $125 ? $126 : $$1$us;
  $127 = (($$0192224$us) + 1)|0;
  $exitcond238 = ($127|0)==(7);
  if ($exitcond238) {
   $$0188$lcssa = $$2$us;
   break;
  } else {
   $$0188226$us = $$2$us;$$0192224$us = $127;
  }
 }
 STACKTOP = sp;return ($$0188$lcssa|0);
}
function __vorbis_apply_window($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$071$lcssa = 0, $$081 = 0, $$17280 = 0, $$178 = 0, $$178$in = 0, $$2$lcssa = 0, $$277 = 0, $$neg = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0.0;
 var $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0;
 var $scevgep = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($4|0)!=(0);
 $7 = $6 ? $3 : 0;
 $8 = $6 ? $5 : 0;
 $9 = (($1) + ($7<<2)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (3668 + ($10<<2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($1) + ($8<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (3668 + ($14<<2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (($2) + ($4<<2)|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($2) + ($7<<2)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (($2) + ($8<<2)|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (($18|0) / 4)&-1;
 $24 = (($20|0) / 4)&-1;
 $25 = (($23) - ($24))|0;
 $26 = (($20|0) / 2)&-1;
 $27 = (($25) + ($26))|0;
 $28 = (($18|0) / 2)&-1;
 $29 = (($28) + ($23))|0;
 $$neg = (($22|0) / -4)&-1;
 $30 = (($29) + ($$neg))|0;
 $31 = (($22|0) / 2)&-1;
 $32 = (($30) + ($31))|0;
 $33 = ($25|0)>(0);
 if ($33) {
  $34 = $25 << 2;
  _memset(($0|0),0,($34|0))|0;
  $$071$lcssa = $25;
 } else {
  $$071$lcssa = 0;
 }
 $35 = ($$071$lcssa|0)<($27|0);
 if ($35) {
  $36 = (($26) + ($23))|0;
  $37 = (($36) - ($$071$lcssa))|0;
  $38 = (($37) - ($24))|0;
  $$081 = 0;$$17280 = $$071$lcssa;
  while(1) {
   $40 = (($12) + ($$081<<2)|0);
   $41 = +HEAPF32[$40>>2];
   $42 = (($0) + ($$17280<<2)|0);
   $43 = +HEAPF32[$42>>2];
   $44 = $43 * $41;
   HEAPF32[$42>>2] = $44;
   $45 = (($$17280) + 1)|0;
   $46 = (($$081) + 1)|0;
   $exitcond = ($46|0)==($38|0);
   if ($exitcond) {
    break;
   } else {
    $$081 = $46;$$17280 = $45;
   }
  }
 }
 $39 = ($22|0)>(1);
 if ($39) {
  $$178$in = $31;$$277 = $30;
  while(1) {
   $$178 = (($$178$in) + -1)|0;
   $50 = (($16) + ($$178<<2)|0);
   $51 = +HEAPF32[$50>>2];
   $52 = (($0) + ($$277<<2)|0);
   $53 = +HEAPF32[$52>>2];
   $54 = $53 * $51;
   HEAPF32[$52>>2] = $54;
   $55 = (($$277) + 1)|0;
   $56 = ($55|0)<($32|0);
   if ($56) {
    $$178$in = $$178;$$277 = $55;
   } else {
    $$2$lcssa = $55;
    break;
   }
  }
 } else {
  $$2$lcssa = $30;
 }
 $47 = ($18|0)>($$2$lcssa|0);
 if (!($47)) {
  return;
 }
 $scevgep = (($0) + ($$2$lcssa<<2)|0);
 $48 = (($18) - ($$2$lcssa))|0;
 $49 = $48 << 2;
 _memset(($scevgep|0),0,($49|0))|0;
 return;
}
function _vorbis_lpc_from_data($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0110138 = 0.0, $$0111128 = 0.0, $$0112$lcssa = 0.0, $$0112143 = 0.0, $$0116142 = 0, $$0125 = 0.0, $$1114127 = 0, $$2115$lcssa = 0, $$2115132 = 0, $$3124 = 0, $$4123 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$pre = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0.0, $15 = 0;
 var $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0, $30 = 0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0.0, $35 = 0;
 var $36 = 0, $37 = 0.0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0;
 var $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0, $9 = 0, $exitcond = 0, $exitcond153 = 0, $exitcond154 = 0, $exitcond155 = 0, $indvars$iv = 0;
 var $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (($3) + 1)|0;
 $5 = $4 << 3;
 $$alloca_mul = $5;
 $6 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $7 = $3 << 3;
 $$alloca_mul1 = $7;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $9 = ($4|0)==(0);
 if ($9) {
  STACKTOP = sp;return;
 } else {
  $10 = $3;
 }
 while(1) {
  $11 = ($10|0)<($2|0);
  if ($11) {
   $$0112143 = 0.0;$$0116142 = $10;
   while(1) {
    $12 = (($0) + ($$0116142<<2)|0);
    $13 = +HEAPF32[$12>>2];
    $14 = $13;
    $15 = (($$0116142) - ($10))|0;
    $16 = (($0) + ($15<<2)|0);
    $17 = +HEAPF32[$16>>2];
    $18 = $17;
    $19 = $18 * $14;
    $20 = $19 + $$0112143;
    $21 = (($$0116142) + 1)|0;
    $exitcond155 = ($21|0)==($2|0);
    if ($exitcond155) {
     $$0112$lcssa = $20;
     break;
    } else {
     $$0112143 = $20;$$0116142 = $21;
    }
   }
  } else {
   $$0112$lcssa = 0.0;
  }
  $22 = (($6) + ($10<<3)|0);
  HEAPF64[$22>>3] = $$0112$lcssa;
  $23 = (($10) + -1)|0;
  $24 = ($10|0)==(0);
  if ($24) {
   break;
  } else {
   $10 = $23;
  }
 }
 $$pre = +HEAPF64[$6>>3];
 $25 = $$pre * 1.0000000000000001E-9;
 $26 = $25 + 1.0E-10;
 $27 = ($3|0)>(0);
 if (!($27)) {
  STACKTOP = sp;return;
 }
 $28 = $$pre * 1.0000000001;
 $$0110138 = $28;$indvars$iv = 0;
 while(1) {
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $29 = $$0110138 < $26;
  if ($29) {
   label = 17;
   break;
  }
  $30 = (($6) + ($indvars$iv$next<<3)|0);
  $31 = +HEAPF64[$30>>3];
  $32 = -$31;
  $33 = ($indvars$iv|0)>(0);
  if ($33) {
   $$0111128 = $32;$$1114127 = 0;
   while(1) {
    $36 = (($8) + ($$1114127<<3)|0);
    $37 = +HEAPF64[$36>>3];
    $38 = (($indvars$iv) - ($$1114127))|0;
    $39 = (($6) + ($38<<3)|0);
    $40 = +HEAPF64[$39>>3];
    $41 = $40 * $37;
    $42 = $$0111128 - $41;
    $43 = (($$1114127) + 1)|0;
    $exitcond154 = ($43|0)==($indvars$iv|0);
    if ($exitcond154) {
     break;
    } else {
     $$0111128 = $42;$$1114127 = $43;
    }
   }
   $44 = $42 / $$0110138;
   $45 = (($8) + ($indvars$iv<<3)|0);
   HEAPF64[$45>>3] = $44;
   $46 = (($indvars$iv|0) / 2)&-1;
   $47 = ($indvars$iv|0)>(1);
   if ($47) {
    $48 = (($indvars$iv) + -1)|0;
    $$2115132 = 0;
    while(1) {
     $49 = (($8) + ($$2115132<<3)|0);
     $50 = +HEAPF64[$49>>3];
     $51 = (($48) - ($$2115132))|0;
     $52 = (($8) + ($51<<3)|0);
     $53 = +HEAPF64[$52>>3];
     $54 = $53 * $44;
     $55 = $54 + $50;
     HEAPF64[$49>>3] = $55;
     $56 = $50 * $44;
     $57 = +HEAPF64[$52>>3];
     $58 = $57 + $56;
     HEAPF64[$52>>3] = $58;
     $59 = (($$2115132) + 1)|0;
     $60 = ($59|0)<($46|0);
     if ($60) {
      $$2115132 = $59;
     } else {
      $$2115$lcssa = $59;$66 = $44;
      break;
     }
    }
   } else {
    $$2115$lcssa = 0;$66 = $44;
   }
  } else {
   $34 = $32 / $$0110138;
   $35 = (($8) + ($indvars$iv<<3)|0);
   HEAPF64[$35>>3] = $34;
   $$2115$lcssa = 0;$66 = $34;
  }
  $61 = $indvars$iv & 1;
  $62 = ($61|0)==(0);
  $63 = (($8) + ($$2115$lcssa<<3)|0);
  if (!($62)) {
   $64 = +HEAPF64[$63>>3];
   $65 = $64 * $66;
   $67 = $65 + $64;
   HEAPF64[$63>>3] = $67;
  }
  $68 = $66 * $66;
  $69 = 1.0 - $68;
  $70 = $69 * $$0110138;
  $71 = ($indvars$iv$next|0)<($3|0);
  if ($71) {
   $$0110138 = $70;$indvars$iv = $indvars$iv$next;
  } else {
   $$0125 = 0.98999999999999999;$$3124 = 0;
   break;
  }
 }
 if ((label|0) == 17) {
  $72 = (($8) + ($indvars$iv<<3)|0);
  $73 = (($3) - ($indvars$iv))|0;
  $74 = $73 << 3;
  _memset(($72|0),0,($74|0))|0;
  $$0125 = 0.98999999999999999;$$3124 = 0;
 }
 while(1) {
  $75 = (($8) + ($$3124<<3)|0);
  $76 = +HEAPF64[$75>>3];
  $77 = $76 * $$0125;
  HEAPF64[$75>>3] = $77;
  $78 = $$0125 * 0.98999999999999999;
  $79 = (($$3124) + 1)|0;
  $exitcond153 = ($79|0)==($3|0);
  if ($exitcond153) {
   $$4123 = 0;
   break;
  } else {
   $$0125 = $78;$$3124 = $79;
  }
 }
 while(1) {
  $80 = (($8) + ($$4123<<3)|0);
  $81 = +HEAPF64[$80>>3];
  $82 = $81;
  $83 = (($1) + ($$4123<<2)|0);
  HEAPF32[$83>>2] = $82;
  $84 = (($$4123) + 1)|0;
  $exitcond = ($84|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$4123 = $84;
  }
 }
 STACKTOP = sp;return;
}
function _vorbis_lpc_predict($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$04354$us = 0.0, $$04453$us = 0, $$04552$us = 0, $$256$us = 0, $$alloca_mul = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0, $18 = 0, $19 = 0.0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond65 = 0, $indvars$iv = 0, $indvars$iv$next = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (($4) + ($2))|0;
 $6 = $5 << 2;
 $$alloca_mul = $6;
 $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $8 = ($1|0)==(0|0);
 $9 = ($2|0)>(0);
 if ($8) {
  if ($9) {
   $11 = $2 << 2;
   _memset(($7|0),0,($11|0))|0;
  }
 } else {
  if ($9) {
   $10 = $2 << 2;
   _memcpy(($7|0),($1|0),($10|0))|0;
  }
 }
 $12 = ($4|0)>(0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 if ($9) {
  $$256$us = 0;$indvars$iv = $2;
 } else {
  $13 = $4 << 2;
  _memset(($7|0),0,($13|0))|0;
  _memset(($3|0),0,($13|0))|0;
  STACKTOP = sp;return;
 }
 while(1) {
  $$04354$us = 0.0;$$04453$us = $2;$$04552$us = $$256$us;
  while(1) {
   $14 = (($$04552$us) + 1)|0;
   $15 = (($7) + ($$04552$us<<2)|0);
   $16 = +HEAPF32[$15>>2];
   $17 = (($$04453$us) + -1)|0;
   $18 = (($0) + ($17<<2)|0);
   $19 = +HEAPF32[$18>>2];
   $20 = $19 * $16;
   $21 = $$04354$us - $20;
   $exitcond = ($14|0)==($indvars$iv|0);
   if ($exitcond) {
    break;
   } else {
    $$04354$us = $21;$$04453$us = $17;$$04552$us = $14;
   }
  }
  $22 = (($7) + ($indvars$iv<<2)|0);
  HEAPF32[$22>>2] = $21;
  $23 = (($3) + ($$256$us<<2)|0);
  HEAPF32[$23>>2] = $21;
  $24 = (($$256$us) + 1)|0;
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $exitcond65 = ($24|0)==($4|0);
  if ($exitcond65) {
   break;
  } else {
   $$256$us = $24;$indvars$iv = $indvars$iv$next;
  }
 }
 STACKTOP = sp;return;
}
function _vorbis_analysis($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 104|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 88|0);
 $5 = ((($3)) + 12|0);
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $10 = ((($6)) + 8|0);
  $11 = HEAP32[$10>>2]|0;
  HEAP32[$7>>2] = $11;
  HEAP8[$11>>0] = 0;
  HEAP32[$6>>2] = 0;
  $12 = ((($6)) + 4|0);
  HEAP32[$12>>2] = 0;
 }
 $13 = ((($3)) + 16|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($14)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if (!($17)) {
  $18 = ((($14)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  HEAP32[$15>>2] = $19;
  HEAP8[$19>>0] = 0;
  HEAP32[$14>>2] = 0;
  $20 = ((($14)) + 4|0);
  HEAP32[$20>>2] = 0;
 }
 $21 = ((($3)) + 20|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ((($22)) + 12|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(0|0);
 if (!($25)) {
  $26 = ((($22)) + 8|0);
  $27 = HEAP32[$26>>2]|0;
  HEAP32[$23>>2] = $27;
  HEAP8[$27>>0] = 0;
  HEAP32[$22>>2] = 0;
  $28 = ((($22)) + 4|0);
  HEAP32[$28>>2] = 0;
 }
 $29 = ((($3)) + 24|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ((($30)) + 12|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)==(0|0);
 if (!($33)) {
  $34 = ((($30)) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  HEAP32[$31>>2] = $35;
  HEAP8[$35>>0] = 0;
  HEAP32[$30>>2] = 0;
  $36 = ((($30)) + 4|0);
  HEAP32[$36>>2] = 0;
 }
 $37 = ((($3)) + 28|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($38)) + 12|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($40|0)==(0|0);
 if (!($41)) {
  $42 = ((($38)) + 8|0);
  $43 = HEAP32[$42>>2]|0;
  HEAP32[$39>>2] = $43;
  HEAP8[$43>>0] = 0;
  HEAP32[$38>>2] = 0;
  $44 = ((($38)) + 4|0);
  HEAP32[$44>>2] = 0;
 }
 $45 = ((($3)) + 32|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = ((($46)) + 12|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = ($48|0)==(0|0);
 if (!($49)) {
  $50 = ((($46)) + 8|0);
  $51 = HEAP32[$50>>2]|0;
  HEAP32[$47>>2] = $51;
  HEAP8[$51>>0] = 0;
  HEAP32[$46>>2] = 0;
  $52 = ((($46)) + 4|0);
  HEAP32[$52>>2] = 0;
 }
 $53 = ((($3)) + 36|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ((($54)) + 12|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = ($56|0)==(0|0);
 if (!($57)) {
  $58 = ((($54)) + 8|0);
  $59 = HEAP32[$58>>2]|0;
  HEAP32[$55>>2] = $59;
  HEAP8[$59>>0] = 0;
  HEAP32[$54>>2] = 0;
  $60 = ((($54)) + 4|0);
  HEAP32[$60>>2] = 0;
 }
 $61 = ((($3)) + 40|0);
 $62 = HEAP32[$61>>2]|0;
 $63 = ((($62)) + 12|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)==(0|0);
 if (!($65)) {
  $66 = ((($62)) + 8|0);
  $67 = HEAP32[$66>>2]|0;
  HEAP32[$63>>2] = $67;
  HEAP8[$67>>0] = 0;
  HEAP32[$62>>2] = 0;
  $68 = ((($62)) + 4|0);
  HEAP32[$68>>2] = 0;
 }
 $69 = ((($3)) + 44|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = ((($70)) + 12|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($72|0)==(0|0);
 if (!($73)) {
  $74 = ((($70)) + 8|0);
  $75 = HEAP32[$74>>2]|0;
  HEAP32[$71>>2] = $75;
  HEAP8[$75>>0] = 0;
  HEAP32[$70>>2] = 0;
  $76 = ((($70)) + 4|0);
  HEAP32[$76>>2] = 0;
 }
 $77 = ((($3)) + 48|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = ((($78)) + 12|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ($80|0)==(0|0);
 if (!($81)) {
  $82 = ((($78)) + 8|0);
  $83 = HEAP32[$82>>2]|0;
  HEAP32[$79>>2] = $83;
  HEAP8[$83>>0] = 0;
  HEAP32[$78>>2] = 0;
  $84 = ((($78)) + 4|0);
  HEAP32[$84>>2] = 0;
 }
 $85 = ((($3)) + 52|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ((($86)) + 12|0);
 $88 = HEAP32[$87>>2]|0;
 $89 = ($88|0)==(0|0);
 if (!($89)) {
  $90 = ((($86)) + 8|0);
  $91 = HEAP32[$90>>2]|0;
  HEAP32[$87>>2] = $91;
  HEAP8[$91>>0] = 0;
  HEAP32[$86>>2] = 0;
  $92 = ((($86)) + 4|0);
  HEAP32[$92>>2] = 0;
 }
 $93 = ((($3)) + 56|0);
 $94 = HEAP32[$93>>2]|0;
 $95 = ((($94)) + 12|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($96|0)==(0|0);
 if (!($97)) {
  $98 = ((($94)) + 8|0);
  $99 = HEAP32[$98>>2]|0;
  HEAP32[$95>>2] = $99;
  HEAP8[$99>>0] = 0;
  HEAP32[$94>>2] = 0;
  $100 = ((($94)) + 4|0);
  HEAP32[$100>>2] = 0;
 }
 $101 = ((($3)) + 60|0);
 $102 = HEAP32[$101>>2]|0;
 $103 = ((($102)) + 12|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ($104|0)==(0|0);
 if (!($105)) {
  $106 = ((($102)) + 8|0);
  $107 = HEAP32[$106>>2]|0;
  HEAP32[$103>>2] = $107;
  HEAP8[$107>>0] = 0;
  HEAP32[$102>>2] = 0;
  $108 = ((($102)) + 4|0);
  HEAP32[$108>>2] = 0;
 }
 $109 = ((($3)) + 64|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ((($110)) + 12|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = ($112|0)==(0|0);
 if (!($113)) {
  $114 = ((($110)) + 8|0);
  $115 = HEAP32[$114>>2]|0;
  HEAP32[$111>>2] = $115;
  HEAP8[$115>>0] = 0;
  HEAP32[$110>>2] = 0;
  $116 = ((($110)) + 4|0);
  HEAP32[$116>>2] = 0;
 }
 $117 = ((($3)) + 68|0);
 $118 = HEAP32[$117>>2]|0;
 $119 = ((($118)) + 12|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = ($120|0)==(0|0);
 if (!($121)) {
  $122 = ((($118)) + 8|0);
  $123 = HEAP32[$122>>2]|0;
  HEAP32[$119>>2] = $123;
  HEAP8[$123>>0] = 0;
  HEAP32[$118>>2] = 0;
  $124 = ((($118)) + 4|0);
  HEAP32[$124>>2] = 0;
 }
 $125 = (_mapping0_forward($0)|0);
 $126 = ($125|0)==(0);
 if (!($126)) {
  $$0 = $125;
  return ($$0|0);
 }
 $127 = ($1|0)==(0|0);
 if ($127) {
  $$0 = 0;
  return ($$0|0);
 }
 $128 = ((($0)) + 64|0);
 $129 = HEAP32[$128>>2]|0;
 $130 = ((($129)) + 104|0);
 $131 = HEAP32[$130>>2]|0;
 $132 = ((($131)) + 80|0);
 $133 = HEAP32[$132>>2]|0;
 $not$$i = ($133|0)==(0);
 if (!($not$$i)) {
  $$0 = -131;
  return ($$0|0);
 }
 $134 = ((($0)) + 12|0);
 $135 = HEAP32[$134>>2]|0;
 HEAP32[$1>>2] = $135;
 $136 = ((($0)) + 4|0);
 $137 = HEAP32[$136>>2]|0;
 $138 = ((($0)) + 8|0);
 $139 = HEAP32[$138>>2]|0;
 $140 = (($139) + 7)|0;
 $141 = (($140|0) / 8)&-1;
 $142 = (($141) + ($137))|0;
 $143 = ((($1)) + 4|0);
 HEAP32[$143>>2] = $142;
 $144 = ((($1)) + 8|0);
 HEAP32[$144>>2] = 0;
 $145 = ((($0)) + 44|0);
 $146 = HEAP32[$145>>2]|0;
 $147 = ((($1)) + 12|0);
 HEAP32[$147>>2] = $146;
 $148 = ((($0)) + 48|0);
 $149 = $148;
 $150 = $149;
 $151 = HEAP32[$150>>2]|0;
 $152 = (($149) + 4)|0;
 $153 = $152;
 $154 = HEAP32[$153>>2]|0;
 $155 = ((($1)) + 16|0);
 $156 = $155;
 $157 = $156;
 HEAP32[$157>>2] = $151;
 $158 = (($156) + 4)|0;
 $159 = $158;
 HEAP32[$159>>2] = $154;
 $160 = ((($0)) + 56|0);
 $161 = $160;
 $162 = $161;
 $163 = HEAP32[$162>>2]|0;
 $164 = (($161) + 4)|0;
 $165 = $164;
 $166 = HEAP32[$165>>2]|0;
 $167 = ((($1)) + 24|0);
 $168 = $167;
 $169 = $168;
 HEAP32[$169>>2] = $163;
 $170 = (($168) + 4)|0;
 $171 = $170;
 HEAP32[$171>>2] = $166;
 $$0 = 0;
 return ($$0|0);
}
function _setup_tone_curves($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = +$3;
 $4 = +$4;
 var $$$$us$us$us = 0.0, $$$$us364 = 0.0, $$$0275 = 0, $$$0281 = 0, $$$us$us$us = 0.0, $$$us$us377 = 0.0, $$010$i = 0, $$010$i309 = 0, $$010$i312 = 0, $$0275 = 0, $$0279347 = 0, $$0281 = 0, $$0285336 = 0, $$0289357 = 0, $$0301353 = 0, $$0384 = 0, $$05$i = 0, $$05$i314 = 0, $$1$ = 0, $$10$lcssa = 0;
 var $$10352 = 0, $$1278 = 0, $$1278$$0279 = 0, $$1284 = 0, $$1284$$0285 = 0, $$1294 = 0, $$1297359 = 0, $$1297359$us$us$us = 0, $$1297359$us$us374 = 0, $$1297359$us360 = 0, $$1300 = 0.0, $$1300$1 = 0.0, $$1300$2 = 0.0, $$1300$3 = 0.0, $$1354 = 0, $$2$lcssa = 0, $$2287$lcssa = 0, $$2287333 = 0, $$2291365 = 0, $$2291365$us = 0;
 var $$2298339 = 0, $$2342 = 0, $$302 = 0, $$303 = 0, $$305 = 0, $$3288337 = 0, $$3292382 = 0, $$3348 = 0, $$4383 = 0, $$5331 = 0, $$6335 = 0, $$7346 = 0, $$8350 = 0, $$9$lcssa = 0.0, $$alloca_mul = 0, $$neg = 0.0, $$neg317 = 0.0, $$sink$sink = 0.0, $10 = 0, $100 = 0;
 var $101 = 0.0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0.0;
 var $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0.0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0.0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0;
 var $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0.0, $23 = 0, $230 = 0, $231 = 0.0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0;
 var $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0.0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0.0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0.0, $272 = 0, $273 = 0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0.0, $278 = 0, $279 = 0, $28 = 0, $280 = 0.0, $281 = 0, $282 = 0;
 var $283 = 0.0, $284 = 0, $285 = 0, $286 = 0.0, $287 = 0, $288 = 0, $289 = 0.0, $29 = 0, $290 = 0, $291 = 0, $292 = 0.0, $293 = 0, $294 = 0, $295 = 0.0, $296 = 0, $297 = 0, $298 = 0.0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0.0, $302 = 0, $303 = 0, $304 = 0.0, $305 = 0, $306 = 0, $307 = 0.0, $308 = 0, $309 = 0, $31 = 0, $310 = 0.0, $311 = 0, $312 = 0, $313 = 0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0.0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0.0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0.0, $41 = 0;
 var $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0.0, $6 = 0;
 var $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0.0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0.0;
 var $97 = 0, $98 = 0, $99 = 0.0, $exitcond = 0, $exitcond$i = 0, $exitcond$i308 = 0, $exitcond$i310 = 0, $exitcond$i313 = 0, $exitcond$i315 = 0, $exitcond393 = 0, $exitcond394 = 0, $exitcond397 = 0, $exitcond398 = 0, $exitcond399 = 0, $exitcond400 = 0, $exitcond401 = 0, $exitcond403 = 0, $exitcond405 = 0, $exitcond406 = 0, $exitcond407 = 0;
 var $exitcond408 = 0, $exitcond409 = 0, $exitcond410 = 0, $exitcond411 = 0, $exitcond412 = 0, $exitcond413 = 0, $ispos = 0, $ispos$us$us$us = 0, $ispos$us$us375 = 0, $ispos$us361 = 0, $neg = 0, $neg$us$us$us = 0, $neg$us$us376 = 0, $neg$us362 = 0, $or$cond304 = 0, $or$cond304332 = 0, $or$cond306 = 0, $or$cond306341 = 0, $or$cond307 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32480|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32480|0);
 $5 = sp + 32256|0;
 $6 = sp + 1792|0;
 $7 = sp;
 $8 = $2 << 2;
 $$alloca_mul = $8;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $10 = (_malloc(68)|0);
 _memset(($6|0),0,30464)|0;
 $11 = $3 > 0.0;
 $12 = $3 < 0.0;
 $$0384 = 0;
 while(1) {
  $15 = $$0384 << 2;
  $$0289357 = 0;
  while(1) {
   $16 = (($$0289357) + ($15))|0;
   $17 = ($16|0)<(88);
   if ($17) {
    $18 = (36340 + ($16<<2)|0);
    $19 = +HEAPF32[$18>>2];
    $$1300 = $19;
   } else {
    $$1300 = -30.0;
   }
   $20 = (($16) + 1)|0;
   $21 = ($20|0)<(88);
   if ($21) {
    $313 = (36340 + ($20<<2)|0);
    $314 = +HEAPF32[$313>>2];
    $315 = $$1300 > $314;
    if ($315) {
     $$1300$1 = $314;
    } else {
     $$1300$1 = $$1300;
    }
   } else {
    $312 = $$1300 > -30.0;
    if ($312) {
     $$1300$1 = -30.0;
    } else {
     $$1300$1 = $$1300;
    }
   }
   $316 = (($16) + 2)|0;
   $317 = ($316|0)<(88);
   if ($317) {
    $319 = (36340 + ($316<<2)|0);
    $320 = +HEAPF32[$319>>2];
    $321 = $$1300$1 > $320;
    if ($321) {
     $$1300$2 = $320;
    } else {
     $$1300$2 = $$1300$1;
    }
   } else {
    $318 = $$1300$1 > -30.0;
    if ($318) {
     $$1300$2 = -30.0;
    } else {
     $$1300$2 = $$1300$1;
    }
   }
   $322 = (($16) + 3)|0;
   $323 = ($322|0)<(88);
   if ($323) {
    $325 = (36340 + ($322<<2)|0);
    $326 = +HEAPF32[$325>>2];
    $327 = $$1300$2 > $326;
    if ($327) {
     $$1300$3 = $326;
    } else {
     $$1300$3 = $$1300$2;
    }
   } else {
    $324 = $$1300$2 > -30.0;
    if ($324) {
     $$1300$3 = -30.0;
    } else {
     $$1300$3 = $$1300$2;
    }
   }
   $328 = (($5) + ($$0289357<<2)|0);
   HEAPF32[$328>>2] = $$1300$3;
   $329 = (($$0289357) + 1)|0;
   $exitcond403 = ($329|0)==(56);
   if ($exitcond403) {
    break;
   } else {
    $$0289357 = $329;
   }
  }
  $22 = (((($6) + (($$0384*1792)|0)|0)) + 448|0);
  $23 = (36692 + (($$0384*1344)|0)|0);
  _memcpy(($22|0),($23|0),224)|0;
  $24 = (((($6) + (($$0384*1792)|0)|0)) + 672|0);
  $25 = (((36692 + (($$0384*1344)|0)|0)) + 224|0);
  _memcpy(($24|0),($25|0),224)|0;
  $26 = (((($6) + (($$0384*1792)|0)|0)) + 896|0);
  $27 = (((36692 + (($$0384*1344)|0)|0)) + 448|0);
  _memcpy(($26|0),($27|0),224)|0;
  $28 = (((($6) + (($$0384*1792)|0)|0)) + 1120|0);
  $29 = (((36692 + (($$0384*1344)|0)|0)) + 672|0);
  _memcpy(($28|0),($29|0),224)|0;
  $30 = (((($6) + (($$0384*1792)|0)|0)) + 1344|0);
  $31 = (((36692 + (($$0384*1344)|0)|0)) + 896|0);
  _memcpy(($30|0),($31|0),224)|0;
  $32 = (((($6) + (($$0384*1792)|0)|0)) + 1568|0);
  $33 = (((36692 + (($$0384*1344)|0)|0)) + 1120|0);
  _memcpy(($32|0),($33|0),224)|0;
  $34 = (($6) + (($$0384*1792)|0)|0);
  _memcpy(($34|0),($23|0),224)|0;
  $35 = (((($6) + (($$0384*1792)|0)|0)) + 224|0);
  _memcpy(($35|0),($23|0),224)|0;
  if ($11) {
   $$2291365$us = 0;
   while(1) {
    if ($12) {
     $$1297359$us$us$us = 0;
     while(1) {
      $47 = (16 - ($$1297359$us$us$us))|0;
      $ispos$us$us$us = ($47|0)>(-1);
      $neg$us$us$us = (0 - ($47))|0;
      $48 = $ispos$us$us$us ? $47 : $neg$us$us$us;
      $49 = (+($48|0));
      $50 = $49 * $4;
      $51 = $50 + $3;
      $52 = $51 < 0.0;
      $$$us$us$us = $52 ? 0.0 : $51;
      $53 = $$$us$us$us > 0.0;
      $$$$us$us$us = $53 ? 0.0 : $$$us$us$us;
      $54 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365$us*224)|0)|0) + ($$1297359$us$us$us<<2)|0);
      $55 = +HEAPF32[$54>>2];
      $56 = $55 + $$$$us$us$us;
      HEAPF32[$54>>2] = $56;
      $57 = (($$1297359$us$us$us) + 1)|0;
      $exitcond409 = ($57|0)==(56);
      if ($exitcond409) {
       break;
      } else {
       $$1297359$us$us$us = $57;
      }
     }
    } else {
     $$1297359$us$us374 = 0;
     while(1) {
      $36 = (16 - ($$1297359$us$us374))|0;
      $ispos$us$us375 = ($36|0)>(-1);
      $neg$us$us376 = (0 - ($36))|0;
      $37 = $ispos$us$us375 ? $36 : $neg$us$us376;
      $38 = (+($37|0));
      $39 = $38 * $4;
      $40 = $39 + $3;
      $41 = $40 < 0.0;
      $$$us$us377 = $41 ? 0.0 : $40;
      $42 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365$us*224)|0)|0) + ($$1297359$us$us374<<2)|0);
      $43 = +HEAPF32[$42>>2];
      $44 = $43 + $$$us$us377;
      HEAPF32[$42>>2] = $44;
      $45 = (($$1297359$us$us374) + 1)|0;
      $exitcond408 = ($45|0)==(56);
      if ($exitcond408) {
       break;
      } else {
       $$1297359$us$us374 = $45;
      }
     }
    }
    $46 = (($$2291365$us) + 1)|0;
    $exitcond410 = ($46|0)==(8);
    if ($exitcond410) {
     break;
    } else {
     $$2291365$us = $46;
    }
   }
  } else {
   $$2291365 = 0;
   while(1) {
    if ($12) {
     $$1297359$us360 = 0;
     while(1) {
      $61 = (16 - ($$1297359$us360))|0;
      $ispos$us361 = ($61|0)>(-1);
      $neg$us362 = (0 - ($61))|0;
      $62 = $ispos$us361 ? $61 : $neg$us362;
      $63 = (+($62|0));
      $64 = $63 * $4;
      $65 = $64 + $3;
      $66 = $65 > 0.0;
      $$$$us364 = $66 ? 0.0 : $65;
      $67 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365*224)|0)|0) + ($$1297359$us360<<2)|0);
      $68 = +HEAPF32[$67>>2];
      $69 = $68 + $$$$us364;
      HEAPF32[$67>>2] = $69;
      $70 = (($$1297359$us360) + 1)|0;
      $exitcond406 = ($70|0)==(56);
      if ($exitcond406) {
       break;
      } else {
       $$1297359$us360 = $70;
      }
     }
    } else {
     $$1297359 = 0;
     while(1) {
      $71 = (16 - ($$1297359))|0;
      $ispos = ($71|0)>(-1);
      $neg = (0 - ($71))|0;
      $72 = $ispos ? $71 : $neg;
      $73 = (+($72|0));
      $74 = $73 * $4;
      $75 = $74 + $3;
      $76 = (((($6) + (($$0384*1792)|0)|0) + (($$2291365*224)|0)|0) + ($$1297359<<2)|0);
      $77 = +HEAPF32[$76>>2];
      $78 = $77 + $75;
      HEAPF32[$76>>2] = $78;
      $79 = (($$1297359) + 1)|0;
      $exitcond405 = ($79|0)==(56);
      if ($exitcond405) {
       break;
      } else {
       $$1297359 = $79;
      }
     }
    }
    $80 = (($$2291365) + 1)|0;
    $exitcond407 = ($80|0)==(8);
    if ($exitcond407) {
     break;
    } else {
     $$2291365 = $80;
    }
   }
  }
  $58 = (($0) + ($$0384<<2)|0);
  $59 = +HEAPF32[$58>>2];
  $60 = $59;
  $$3292382 = 0;
  while(1) {
   $81 = ($$3292382|0)>(2);
   $82 = $81 ? $$3292382 : 2;
   $83 = (+($82|0));
   $$neg = $83 * -10.0;
   $84 = $$neg + 70.0;
   $85 = $84 + $60;
   $86 = $85;
   $$05$i = 0;
   while(1) {
    $87 = (((($6) + (($$0384*1792)|0)|0) + (($$3292382*224)|0)|0) + ($$05$i<<2)|0);
    $88 = +HEAPF32[$87>>2];
    $89 = $88 + $86;
    HEAPF32[$87>>2] = $89;
    $90 = (($$05$i) + 1)|0;
    $exitcond$i = ($90|0)==(56);
    if ($exitcond$i) {
     break;
    } else {
     $$05$i = $90;
    }
   }
   $91 = (($7) + (($$3292382*224)|0)|0);
   _memcpy(($91|0),($5|0),224)|0;
   $92 = (+($$3292382|0));
   $$neg317 = $92 * -10.0;
   $93 = $$neg317 + 70.0;
   $$05$i314 = 0;
   while(1) {
    $94 = ((($7) + (($$3292382*224)|0)|0) + ($$05$i314<<2)|0);
    $95 = +HEAPF32[$94>>2];
    $96 = $93 + $95;
    HEAPF32[$94>>2] = $96;
    $97 = (($$05$i314) + 1)|0;
    $exitcond$i315 = ($97|0)==(56);
    if ($exitcond$i315) {
     $$010$i312 = 0;
     break;
    } else {
     $$05$i314 = $97;
    }
   }
   while(1) {
    $98 = (((($6) + (($$0384*1792)|0)|0) + (($$3292382*224)|0)|0) + ($$010$i312<<2)|0);
    $99 = +HEAPF32[$98>>2];
    $100 = ((($7) + (($$3292382*224)|0)|0) + ($$010$i312<<2)|0);
    $101 = +HEAPF32[$100>>2];
    $102 = $99 > $101;
    if ($102) {
     HEAPF32[$100>>2] = $99;
    }
    $103 = (($$010$i312) + 1)|0;
    $exitcond$i313 = ($103|0)==(56);
    if ($exitcond$i313) {
     break;
    } else {
     $$010$i312 = $103;
    }
   }
   $104 = (($$3292382) + 1)|0;
   $exitcond411 = ($104|0)==(8);
   if ($exitcond411) {
    $$4383 = 1;
    break;
   } else {
    $$3292382 = $104;
   }
  }
  while(1) {
   $105 = (($$4383) + -1)|0;
   $$010$i309 = 0;
   while(1) {
    $106 = ((($7) + (($105*224)|0)|0) + ($$010$i309<<2)|0);
    $107 = +HEAPF32[$106>>2];
    $108 = ((($7) + (($$4383*224)|0)|0) + ($$010$i309<<2)|0);
    $109 = +HEAPF32[$108>>2];
    $110 = $107 < $109;
    if ($110) {
     HEAPF32[$108>>2] = $107;
    }
    $111 = (($$010$i309) + 1)|0;
    $exitcond$i310 = ($111|0)==(56);
    if ($exitcond$i310) {
     $$010$i = 0;
     break;
    } else {
     $$010$i309 = $111;
    }
   }
   while(1) {
    $112 = ((($7) + (($$4383*224)|0)|0) + ($$010$i<<2)|0);
    $113 = +HEAPF32[$112>>2];
    $114 = (((($6) + (($$0384*1792)|0)|0) + (($$4383*224)|0)|0) + ($$010$i<<2)|0);
    $115 = +HEAPF32[$114>>2];
    $116 = $113 < $115;
    if ($116) {
     HEAPF32[$114>>2] = $113;
    }
    $117 = (($$010$i) + 1)|0;
    $exitcond$i308 = ($117|0)==(56);
    if ($exitcond$i308) {
     break;
    } else {
     $$010$i = $117;
    }
   }
   $118 = (($$4383) + 1)|0;
   $exitcond412 = ($118|0)==(8);
   if ($exitcond412) {
    break;
   } else {
    $$4383 = $118;
   }
  }
  $119 = (($$0384) + 1)|0;
  $exitcond413 = ($119|0)==(17);
  if ($exitcond413) {
   break;
  } else {
   $$0384 = $119;
  }
 }
 $13 = $1;
 $14 = ($2|0)>(0);
 $$1354 = 0;
 while(1) {
  $120 = (_malloc(32)|0);
  $121 = (($10) + ($$1354<<2)|0);
  HEAP32[$121>>2] = $120;
  $122 = (+($$1354|0));
  $123 = $122 * 0.5;
  $124 = $122 * 0.34657350182533264;
  $125 = $124 + 4.1351653545408453;
  $126 = (+Math_exp((+$125)));
  $127 = $126 / $13;
  $128 = (+Math_floor((+$127)));
  $129 = (~~(($128)));
  $130 = (+($129|0));
  $131 = $130 * $1;
  $132 = $131 + 1.0;
  $133 = $132;
  $134 = (+Math_log((+$133)));
  $135 = $134 * 2.885390043258667;
  $136 = $135 + -11.931568145751953;
  $137 = (+Math_ceil((+$136)));
  $138 = (~~(($137)));
  $139 = (($129) + 1)|0;
  $140 = (+($139|0));
  $141 = $140 * $1;
  $142 = $141;
  $143 = (+Math_log((+$142)));
  $144 = $143 * 2.885390043258667;
  $145 = $144 + -11.931568145751953;
  $146 = (+Math_floor((+$145)));
  $147 = (~~(($146)));
  $148 = ($138|0)>($$1354|0);
  $$1$ = $148 ? $$1354 : $138;
  $149 = ($$1$|0)>(0);
  $$1294 = $149 ? $$1$ : 0;
  $150 = ($147|0)<(16);
  $$302 = $150 ? $147 : 16;
  $151 = ($$1294|0)>($$302|0);
  $152 = (($$1354) + 1)|0;
  $153 = ($152|0)<(17);
  $154 = $123 + 3.9657840728759766;
  $$0301353 = 0;$157 = $120;
  while(1) {
   $155 = (_malloc(232)|0);
   $156 = (($157) + ($$0301353<<2)|0);
   HEAP32[$156>>2] = $155;
   if ($14) {
    $$5331 = 0;
    while(1) {
     $158 = (($9) + ($$5331<<2)|0);
     HEAPF32[$158>>2] = 999.0;
     $159 = (($$5331) + 1)|0;
     $exitcond = ($159|0)==($2|0);
     if ($exitcond) {
      break;
     } else {
      $$5331 = $159;
     }
    }
   }
   if (!($151)) {
    $$2298339 = $$1294;
    while(1) {
     $160 = (+($$2298339|0));
     $161 = $160 * 0.5;
     $$0285336 = 0;$$6335 = 0;
     while(1) {
      $165 = (+($$6335|0));
      $166 = $165 * 0.125;
      $167 = $166 + $161;
      $168 = $167 + 3.9032840728759766;
      $169 = $168 * 0.69314700365066528;
      $170 = (+Math_exp((+$169)));
      $171 = $170 / $13;
      $172 = (~~(($171)));
      $173 = $167 + 4.0282840728759766;
      $174 = $173 * 0.69314700365066528;
      $175 = (+Math_exp((+$174)));
      $176 = $175 / $13;
      $177 = $176 + 1.0;
      $178 = (~~(($177)));
      $179 = ($172|0)>(0);
      $$303 = $179 ? $172 : 0;
      $180 = ($$303|0)>($2|0);
      $$1284 = $180 ? $2 : $$303;
      $181 = ($$1284|0)<($$0285336|0);
      $$1284$$0285 = $181 ? $$1284 : $$0285336;
      $182 = ($178|0)>(0);
      $$0281 = $182 ? $178 : 0;
      $183 = ($$0281|0)>($2|0);
      $$$0281 = $183 ? $2 : $$0281;
      $184 = ($$1284$$0285|0)<($$$0281|0);
      $185 = ($$1284$$0285|0)<($2|0);
      $or$cond304332 = $184 & $185;
      if ($or$cond304332) {
       $186 = (((($6) + (($$2298339*1792)|0)|0) + (($$0301353*224)|0)|0) + ($$6335<<2)|0);
       $187 = +HEAPF32[$186>>2];
       $$2287333 = $$1284$$0285;
       while(1) {
        $188 = (($9) + ($$2287333<<2)|0);
        $189 = +HEAPF32[$188>>2];
        $190 = $189 > $187;
        if ($190) {
         HEAPF32[$188>>2] = $187;
        }
        $191 = (($$2287333) + 1)|0;
        $192 = ($191|0)<($$$0281|0);
        $193 = ($191|0)<($2|0);
        $or$cond304 = $192 & $193;
        if ($or$cond304) {
         $$2287333 = $191;
        } else {
         $$2287$lcssa = $191;
         break;
        }
       }
      } else {
       $$2287$lcssa = $$1284$$0285;
      }
      $194 = (($$6335) + 1)|0;
      $exitcond393 = ($194|0)==(56);
      if ($exitcond393) {
       break;
      } else {
       $$0285336 = $$2287$lcssa;$$6335 = $194;
      }
     }
     $162 = ($$2287$lcssa|0)<($2|0);
     if ($162) {
      $163 = ((((($6) + (($$2298339*1792)|0)|0) + (($$0301353*224)|0)|0)) + 220|0);
      $164 = +HEAPF32[$163>>2];
      $$3288337 = $$2287$lcssa;
      while(1) {
       $195 = (($9) + ($$3288337<<2)|0);
       $196 = +HEAPF32[$195>>2];
       $197 = $196 > $164;
       if ($197) {
        HEAPF32[$195>>2] = $164;
       }
       $198 = (($$3288337) + 1)|0;
       $exitcond394 = ($198|0)==($2|0);
       if ($exitcond394) {
        break;
       } else {
        $$3288337 = $198;
       }
      }
     }
     $199 = (($$2298339) + 1)|0;
     $200 = ($$2298339|0)<($$302|0);
     if ($200) {
      $$2298339 = $199;
     } else {
      break;
     }
    }
   }
   if ($153) {
    $$0279347 = 0;$$7346 = 0;
    while(1) {
     $207 = (+($$7346|0));
     $208 = $207 * 0.125;
     $209 = $208 + $123;
     $210 = $209 + 3.9032840728759766;
     $211 = $210 * 0.69314700365066528;
     $212 = (+Math_exp((+$211)));
     $213 = $212 / $13;
     $214 = (~~(($213)));
     $215 = $209 + 4.0282840728759766;
     $216 = $215 * 0.69314700365066528;
     $217 = (+Math_exp((+$216)));
     $218 = $217 / $13;
     $219 = $218 + 1.0;
     $220 = (~~(($219)));
     $221 = ($214|0)>(0);
     $$305 = $221 ? $214 : 0;
     $222 = ($$305|0)>($2|0);
     $$1278 = $222 ? $2 : $$305;
     $223 = ($$1278|0)<($$0279347|0);
     $$1278$$0279 = $223 ? $$1278 : $$0279347;
     $224 = ($220|0)>(0);
     $$0275 = $224 ? $220 : 0;
     $225 = ($$0275|0)>($2|0);
     $$$0275 = $225 ? $2 : $$0275;
     $226 = ($$1278$$0279|0)<($$$0275|0);
     $227 = ($$1278$$0279|0)<($2|0);
     $or$cond306341 = $226 & $227;
     if ($or$cond306341) {
      $228 = (((($6) + (($152*1792)|0)|0) + (($$0301353*224)|0)|0) + ($$7346<<2)|0);
      $229 = +HEAPF32[$228>>2];
      $$2342 = $$1278$$0279;
      while(1) {
       $230 = (($9) + ($$2342<<2)|0);
       $231 = +HEAPF32[$230>>2];
       $232 = $231 > $229;
       if ($232) {
        HEAPF32[$230>>2] = $229;
       }
       $233 = (($$2342) + 1)|0;
       $234 = ($233|0)<($$$0275|0);
       $235 = ($233|0)<($2|0);
       $or$cond306 = $234 & $235;
       if ($or$cond306) {
        $$2342 = $233;
       } else {
        $$2$lcssa = $233;
        break;
       }
      }
     } else {
      $$2$lcssa = $$1278$$0279;
     }
     $236 = (($$7346) + 1)|0;
     $exitcond397 = ($236|0)==(56);
     if ($exitcond397) {
      break;
     } else {
      $$0279347 = $$2$lcssa;$$7346 = $236;
     }
    }
    $204 = ($$2$lcssa|0)<($2|0);
    if ($204) {
     $205 = ((((($6) + (($152*1792)|0)|0) + (($$0301353*224)|0)|0)) + 220|0);
     $206 = +HEAPF32[$205>>2];
     $$3348 = $$2$lcssa;
     while(1) {
      $237 = (($9) + ($$3348<<2)|0);
      $238 = +HEAPF32[$237>>2];
      $239 = $238 > $206;
      if ($239) {
       HEAPF32[$237>>2] = $206;
      }
      $240 = (($$3348) + 1)|0;
      $exitcond398 = ($240|0)==($2|0);
      if ($exitcond398) {
       break;
      } else {
       $$3348 = $240;
      }
     }
    }
   }
   $201 = HEAP32[$121>>2]|0;
   $202 = (($201) + ($$0301353<<2)|0);
   $203 = HEAP32[$202>>2]|0;
   $$8350 = 0;
   while(1) {
    $244 = (+($$8350|0));
    $245 = $244 * 0.125;
    $246 = $154 + $245;
    $247 = $246 * 0.69314700365066528;
    $248 = (+Math_exp((+$247)));
    $249 = $248 / $13;
    $250 = (~~(($249)));
    $251 = ($250|0)>(-1);
    $252 = ($250|0)<($2|0);
    $or$cond307 = $251 & $252;
    if ($or$cond307) {
     $253 = (($9) + ($250<<2)|0);
     $254 = +HEAPF32[$253>>2];
     $$sink$sink = $254;
    } else {
     $$sink$sink = -999.0;
    }
    $255 = (($$8350) + 2)|0;
    $256 = (($203) + ($255<<2)|0);
    HEAPF32[$256>>2] = $$sink$sink;
    $257 = (($$8350) + 1)|0;
    $exitcond399 = ($257|0)==(56);
    if ($exitcond399) {
     break;
    } else {
     $$8350 = $257;
    }
   }
   $241 = ((($203)) + 8|0);
   $242 = +HEAPF32[$241>>2];
   $243 = $242 > -200.0;
   do {
    if ($243) {
     $$9$lcssa = 0.0;
    } else {
     $258 = ((($203)) + 12|0);
     $259 = +HEAPF32[$258>>2];
     $260 = $259 > -200.0;
     if ($260) {
      $$9$lcssa = 1.0;
     } else {
      $270 = ((($203)) + 16|0);
      $271 = +HEAPF32[$270>>2];
      $272 = $271 > -200.0;
      if ($272) {
       $$9$lcssa = 2.0;
      } else {
       $273 = ((($203)) + 20|0);
       $274 = +HEAPF32[$273>>2];
       $275 = $274 > -200.0;
       if ($275) {
        $$9$lcssa = 3.0;
       } else {
        $276 = ((($203)) + 24|0);
        $277 = +HEAPF32[$276>>2];
        $278 = $277 > -200.0;
        if ($278) {
         $$9$lcssa = 4.0;
        } else {
         $279 = ((($203)) + 28|0);
         $280 = +HEAPF32[$279>>2];
         $281 = $280 > -200.0;
         if ($281) {
          $$9$lcssa = 5.0;
         } else {
          $282 = ((($203)) + 32|0);
          $283 = +HEAPF32[$282>>2];
          $284 = $283 > -200.0;
          if ($284) {
           $$9$lcssa = 6.0;
          } else {
           $285 = ((($203)) + 36|0);
           $286 = +HEAPF32[$285>>2];
           $287 = $286 > -200.0;
           if ($287) {
            $$9$lcssa = 7.0;
           } else {
            $288 = ((($203)) + 40|0);
            $289 = +HEAPF32[$288>>2];
            $290 = $289 > -200.0;
            if ($290) {
             $$9$lcssa = 8.0;
            } else {
             $291 = ((($203)) + 44|0);
             $292 = +HEAPF32[$291>>2];
             $293 = $292 > -200.0;
             if ($293) {
              $$9$lcssa = 9.0;
             } else {
              $294 = ((($203)) + 48|0);
              $295 = +HEAPF32[$294>>2];
              $296 = $295 > -200.0;
              if ($296) {
               $$9$lcssa = 10.0;
              } else {
               $297 = ((($203)) + 52|0);
               $298 = +HEAPF32[$297>>2];
               $299 = $298 > -200.0;
               if ($299) {
                $$9$lcssa = 11.0;
               } else {
                $300 = ((($203)) + 56|0);
                $301 = +HEAPF32[$300>>2];
                $302 = $301 > -200.0;
                if ($302) {
                 $$9$lcssa = 12.0;
                } else {
                 $303 = ((($203)) + 60|0);
                 $304 = +HEAPF32[$303>>2];
                 $305 = $304 > -200.0;
                 if ($305) {
                  $$9$lcssa = 13.0;
                 } else {
                  $306 = ((($203)) + 64|0);
                  $307 = +HEAPF32[$306>>2];
                  $308 = $307 > -200.0;
                  if ($308) {
                   $$9$lcssa = 14.0;
                   break;
                  }
                  $309 = ((($203)) + 68|0);
                  $310 = +HEAPF32[$309>>2];
                  $311 = $310 > -200.0;
                  if ($311) {
                   $$9$lcssa = 15.0;
                   break;
                  }
                  $$9$lcssa = 16.0;
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   } while(0);
   HEAPF32[$203>>2] = $$9$lcssa;
   $$10352 = 55;
   while(1) {
    $261 = (($$10352) + 2)|0;
    $262 = (($203) + ($261<<2)|0);
    $263 = +HEAPF32[$262>>2];
    $264 = $263 > -200.0;
    if ($264) {
     $$10$lcssa = $$10352;
     break;
    }
    $265 = (($$10352) + -1)|0;
    $266 = ($265|0)>(17);
    if ($266) {
     $$10352 = $265;
    } else {
     $$10$lcssa = $265;
     break;
    }
   }
   $267 = (+($$10$lcssa|0));
   $268 = ((($203)) + 4|0);
   HEAPF32[$268>>2] = $267;
   $269 = (($$0301353) + 1)|0;
   $exitcond400 = ($269|0)==(8);
   if ($exitcond400) {
    break;
   } else {
    $$0301353 = $269;$157 = $201;
   }
  }
  $exitcond401 = ($152|0)==(17);
  if ($exitcond401) {
   break;
  } else {
   $$1354 = $152;
  }
 }
 STACKTOP = sp;return ($10|0);
}
function __vp_psy_clear($0) {
 $0 = $0|0;
 var $$02430 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  _free($3);
 }
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  _free($6);
 }
 $8 = ((($0)) + 24|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _free($9);
 }
 $11 = ((($0)) + 8|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if (!($13)) {
  $$02430 = 0;$15 = $12;
  while(1) {
   $14 = (($15) + ($$02430<<2)|0);
   $16 = HEAP32[$14>>2]|0;
   $17 = HEAP32[$16>>2]|0;
   _free($17);
   $18 = HEAP32[$11>>2]|0;
   $19 = (($18) + ($$02430<<2)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 4|0);
   $22 = HEAP32[$21>>2]|0;
   _free($22);
   $23 = HEAP32[$11>>2]|0;
   $24 = (($23) + ($$02430<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ((($25)) + 8|0);
   $27 = HEAP32[$26>>2]|0;
   _free($27);
   $28 = HEAP32[$11>>2]|0;
   $29 = (($28) + ($$02430<<2)|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ((($30)) + 12|0);
   $32 = HEAP32[$31>>2]|0;
   _free($32);
   $33 = HEAP32[$11>>2]|0;
   $34 = (($33) + ($$02430<<2)|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($35)) + 16|0);
   $37 = HEAP32[$36>>2]|0;
   _free($37);
   $38 = HEAP32[$11>>2]|0;
   $39 = (($38) + ($$02430<<2)|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($40)) + 20|0);
   $42 = HEAP32[$41>>2]|0;
   _free($42);
   $43 = HEAP32[$11>>2]|0;
   $44 = (($43) + ($$02430<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($45)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   _free($47);
   $48 = HEAP32[$11>>2]|0;
   $49 = (($48) + ($$02430<<2)|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ((($50)) + 28|0);
   $52 = HEAP32[$51>>2]|0;
   _free($52);
   $53 = HEAP32[$11>>2]|0;
   $54 = (($53) + ($$02430<<2)|0);
   $55 = HEAP32[$54>>2]|0;
   _free($55);
   $56 = (($$02430) + 1)|0;
   $exitcond = ($56|0)==(17);
   if ($exitcond) {
    break;
   }
   $$pre = HEAP32[$11>>2]|0;
   $$02430 = $56;$15 = $$pre;
  }
  $57 = HEAP32[$11>>2]|0;
  _free($57);
 }
 $58 = ((($0)) + 12|0);
 $59 = HEAP32[$58>>2]|0;
 $60 = ($59|0)==(0|0);
 if (!($60)) {
  $61 = HEAP32[$59>>2]|0;
  _free($61);
  $62 = HEAP32[$58>>2]|0;
  $63 = ((($62)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  _free($64);
  $65 = HEAP32[$58>>2]|0;
  $66 = ((($65)) + 8|0);
  $67 = HEAP32[$66>>2]|0;
  _free($67);
  $68 = HEAP32[$58>>2]|0;
  _free($68);
 }
 dest=$0; stop=dest+52|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 return;
}
function __vp_noisemask($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$$ = 0, $$052 = 0, $$149 = 0, $$248 = 0, $$alloca_mul = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0;
 var $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond56 = 0, $exitcond57 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 << 2;
 $$alloca_mul = $4;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $6 = ((($0)) + 24|0);
 $7 = HEAP32[$6>>2]|0;
 _bark_noise_hybridmp($3,$7,$1,$2,140.0,-1);
 $8 = ($3|0)>(0);
 if ($8) {
  $$052 = 0;
  while(1) {
   $9 = (($1) + ($$052<<2)|0);
   $10 = +HEAPF32[$9>>2];
   $11 = (($2) + ($$052<<2)|0);
   $12 = +HEAPF32[$11>>2];
   $13 = $10 - $12;
   $14 = (($5) + ($$052<<2)|0);
   HEAPF32[$14>>2] = $13;
   $15 = (($$052) + 1)|0;
   $exitcond57 = ($15|0)==($3|0);
   if ($exitcond57) {
    break;
   } else {
    $$052 = $15;
   }
  }
 }
 $16 = HEAP32[$6>>2]|0;
 $17 = ((($0)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 128|0);
 $20 = HEAP32[$19>>2]|0;
 _bark_noise_hybridmp($3,$16,$5,$2,0.0,$20);
 if ($8) {
  $$149 = 0;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $22 = (($1) + ($$149<<2)|0);
  $23 = +HEAPF32[$22>>2];
  $24 = (($5) + ($$149<<2)|0);
  $25 = +HEAPF32[$24>>2];
  $26 = $23 - $25;
  HEAPF32[$24>>2] = $26;
  $27 = (($$149) + 1)|0;
  $exitcond56 = ($27|0)==($3|0);
  if ($exitcond56) {
   break;
  } else {
   $$149 = $27;
  }
 }
 $21 = HEAP32[$17>>2]|0;
 $$248 = 0;
 while(1) {
  $28 = (($2) + ($$248<<2)|0);
  $29 = +HEAPF32[$28>>2];
  $30 = $29;
  $31 = $30 + 0.5;
  $32 = (~~(($31)));
  $33 = ($32|0)<(39);
  $$ = $33 ? $32 : 39;
  $34 = ($32|0)>(0);
  $$$ = $34 ? $$ : 0;
  $35 = (($5) + ($$248<<2)|0);
  $36 = +HEAPF32[$35>>2];
  $37 = (((($21)) + 336|0) + ($$$<<2)|0);
  $38 = +HEAPF32[$37>>2];
  $39 = $38 + $36;
  HEAPF32[$28>>2] = $39;
  $40 = (($$248) + 1)|0;
  $exitcond = ($40|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$248 = $40;
  }
 }
 STACKTOP = sp;return;
}
function _bark_noise_hybridmp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = +$4;
 $5 = $5|0;
 var $$0 = 0.0, $$0336413 = 0.0, $$0338$lcssa = 0.0, $$0342$lcssa = 0.0, $$0346$lcssa = 0.0, $$0350 = 0.0, $$0353412 = 0, $$0360411 = 0.0, $$0361410 = 0.0, $$0362409 = 0.0, $$0363408 = 0.0, $$0364407 = 0.0, $$1 = 0.0, $$1337$lcssa = 0.0, $$1337400 = 0.0, $$1339$lcssa = 0.0, $$1343$lcssa = 0.0, $$1347$lcssa = 0.0, $$1351 = 0.0, $$1354$lcssa = 0;
 var $$1354399 = 0, $$2$lcssa = 0.0, $$2340$lcssa = 0.0, $$2344$lcssa = 0.0, $$2348$lcssa = 0.0, $$2352 = 0.0, $$2355$lcssa = 0, $$2355391 = 0, $$2392 = 0.0, $$3341$lcssa = 0.0, $$3345$lcssa = 0.0, $$3349$lcssa = 0.0, $$3356388 = 0, $$3389 = 0.0, $$4$lcssa = 0.0, $$4357$lcssa = 0, $$4357379 = 0, $$4380 = 0.0, $$5$lcssa = 0.0, $$5358$lcssa = 0;
 var $$5358372 = 0, $$5373 = 0.0, $$6359370 = 0, $$6371 = 0.0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0, $$in = 0, $$pn = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0.0, $106 = 0, $107 = 0.0;
 var $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0.0, $118 = 0.0, $119 = 0, $12 = 0.0, $120 = 0.0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0;
 var $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0.0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0;
 var $144 = 0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0, $149 = 0.0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0.0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0.0, $160 = 0, $161 = 0;
 var $162 = 0, $163 = 0.0, $164 = 0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0.0, $170 = 0.0, $171 = 0, $172 = 0.0, $173 = 0.0, $174 = 0, $175 = 0.0, $176 = 0, $177 = 0.0, $178 = 0.0, $179 = 0, $18 = 0;
 var $180 = 0.0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0.0, $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0;
 var $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0, $203 = 0.0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0.0, $213 = 0, $214 = 0.0, $215 = 0.0, $216 = 0;
 var $217 = 0.0, $218 = 0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0, $222 = 0.0, $223 = 0, $224 = 0.0, $225 = 0.0, $226 = 0, $227 = 0.0, $228 = 0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0, $232 = 0.0, $233 = 0, $234 = 0.0;
 var $235 = 0.0, $236 = 0.0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0.0, $240 = 0.0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0;
 var $253 = 0.0, $254 = 0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0, $26 = 0.0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0.0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0;
 var $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0;
 var $55 = 0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0.0, $62 = 0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0.0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0;
 var $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0.0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond435 = 0, $exitcond436 = 0, $exitcond437 = 0, $exitcond438 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $0 << 2;
 $$alloca_mul = $6;
 $7 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $6;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $$alloca_mul3 = $6;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $$alloca_mul5 = $6;
 $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;
 $$alloca_mul7 = $6;
 $11 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;
 $12 = +HEAPF32[$2>>2];
 $13 = $12 + $4;
 $14 = $13 < 1.0;
 $$0 = $14 ? 1.0 : $13;
 $15 = $$0 * $$0;
 $16 = $15 * 0.5;
 $17 = $16 * $$0;
 HEAPF32[$7>>2] = $16;
 HEAPF32[$8>>2] = $16;
 HEAPF32[$9>>2] = 0.0;
 HEAPF32[$10>>2] = $17;
 HEAPF32[$11>>2] = 0.0;
 $18 = ($0|0)>(1);
 if ($18) {
  $$0336413 = 1.0;$$0353412 = 1;$$0360411 = 0.0;$$0361410 = $17;$$0362409 = 0.0;$$0363408 = $16;$$0364407 = $16;
  while(1) {
   $22 = (($2) + ($$0353412<<2)|0);
   $23 = +HEAPF32[$22>>2];
   $24 = $23 + $4;
   $25 = $24 < 1.0;
   $$1 = $25 ? 1.0 : $24;
   $26 = $$1 * $$1;
   $27 = $26 + $$0364407;
   $28 = $26 * $$0336413;
   $29 = $28 + $$0363408;
   $30 = $28 * $$0336413;
   $31 = $30 + $$0362409;
   $32 = $26 * $$1;
   $33 = $32 + $$0361410;
   $34 = $28 * $$1;
   $35 = $34 + $$0360411;
   $36 = (($7) + ($$0353412<<2)|0);
   HEAPF32[$36>>2] = $27;
   $37 = (($8) + ($$0353412<<2)|0);
   HEAPF32[$37>>2] = $29;
   $38 = (($9) + ($$0353412<<2)|0);
   HEAPF32[$38>>2] = $31;
   $39 = (($10) + ($$0353412<<2)|0);
   HEAPF32[$39>>2] = $33;
   $40 = (($11) + ($$0353412<<2)|0);
   HEAPF32[$40>>2] = $35;
   $41 = (($$0353412) + 1)|0;
   $42 = $$0336413 + 1.0;
   $exitcond438 = ($41|0)==($0|0);
   if ($exitcond438) {
    break;
   } else {
    $$0336413 = $42;$$0353412 = $41;$$0360411 = $35;$$0361410 = $33;$$0362409 = $31;$$0363408 = $29;$$0364407 = $27;
   }
  }
 }
 $19 = HEAP32[$1>>2]|0;
 $20 = $19 >> 16;
 $21 = ($20|0)>(-1);
 if ($21) {
  $$0338$lcssa = 1.0;$$0342$lcssa = 0.0;$$0346$lcssa = 0.0;$$1337$lcssa = 0.0;$$1354$lcssa = 0;$44 = $19;
 } else {
  $$1337400 = 0.0;$$1354399 = 0;$47 = $19;$51 = $20;
  while(1) {
   $46 = $47 & 65535;
   $48 = (($7) + ($46<<2)|0);
   $49 = +HEAPF32[$48>>2];
   $50 = (0 - ($51))|0;
   $52 = (($7) + ($50<<2)|0);
   $53 = +HEAPF32[$52>>2];
   $54 = $53 + $49;
   $55 = (($8) + ($46<<2)|0);
   $56 = +HEAPF32[$55>>2];
   $57 = (($8) + ($50<<2)|0);
   $58 = +HEAPF32[$57>>2];
   $59 = $56 - $58;
   $60 = (($9) + ($46<<2)|0);
   $61 = +HEAPF32[$60>>2];
   $62 = (($9) + ($50<<2)|0);
   $63 = +HEAPF32[$62>>2];
   $64 = $63 + $61;
   $65 = (($10) + ($46<<2)|0);
   $66 = +HEAPF32[$65>>2];
   $67 = (($10) + ($50<<2)|0);
   $68 = +HEAPF32[$67>>2];
   $69 = $68 + $66;
   $70 = (($11) + ($46<<2)|0);
   $71 = +HEAPF32[$70>>2];
   $72 = (($11) + ($50<<2)|0);
   $73 = +HEAPF32[$72>>2];
   $74 = $71 - $73;
   $75 = $69 * $64;
   $76 = $74 * $59;
   $77 = $75 - $76;
   $78 = $74 * $54;
   $79 = $69 * $59;
   $80 = $78 - $79;
   $81 = $64 * $54;
   $82 = $59 * $59;
   $83 = $81 - $82;
   $84 = $80 * $$1337400;
   $85 = $84 + $77;
   $86 = $85 / $83;
   $87 = $86 < 0.0;
   $$0350 = $87 ? 0.0 : $86;
   $88 = $$0350 - $4;
   $89 = (($3) + ($$1354399<<2)|0);
   HEAPF32[$89>>2] = $88;
   $90 = (($$1354399) + 1)|0;
   $91 = $$1337400 + 1.0;
   $92 = (($1) + ($90<<2)|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = $93 >> 16;
   $95 = ($94|0)>(-1);
   if ($95) {
    $$0338$lcssa = $83;$$0342$lcssa = $80;$$0346$lcssa = $77;$$1337$lcssa = $91;$$1354$lcssa = $90;$44 = $93;
    break;
   } else {
    $$1337400 = $91;$$1354399 = $90;$47 = $93;$51 = $94;
   }
  }
 }
 $43 = $44 & 65535;
 $45 = ($43|0)<($0|0);
 if ($45) {
  $$2355391 = $$1354$lcssa;$$2392 = $$1337$lcssa;$$in = $44;$99 = $43;
  while(1) {
   $97 = $$in >> 16;
   $98 = (($7) + ($99<<2)|0);
   $100 = +HEAPF32[$98>>2];
   $101 = (($7) + ($97<<2)|0);
   $102 = +HEAPF32[$101>>2];
   $103 = $100 - $102;
   $104 = (($8) + ($99<<2)|0);
   $105 = +HEAPF32[$104>>2];
   $106 = (($8) + ($97<<2)|0);
   $107 = +HEAPF32[$106>>2];
   $108 = $105 - $107;
   $109 = (($9) + ($99<<2)|0);
   $110 = +HEAPF32[$109>>2];
   $111 = (($9) + ($97<<2)|0);
   $112 = +HEAPF32[$111>>2];
   $113 = $110 - $112;
   $114 = (($10) + ($99<<2)|0);
   $115 = +HEAPF32[$114>>2];
   $116 = (($10) + ($97<<2)|0);
   $117 = +HEAPF32[$116>>2];
   $118 = $115 - $117;
   $119 = (($11) + ($99<<2)|0);
   $120 = +HEAPF32[$119>>2];
   $121 = (($11) + ($97<<2)|0);
   $122 = +HEAPF32[$121>>2];
   $123 = $120 - $122;
   $124 = $118 * $113;
   $125 = $123 * $108;
   $126 = $124 - $125;
   $127 = $123 * $103;
   $128 = $118 * $108;
   $129 = $127 - $128;
   $130 = $113 * $103;
   $131 = $108 * $108;
   $132 = $130 - $131;
   $133 = $129 * $$2392;
   $134 = $133 + $126;
   $135 = $134 / $132;
   $136 = $135 < 0.0;
   $$1351 = $136 ? 0.0 : $135;
   $137 = $$1351 - $4;
   $138 = (($3) + ($$2355391<<2)|0);
   HEAPF32[$138>>2] = $137;
   $139 = (($$2355391) + 1)|0;
   $140 = $$2392 + 1.0;
   $141 = (($1) + ($139<<2)|0);
   $142 = HEAP32[$141>>2]|0;
   $143 = $142 & 65535;
   $144 = ($143|0)<($0|0);
   if ($144) {
    $$2355391 = $139;$$2392 = $140;$$in = $142;$99 = $143;
   } else {
    $$1339$lcssa = $132;$$1343$lcssa = $129;$$1347$lcssa = $126;$$2$lcssa = $140;$$2355$lcssa = $139;
    break;
   }
  }
 } else {
  $$1339$lcssa = $$0338$lcssa;$$1343$lcssa = $$0342$lcssa;$$1347$lcssa = $$0346$lcssa;$$2$lcssa = $$1337$lcssa;$$2355$lcssa = $$1354$lcssa;
 }
 $96 = ($$2355$lcssa|0)<($0|0);
 if ($96) {
  $$3356388 = $$2355$lcssa;$$3389 = $$2$lcssa;
  while(1) {
   $145 = $$3389 * $$1343$lcssa;
   $146 = $145 + $$1347$lcssa;
   $147 = $146 / $$1339$lcssa;
   $148 = $147 < 0.0;
   $$2352 = $148 ? 0.0 : $147;
   $149 = $$2352 - $4;
   $150 = (($3) + ($$3356388<<2)|0);
   HEAPF32[$150>>2] = $149;
   $151 = (($$3356388) + 1)|0;
   $152 = $$3389 + 1.0;
   $exitcond437 = ($151|0)==($0|0);
   if ($exitcond437) {
    break;
   } else {
    $$3356388 = $151;$$3389 = $152;
   }
  }
 }
 $153 = ($5|0)<(1);
 if ($153) {
  STACKTOP = sp;return;
 }
 $154 = $5 >>> 1;
 $155 = (($154) - ($5))|0;
 $156 = ($155|0)>(-1);
 if ($156) {
  $$2340$lcssa = $$1339$lcssa;$$2344$lcssa = $$1343$lcssa;$$2348$lcssa = $$1347$lcssa;$$4$lcssa = 0.0;$$4357$lcssa = 0;
 } else {
  $157 = (($5) - ($154))|0;
  $$4357379 = 0;$$4380 = 0.0;$162 = $154;$165 = $155;
  while(1) {
   $161 = (($7) + ($162<<2)|0);
   $163 = +HEAPF32[$161>>2];
   $164 = (0 - ($165))|0;
   $166 = (($7) + ($164<<2)|0);
   $167 = +HEAPF32[$166>>2];
   $168 = $167 + $163;
   $169 = (($8) + ($162<<2)|0);
   $170 = +HEAPF32[$169>>2];
   $171 = (($8) + ($164<<2)|0);
   $172 = +HEAPF32[$171>>2];
   $173 = $170 - $172;
   $174 = (($9) + ($162<<2)|0);
   $175 = +HEAPF32[$174>>2];
   $176 = (($9) + ($164<<2)|0);
   $177 = +HEAPF32[$176>>2];
   $178 = $177 + $175;
   $179 = (($10) + ($162<<2)|0);
   $180 = +HEAPF32[$179>>2];
   $181 = (($10) + ($164<<2)|0);
   $182 = +HEAPF32[$181>>2];
   $183 = $182 + $180;
   $184 = (($11) + ($162<<2)|0);
   $185 = +HEAPF32[$184>>2];
   $186 = (($11) + ($164<<2)|0);
   $187 = +HEAPF32[$186>>2];
   $188 = $185 - $187;
   $189 = $183 * $178;
   $190 = $188 * $173;
   $191 = $189 - $190;
   $192 = $188 * $168;
   $193 = $183 * $173;
   $194 = $192 - $193;
   $195 = $178 * $168;
   $196 = $173 * $173;
   $197 = $195 - $196;
   $198 = $194 * $$4380;
   $199 = $198 + $191;
   $200 = $199 / $197;
   $201 = $200 - $4;
   $202 = (($3) + ($$4357379<<2)|0);
   $203 = +HEAPF32[$202>>2];
   $204 = $201 < $203;
   if ($204) {
    HEAPF32[$202>>2] = $201;
   }
   $205 = (($$4357379) + 1)|0;
   $206 = $$4380 + 1.0;
   $207 = (($205) + ($154))|0;
   $208 = (($207) - ($5))|0;
   $exitcond436 = ($205|0)==($157|0);
   if ($exitcond436) {
    $$2340$lcssa = $197;$$2344$lcssa = $194;$$2348$lcssa = $191;$$4$lcssa = $206;$$4357$lcssa = $157;
    break;
   } else {
    $$4357379 = $205;$$4380 = $206;$162 = $207;$165 = $208;
   }
  }
 }
 $158 = (($$4357$lcssa) + ($154))|0;
 $159 = ($158|0)<($0|0);
 if ($159) {
  $160 = (($0) - ($154))|0;
  $$5358372 = $$4357$lcssa;$$5373 = $$4$lcssa;$$pn = $158;
  while(1) {
   $210 = (($$pn) - ($5))|0;
   $211 = (($7) + ($$pn<<2)|0);
   $212 = +HEAPF32[$211>>2];
   $213 = (($7) + ($210<<2)|0);
   $214 = +HEAPF32[$213>>2];
   $215 = $212 - $214;
   $216 = (($8) + ($$pn<<2)|0);
   $217 = +HEAPF32[$216>>2];
   $218 = (($8) + ($210<<2)|0);
   $219 = +HEAPF32[$218>>2];
   $220 = $217 - $219;
   $221 = (($9) + ($$pn<<2)|0);
   $222 = +HEAPF32[$221>>2];
   $223 = (($9) + ($210<<2)|0);
   $224 = +HEAPF32[$223>>2];
   $225 = $222 - $224;
   $226 = (($10) + ($$pn<<2)|0);
   $227 = +HEAPF32[$226>>2];
   $228 = (($10) + ($210<<2)|0);
   $229 = +HEAPF32[$228>>2];
   $230 = $227 - $229;
   $231 = (($11) + ($$pn<<2)|0);
   $232 = +HEAPF32[$231>>2];
   $233 = (($11) + ($210<<2)|0);
   $234 = +HEAPF32[$233>>2];
   $235 = $232 - $234;
   $236 = $230 * $225;
   $237 = $235 * $220;
   $238 = $236 - $237;
   $239 = $235 * $215;
   $240 = $230 * $220;
   $241 = $239 - $240;
   $242 = $225 * $215;
   $243 = $220 * $220;
   $244 = $242 - $243;
   $245 = $241 * $$5373;
   $246 = $245 + $238;
   $247 = $246 / $244;
   $248 = $247 - $4;
   $249 = (($3) + ($$5358372<<2)|0);
   $250 = +HEAPF32[$249>>2];
   $251 = $248 < $250;
   if ($251) {
    HEAPF32[$249>>2] = $248;
   }
   $252 = (($$5358372) + 1)|0;
   $253 = $$5373 + 1.0;
   $254 = (($252) + ($154))|0;
   $exitcond435 = ($252|0)==($160|0);
   if ($exitcond435) {
    $$3341$lcssa = $244;$$3345$lcssa = $241;$$3349$lcssa = $238;$$5$lcssa = $253;$$5358$lcssa = $160;
    break;
   } else {
    $$5358372 = $252;$$5373 = $253;$$pn = $254;
   }
  }
 } else {
  $$3341$lcssa = $$2340$lcssa;$$3345$lcssa = $$2344$lcssa;$$3349$lcssa = $$2348$lcssa;$$5$lcssa = $$4$lcssa;$$5358$lcssa = $$4357$lcssa;
 }
 $209 = ($$5358$lcssa|0)<($0|0);
 if ($209) {
  $$6359370 = $$5358$lcssa;$$6371 = $$5$lcssa;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $255 = $$6371 * $$3345$lcssa;
  $256 = $255 + $$3349$lcssa;
  $257 = $256 / $$3341$lcssa;
  $258 = $257 - $4;
  $259 = (($3) + ($$6359370<<2)|0);
  $260 = +HEAPF32[$259>>2];
  $261 = $258 < $260;
  if ($261) {
   HEAPF32[$259>>2] = $258;
  }
  $262 = (($$6359370) + 1)|0;
  $263 = $$6371 + 1.0;
  $exitcond = ($262|0)==($0|0);
  if ($exitcond) {
   break;
  } else {
   $$6359370 = $262;$$6371 = $263;
  }
 }
 STACKTOP = sp;return;
}
function __vp_tonemask($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 $4 = +$4;
 var $$$$i = 0, $$$i = 0, $$0 = 0.0, $$0$lcssa$i = 0, $$0$ph$i = 0.0, $$03455 = 0, $$04445$i$i = 0, $$046$i$i = 0, $$04954$i = 0, $$068$ph$i = 0.0, $$068$ph72$lcssa$i = 0.0, $$068$ph7283$i = 0.0, $$06992$i = 0, $$093$i = 0, $$1$i = 0, $$1$lcssa$i = 0, $$1$ph$i = 0, $$153 = 0, $$170$lcssa$i = 0, $$186$i51 = 0;
 var $$277$i = 0, $$alloca_mul = 0, $$in$i = 0, $$lcssa$i = 0.0, $$lcssa66 = 0, $$lcssa74$i = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert105$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre106$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0, $13 = 0.0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0.0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0.0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0, $160 = 0;
 var $17 = 0, $18 = 0, $19 = 0.0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0.0, $76 = 0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0.0, $99 = 0, $exitcond = 0, $exitcond71 = 0, $exitcond72 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $7 << 2;
 $$alloca_mul = $8;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 4|0);
 $13 = +HEAPF32[$12>>2];
 $14 = $13 + $4;
 $15 = ($7|0)>(0);
 if ($15) {
  $$03455 = 0;
  while(1) {
   $16 = (($9) + ($$03455<<2)|0);
   HEAPF32[$16>>2] = -9999.0;
   $17 = (($$03455) + 1)|0;
   $exitcond72 = ($17|0)==($7|0);
   if ($exitcond72) {
    break;
   } else {
    $$03455 = $17;
   }
  }
 }
 $18 = ((($11)) + 8|0);
 $19 = +HEAPF32[$18>>2];
 $20 = $14 < $19;
 $$0 = $20 ? $19 : $14;
 $21 = ($5|0)>(0);
 if ($21) {
  $22 = ((($0)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  $$153 = 0;
  while(1) {
   $24 = (($23) + ($$153<<2)|0);
   $25 = +HEAPF32[$24>>2];
   $26 = $25 + $$0;
   $27 = (($2) + ($$153<<2)|0);
   HEAPF32[$27>>2] = $26;
   $28 = (($$153) + 1)|0;
   $exitcond71 = ($28|0)==($5|0);
   if ($exitcond71) {
    break;
   } else {
    $$153 = $28;
   }
  }
  $29 = ((($0)) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($11)) + 496|0);
  $32 = +HEAPF32[$31>>2];
  $33 = $32 - $3;
  $34 = ((($0)) + 20|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($0)) + 32|0);
  $37 = ((($0)) + 36|0);
  $38 = ((($0)) + 28|0);
  $$04954$i = 0;
  while(1) {
   $39 = (($1) + ($$04954$i<<2)|0);
   $40 = +HEAPF32[$39>>2];
   $41 = (($35) + ($$04954$i<<2)|0);
   $42 = HEAP32[$41>>2]|0;
   $$0$ph$i = $40;$$1$ph$i = $$04954$i;
   L12: while(1) {
    $$1$i = $$1$ph$i;
    while(1) {
     $43 = (($$1$i) + 1)|0;
     $44 = ($43|0)<($5|0);
     if (!($44)) {
      $$lcssa66 = 0;
      break L12;
     }
     $45 = (($35) + ($43<<2)|0);
     $46 = HEAP32[$45>>2]|0;
     $47 = ($46|0)==($42|0);
     if (!($47)) {
      $$lcssa66 = 1;
      break L12;
     }
     $48 = (($1) + ($43<<2)|0);
     $49 = +HEAPF32[$48>>2];
     $50 = $49 > $$0$ph$i;
     if ($50) {
      $$0$ph$i = $49;$$1$ph$i = $43;
      continue L12;
     } else {
      $$1$i = $43;
     }
    }
   }
   $51 = $$0$ph$i + 6.0;
   $52 = (($2) + ($$1$i<<2)|0);
   $53 = +HEAPF32[$52>>2];
   $54 = $51 > $53;
   if ($54) {
    $55 = HEAP32[$36>>2]|0;
    $56 = $42 >> $55;
    $57 = ($56|0)<(16);
    $$$i = $57 ? $56 : 16;
    $58 = ($56|0)>(0);
    $$$$i = $58 ? $$$i : 0;
    $59 = (($30) + ($$$$i<<2)|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = HEAP32[$37>>2]|0;
    $62 = $33 + $$0$ph$i;
    $63 = $62;
    $64 = $63 + -30.0;
    $65 = $64 * 0.10000000149011612;
    $66 = (~~(($65)));
    $67 = ($66|0)>(0);
    $68 = $67 ? $66 : 0;
    $69 = ($68|0)<(7);
    $70 = $69 ? $68 : 7;
    $71 = (($60) + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ((($72)) + 8|0);
    $74 = ((($72)) + 4|0);
    $75 = +HEAPF32[$74>>2];
    $76 = (~~(($75)));
    $77 = +HEAPF32[$72>>2];
    $78 = (~~(($77)));
    $79 = ($78|0)<($76|0);
    if ($79) {
     $80 = (($35) + ($$1$i<<2)|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = HEAP32[$38>>2]|0;
     $83 = (($81) - ($82))|0;
     $84 = (+($83|0));
     $85 = $61 >> 1;
     $86 = (+($85|0));
     $87 = $77 + -16.0;
     $88 = (+($61|0));
     $89 = $87 * $88;
     $90 = $89 - $86;
     $91 = $90 + $84;
     $92 = (~~(($91)));
     $$04445$i$i = $92;$$046$i$i = $78;
     while(1) {
      $93 = ($$04445$i$i|0)>(0);
      if ($93) {
       $94 = (($73) + ($$046$i$i<<2)|0);
       $95 = +HEAPF32[$94>>2];
       $96 = $95 + $$0$ph$i;
       $97 = (($9) + ($$04445$i$i<<2)|0);
       $98 = +HEAPF32[$97>>2];
       $99 = $98 < $96;
       if ($99) {
        HEAPF32[$97>>2] = $96;
       }
      }
      $100 = (($$04445$i$i) + ($61))|0;
      $101 = ($100|0)<($7|0);
      $102 = (($$046$i$i) + 1)|0;
      $103 = ($102|0)<($76|0);
      $or$cond$i$i = $103 & $101;
      if ($or$cond$i$i) {
       $$04445$i$i = $100;$$046$i$i = $102;
      } else {
       break;
      }
     }
    }
   }
   if ($$lcssa66) {
    $$04954$i = $43;
   } else {
    $$pre$phiZ2D = $37;
    break;
   }
  }
 } else {
  $$pre = ((($0)) + 36|0);
  $$pre$phiZ2D = $$pre;
 }
 $104 = HEAP32[$$pre$phiZ2D>>2]|0;
 _seed_chase($9,$104,$7);
 $105 = HEAP32[$0>>2]|0;
 $106 = ($105|0)>(1);
 L31: do {
  if ($106) {
   $107 = ((($0)) + 20|0);
   $108 = ((($0)) + 28|0);
   $109 = HEAP32[$107>>2]|0;
   $110 = HEAP32[$109>>2]|0;
   $111 = $104 >> 1;
   $112 = (($110) - ($111))|0;
   $113 = HEAP32[$108>>2]|0;
   $114 = (($112) - ($113))|0;
   $115 = HEAP32[$10>>2]|0;
   $116 = ((($115)) + 32|0);
   $$06992$i = $114;$$093$i = 0;$122 = 1;$125 = $110;
   while(1) {
    $119 = (($9) + ($$06992$i<<2)|0);
    $120 = +HEAPF32[$119>>2];
    $121 = (($109) + ($122<<2)|0);
    $123 = HEAP32[$121>>2]|0;
    $124 = (($123) + ($125))|0;
    $126 = $124 >> 1;
    $127 = (($126) - ($113))|0;
    $128 = +HEAPF32[$116>>2];
    $129 = $120 > $128;
    $$068$ph$i = $129 ? $128 : $120;
    $130 = ($$06992$i|0)<($127|0);
    L35: do {
     if ($130) {
      $$068$ph7283$i = $$068$ph$i;$$in$i = $$06992$i;
      while(1) {
       $131 = (($$in$i) + 1)|0;
       $132 = $$068$ph7283$i == -9999.0;
       L38: do {
        if ($132) {
         $133 = (($9) + ($131<<2)|0);
         $134 = +HEAPF32[$133>>2];
         $$lcssa$i = $134;$$lcssa74$i = $131;
        } else {
         $136 = $131;
         while(1) {
          $135 = (($9) + ($136<<2)|0);
          $137 = +HEAPF32[$135>>2];
          $138 = $137 > -9999.0;
          $139 = $137 < $$068$ph7283$i;
          $or$cond$i = $138 & $139;
          if ($or$cond$i) {
           $$lcssa$i = $137;$$lcssa74$i = $136;
           break L38;
          }
          $140 = (($136) + 1)|0;
          $141 = ($136|0)<($127|0);
          if ($141) {
           $136 = $140;
          } else {
           $$068$ph72$lcssa$i = $$068$ph7283$i;$$170$lcssa$i = $136;
           break L35;
          }
         }
        }
       } while(0);
       $142 = ($$lcssa74$i|0)<($127|0);
       if ($142) {
        $$068$ph7283$i = $$lcssa$i;$$in$i = $$lcssa74$i;
       } else {
        $$068$ph72$lcssa$i = $$lcssa$i;$$170$lcssa$i = $$lcssa74$i;
        break;
       }
      }
     } else {
      $$068$ph72$lcssa$i = $$068$ph$i;$$170$lcssa$i = $$06992$i;
     }
    } while(0);
    $143 = (($$170$lcssa$i) + ($113))|0;
    $144 = ($$093$i|0)>=($105|0);
    $145 = ($125|0)>($143|0);
    $or$cond = $144 | $145;
    L45: do {
     if ($or$cond) {
      $$1$lcssa$i = $$093$i;
     } else {
      $$186$i51 = $$093$i;
      while(1) {
       $146 = (($2) + ($$186$i51<<2)|0);
       $147 = +HEAPF32[$146>>2];
       $148 = $147 < $$068$ph72$lcssa$i;
       if ($148) {
        HEAPF32[$146>>2] = $$068$ph72$lcssa$i;
       }
       $149 = (($$186$i51) + 1)|0;
       $150 = ($149|0)<($105|0);
       if (!($150)) {
        $$1$lcssa$i = $149;
        break L45;
       }
       $$phi$trans$insert105$i = (($109) + ($149<<2)|0);
       $$pre106$i = HEAP32[$$phi$trans$insert105$i>>2]|0;
       $151 = ($$pre106$i|0)>($143|0);
       if ($151) {
        $$1$lcssa$i = $149;
        break;
       } else {
        $$186$i51 = $149;
       }
      }
     }
    } while(0);
    $117 = (($$1$lcssa$i) + 1)|0;
    $118 = ($117|0)<($105|0);
    if (!($118)) {
     $$0$lcssa$i = $$1$lcssa$i;
     break L31;
    }
    $$phi$trans$insert$i = (($109) + ($$1$lcssa$i<<2)|0);
    $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
    $$06992$i = $$170$lcssa$i;$$093$i = $$1$lcssa$i;$122 = $117;$125 = $$pre$i;
   }
  } else {
   $$0$lcssa$i = 0;
  }
 } while(0);
 $152 = HEAP32[$6>>2]|0;
 $153 = (($152) + -1)|0;
 $154 = (($9) + ($153<<2)|0);
 $155 = +HEAPF32[$154>>2];
 $156 = ($$0$lcssa$i|0)<($105|0);
 if ($156) {
  $$277$i = $$0$lcssa$i;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $157 = (($2) + ($$277$i<<2)|0);
  $158 = +HEAPF32[$157>>2];
  $159 = $158 < $155;
  if ($159) {
   HEAPF32[$157>>2] = $155;
  }
  $160 = (($$277$i) + 1)|0;
  $exitcond = ($160|0)==($105|0);
  if ($exitcond) {
   break;
  } else {
   $$277$i = $160;
  }
 }
 STACKTOP = sp;return;
}
function _seed_chase($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$0 = 0, $$0 = 0, $$07892 = 0, $$08086 = 0, $$08291 = 0, $$17987 = 0, $$181$lcssa = 0, $$18185 = 0, $$183 = 0, $$3 = 0, $$3$in = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$sink1 = 0, $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0.0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond97 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $2 << 2;
 $$alloca_mul = $3;
 $4 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $3;
 $5 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $6 = ($2|0)>(0);
 if ($6) {
  $$07892 = 0;$$08291 = 0;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $9 = ($$08291|0)<(2);
  if ($9) {
   $12 = (($4) + ($$08291<<2)|0);
   HEAP32[$12>>2] = $$07892;
   $13 = (($0) + ($$07892<<2)|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = (($5) + ($$08291<<2)|0);
   HEAP32[$15>>2] = $14;
   $$3$in = $$08291;
  } else {
   $10 = (($0) + ($$07892<<2)|0);
   $11 = +HEAPF32[$10>>2];
   $$183 = $$08291;
   while(1) {
    $16 = (($$183) + -1)|0;
    $17 = (($5) + ($16<<2)|0);
    $18 = +HEAPF32[$17>>2];
    $19 = $11 < $18;
    if ($19) {
     break;
    }
    $20 = (($4) + ($16<<2)|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = (($21) + ($1))|0;
    $23 = ($$07892|0)<($22|0);
    $24 = ($$183|0)>(1);
    $or$cond = $24 & $23;
    if (!($or$cond)) {
     break;
    }
    $25 = (($$183) + -2)|0;
    $26 = (($5) + ($25<<2)|0);
    $27 = +HEAPF32[$26>>2];
    $28 = !($18 <= $27);
    if ($28) {
     break;
    }
    $29 = (($4) + ($25<<2)|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = (($30) + ($1))|0;
    $32 = ($$07892|0)<($31|0);
    if ($32) {
     $$183 = $16;
    } else {
     break;
    }
   }
   $33 = (($4) + ($$183<<2)|0);
   HEAP32[$33>>2] = $$07892;
   $$sink1 = (($5) + ($$183<<2)|0);
   HEAPF32[$$sink1>>2] = $11;
   $$3$in = $$183;
  }
  $$3 = (($$3$in) + 1)|0;
  $34 = (($$07892) + 1)|0;
  $exitcond97 = ($34|0)==($2|0);
  if ($exitcond97) {
   break;
  } else {
   $$07892 = $34;$$08291 = $$3;
  }
 }
 $7 = ($$3$in|0)>(-1);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = (($1) + 1)|0;
 $$08086 = 0;$$17987 = 0;
 while(1) {
  $35 = ($$17987|0)<($$3$in|0);
  if ($35) {
   $36 = (($$17987) + 1)|0;
   $37 = (($5) + ($36<<2)|0);
   $38 = +HEAPF32[$37>>2];
   $39 = (($5) + ($$17987<<2)|0);
   $40 = +HEAPF32[$39>>2];
   $41 = $38 > $40;
   if ($41) {
    $42 = (($4) + ($36<<2)|0);
    $43 = HEAP32[$42>>2]|0;
    $$0 = $43;
   } else {
    label = 16;
   }
  } else {
   label = 16;
  }
  if ((label|0) == 16) {
   label = 0;
   $44 = (($4) + ($$17987<<2)|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = (($8) + ($45))|0;
   $$0 = $46;
  }
  $47 = ($$0|0)>($2|0);
  $$$0 = $47 ? $2 : $$0;
  $48 = ($$08086|0)<($$$0|0);
  if ($48) {
   $49 = (($5) + ($$17987<<2)|0);
   $50 = HEAP32[$49>>2]|0;
   $$18185 = $$08086;
   while(1) {
    $51 = (($0) + ($$18185<<2)|0);
    HEAP32[$51>>2] = $50;
    $52 = (($$18185) + 1)|0;
    $53 = ($52|0)<($$$0|0);
    if ($53) {
     $$18185 = $52;
    } else {
     $$181$lcssa = $$$0;
     break;
    }
   }
  } else {
   $$181$lcssa = $$08086;
  }
  $54 = (($$17987) + 1)|0;
  $exitcond = ($54|0)==($$3|0);
  if ($exitcond) {
   break;
  } else {
   $$08086 = $$181$lcssa;$$17987 = $54;
  }
 }
 STACKTOP = sp;return;
}
function __vp_couple_quantize_normalize($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $$ = 0, $$020$i = 0, $$0409$in = 0.0, $$0409$in$in = 0, $$0410451 = 0, $$0411439 = 0, $$0415462 = 0, $$1412443 = 0, $$2413448 = 0, $$2465 = 0, $$3414456 = 0, $$3437 = 0, $$alloca_mul = 0, $$alloca_mul1 = 0, $$alloca_mul11 = 0, $$alloca_mul13 = 0, $$alloca_mul15 = 0, $$alloca_mul3 = 0, $$alloca_mul5 = 0, $$alloca_mul7 = 0;
 var $$alloca_mul9 = 0, $$idx$val = 0, $$idx427$val = 0, $$pre = 0, $$pre$pre = 0, $$pre473 = 0, $$pre473$pre = 0, $$pre474 = 0, $$pre474$pre = 0, $$pre475 = 0, $$pre475$pre = 0, $$pre476 = 0, $$pre477 = 0, $$pre478 = 0, $$sink$i = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0.0, $$v = 0.0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0, $105 = 0.0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0.0, $123 = 0, $124 = 0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0.0, $182 = 0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0, $187 = 0.0, $188 = 0, $189 = 0.0, $19 = 0, $190 = 0;
 var $191 = 0.0, $192 = 0.0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0.0, $221 = 0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0;
 var $228 = 0.0, $229 = 0.0, $23 = 0.0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond472 = 0, $exitcond472488 = 0, $fabsf = 0.0, $fabsf$i = 0.0, $fabsf419 = 0.0, $fabsf420 = 0.0, $fabsf421 = 0.0, $fabsf422 = 0.0, $ispos = 0, $ispos423 = 0, $ispos425 = 0, $neg = 0, $neg424 = 0;
 var $neg426 = 0, $not$$i = 0, $stereo_threshholds_limited$stereo_threshholds = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = HEAP32[$2>>2]|0;
 $10 = ((($2)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 500|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0);
 if ($14) {
  $35 = 16;
 } else {
  $15 = ((($11)) + 508|0);
  $16 = HEAP32[$15>>2]|0;
  $35 = $16;
 }
 $17 = HEAP32[$11>>2]|0;
 $18 = ((((($1)) + 132|0) + (($17*60)|0)|0) + ($0<<2)|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (((($1)) + 252|0) + ($0<<2)|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (8 + ($21<<3)|0);
 $23 = +HEAPF64[$22>>3];
 $24 = (((($1)) + 312|0) + ($0<<2)|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = $8 << 2;
 $$alloca_mul = $26;
 $27 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $$alloca_mul1 = $26;
 $28 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul1)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul1)|0)+15)&-16)|0);;
 $$alloca_mul3 = $26;
 $29 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul3)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul3)|0)+15)&-16)|0);;
 $$alloca_mul5 = $26;
 $30 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul5)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul5)|0)+15)&-16)|0);;
 $$alloca_mul7 = $26;
 $31 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul7)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul7)|0)+15)&-16)|0);;
 $32 = ((($3)) + 1156|0);
 $33 = ($9|0)>(1000);
 $stereo_threshholds_limited$stereo_threshholds = $33 ? 80 : 8;
 $$0409$in$in = (($stereo_threshholds_limited$stereo_threshholds) + ($25<<3)|0);
 $$0409$in = +HEAPF64[$$0409$in$in>>3];
 $34 = Math_imul($26, $35)|0;
 $$alloca_mul9 = $34;
 $36 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul9)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul9)|0)+15)&-16)|0);;
 HEAP32[$27>>2] = $36;
 $$alloca_mul11 = $34;
 $37 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul11)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul11)|0)+15)&-16)|0);;
 HEAP32[$28>>2] = $37;
 $$alloca_mul13 = $34;
 $38 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul13)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul13)|0)+15)&-16)|0);;
 HEAP32[$29>>2] = $38;
 $$alloca_mul15 = $34;
 $39 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul15)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul15)|0)+15)&-16)|0);;
 HEAP32[$30>>2] = $39;
 $40 = ($8|0)>(1);
 L4: do {
  if ($40) {
   $41 = (($36) + ($35<<2)|0);
   $42 = ((($27)) + 4|0);
   HEAP32[$42>>2] = $41;
   $43 = (($37) + ($35<<2)|0);
   $44 = ((($28)) + 4|0);
   HEAP32[$44>>2] = $43;
   $45 = (($38) + ($35<<2)|0);
   $46 = ((($29)) + 4|0);
   HEAP32[$46>>2] = $45;
   $47 = (($39) + ($35<<2)|0);
   $48 = ((($30)) + 4|0);
   HEAP32[$48>>2] = $47;
   $exitcond472488 = ($8|0)==(2);
   if (!($exitcond472488)) {
    $$pre = $36;$$pre473 = $37;$$pre474 = $38;$$pre475 = $39;$52 = 2;
    while(1) {
     $51 = Math_imul($52, $35)|0;
     $53 = (($$pre) + ($51<<2)|0);
     $54 = (($27) + ($52<<2)|0);
     HEAP32[$54>>2] = $53;
     $55 = (($$pre473) + ($51<<2)|0);
     $56 = (($28) + ($52<<2)|0);
     HEAP32[$56>>2] = $55;
     $57 = (($$pre474) + ($51<<2)|0);
     $58 = (($29) + ($52<<2)|0);
     HEAP32[$58>>2] = $57;
     $59 = (($$pre475) + ($51<<2)|0);
     $60 = (($30) + ($52<<2)|0);
     HEAP32[$60>>2] = $59;
     $61 = (($52) + 1)|0;
     $exitcond472 = ($61|0)==($8|0);
     if ($exitcond472) {
      break L4;
     }
     $$pre$pre = HEAP32[$27>>2]|0;
     $$pre473$pre = HEAP32[$28>>2]|0;
     $$pre474$pre = HEAP32[$29>>2]|0;
     $$pre475$pre = HEAP32[$30>>2]|0;
     $$pre = $$pre$pre;$$pre473 = $$pre473$pre;$$pre474 = $$pre474$pre;$$pre475 = $$pre475$pre;$52 = $61;
    }
   }
  }
 } while(0);
 $49 = HEAP32[$32>>2]|0;
 $50 = ($9|0)>(0);
 if ($50) {
  $62 = ($8|0)>(0);
  $$pre476 = HEAP32[$30>>2]|0;
  $$2465 = 0;
  while(1) {
   $65 = (($9) - ($$2465))|0;
   $66 = ($35|0)>($65|0);
   $$ = $66 ? $65 : $35;
   _memcpy(($31|0),($6|0),($26|0))|0;
   _memset(($$pre476|0),0,($34|0))|0;
   if ($62) {
    $67 = ($$|0)>(0);
    $68 = (($19) - ($$2465))|0;
    $$0410451 = 0;
    while(1) {
     $74 = (($5) + ($$0410451<<2)|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (($75) + ($$2465<<2)|0);
     $77 = (($31) + ($$0410451<<2)|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = ($78|0)==(0);
     if ($79) {
      if ($67) {
       $82 = (($29) + ($$0410451<<2)|0);
       $83 = HEAP32[$82>>2]|0;
       $84 = (($27) + ($$0410451<<2)|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = (($28) + ($$0410451<<2)|0);
       $87 = HEAP32[$86>>2]|0;
       $88 = (($30) + ($$0410451<<2)|0);
       $89 = HEAP32[$88>>2]|0;
       $$2413448 = 0;
       while(1) {
        $136 = (($83) + ($$2413448<<2)|0);
        HEAPF32[$136>>2] = 1.000000013351432E-10;
        $137 = (($85) + ($$2413448<<2)|0);
        HEAPF32[$137>>2] = 0.0;
        $138 = (($87) + ($$2413448<<2)|0);
        HEAPF32[$138>>2] = 0.0;
        $139 = (($89) + ($$2413448<<2)|0);
        HEAP32[$139>>2] = 0;
        $140 = (($76) + ($$2413448<<2)|0);
        HEAP32[$140>>2] = 0;
        $141 = (($$2413448) + 1)|0;
        $142 = ($141|0)<($$|0);
        if ($142) {
         $$2413448 = $141;
        } else {
         break;
        }
       }
      }
     } else {
      $80 = (($29) + ($$0410451<<2)|0);
      $81 = HEAP32[$80>>2]|0;
      if ($67) {
       $$0411439 = 0;
       while(1) {
        $90 = (($76) + ($$0411439<<2)|0);
        $91 = HEAP32[$90>>2]|0;
        $92 = (59604 + ($91<<2)|0);
        $93 = HEAP32[$92>>2]|0;
        $94 = (($81) + ($$0411439<<2)|0);
        HEAP32[$94>>2] = $93;
        $95 = (($$0411439) + 1)|0;
        $96 = ($95|0)<($$|0);
        if ($96) {
         $$0411439 = $95;
        } else {
         break;
        }
       }
       $97 = (($4) + ($$0410451<<2)|0);
       $98 = HEAP32[$97>>2]|0;
       $99 = (($98) + ($$2465<<2)|0);
       $100 = (($30) + ($$0410451<<2)|0);
       $101 = HEAP32[$100>>2]|0;
       $$020$i = 0;
       while(1) {
        $102 = ($$020$i|0)>=($68|0);
        $$v = $102 ? $$0409$in : $23;
        $103 = $$v;
        $104 = (($99) + ($$020$i<<2)|0);
        $105 = +HEAPF32[$104>>2];
        $fabsf$i = (+Math_abs((+$105)));
        $106 = (($81) + ($$020$i<<2)|0);
        $107 = +HEAPF32[$106>>2];
        $108 = $fabsf$i / $107;
        $109 = (($101) + ($$020$i<<2)|0);
        $not$$i = !($108 < $103);
        $$sink$i = $not$$i&1;
        HEAP32[$109>>2] = $$sink$i;
        $110 = (($$020$i) + 1)|0;
        $exitcond$i = ($110|0)==($$|0);
        if ($exitcond$i) {
         break;
        } else {
         $$020$i = $110;
        }
       }
       $115 = (($27) + ($$0410451<<2)|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = (($28) + ($$0410451<<2)|0);
       $118 = HEAP32[$117>>2]|0;
       $$1412443 = 0;
       while(1) {
        $119 = (($$1412443) + ($$2465))|0;
        $120 = (($98) + ($119<<2)|0);
        $121 = +HEAPF32[$120>>2];
        $122 = $121 * $121;
        $123 = (($116) + ($$1412443<<2)|0);
        HEAPF32[$123>>2] = $122;
        $124 = (($118) + ($$1412443<<2)|0);
        HEAPF32[$124>>2] = $122;
        $125 = +HEAPF32[$120>>2];
        $126 = $125 < 0.0;
        if ($126) {
         $127 = +HEAPF32[$123>>2];
         $128 = -$127;
         HEAPF32[$123>>2] = $128;
        }
        $129 = (($81) + ($$1412443<<2)|0);
        $130 = +HEAPF32[$129>>2];
        $131 = $130 * $130;
        HEAPF32[$129>>2] = $131;
        $132 = (($$1412443) + 1)|0;
        $133 = ($132|0)<($$|0);
        if ($133) {
         $$1412443 = $132;
        } else {
         $134 = $116;$135 = $118;
         break;
        }
       }
      } else {
       $111 = (($27) + ($$0410451<<2)|0);
       $112 = HEAP32[$111>>2]|0;
       $113 = (($28) + ($$0410451<<2)|0);
       $114 = HEAP32[$113>>2]|0;
       $134 = $112;$135 = $114;
      }
      $$idx$val = HEAP32[$10>>2]|0;
      _noise_normalize($$idx$val,$19,$134,$135,$81,0,$$2465,$$,$76);
     }
     $143 = (($$0410451) + 1)|0;
     $exitcond = ($143|0)==($8|0);
     if ($exitcond) {
      break;
     } else {
      $$0410451 = $143;
     }
    }
   }
   $69 = HEAP32[$32>>2]|0;
   $70 = ($69|0)>(0);
   if ($70) {
    $71 = ($$|0)>(0);
    $72 = (($7) - ($$2465))|0;
    $73 = (($19) - ($$2465))|0;
    $$0415462 = 0;$254 = $69;
    while(1) {
     $144 = (((($3)) + 1160|0) + ($$0415462<<2)|0);
     $145 = HEAP32[$144>>2]|0;
     $146 = (((($3)) + 2184|0) + ($$0415462<<2)|0);
     $147 = HEAP32[$146>>2]|0;
     $148 = (($5) + ($145<<2)|0);
     $149 = HEAP32[$148>>2]|0;
     $150 = (($149) + ($$2465<<2)|0);
     $151 = (($5) + ($147<<2)|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = (($152) + ($$2465<<2)|0);
     $154 = (($27) + ($145<<2)|0);
     $155 = HEAP32[$154>>2]|0;
     $156 = (($27) + ($147<<2)|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = (($28) + ($145<<2)|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = (($28) + ($147<<2)|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = (($29) + ($145<<2)|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = (($29) + ($147<<2)|0);
     $165 = HEAP32[$164>>2]|0;
     $166 = (($30) + ($145<<2)|0);
     $167 = HEAP32[$166>>2]|0;
     $168 = (($30) + ($147<<2)|0);
     $169 = HEAP32[$168>>2]|0;
     $170 = (($31) + ($145<<2)|0);
     $171 = HEAP32[$170>>2]|0;
     $172 = ($171|0)==(0);
     $173 = (($31) + ($147<<2)|0);
     if ($172) {
      $174 = HEAP32[$173>>2]|0;
      $175 = ($174|0)==(0);
      if ($175) {
       $234 = $254;
      } else {
       label = 31;
      }
     } else {
      label = 31;
     }
     if ((label|0) == 31) {
      label = 0;
      HEAP32[$173>>2] = 1;
      HEAP32[$170>>2] = 1;
      if ($71) {
       $$3414456 = 0;
       while(1) {
        $176 = ($$3414456|0)<($72|0);
        do {
         if ($176) {
          $177 = (($167) + ($$3414456<<2)|0);
          $178 = HEAP32[$177>>2]|0;
          $179 = ($178|0)==(0);
          $180 = (($157) + ($$3414456<<2)|0);
          $181 = +HEAPF32[$180>>2];
          $182 = (($155) + ($$3414456<<2)|0);
          $183 = +HEAPF32[$182>>2];
          $184 = (($169) + ($$3414456<<2)|0);
          if ($179) {
           $185 = HEAP32[$184>>2]|0;
           $186 = ($185|0)==(0);
           if ($186) {
            $216 = ($$3414456|0)<($73|0);
            $217 = $183 + $181;
            if ($216) {
             HEAPF32[$182>>2] = $217;
             $fabsf420 = (+Math_abs((+$217)));
             $218 = (($159) + ($$3414456<<2)|0);
             HEAPF32[$218>>2] = $fabsf420;
            } else {
             $219 = $217 < 0.0;
             $fabsf = (+Math_abs((+$183)));
             $fabsf419 = (+Math_abs((+$181)));
             $220 = $fabsf419 + $fabsf;
             $221 = (($159) + ($$3414456<<2)|0);
             HEAPF32[$221>>2] = $220;
             $222 = -$220;
             $$sink4 = $219 ? $222 : $220;
             HEAPF32[$182>>2] = $$sink4;
            }
            $223 = (($161) + ($$3414456<<2)|0);
            HEAPF32[$223>>2] = 0.0;
            HEAPF32[$180>>2] = 0.0;
            HEAP32[$184>>2] = 1;
            $224 = (($153) + ($$3414456<<2)|0);
            HEAP32[$224>>2] = 0;
            break;
           }
          }
          $fabsf421 = (+Math_abs((+$183)));
          $fabsf422 = (+Math_abs((+$181)));
          $187 = $fabsf422 + $fabsf421;
          HEAPF32[$182>>2] = $187;
          $188 = (($159) + ($$3414456<<2)|0);
          $189 = +HEAPF32[$188>>2];
          $190 = (($161) + ($$3414456<<2)|0);
          $191 = +HEAPF32[$190>>2];
          $192 = $191 + $189;
          HEAPF32[$188>>2] = $192;
          HEAP32[$184>>2] = 1;
          HEAP32[$177>>2] = 1;
          $193 = (($150) + ($$3414456<<2)|0);
          $194 = HEAP32[$193>>2]|0;
          $195 = (($153) + ($$3414456<<2)|0);
          $196 = HEAP32[$195>>2]|0;
          $ispos = ($194|0)>(-1);
          $neg = (0 - ($194))|0;
          $197 = $ispos ? $194 : $neg;
          $ispos423 = ($196|0)>(-1);
          $neg424 = (0 - ($196))|0;
          $198 = $ispos423 ? $196 : $neg424;
          $199 = ($197|0)>($198|0);
          if ($199) {
           $200 = ($194|0)>(0);
           $201 = (($194) - ($196))|0;
           $202 = (($196) - ($194))|0;
           $203 = $200 ? $201 : $202;
           $$sink2 = $203;$$sink3 = $195;
          } else {
           $204 = ($196|0)>(0);
           $205 = (($194) - ($196))|0;
           $206 = (($196) - ($194))|0;
           $207 = $204 ? $205 : $206;
           HEAP32[$195>>2] = $207;
           $$sink2 = $196;$$sink3 = $193;
          }
          HEAP32[$$sink3>>2] = $$sink2;
          $208 = HEAP32[$195>>2]|0;
          $209 = HEAP32[$193>>2]|0;
          $ispos425 = ($209|0)>(-1);
          $neg426 = (0 - ($209))|0;
          $210 = $ispos425 ? $209 : $neg426;
          $211 = $210 << 1;
          $212 = ($208|0)<($211|0);
          if (!($212)) {
           $213 = (0 - ($208))|0;
           HEAP32[$195>>2] = $213;
           $214 = HEAP32[$193>>2]|0;
           $215 = (0 - ($214))|0;
           HEAP32[$193>>2] = $215;
          }
         }
        } while(0);
        $225 = (($163) + ($$3414456<<2)|0);
        $226 = +HEAPF32[$225>>2];
        $227 = (($165) + ($$3414456<<2)|0);
        $228 = +HEAPF32[$227>>2];
        $229 = $228 + $226;
        HEAPF32[$227>>2] = $229;
        HEAPF32[$225>>2] = $229;
        $230 = (($$3414456) + 1)|0;
        $231 = ($230|0)<($$|0);
        if ($231) {
         $$3414456 = $230;
        } else {
         break;
        }
       }
      }
      $$idx427$val = HEAP32[$10>>2]|0;
      _noise_normalize($$idx427$val,$19,$155,$159,$163,$167,$$2465,$$,$150);
      $$pre477 = HEAP32[$32>>2]|0;
      $234 = $$pre477;
     }
     $232 = (($$0415462) + 1)|0;
     $233 = ($232|0)<($234|0);
     if ($233) {
      $$0415462 = $232;$254 = $234;
     } else {
      $253 = $234;
      break;
     }
    }
   } else {
    $253 = $69;
   }
   $235 = (($$2465) + ($35))|0;
   $236 = ($9|0)>($235|0);
   if ($236) {
    $$2465 = $235;
   } else {
    $63 = $253;
    break;
   }
  }
 } else {
  $63 = $49;
 }
 $64 = ($63|0)>(0);
 if ($64) {
  $$3437 = 0;$252 = $63;
 } else {
  STACKTOP = sp;return;
 }
 while(1) {
  $237 = (((($3)) + 1160|0) + ($$3437<<2)|0);
  $238 = HEAP32[$237>>2]|0;
  $239 = (($6) + ($238<<2)|0);
  $240 = HEAP32[$239>>2]|0;
  $241 = ($240|0)==(0);
  $242 = (((($3)) + 2184|0) + ($$3437<<2)|0);
  if ($241) {
   $243 = HEAP32[$242>>2]|0;
   $244 = (($6) + ($243<<2)|0);
   $245 = HEAP32[$244>>2]|0;
   $246 = ($245|0)==(0);
   if ($246) {
    $251 = $252;
   } else {
    label = 50;
   }
  } else {
   label = 50;
  }
  if ((label|0) == 50) {
   label = 0;
   HEAP32[$239>>2] = 1;
   $247 = HEAP32[$242>>2]|0;
   $248 = (($6) + ($247<<2)|0);
   HEAP32[$248>>2] = 1;
   $$pre478 = HEAP32[$32>>2]|0;
   $251 = $$pre478;
  }
  $249 = (($$3437) + 1)|0;
  $250 = ($249|0)<($251|0);
  if ($250) {
   $$3437 = $249;$252 = $251;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _noise_normalize($$0$1$val,$0,$1,$2,$3,$4,$5,$6,$7) {
 $$0$1$val = $$0$1$val|0;
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$ = 0, $$0$lcssa = 0.0, $$0106$lcssa = 0, $$010610 = 0, $$010610$us = 0, $$0109$lcssa = 0, $$01093 = 0, $$01093$us = 0, $$06 = 0.0, $$06$us = 0.0, $$11074 = 0, $$11074$us = 0, $$2 = 0.0, $$2$us = 0.0, $$21081 = 0, $$2111 = 0, $$2111$us = 0, $$32 = 0.0, $$4 = 0.0, $$alloca_mul = 0;
 var $$sink = 0, $$sink$in = 0.0, $$sink$in$us = 0.0, $$sink$us = 0, $$sink1 = 0, $$sink1$us = 0, $$sink2 = 0, $$sink2$in = 0.0, $$sink2$in$us = 0.0, $$sink2$us = 0, $$sink20 = 0, $$sink3 = 0, $$sink3$us = 0, $$sink4 = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0.0, $115 = 0, $116 = 0.0, $117 = 0, $118 = 0.0, $119 = 0, $12 = 0, $120 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0, $50 = 0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0.0;
 var $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $70 = 0.0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0.0;
 var $75 = 0.0, $76 = 0, $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0.0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0;
 var $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond18 = 0, $exitcond19 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = $6 << 2;
 $$alloca_mul = $8;
 $9 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $10 = ((($$0$1$val)) + 500|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0);
 if ($12) {
  $16 = $6;
 } else {
  $13 = ((($$0$1$val)) + 504|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = (($14) - ($5))|0;
  $16 = $15;
 }
 $17 = ($16|0)>($6|0);
 $$ = $17 ? $6 : $16;
 $18 = ($$|0)>(0);
 L4: do {
  if ($18) {
   $19 = ($4|0)==(0|0);
   if ($19) {
    $$010610$us = 0;
    while(1) {
     $20 = (($2) + ($$010610$us<<2)|0);
     $21 = +HEAPF32[$20>>2];
     $22 = (($3) + ($$010610$us<<2)|0);
     $23 = +HEAPF32[$22>>2];
     $24 = $21 / $23;
     $25 = (($1) + ($$010610$us<<2)|0);
     $26 = +HEAPF32[$25>>2];
     $27 = $26 < 0.0;
     $28 = $24;
     $29 = (+Math_sqrt((+$28)));
     $30 = (+_rint($29));
     $31 = -$30;
     $$sink$in$us = $27 ? $31 : $30;
     $$sink$us = (~~(($$sink$in$us)));
     $$sink1$us = (($7) + ($$010610$us<<2)|0);
     HEAP32[$$sink1$us>>2] = $$sink$us;
     $32 = (($$010610$us) + 1)|0;
     $33 = ($32|0)<($$|0);
     if ($33) {
      $$010610$us = $32;
     } else {
      $$0106$lcssa = $$;
      break L4;
     }
    }
   } else {
    $$010610 = 0;
   }
   while(1) {
    $61 = (($4) + ($$010610<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = ($62|0)==(0);
    if ($63) {
     $64 = (($2) + ($$010610<<2)|0);
     $65 = +HEAPF32[$64>>2];
     $66 = (($3) + ($$010610<<2)|0);
     $67 = +HEAPF32[$66>>2];
     $68 = $65 / $67;
     $69 = (($1) + ($$010610<<2)|0);
     $70 = +HEAPF32[$69>>2];
     $71 = $70 < 0.0;
     $72 = $68;
     $73 = (+Math_sqrt((+$72)));
     $74 = (+_rint($73));
     $75 = -$74;
     $$sink$in = $71 ? $75 : $74;
     $$sink = (~~(($$sink$in)));
     $$sink1 = (($7) + ($$010610<<2)|0);
     HEAP32[$$sink1>>2] = $$sink;
    }
    $76 = (($$010610) + 1)|0;
    $77 = ($76|0)<($$|0);
    if ($77) {
     $$010610 = $76;
    } else {
     $$0106$lcssa = $$;
     break;
    }
   }
  } else {
   $$0106$lcssa = 0;
  }
 } while(0);
 $34 = ($$0106$lcssa|0)<($6|0);
 if (!($34)) {
  STACKTOP = sp;return;
 }
 $35 = ($4|0)==(0|0);
 $36 = (($0) - ($5))|0;
 if ($35) {
  $$01093 = 0;$$06 = 0.0;$$11074 = $$0106$lcssa;
  while(1) {
   $78 = (($2) + ($$11074<<2)|0);
   $79 = +HEAPF32[$78>>2];
   $80 = (($3) + ($$11074<<2)|0);
   $81 = +HEAPF32[$80>>2];
   $82 = $79 / $81;
   $83 = $82 < 0.25;
   if ($83) {
    $84 = $82 + $$06;
    $85 = (($$01093) + 1)|0;
    $86 = (($9) + ($$01093<<2)|0);
    HEAP32[$86>>2] = $78;
    $$2 = $84;$$2111 = $85;
   } else {
    $87 = (($1) + ($$11074<<2)|0);
    $88 = +HEAPF32[$87>>2];
    $89 = $88 < 0.0;
    $90 = $82;
    $91 = (+Math_sqrt((+$90)));
    $92 = (+_rint($91));
    $93 = -$92;
    $$sink2$in = $89 ? $93 : $92;
    $$sink2 = (~~(($$sink2$in)));
    $$sink3 = (($7) + ($$11074<<2)|0);
    HEAP32[$$sink3>>2] = $$sink2;
    $94 = Math_imul($$sink2, $$sink2)|0;
    $95 = (+($94|0));
    $96 = $95 * $81;
    HEAPF32[$78>>2] = $96;
    $$2 = $$06;$$2111 = $$01093;
   }
   $97 = (($$11074) + 1)|0;
   $exitcond18 = ($97|0)==($6|0);
   if ($exitcond18) {
    $$0$lcssa = $$2;$$0109$lcssa = $$2111;
    break;
   } else {
    $$01093 = $$2111;$$06 = $$2;$$11074 = $97;
   }
  }
 } else {
  $$01093$us = 0;$$06$us = 0.0;$$11074$us = $$0106$lcssa;
  while(1) {
   $37 = (($4) + ($$11074$us<<2)|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ($38|0)==(0);
   do {
    if ($39) {
     $40 = (($2) + ($$11074$us<<2)|0);
     $41 = +HEAPF32[$40>>2];
     $42 = (($3) + ($$11074$us<<2)|0);
     $43 = +HEAPF32[$42>>2];
     $44 = $41 / $43;
     $45 = !($44 < 0.25);
     $46 = ($$11074$us|0)<($36|0);
     $or$cond = $45 | $46;
     if ($or$cond) {
      $50 = (($1) + ($$11074$us<<2)|0);
      $51 = +HEAPF32[$50>>2];
      $52 = $51 < 0.0;
      $53 = $44;
      $54 = (+Math_sqrt((+$53)));
      $55 = (+_rint($54));
      $56 = -$55;
      $$sink2$in$us = $52 ? $56 : $55;
      $$sink2$us = (~~(($$sink2$in$us)));
      $$sink3$us = (($7) + ($$11074$us<<2)|0);
      HEAP32[$$sink3$us>>2] = $$sink2$us;
      $57 = Math_imul($$sink2$us, $$sink2$us)|0;
      $58 = (+($57|0));
      $59 = $58 * $43;
      HEAPF32[$40>>2] = $59;
      $$2$us = $$06$us;$$2111$us = $$01093$us;
      break;
     } else {
      $47 = $44 + $$06$us;
      $48 = (($$01093$us) + 1)|0;
      $49 = (($9) + ($$01093$us<<2)|0);
      HEAP32[$49>>2] = $40;
      $$2$us = $47;$$2111$us = $48;
      break;
     }
    } else {
     $$2$us = $$06$us;$$2111$us = $$01093$us;
    }
   } while(0);
   $60 = (($$11074$us) + 1)|0;
   $exitcond19 = ($60|0)==($6|0);
   if ($exitcond19) {
    $$0$lcssa = $$2$us;$$0109$lcssa = $$2111$us;
    break;
   } else {
    $$01093$us = $$2111$us;$$06$us = $$2$us;$$11074$us = $60;
   }
  }
 }
 $98 = ($$0109$lcssa|0)==(0);
 if ($98) {
  STACKTOP = sp;return;
 }
 _qsort($9,$$0109$lcssa,26);
 $99 = ($$0109$lcssa|0)>(0);
 if (!($99)) {
  STACKTOP = sp;return;
 }
 $100 = $2;
 $101 = ((($$0$1$val)) + 512|0);
 $102 = +HEAPF64[$101>>3];
 $$21081 = 0;$$32 = $$0$lcssa;
 while(1) {
  $103 = (($9) + ($$21081<<2)|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = $104;
  $106 = (($105) - ($100))|0;
  $107 = $106 >> 2;
  $108 = $$32;
  $109 = !($108 >= $102);
  if ($109) {
   $$4 = $$32;$$sink20 = 0;$$sink4 = 0.0;
  } else {
   $110 = (($1) + ($107<<2)|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = $111 & -2147483648;
   $113 = $112 | 1065353216;
   $114 = (HEAP32[tempDoublePtr>>2]=$113,+HEAPF32[tempDoublePtr>>2]);
   $115 = (~~(($114)));
   $116 = $$32 + -1.0;
   $117 = (($3) + ($107<<2)|0);
   $118 = +HEAPF32[$117>>2];
   $$4 = $116;$$sink20 = $115;$$sink4 = $118;
  }
  $119 = (($7) + ($107<<2)|0);
  HEAP32[$119>>2] = $$sink20;
  HEAPF32[$104>>2] = $$sink4;
  $120 = (($$21081) + 1)|0;
  $exitcond = ($120|0)==($$0109$lcssa|0);
  if ($exitcond) {
   break;
  } else {
   $$21081 = $120;$$32 = $$4;
  }
 }
 STACKTOP = sp;return;
}
function _apsort($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = +HEAPF32[$2>>2];
 $4 = HEAP32[$1>>2]|0;
 $5 = +HEAPF32[$4>>2];
 $6 = $3 < $5;
 $7 = $6&1;
 $8 = $3 > $5;
 $9 = $8&1;
 $10 = (($7) - ($9))|0;
 return ($10|0);
}
function _vorbis_comment_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;
 return;
}
function _vorbis_comment_add_tag($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $endptr = 0, $strlen = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strlen($1)|0);
 $4 = (_strlen($2)|0);
 $5 = (($3) + 2)|0;
 $6 = (($5) + ($4))|0;
 $7 = (_malloc($6)|0);
 (_strcpy($7,$1)|0);
 $strlen = (_strlen($7)|0);
 $endptr = (($7) + ($strlen)|0);
 HEAP8[$endptr>>0]=61&255;HEAP8[$endptr+1>>0]=61>>8;
 (_strcat($7,$2)|0);
 $8 = HEAP32[$0>>2]|0;
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 << 2;
 $12 = (($11) + 8)|0;
 $13 = (_realloc($8,$12)|0);
 HEAP32[$0>>2] = $13;
 $14 = ((($0)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$9>>2]|0;
 $17 = $16 << 2;
 $18 = (($17) + 8)|0;
 $19 = (_realloc($15,$18)|0);
 HEAP32[$14>>2] = $19;
 $20 = (_strlen($7)|0);
 $21 = HEAP32[$9>>2]|0;
 $22 = (($19) + ($21<<2)|0);
 HEAP32[$22>>2] = $20;
 $23 = (($20) + 1)|0;
 $24 = (_malloc($23)|0);
 $25 = HEAP32[$0>>2]|0;
 $26 = (($25) + ($21<<2)|0);
 HEAP32[$26>>2] = $24;
 $27 = HEAP32[$0>>2]|0;
 $28 = (($27) + ($21<<2)|0);
 $29 = HEAP32[$28>>2]|0;
 (_strcpy($29,$7)|0);
 $30 = HEAP32[$9>>2]|0;
 $31 = (($30) + 1)|0;
 HEAP32[$9>>2] = $31;
 $32 = HEAP32[$0>>2]|0;
 $33 = (($32) + ($31<<2)|0);
 HEAP32[$33>>2] = 0;
 _free($7);
 return;
}
function _vorbis_comment_clear($0) {
 $0 = $0|0;
 var $$014 = 0, $$lcssa = 0, $$pre = 0, $$pre16 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($0)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)>(0);
  if ($6) {
   $$014 = 0;$20 = $5;$8 = $2;
   while(1) {
    $7 = (($8) + ($$014<<2)|0);
    $9 = HEAP32[$7>>2]|0;
    $10 = ($9|0)==(0|0);
    if ($10) {
     $13 = $20;$21 = $8;
    } else {
     _free($9);
     $$pre = HEAP32[$4>>2]|0;
     $$pre16 = HEAP32[$0>>2]|0;
     $13 = $$pre;$21 = $$pre16;
    }
    $11 = (($$014) + 1)|0;
    $12 = ($11|0)<($13|0);
    if ($12) {
     $$014 = $11;$20 = $13;$8 = $21;
    } else {
     $$lcssa = $21;
     break;
    }
   }
  } else {
   $$lcssa = $2;
  }
  _free($$lcssa);
 }
 $14 = ((($0)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  _free($15);
 }
 $17 = ((($0)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if (!($19)) {
  _free($18);
 }
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;
 return;
}
function _vorbis_info_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;
 $1 = (_malloc(3664)|0);
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  $3 = ((($1)) + -4|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = $4 & 3;
  $6 = ($5|0)==(0);
  if (!($6)) {
   _memset(($1|0),0,3664)|0;
  }
 }
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $1;
 return;
}
function _vorbis_info_clear($0) {
 $0 = $0|0;
 var $$070 = 0, $$168 = 0, $$266 = 0, $$364 = 0, $$461 = 0, $$560 = 0, $$pre = 0, $$pre$phi77Z2D = 0, $$pre1 = 0, $$pre72 = 0, $$pre73 = 0, $$pre74 = 0, $$pre75 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0;
  return;
 }
 $4 = ((($2)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(0);
 if ($6) {
  $7 = ((($2)) + 32|0);
  $$070 = 0;$108 = $5;
  while(1) {
   $12 = (($7) + ($$070<<2)|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $17 = $108;
   } else {
    _free($13);
    $$pre = HEAP32[$4>>2]|0;
    $17 = $$pre;
   }
   $15 = (($$070) + 1)|0;
   $16 = ($15|0)<($17|0);
   if ($16) {
    $$070 = $15;$108 = $17;
   } else {
    break;
   }
  }
 }
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)>(0);
 if ($10) {
  $11 = ((($2)) + 544|0);
  $$168 = 0;$109 = $9;
  while(1) {
   $23 = (($11) + ($$168<<2)|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($24|0)==(0|0);
   if ($25) {
    $28 = $109;
   } else {
    _free($24);
    $$pre72 = HEAP32[$8>>2]|0;
    $28 = $$pre72;
   }
   $26 = (($$168) + 1)|0;
   $27 = ($26|0)<($28|0);
   if ($27) {
    $$168 = $26;$109 = $28;
   } else {
    break;
   }
  }
 }
 $18 = ((($2)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)>(0);
 if ($20) {
  $21 = ((($2)) + 1056|0);
  $22 = ((($2)) + 800|0);
  $$266 = 0;$110 = $19;
  while(1) {
   $34 = (($21) + ($$266<<2)|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==(0|0);
   if ($36) {
    $45 = $110;
   } else {
    $37 = (($22) + ($$266<<2)|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = (59540 + ($38<<2)|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = ((($40)) + 12|0);
    $42 = HEAP32[$41>>2]|0;
    FUNCTION_TABLE_vi[$42 & 31]($35);
    $$pre73 = HEAP32[$18>>2]|0;
    $45 = $$pre73;
   }
   $43 = (($$266) + 1)|0;
   $44 = ($43|0)<($45|0);
   if ($44) {
    $$266 = $43;$110 = $45;
   } else {
    break;
   }
  }
 }
 $29 = ((($2)) + 20|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($30|0)>(0);
 if ($31) {
  $32 = ((($2)) + 1568|0);
  $33 = ((($2)) + 1312|0);
  $$364 = 0;$111 = $30;
  while(1) {
   $51 = (($32) + ($$364<<2)|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ($52|0)==(0|0);
   if ($53) {
    $62 = $111;
   } else {
    $54 = (($33) + ($$364<<2)|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (59548 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ((($57)) + 12|0);
    $59 = HEAP32[$58>>2]|0;
    FUNCTION_TABLE_vi[$59 & 31]($52);
    $$pre74 = HEAP32[$29>>2]|0;
    $62 = $$pre74;
   }
   $60 = (($$364) + 1)|0;
   $61 = ($60|0)<($62|0);
   if ($61) {
    $$364 = $60;$111 = $62;
   } else {
    break;
   }
  }
 }
 $46 = ((($2)) + 24|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($47|0)>(0);
 if ($48) {
  $49 = ((($2)) + 1824|0);
  $50 = ((($2)) + 2848|0);
  $$461 = 0;
  while(1) {
   $63 = (($49) + ($$461<<2)|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ($64|0)==(0|0);
   if (!($65)) {
    $66 = ((($64)) + 36|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = ($67|0)==(0);
    if (!($68)) {
     $69 = ((($64)) + 32|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($70|0)==(0|0);
     if (!($71)) {
      _free($70);
     }
     $72 = ((($64)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($73|0)==(0|0);
     if (!($74)) {
      _free($73);
     }
     _free($64);
    }
   }
   $75 = HEAP32[$50>>2]|0;
   $76 = ($75|0)==(0|0);
   if (!($76)) {
    $77 = (($75) + (($$461*56)|0)|0);
    $78 = (((($75) + (($$461*56)|0)|0)) + 16|0);
    $79 = HEAP32[$78>>2]|0;
    $80 = ($79|0)==(0|0);
    if (!($80)) {
     _free($79);
    }
    $81 = (((($75) + (($$461*56)|0)|0)) + 20|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==(0|0);
    if (!($83)) {
     _free($82);
    }
    $84 = (((($75) + (($$461*56)|0)|0)) + 24|0);
    $85 = HEAP32[$84>>2]|0;
    $86 = ($85|0)==(0|0);
    if (!($86)) {
     _free($85);
    }
    $87 = (((($75) + (($$461*56)|0)|0)) + 28|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = ($88|0)==(0|0);
    if (!($89)) {
     _free($88);
    }
    $90 = (((($75) + (($$461*56)|0)|0)) + 32|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    if (!($92)) {
     _free($91);
    }
    dest=$77; stop=dest+56|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   }
   $93 = (($$461) + 1)|0;
   $94 = HEAP32[$46>>2]|0;
   $95 = ($93|0)<($94|0);
   if ($95) {
    $$461 = $93;
   } else {
    $$pre$phi77Z2D = $50;
    break;
   }
  }
 } else {
  $$pre75 = ((($2)) + 2848|0);
  $$pre$phi77Z2D = $$pre75;
 }
 $96 = HEAP32[$$pre$phi77Z2D>>2]|0;
 $97 = ($96|0)==(0|0);
 if (!($97)) {
  _free($96);
 }
 $98 = ((($2)) + 28|0);
 $99 = HEAP32[$98>>2]|0;
 $100 = ($99|0)>(0);
 if ($100) {
  $101 = ((($2)) + 2852|0);
  $$560 = 0;$112 = $99;
  while(1) {
   $102 = (($101) + ($$560<<2)|0);
   $103 = HEAP32[$102>>2]|0;
   $104 = ($103|0)==(0|0);
   if ($104) {
    $107 = $112;
   } else {
    _free($103);
    $$pre1 = HEAP32[$98>>2]|0;
    $107 = $$pre1;
   }
   $105 = (($$560) + 1)|0;
   $106 = ($105|0)<($107|0);
   if ($106) {
    $$560 = $105;$112 = $107;
   } else {
    break;
   }
  }
 }
 _free($2);
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0;
 return;
}
function _vorbis_analysis_headerout($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i6$i = 0, $$0$lcssa$i7 = 0, $$0101$lcssa$i = 0, $$0101139$i = 0, $$0102$lcssa$i = 0, $$0102116$i = 0, $$0106113$i = 0, $$023$i2$i = 0, $$023$i6$i = 0, $$02533$us$i$i = 0, $$02632$us$i$i = 0, $$02731$us$i$i = 0, $$028$us$i$i = 0, $$04$i1$i = 0, $$04$i5$i = 0, $$056$i = 0;
 var $$056$i$i = 0, $$056$i3$i = 0, $$056$i4 = 0, $$059$ph = 0, $$05961 = 0, $$07$i = 0, $$07$i$i = 0, $$07$i2$i = 0, $$07$i3 = 0, $$085$i = 0, $$09$i = 0, $$1$lcssa$i = 0, $$1103114$i = 0, $$1117$i = 0, $$181$i = 0, $$2$lcssa$i = 0, $$2104$i = 0, $$2130$i = 0, $$277$i = 0, $$3124$i = 0;
 var $$373$i = 0, $$4127$i = 0, $$472$i = 0, $$5112$i = 0, $$lcssa$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi27Z2D = 0, $$pre$phiZ2D = 0, $$pre156$i = 0, $$pre26$pre$phiZZ2D = 0, $$pre28 = 0, $$sink$us$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0;
 var $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0;
 var $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0;
 var $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0;
 var $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0;
 var $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond154$i = 0;
 var $ispos$i = 0, $neg$i = 0, $or$cond$us$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $5 = sp;
 $6 = ((($0)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 104|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;
  ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;
  $$0 = -129;
  STACKTOP = sp;return ($$0|0);
 }
 $11 = ((($7)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)<(1);
 if ($13) {
  $$pre28 = ((($5)) + 8|0);
  $$059$ph = -129;$$pre26$pre$phiZZ2D = $$pre28;
  label = 89;
 } else {
  $14 = $5;
  $15 = $14;
  HEAP32[$15>>2] = 0;
  $16 = (($14) + 4)|0;
  $17 = $16;
  HEAP32[$17>>2] = 0;
  $18 = (_malloc(256)|0);
  $19 = ((($5)) + 8|0);
  HEAP32[$19>>2] = $18;
  $20 = ((($5)) + 12|0);
  HEAP32[$20>>2] = $18;
  HEAP8[$18>>0] = 0;
  $21 = ((($5)) + 16|0);
  HEAP32[$21>>2] = 256;
  $22 = ((($7)) + 28|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ($23|0)==(0|0);
  if ($24) {
   $$059$ph = -130;$$pre26$pre$phiZZ2D = $19;
   label = 89;
  } else {
   $25 = HEAP32[$23>>2]|0;
   $26 = ($25|0)<(64);
   if ($26) {
    $$059$ph = -130;$$pre26$pre$phiZZ2D = $19;
    label = 89;
   } else {
    $27 = ((($23)) + 4|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = ($28|0)<($25|0);
    if ($29) {
     $$059$ph = -130;$$pre26$pre$phiZZ2D = $19;
     label = 89;
    } else {
     _oggpack_write($5,1,8);
     _oggpack_write($5,118,8);
     _oggpack_write($5,111,8);
     _oggpack_write($5,114,8);
     _oggpack_write($5,98,8);
     _oggpack_write($5,105,8);
     _oggpack_write($5,115,8);
     _oggpack_write($5,0,32);
     $30 = HEAP32[$11>>2]|0;
     _oggpack_write($5,$30,8);
     $31 = ((($7)) + 8|0);
     $32 = HEAP32[$31>>2]|0;
     _oggpack_write($5,$32,32);
     $33 = ((($7)) + 12|0);
     $34 = HEAP32[$33>>2]|0;
     _oggpack_write($5,$34,32);
     $35 = ((($7)) + 16|0);
     $36 = HEAP32[$35>>2]|0;
     _oggpack_write($5,$36,32);
     $37 = ((($7)) + 20|0);
     $38 = HEAP32[$37>>2]|0;
     _oggpack_write($5,$38,32);
     $39 = HEAP32[$23>>2]|0;
     $40 = (($39) + -1)|0;
     $41 = ($40|0)==(0);
     if ($41) {
      $$0$lcssa$i = 0;
     } else {
      $$056$i = $40;$$07$i = 0;
      while(1) {
       $42 = $$056$i >>> 1;
       $43 = (($$07$i) + 1)|0;
       $44 = ($42|0)==(0);
       if ($44) {
        $$0$lcssa$i = $43;
        break;
       } else {
        $$056$i = $42;$$07$i = $43;
       }
      }
     }
     _oggpack_write($5,$$0$lcssa$i,4);
     $45 = HEAP32[$27>>2]|0;
     $46 = (($45) + -1)|0;
     $47 = ($46|0)==(0);
     if ($47) {
      $$0$lcssa$i7 = 0;
     } else {
      $$056$i4 = $46;$$07$i3 = 0;
      while(1) {
       $48 = $$056$i4 >>> 1;
       $49 = (($$07$i3) + 1)|0;
       $50 = ($48|0)==(0);
       if ($50) {
        $$0$lcssa$i7 = $49;
        break;
       } else {
        $$056$i4 = $48;$$07$i3 = $49;
       }
      }
     }
     _oggpack_write($5,$$0$lcssa$i7,4);
     _oggpack_write($5,1,1);
     $51 = ((($9)) + 64|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = ($52|0)==(0|0);
     if (!($53)) {
      _free($52);
     }
     $54 = HEAP32[$5>>2]|0;
     $55 = ((($5)) + 4|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = (($56) + 7)|0;
     $58 = (($57|0) / 8)&-1;
     $59 = (($58) + ($54))|0;
     $60 = (_malloc($59)|0);
     HEAP32[$51>>2] = $60;
     $61 = HEAP32[$19>>2]|0;
     $62 = HEAP32[$5>>2]|0;
     $63 = HEAP32[$55>>2]|0;
     $64 = (($63) + 7)|0;
     $65 = (($64|0) / 8)&-1;
     $66 = (($65) + ($62))|0;
     _memcpy(($60|0),($61|0),($66|0))|0;
     $67 = HEAP32[$51>>2]|0;
     HEAP32[$2>>2] = $67;
     $68 = HEAP32[$5>>2]|0;
     $69 = HEAP32[$55>>2]|0;
     $70 = (($69) + 7)|0;
     $71 = (($70|0) / 8)&-1;
     $72 = (($71) + ($68))|0;
     $73 = ((($2)) + 4|0);
     HEAP32[$73>>2] = $72;
     $74 = ((($2)) + 8|0);
     HEAP32[$74>>2] = 1;
     $75 = ((($2)) + 12|0);
     ;HEAP32[$75>>2]=0|0;HEAP32[$75+4>>2]=0|0;HEAP32[$75+8>>2]=0|0;HEAP32[$75+12>>2]=0|0;HEAP32[$75+16>>2]=0|0;
     $76 = HEAP32[$20>>2]|0;
     $77 = ($76|0)==(0|0);
     if (!($77)) {
      $78 = HEAP32[$19>>2]|0;
      HEAP32[$20>>2] = $78;
      HEAP8[$78>>0] = 0;
      HEAP32[$5>>2] = 0;
      HEAP32[$55>>2] = 0;
     }
     _oggpack_write($5,3,8);
     _oggpack_write($5,118,8);
     _oggpack_write($5,111,8);
     _oggpack_write($5,114,8);
     _oggpack_write($5,98,8);
     _oggpack_write($5,105,8);
     _oggpack_write($5,115,8);
     _oggpack_write($5,44,32);
     $$023$i2$i = 224796;$$04$i1$i = 44;
     while(1) {
      $79 = (($$04$i1$i) + -1)|0;
      $80 = ((($$023$i2$i)) + 1|0);
      $81 = HEAP8[$$023$i2$i>>0]|0;
      $82 = $81 << 24 >> 24;
      _oggpack_write($5,$82,8);
      $83 = ($79|0)==(0);
      if ($83) {
       break;
      } else {
       $$023$i2$i = $80;$$04$i1$i = $79;
      }
     }
     $84 = ((($1)) + 8|0);
     $85 = HEAP32[$84>>2]|0;
     _oggpack_write($5,$85,32);
     $86 = HEAP32[$84>>2]|0;
     $87 = ($86|0)>(0);
     if ($87) {
      $88 = ((($1)) + 4|0);
      $$09$i = 0;
      while(1) {
       $89 = HEAP32[$1>>2]|0;
       $90 = (($89) + ($$09$i<<2)|0);
       $91 = HEAP32[$90>>2]|0;
       $92 = ($91|0)==(0|0);
       if ($92) {
        _oggpack_write($5,0,32);
       } else {
        $93 = HEAP32[$88>>2]|0;
        $94 = (($93) + ($$09$i<<2)|0);
        $95 = HEAP32[$94>>2]|0;
        _oggpack_write($5,$95,32);
        $96 = HEAP32[$88>>2]|0;
        $97 = (($96) + ($$09$i<<2)|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = ($98|0)==(0);
        if (!($99)) {
         $100 = HEAP32[$1>>2]|0;
         $101 = (($100) + ($$09$i<<2)|0);
         $102 = HEAP32[$101>>2]|0;
         $$023$i6$i = $102;$$04$i5$i = $98;
         while(1) {
          $103 = (($$04$i5$i) + -1)|0;
          $104 = ((($$023$i6$i)) + 1|0);
          $105 = HEAP8[$$023$i6$i>>0]|0;
          $106 = $105 << 24 >> 24;
          _oggpack_write($5,$106,8);
          $107 = ($103|0)==(0);
          if ($107) {
           break;
          } else {
           $$023$i6$i = $104;$$04$i5$i = $103;
          }
         }
        }
       }
       $108 = (($$09$i) + 1)|0;
       $109 = HEAP32[$84>>2]|0;
       $110 = ($108|0)<($109|0);
       if ($110) {
        $$09$i = $108;
       } else {
        break;
       }
      }
     }
     _oggpack_write($5,1,1);
     $111 = ((($9)) + 68|0);
     $112 = HEAP32[$111>>2]|0;
     $113 = ($112|0)==(0|0);
     if (!($113)) {
      _free($112);
     }
     $114 = HEAP32[$5>>2]|0;
     $115 = HEAP32[$55>>2]|0;
     $116 = (($115) + 7)|0;
     $117 = (($116|0) / 8)&-1;
     $118 = (($117) + ($114))|0;
     $119 = (_malloc($118)|0);
     HEAP32[$111>>2] = $119;
     $120 = HEAP32[$19>>2]|0;
     $121 = HEAP32[$5>>2]|0;
     $122 = HEAP32[$55>>2]|0;
     $123 = (($122) + 7)|0;
     $124 = (($123|0) / 8)&-1;
     $125 = (($124) + ($121))|0;
     _memcpy(($119|0),($120|0),($125|0))|0;
     $126 = HEAP32[$111>>2]|0;
     HEAP32[$3>>2] = $126;
     $127 = HEAP32[$5>>2]|0;
     $128 = HEAP32[$55>>2]|0;
     $129 = (($128) + 7)|0;
     $130 = (($129|0) / 8)&-1;
     $131 = (($130) + ($127))|0;
     $132 = ((($3)) + 4|0);
     HEAP32[$132>>2] = $131;
     $133 = ((($3)) + 8|0);
     $134 = ((($3)) + 24|0);
     ;HEAP32[$133>>2]=0|0;HEAP32[$133+4>>2]=0|0;HEAP32[$133+8>>2]=0|0;HEAP32[$133+12>>2]=0|0;
     $135 = $134;
     $136 = $135;
     HEAP32[$136>>2] = 1;
     $137 = (($135) + 4)|0;
     $138 = $137;
     HEAP32[$138>>2] = 0;
     $139 = HEAP32[$20>>2]|0;
     $140 = ($139|0)==(0|0);
     if (!($140)) {
      $141 = HEAP32[$19>>2]|0;
      HEAP32[$20>>2] = $141;
      HEAP8[$141>>0] = 0;
      HEAP32[$5>>2] = 0;
      HEAP32[$55>>2] = 0;
     }
     $142 = HEAP32[$22>>2]|0;
     $143 = ($142|0)==(0|0);
     L46: do {
      if (!($143)) {
       _oggpack_write($5,5,8);
       _oggpack_write($5,118,8);
       _oggpack_write($5,111,8);
       _oggpack_write($5,114,8);
       _oggpack_write($5,98,8);
       _oggpack_write($5,105,8);
       _oggpack_write($5,115,8);
       $144 = ((($142)) + 24|0);
       $145 = HEAP32[$144>>2]|0;
       $146 = (($145) + -1)|0;
       _oggpack_write($5,$146,8);
       $147 = HEAP32[$144>>2]|0;
       $148 = ($147|0)>(0);
       L48: do {
        if ($148) {
         $$085$i = 0;
         L49: while(1) {
          $152 = (((($142)) + 1824|0) + ($$085$i<<2)|0);
          $153 = HEAP32[$152>>2]|0;
          _oggpack_write($5,5653314,24);
          $154 = HEAP32[$153>>2]|0;
          _oggpack_write($5,$154,16);
          $155 = ((($153)) + 4|0);
          $156 = HEAP32[$155>>2]|0;
          _oggpack_write($5,$156,24);
          $157 = HEAP32[$155>>2]|0;
          $158 = ($157|0)>(1);
          L51: do {
           if ($158) {
            $159 = ((($153)) + 8|0);
            $160 = HEAP32[$159>>2]|0;
            $$pre$i = HEAP8[$160>>0]|0;
            $$0101139$i = 1;$161 = $$pre$i;
            while(1) {
             $162 = ($161<<24>>24)==(0);
             if ($162) {
              $$0101$lcssa$i = $$0101139$i;
              break L51;
             }
             $163 = (($160) + ($$0101139$i)|0);
             $164 = HEAP8[$163>>0]|0;
             $165 = ($164<<24>>24)<($161<<24>>24);
             if ($165) {
              $$0101$lcssa$i = $$0101139$i;
              break L51;
             }
             $166 = (($$0101139$i) + 1)|0;
             $167 = ($166|0)<($157|0);
             if ($167) {
              $$0101139$i = $166;$161 = $164;
             } else {
              $$0101$lcssa$i = $166;
              break;
             }
            }
           } else {
            $$0101$lcssa$i = 1;
           }
          } while(0);
          $168 = ($$0101$lcssa$i|0)==($157|0);
          L58: do {
           if ($168) {
            _oggpack_write($5,1,1);
            $169 = ((($153)) + 8|0);
            $170 = HEAP32[$169>>2]|0;
            $171 = HEAP8[$170>>0]|0;
            $172 = $171 << 24 >> 24;
            $173 = (($172) + -1)|0;
            _oggpack_write($5,$173,5);
            $174 = HEAP32[$155>>2]|0;
            $175 = ($174|0)>(1);
            if ($175) {
             $$0102116$i = 0;$$1117$i = 1;$388 = $174;
             while(1) {
              $176 = HEAP32[$169>>2]|0;
              $177 = (($176) + ($$1117$i)|0);
              $178 = HEAP8[$177>>0]|0;
              $179 = (($$1117$i) + -1)|0;
              $180 = (($176) + ($179)|0);
              $181 = HEAP8[$180>>0]|0;
              $182 = $178 << 24 >> 24;
              $183 = ($178<<24>>24)>($181<<24>>24);
              if ($183) {
               $184 = $181 << 24 >> 24;
               $$0106113$i = $184;$$1103114$i = $$0102116$i;$187 = $388;
               while(1) {
                $185 = (($$1117$i) - ($$1103114$i))|0;
                $186 = (($187) - ($$1103114$i))|0;
                $188 = ($186|0)==(0);
                if ($188) {
                 $$0$lcssa$i$i = 0;
                } else {
                 $$056$i$i = $186;$$07$i$i = 0;
                 while(1) {
                  $189 = $$056$i$i >>> 1;
                  $190 = (($$07$i$i) + 1)|0;
                  $191 = ($189|0)==(0);
                  if ($191) {
                   $$0$lcssa$i$i = $190;
                   break;
                  } else {
                   $$056$i$i = $189;$$07$i$i = $190;
                  }
                 }
                }
                _oggpack_write($5,$185,$$0$lcssa$i$i);
                $192 = (($$0106113$i) + 1)|0;
                $exitcond154$i = ($192|0)==($182|0);
                $$pre156$i = HEAP32[$155>>2]|0;
                if ($exitcond154$i) {
                 $$2104$i = $$1117$i;$195 = $$pre156$i;
                 break;
                } else {
                 $$0106113$i = $192;$$1103114$i = $$1117$i;$187 = $$pre156$i;
                }
               }
              } else {
               $$2104$i = $$0102116$i;$195 = $388;
              }
              $193 = (($$1117$i) + 1)|0;
              $194 = ($193|0)<($195|0);
              if ($194) {
               $$0102116$i = $$2104$i;$$1117$i = $193;$388 = $195;
              } else {
               $$0102$lcssa$i = $$2104$i;$$1$lcssa$i = $193;$$lcssa$i = $195;
               break;
              }
             }
            } else {
             $$0102$lcssa$i = 0;$$1$lcssa$i = 1;$$lcssa$i = $174;
            }
            $196 = (($$1$lcssa$i) - ($$0102$lcssa$i))|0;
            $197 = (($$lcssa$i) - ($$0102$lcssa$i))|0;
            $198 = ($197|0)==(0);
            if ($198) {
             $$0$lcssa$i6$i = 0;
            } else {
             $$056$i3$i = $197;$$07$i2$i = 0;
             while(1) {
              $199 = $$056$i3$i >>> 1;
              $200 = (($$07$i2$i) + 1)|0;
              $201 = ($199|0)==(0);
              if ($201) {
               $$0$lcssa$i6$i = $200;
               break;
              } else {
               $$056$i3$i = $199;$$07$i2$i = $200;
              }
             }
            }
            _oggpack_write($5,$196,$$0$lcssa$i6$i);
           } else {
            _oggpack_write($5,0,1);
            $202 = HEAP32[$155>>2]|0;
            $203 = ($202|0)>(0);
            L78: do {
             if ($203) {
              $204 = ((($153)) + 8|0);
              $205 = HEAP32[$204>>2]|0;
              $$2130$i = 0;
              while(1) {
               $206 = (($205) + ($$2130$i)|0);
               $207 = HEAP8[$206>>0]|0;
               $208 = ($207<<24>>24)==(0);
               if ($208) {
                $$2$lcssa$i = $$2130$i;
                break L78;
               }
               $209 = (($$2130$i) + 1)|0;
               $210 = ($209|0)<($202|0);
               if ($210) {
                $$2130$i = $209;
               } else {
                $$2$lcssa$i = $209;
                break;
               }
              }
             } else {
              $$2$lcssa$i = 0;
             }
            } while(0);
            $211 = ($$2$lcssa$i|0)==($202|0);
            if ($211) {
             _oggpack_write($5,0,1);
             $212 = HEAP32[$155>>2]|0;
             $213 = ($212|0)>(0);
             if (!($213)) {
              break;
             }
             $214 = ((($153)) + 8|0);
             $$3124$i = 0;
             while(1) {
              $215 = HEAP32[$214>>2]|0;
              $216 = (($215) + ($$3124$i)|0);
              $217 = HEAP8[$216>>0]|0;
              $218 = $217 << 24 >> 24;
              $219 = (($218) + -1)|0;
              _oggpack_write($5,$219,5);
              $220 = (($$3124$i) + 1)|0;
              $221 = HEAP32[$155>>2]|0;
              $222 = ($220|0)<($221|0);
              if ($222) {
               $$3124$i = $220;
              } else {
               break L58;
              }
             }
            }
            _oggpack_write($5,1,1);
            $223 = HEAP32[$155>>2]|0;
            $224 = ($223|0)>(0);
            if (!($224)) {
             break;
            }
            $225 = ((($153)) + 8|0);
            $$4127$i = 0;
            while(1) {
             $226 = HEAP32[$225>>2]|0;
             $227 = (($226) + ($$4127$i)|0);
             $228 = HEAP8[$227>>0]|0;
             $229 = ($228<<24>>24)==(0);
             if ($229) {
              _oggpack_write($5,0,1);
             } else {
              _oggpack_write($5,1,1);
              $230 = HEAP32[$225>>2]|0;
              $231 = (($230) + ($$4127$i)|0);
              $232 = HEAP8[$231>>0]|0;
              $233 = $232 << 24 >> 24;
              $234 = (($233) + -1)|0;
              _oggpack_write($5,$234,5);
             }
             $235 = (($$4127$i) + 1)|0;
             $236 = HEAP32[$155>>2]|0;
             $237 = ($235|0)<($236|0);
             if ($237) {
              $$4127$i = $235;
             } else {
              break;
             }
            }
           }
          } while(0);
          $238 = ((($153)) + 12|0);
          $239 = HEAP32[$238>>2]|0;
          _oggpack_write($5,$239,4);
          $240 = HEAP32[$238>>2]|0;
          L98: do {
           switch ($240|0) {
           case 0:  {
            break;
           }
           case 2: case 1:  {
            $241 = ((($153)) + 32|0);
            $242 = HEAP32[$241>>2]|0;
            $243 = ($242|0)==(0|0);
            if ($243) {
             break L46;
            }
            $244 = ((($153)) + 16|0);
            $245 = HEAP32[$244>>2]|0;
            _oggpack_write($5,$245,32);
            $246 = ((($153)) + 20|0);
            $247 = HEAP32[$246>>2]|0;
            _oggpack_write($5,$247,32);
            $248 = ((($153)) + 24|0);
            $249 = HEAP32[$248>>2]|0;
            $250 = (($249) + -1)|0;
            _oggpack_write($5,$250,4);
            $251 = ((($153)) + 28|0);
            $252 = HEAP32[$251>>2]|0;
            _oggpack_write($5,$252,1);
            $253 = HEAP32[$238>>2]|0;
            switch ($253|0) {
            case 1:  {
             $254 = HEAP32[$155>>2]|0;
             $255 = HEAP32[$153>>2]|0;
             $256 = ($255|0)>(0);
             if (!($256)) {
              break L49;
             }
             $257 = (+($254|0));
             $258 = $257;
             $259 = (+($255|0));
             $260 = 1.0 / $259;
             $261 = $260;
             $262 = (+Math_pow((+$258),(+$261)));
             $263 = (+Math_floor((+$262)));
             $264 = (~~(($263)));
             $$028$us$i$i = $264;
             while(1) {
              $265 = (($$028$us$i$i) + 1)|0;
              $$02533$us$i$i = 0;$$02632$us$i$i = 1;$$02731$us$i$i = 1;
              while(1) {
               $266 = Math_imul($$02731$us$i$i, $$028$us$i$i)|0;
               $267 = Math_imul($$02632$us$i$i, $265)|0;
               $268 = (($$02533$us$i$i) + 1)|0;
               $exitcond = ($268|0)==($255|0);
               if ($exitcond) {
                break;
               } else {
                $$02533$us$i$i = $268;$$02632$us$i$i = $267;$$02731$us$i$i = $266;
               }
              }
              $269 = ($266|0)<=($254|0);
              $270 = ($267|0)>($254|0);
              $or$cond$us$i$i = $269 & $270;
              $271 = ($266|0)>($254|0);
              $$sink$us$i$i = $271 ? -1 : 1;
              $272 = (($$sink$us$i$i) + ($$028$us$i$i))|0;
              if ($or$cond$us$i$i) {
               $$0$i = $$028$us$i$i;
               break;
              } else {
               $$028$us$i$i = $272;
              }
             }
             break;
            }
            case 2:  {
             $273 = HEAP32[$155>>2]|0;
             $274 = HEAP32[$153>>2]|0;
             $275 = Math_imul($274, $273)|0;
             $$0$i = $275;
             break;
            }
            default: {
             break L98;
            }
            }
            $276 = ($$0$i|0)>(0);
            if ($276) {
             $$5112$i = 0;
            } else {
             break L98;
            }
            while(1) {
             $277 = HEAP32[$241>>2]|0;
             $278 = (($277) + ($$5112$i<<2)|0);
             $279 = HEAP32[$278>>2]|0;
             $ispos$i = ($279|0)>(-1);
             $neg$i = (0 - ($279))|0;
             $280 = $ispos$i ? $279 : $neg$i;
             $281 = HEAP32[$248>>2]|0;
             _oggpack_write($5,$280,$281);
             $282 = (($$5112$i) + 1)|0;
             $exitcond$i = ($282|0)==($$0$i|0);
             if ($exitcond$i) {
              break;
             } else {
              $$5112$i = $282;
             }
            }
            break;
           }
           default: {
            break L46;
           }
           }
          } while(0);
          $149 = (($$085$i) + 1)|0;
          $150 = HEAP32[$144>>2]|0;
          $151 = ($149|0)<($150|0);
          if ($151) {
           $$085$i = $149;
          } else {
           break L48;
          }
         }
         while(1) {
         }
        }
       } while(0);
       _oggpack_write($5,0,6);
       _oggpack_write($5,0,16);
       $283 = ((($142)) + 16|0);
       $284 = HEAP32[$283>>2]|0;
       $285 = (($284) + -1)|0;
       _oggpack_write($5,$285,6);
       $286 = HEAP32[$283>>2]|0;
       $287 = ($286|0)>(0);
       if ($287) {
        $$181$i = 0;
        while(1) {
         $288 = (((($142)) + 800|0) + ($$181$i<<2)|0);
         $289 = HEAP32[$288>>2]|0;
         _oggpack_write($5,$289,16);
         $290 = HEAP32[$288>>2]|0;
         $291 = (59540 + ($290<<2)|0);
         $292 = HEAP32[$291>>2]|0;
         $293 = HEAP32[$292>>2]|0;
         $294 = ($293|0)==(0|0);
         if ($294) {
          break L46;
         }
         $295 = (((($142)) + 1056|0) + ($$181$i<<2)|0);
         $296 = HEAP32[$295>>2]|0;
         FUNCTION_TABLE_vii[$293 & 31]($296,$5);
         $297 = (($$181$i) + 1)|0;
         $298 = HEAP32[$283>>2]|0;
         $299 = ($297|0)<($298|0);
         if ($299) {
          $$181$i = $297;
         } else {
          break;
         }
        }
       }
       $300 = ((($142)) + 20|0);
       $301 = HEAP32[$300>>2]|0;
       $302 = (($301) + -1)|0;
       _oggpack_write($5,$302,6);
       $303 = HEAP32[$300>>2]|0;
       $304 = ($303|0)>(0);
       if ($304) {
        $$277$i = 0;
        while(1) {
         $305 = (((($142)) + 1312|0) + ($$277$i<<2)|0);
         $306 = HEAP32[$305>>2]|0;
         _oggpack_write($5,$306,16);
         $307 = HEAP32[$305>>2]|0;
         $308 = (59548 + ($307<<2)|0);
         $309 = HEAP32[$308>>2]|0;
         $310 = HEAP32[$309>>2]|0;
         $311 = (((($142)) + 1568|0) + ($$277$i<<2)|0);
         $312 = HEAP32[$311>>2]|0;
         FUNCTION_TABLE_vii[$310 & 31]($312,$5);
         $313 = (($$277$i) + 1)|0;
         $314 = HEAP32[$300>>2]|0;
         $315 = ($313|0)<($314|0);
         if ($315) {
          $$277$i = $313;
         } else {
          break;
         }
        }
       }
       $316 = ((($142)) + 12|0);
       $317 = HEAP32[$316>>2]|0;
       $318 = (($317) + -1)|0;
       _oggpack_write($5,$318,6);
       $319 = HEAP32[$316>>2]|0;
       $320 = ($319|0)>(0);
       if ($320) {
        $$373$i = 0;
        while(1) {
         $321 = (((($142)) + 288|0) + ($$373$i<<2)|0);
         $322 = HEAP32[$321>>2]|0;
         _oggpack_write($5,$322,16);
         $323 = (((($142)) + 544|0) + ($$373$i<<2)|0);
         $324 = HEAP32[$323>>2]|0;
         _mapping0_pack($7,$324,$5);
         $325 = (($$373$i) + 1)|0;
         $326 = HEAP32[$316>>2]|0;
         $327 = ($325|0)<($326|0);
         if ($327) {
          $$373$i = $325;
         } else {
          break;
         }
        }
       }
       $328 = ((($142)) + 8|0);
       $329 = HEAP32[$328>>2]|0;
       $330 = (($329) + -1)|0;
       _oggpack_write($5,$330,6);
       $331 = HEAP32[$328>>2]|0;
       $332 = ($331|0)>(0);
       if ($332) {
        $$472$i = 0;
        while(1) {
         $333 = (((($142)) + 32|0) + ($$472$i<<2)|0);
         $334 = HEAP32[$333>>2]|0;
         $335 = HEAP32[$334>>2]|0;
         _oggpack_write($5,$335,1);
         $336 = HEAP32[$333>>2]|0;
         $337 = ((($336)) + 4|0);
         $338 = HEAP32[$337>>2]|0;
         _oggpack_write($5,$338,16);
         $339 = HEAP32[$333>>2]|0;
         $340 = ((($339)) + 8|0);
         $341 = HEAP32[$340>>2]|0;
         _oggpack_write($5,$341,16);
         $342 = HEAP32[$333>>2]|0;
         $343 = ((($342)) + 12|0);
         $344 = HEAP32[$343>>2]|0;
         _oggpack_write($5,$344,8);
         $345 = (($$472$i) + 1)|0;
         $346 = HEAP32[$328>>2]|0;
         $347 = ($345|0)<($346|0);
         if ($347) {
          $$472$i = $345;
         } else {
          break;
         }
        }
       }
       _oggpack_write($5,1,1);
       $348 = ((($9)) + 72|0);
       $349 = HEAP32[$348>>2]|0;
       $350 = ($349|0)==(0|0);
       if (!($350)) {
        _free($349);
       }
       $351 = HEAP32[$5>>2]|0;
       $352 = HEAP32[$55>>2]|0;
       $353 = (($352) + 7)|0;
       $354 = (($353|0) / 8)&-1;
       $355 = (($354) + ($351))|0;
       $356 = (_malloc($355)|0);
       HEAP32[$348>>2] = $356;
       $357 = HEAP32[$19>>2]|0;
       $358 = HEAP32[$5>>2]|0;
       $359 = HEAP32[$55>>2]|0;
       $360 = (($359) + 7)|0;
       $361 = (($360|0) / 8)&-1;
       $362 = (($361) + ($358))|0;
       _memcpy(($356|0),($357|0),($362|0))|0;
       $363 = HEAP32[$348>>2]|0;
       HEAP32[$4>>2] = $363;
       $364 = HEAP32[$5>>2]|0;
       $365 = HEAP32[$55>>2]|0;
       $366 = (($365) + 7)|0;
       $367 = (($366|0) / 8)&-1;
       $368 = (($367) + ($364))|0;
       $369 = ((($4)) + 4|0);
       HEAP32[$369>>2] = $368;
       $370 = ((($4)) + 8|0);
       $371 = ((($4)) + 24|0);
       ;HEAP32[$370>>2]=0|0;HEAP32[$370+4>>2]=0|0;HEAP32[$370+8>>2]=0|0;HEAP32[$370+12>>2]=0|0;
       $372 = $371;
       $373 = $372;
       HEAP32[$373>>2] = 2;
       $374 = (($372) + 4)|0;
       $375 = $374;
       HEAP32[$375>>2] = 0;
       $376 = HEAP32[$19>>2]|0;
       $377 = ($376|0)==(0|0);
       if (!($377)) {
        _free($376);
       }
       ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;
       $$0 = 0;
       STACKTOP = sp;return ($$0|0);
      }
     } while(0);
     ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
     ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;
     ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;
     $$05961 = -130;$$pre$phi27Z2D = $19;$$pre$phiZ2D = $51;
    }
   }
  }
 }
 if ((label|0) == 89) {
  ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
  ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;
  ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;HEAP32[$4+16>>2]=0|0;HEAP32[$4+20>>2]=0|0;HEAP32[$4+24>>2]=0|0;HEAP32[$4+28>>2]=0|0;
  $$pre = ((($9)) + 64|0);
  $$05961 = $$059$ph;$$pre$phi27Z2D = $$pre26$pre$phiZZ2D;$$pre$phiZ2D = $$pre;
 }
 $378 = HEAP32[$$pre$phi27Z2D>>2]|0;
 $379 = ($378|0)==(0|0);
 if (!($379)) {
  _free($378);
 }
 ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;
 $380 = HEAP32[$$pre$phiZ2D>>2]|0;
 $381 = ($380|0)==(0|0);
 if (!($381)) {
  _free($380);
 }
 $382 = ((($9)) + 68|0);
 $383 = HEAP32[$382>>2]|0;
 $384 = ($383|0)==(0|0);
 if (!($384)) {
  _free($383);
 }
 $385 = ((($9)) + 72|0);
 $386 = HEAP32[$385>>2]|0;
 $387 = ($386|0)==(0|0);
 if (!($387)) {
  _free($386);
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 HEAP32[$382>>2] = 0;
 HEAP32[$385>>2] = 0;
 $$0 = $$05961;
 STACKTOP = sp;return ($$0|0);
}
function _decode_packed_entry_number($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$166 = 0, $$171 = 0, $$267$lcssa = 0, $$26777 = 0, $$27276 = 0, $$3 = 0, $$sink = 0, $$sink$i = 0, $$sink$i1 = 0, $$sink$i3 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 36|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_oggpack_look($1,$5)|0);
 $7 = ($6|0)>(-1);
 do {
  if ($7) {
   $8 = ((($0)) + 32|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (($9) + ($6<<2)|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($11|0)<(0);
   if ($12) {
    $13 = $11 >>> 15;
    $14 = $13 & 32767;
    $15 = ((($0)) + 8|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = $11 & 32767;
    $18 = (($16) - ($17))|0;
    $$166 = $14;$$171 = $18;
    break;
   }
   $19 = ((($0)) + 28|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($11) + -1)|0;
   $22 = (($20) + ($21)|0);
   $23 = HEAP8[$22>>0]|0;
   $24 = $23 << 24 >> 24;
   $25 = ((($1)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = (($26) + ($24))|0;
   $28 = HEAP32[$1>>2]|0;
   $29 = ((($1)) + 16|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (($27) + 7)|0;
   $32 = $31 >> 3;
   $33 = (($30) - ($32))|0;
   $34 = ($28|0)>($33|0);
   if ($34) {
    $41 = ((($1)) + 12|0);
    HEAP32[$41>>2] = 0;
    HEAP32[$1>>2] = $30;
    $$sink$i = 1;
   } else {
    $35 = (($27|0) / 8)&-1;
    $36 = ((($1)) + 12|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = (($37) + ($35)|0);
    HEAP32[$36>>2] = $38;
    $39 = (($35) + ($28))|0;
    HEAP32[$1>>2] = $39;
    $40 = $27 & 7;
    $$sink$i = $40;
   }
   HEAP32[$25>>2] = $$sink$i;
   $$3 = $21;
   return ($$3|0);
  } else {
   $42 = ((($0)) + 8|0);
   $43 = HEAP32[$42>>2]|0;
   $$166 = 0;$$171 = $43;
  }
 } while(0);
 $$sink = $3;
 while(1) {
  $44 = (_oggpack_look($1,$$sink)|0);
  $45 = ($44|0)<(0);
  $46 = ($$sink|0)>(1);
  $47 = $46 & $45;
  $48 = (($$sink) + -1)|0;
  if ($47) {
   $$sink = $48;
  } else {
   break;
  }
 }
 if ($45) {
  $$3 = -1;
  return ($$3|0);
 }
 $49 = (_llvm_bswap_i32(($44|0))|0);
 $50 = $49 >>> 4;
 $51 = $50 & 252645135;
 $52 = $49 << 4;
 $53 = $52 & -252645136;
 $54 = $51 | $53;
 $55 = $54 >>> 2;
 $56 = $55 & 858993459;
 $57 = $54 << 2;
 $58 = $57 & -858993460;
 $59 = $56 | $58;
 $60 = $59 >>> 1;
 $61 = $60 & 1431655765;
 $62 = $59 << 1;
 $63 = $62 & -1431655766;
 $64 = $61 | $63;
 $65 = (($$171) - ($$166))|0;
 $66 = ($65|0)>(1);
 if ($66) {
  $67 = ((($0)) + 20|0);
  $68 = HEAP32[$67>>2]|0;
  $$26777 = $$166;$$27276 = $$171;$70 = $65;
  while(1) {
   $69 = $70 >>> 1;
   $71 = (($69) + ($$26777))|0;
   $72 = (($68) + ($71<<2)|0);
   $73 = HEAP32[$72>>2]|0;
   $74 = ($73>>>0)>($64>>>0);
   $75 = $74 ? 0 : $69;
   $76 = (($75) + ($$26777))|0;
   $77 = $74 ? $69 : 0;
   $78 = (($$27276) - ($77))|0;
   $79 = (($78) - ($76))|0;
   $80 = ($79|0)>(1);
   if ($80) {
    $$26777 = $76;$$27276 = $78;$70 = $79;
   } else {
    $$267$lcssa = $76;
    break;
   }
  }
 } else {
  $$267$lcssa = $$166;
 }
 $81 = ((($0)) + 28|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = (($82) + ($$267$lcssa)|0);
 $84 = HEAP8[$83>>0]|0;
 $85 = $84 << 24 >> 24;
 $86 = ($85|0)>($$sink|0);
 $87 = ((($1)) + 4|0);
 $88 = HEAP32[$87>>2]|0;
 if ($86) {
  $104 = (($88) + ($$sink))|0;
  $105 = HEAP32[$1>>2]|0;
  $106 = ((($1)) + 16|0);
  $107 = HEAP32[$106>>2]|0;
  $108 = (($104) + 7)|0;
  $109 = $108 >> 3;
  $110 = (($107) - ($109))|0;
  $111 = ($105|0)>($110|0);
  if ($111) {
   $118 = ((($1)) + 12|0);
   HEAP32[$118>>2] = 0;
   HEAP32[$1>>2] = $107;
   $$sink$i1 = 1;
  } else {
   $112 = (($104|0) / 8)&-1;
   $113 = ((($1)) + 12|0);
   $114 = HEAP32[$113>>2]|0;
   $115 = (($114) + ($112)|0);
   HEAP32[$113>>2] = $115;
   $116 = (($112) + ($105))|0;
   HEAP32[$1>>2] = $116;
   $117 = $104 & 7;
   $$sink$i1 = $117;
  }
  HEAP32[$87>>2] = $$sink$i1;
  $$3 = -1;
  return ($$3|0);
 } else {
  $89 = (($88) + ($85))|0;
  $90 = HEAP32[$1>>2]|0;
  $91 = ((($1)) + 16|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = (($89) + 7)|0;
  $94 = $93 >> 3;
  $95 = (($92) - ($94))|0;
  $96 = ($90|0)>($95|0);
  if ($96) {
   $103 = ((($1)) + 12|0);
   HEAP32[$103>>2] = 0;
   HEAP32[$1>>2] = $92;
   $$sink$i3 = 1;
  } else {
   $97 = (($89|0) / 8)&-1;
   $98 = ((($1)) + 12|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = (($99) + ($97)|0);
   HEAP32[$98>>2] = $100;
   $101 = (($97) + ($90))|0;
   HEAP32[$1>>2] = $101;
   $102 = $89 & 7;
   $$sink$i3 = $102;
  }
  HEAP32[$87>>2] = $$sink$i3;
  $$3 = $$267$lcssa;
  return ($$3|0);
 }
 return (0)|0;
}
function _vorbis_book_decodevs_add($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$04655$us = 0, $$04753$us = 0, $$04857 = 0, $$150 = 0, $$154$us = 0, $$alloca_mul = 0, $$not = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0.0, $21 = 0.0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(0);
 if (!($6)) {
  $$150 = 0;
  STACKTOP = sp;return ($$150|0);
 }
 $7 = HEAP32[$0>>2]|0;
 $8 = (($3|0) / ($7|0))&-1;
 $9 = $8 << 2;
 $$alloca_mul = $9;
 $10 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $11 = ($8|0)>(0);
 if (!($11)) {
  $$150 = 0;
  STACKTOP = sp;return ($$150|0);
 }
 $12 = ((($0)) + 16|0);
 $$04857 = 0;
 while(1) {
  $25 = (_decode_packed_entry_number($0,$2)|0);
  $26 = ($25|0)==(-1);
  if ($26) {
   $$150 = -1;
   label = 10;
   break;
  }
  $27 = HEAP32[$12>>2]|0;
  $13 = HEAP32[$0>>2]|0;
  $28 = Math_imul($13, $25)|0;
  $29 = (($27) + ($28<<2)|0);
  $30 = (($10) + ($$04857<<2)|0);
  HEAP32[$30>>2] = $29;
  $31 = (($$04857) + 1)|0;
  $32 = ($31|0)<($8|0);
  if ($32) {
   $$04857 = $31;
  } else {
   break;
  }
 }
 if ((label|0) == 10) {
  STACKTOP = sp;return ($$150|0);
 }
 $$not = ($13|0)<(1);
 if ($$not) {
  $$150 = 0;
  STACKTOP = sp;return ($$150|0);
 } else {
  $$04655$us = 0;$$154$us = 0;
 }
 while(1) {
  $$04753$us = 0;
  while(1) {
   $14 = (($10) + ($$04753$us<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (($15) + ($$154$us<<2)|0);
   $17 = +HEAPF32[$16>>2];
   $18 = (($$04753$us) + ($$04655$us))|0;
   $19 = (($1) + ($18<<2)|0);
   $20 = +HEAPF32[$19>>2];
   $21 = $20 + $17;
   HEAPF32[$19>>2] = $21;
   $22 = (($$04753$us) + 1)|0;
   $exitcond = ($22|0)==($8|0);
   if ($exitcond) {
    break;
   } else {
    $$04753$us = $22;
   }
  }
  $23 = (($$154$us) + 1)|0;
  $24 = (($$04655$us) + ($8))|0;
  $exitcond5 = ($23|0)==($13|0);
  if ($exitcond5) {
   $$150 = 0;
   break;
  } else {
   $$04655$us = $24;$$154$us = $23;
  }
 }
 STACKTOP = sp;return ($$150|0);
}
function _vorbis_book_decodev_add($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$06595 = 0, $$06696 = 0, $$1 = 0, $$167$lcssa = 0, $$16794 = 0, $$175 = 0, $$2 = 0, $$268$ph195 = 0, $$3 = 0, $$369 = 0, $$4 = 0, $$470 = 0, $$5 = 0, $$571 = 0, $$6 = 0, $$672 = 0, $$7 = 0, $$773 = 0, $$8 = 0, $$9 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0.0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0, $74 = 0, $75 = 0.0, $76 = 0.0;
 var $77 = 0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0.0, $92 = 0, $93 = 0, $94 = 0.0;
 var $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(0);
 if (!($6)) {
  $$175 = 0;
  return ($$175|0);
 }
 $7 = HEAP32[$0>>2]|0;
 $8 = ($7|0)>(8);
 if ($8) {
  $11 = ($3|0)>(0);
  if (!($11)) {
   $$175 = 0;
   return ($$175|0);
  }
  $12 = ((($0)) + 16|0);
  $$06696 = 0;
  while(1) {
   $16 = (_decode_packed_entry_number($0,$2)|0);
   $17 = ($16|0)==(-1);
   if ($17) {
    $$175 = -1;
    label = 29;
    break;
   }
   $18 = HEAP32[$12>>2]|0;
   $14 = HEAP32[$0>>2]|0;
   $19 = Math_imul($14, $16)|0;
   $20 = (($18) + ($19<<2)|0);
   $21 = ($14|0)>(0);
   if ($21) {
    $$06595 = 0;$$16794 = $$06696;
    while(1) {
     $22 = (($$06595) + 1)|0;
     $23 = (($20) + ($$06595<<2)|0);
     $24 = +HEAPF32[$23>>2];
     $25 = (($$16794) + 1)|0;
     $26 = (($1) + ($$16794<<2)|0);
     $27 = +HEAPF32[$26>>2];
     $28 = $27 + $24;
     HEAPF32[$26>>2] = $28;
     $exitcond = ($22|0)==($14|0);
     if ($exitcond) {
      break;
     } else {
      $$06595 = $22;$$16794 = $25;
     }
    }
    $13 = (($$06696) + ($14))|0;
    $$167$lcssa = $13;
   } else {
    $$167$lcssa = $$06696;
   }
   $15 = ($$167$lcssa|0)<($3|0);
   if ($15) {
    $$06696 = $$167$lcssa;
   } else {
    $$175 = 0;
    label = 29;
    break;
   }
  }
  if ((label|0) == 29) {
   return ($$175|0);
  }
 }
 $9 = ((($0)) + 16|0);
 $10 = ($3|0)>(0);
 if ($10) {
  $$268$ph195 = 0;
 } else {
  $$175 = 0;
  return ($$175|0);
 }
 L23: while(1) {
  L25: while(1) {
   $85 = (_decode_packed_entry_number($0,$2)|0);
   $86 = ($85|0)==(-1);
   if ($86) {
    $$175 = -1;
    label = 29;
    break L23;
   }
   $87 = HEAP32[$9>>2]|0;
   $88 = HEAP32[$0>>2]|0;
   switch ($88|0) {
   case 8:  {
    label = 21;
    break L25;
    break;
   }
   case 7:  {
    label = 22;
    break L25;
    break;
   }
   case 6:  {
    label = 23;
    break L25;
    break;
   }
   case 5:  {
    label = 24;
    break L25;
    break;
   }
   case 4:  {
    label = 25;
    break L25;
    break;
   }
   case 3:  {
    label = 26;
    break L25;
    break;
   }
   case 2:  {
    label = 27;
    break L25;
    break;
   }
   case 1:  {
    label = 28;
    break L25;
    break;
   }
   default: {
   }
   }
  }
  if ((label|0) == 21) {
   label = 0;
   $89 = $85 << 3;
   $90 = (($87) + ($89<<2)|0);
   $91 = +HEAPF32[$90>>2];
   $92 = (($$268$ph195) + 1)|0;
   $93 = (($1) + ($$268$ph195<<2)|0);
   $94 = +HEAPF32[$93>>2];
   $95 = $94 + $91;
   HEAPF32[$93>>2] = $95;
   $$1 = 1;$$369 = $92;$31 = $90;
   label = 11;
  }
  else if ((label|0) == 22) {
   label = 0;
   $96 = ($85*7)|0;
   $97 = (($87) + ($96<<2)|0);
   $$1 = 0;$$369 = $$268$ph195;$31 = $97;
   label = 11;
  }
  else if ((label|0) == 23) {
   label = 0;
   $98 = ($85*6)|0;
   $99 = (($87) + ($98<<2)|0);
   $$2 = 0;$$470 = $$268$ph195;$39 = $99;
   label = 12;
  }
  else if ((label|0) == 24) {
   label = 0;
   $100 = ($85*5)|0;
   $101 = (($87) + ($100<<2)|0);
   $$3 = 0;$$571 = $$268$ph195;$47 = $101;
   label = 13;
  }
  else if ((label|0) == 25) {
   label = 0;
   $102 = $85 << 2;
   $103 = (($87) + ($102<<2)|0);
   $$4 = 0;$$672 = $$268$ph195;$55 = $103;
   label = 14;
  }
  else if ((label|0) == 26) {
   label = 0;
   $104 = ($85*3)|0;
   $105 = (($87) + ($104<<2)|0);
   $$5 = 0;$$773 = $$268$ph195;$63 = $105;
   label = 15;
  }
  else if ((label|0) == 27) {
   label = 0;
   $106 = $85 << 1;
   $107 = (($87) + ($106<<2)|0);
   $$6 = 0;$$8 = $$268$ph195;$71 = $107;
   label = 16;
  }
  else if ((label|0) == 28) {
   label = 0;
   $108 = (($87) + ($85<<2)|0);
   $$7 = 0;$$9 = $$268$ph195;$78 = $108;
  }
  if ((label|0) == 11) {
   label = 0;
   $29 = (($$1) + 1)|0;
   $30 = (($31) + ($$1<<2)|0);
   $32 = +HEAPF32[$30>>2];
   $33 = (($$369) + 1)|0;
   $34 = (($1) + ($$369<<2)|0);
   $35 = +HEAPF32[$34>>2];
   $36 = $35 + $32;
   HEAPF32[$34>>2] = $36;
   $$2 = $29;$$470 = $33;$39 = $31;
   label = 12;
  }
  if ((label|0) == 12) {
   label = 0;
   $37 = (($$2) + 1)|0;
   $38 = (($39) + ($$2<<2)|0);
   $40 = +HEAPF32[$38>>2];
   $41 = (($$470) + 1)|0;
   $42 = (($1) + ($$470<<2)|0);
   $43 = +HEAPF32[$42>>2];
   $44 = $43 + $40;
   HEAPF32[$42>>2] = $44;
   $$3 = $37;$$571 = $41;$47 = $39;
   label = 13;
  }
  if ((label|0) == 13) {
   label = 0;
   $45 = (($$3) + 1)|0;
   $46 = (($47) + ($$3<<2)|0);
   $48 = +HEAPF32[$46>>2];
   $49 = (($$571) + 1)|0;
   $50 = (($1) + ($$571<<2)|0);
   $51 = +HEAPF32[$50>>2];
   $52 = $51 + $48;
   HEAPF32[$50>>2] = $52;
   $$4 = $45;$$672 = $49;$55 = $47;
   label = 14;
  }
  if ((label|0) == 14) {
   label = 0;
   $53 = (($$4) + 1)|0;
   $54 = (($55) + ($$4<<2)|0);
   $56 = +HEAPF32[$54>>2];
   $57 = (($$672) + 1)|0;
   $58 = (($1) + ($$672<<2)|0);
   $59 = +HEAPF32[$58>>2];
   $60 = $59 + $56;
   HEAPF32[$58>>2] = $60;
   $$5 = $53;$$773 = $57;$63 = $55;
   label = 15;
  }
  if ((label|0) == 15) {
   label = 0;
   $61 = (($$5) + 1)|0;
   $62 = (($63) + ($$5<<2)|0);
   $64 = +HEAPF32[$62>>2];
   $65 = (($$773) + 1)|0;
   $66 = (($1) + ($$773<<2)|0);
   $67 = +HEAPF32[$66>>2];
   $68 = $67 + $64;
   HEAPF32[$66>>2] = $68;
   $$6 = $61;$$8 = $65;$71 = $63;
   label = 16;
  }
  if ((label|0) == 16) {
   label = 0;
   $69 = (($$6) + 1)|0;
   $70 = (($71) + ($$6<<2)|0);
   $72 = +HEAPF32[$70>>2];
   $73 = (($$8) + 1)|0;
   $74 = (($1) + ($$8<<2)|0);
   $75 = +HEAPF32[$74>>2];
   $76 = $75 + $72;
   HEAPF32[$74>>2] = $76;
   $$7 = $69;$$9 = $73;$78 = $71;
  }
  $77 = (($78) + ($$7<<2)|0);
  $79 = +HEAPF32[$77>>2];
  $80 = (($$9) + 1)|0;
  $81 = (($1) + ($$9<<2)|0);
  $82 = +HEAPF32[$81>>2];
  $83 = $82 + $79;
  HEAPF32[$81>>2] = $83;
  $84 = ($80|0)<($3|0);
  if ($84) {
   $$268$ph195 = $80;
  } else {
   $$175 = 0;
   label = 29;
   break;
  }
 }
 if ((label|0) == 29) {
  return ($$175|0);
 }
 return (0)|0;
}
function _vorbis_book_init_encode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$086$i = 0, $$$i = 0.0, $$$i19 = 0.0, $$0$lcssa$i = 0, $$0108$i = 0, $$02533$us$i = 0, $$02632$us$i = 0, $$02731$us$i = 0, $$028$us$i = 0, $$080118$i = 0, $$083123$i = 0, $$086122$i = 0, $$091113$lcssa$i = 0, $$091113145$i = 0, $$184112$i = 0, $$192$i = 0, $$192$in117$i = 0, $$192$in117$i$phi = 0, $$192116$i = 0, $$192119$i = 0;
 var $$285111$i = 0, $$293107$i = 0, $$389$ph$i = 0, $$4$i = 0, $$lcssa142$i = 0, $$phi$trans$insert$i = 0, $$pre$i = 0, $$sink$us$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0.0, $122 = 0.0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond11 = 0, $exitcond133$i = 0, $or$cond$i = 0, $or$cond$us$i = 0, $rintf = 0.0, $rintf18 = 0.0, dest = 0, label = 0;
 var sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $2 = sp;
 $3 = ((($0)) + 16|0);
 dest=$3; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($1)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($0)) + 8|0);
 HEAP32[$8>>2] = $6;
 $9 = HEAP32[$1>>2]|0;
 HEAP32[$0>>2] = $9;
 $10 = ((($1)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $6 << 2;
 $13 = (_malloc($12)|0);
 _memset(($2|0),0,132)|0;
 $14 = ($6|0)>(0);
 do {
  if ($14) {
   $15 = ((($2)) + 4|0);
   $$083123$i = 0;$$086122$i = 0;
   L3: while(1) {
    $16 = (($11) + ($$083123$i)|0);
    $17 = HEAP8[$16>>0]|0;
    $18 = $17 << 24 >> 24;
    $19 = ($17<<24>>24)>(0);
    L5: do {
     if ($19) {
      $20 = (($2) + ($18<<2)|0);
      $21 = HEAP32[$20>>2]|0;
      $22 = ($17<<24>>24)>(31);
      $23 = $21 >>> $18;
      $24 = ($23|0)==(0);
      $or$cond$i = $22 | $24;
      if (!($or$cond$i)) {
       label = 15;
       break L3;
      }
      $25 = (($$086122$i) + 1)|0;
      $26 = (($13) + ($$086122$i<<2)|0);
      HEAP32[$26>>2] = $21;
      $27 = $21 & 1;
      $28 = ($27|0)==(0);
      L8: do {
       if ($28) {
        $$091113145$i = $18;$38 = $21;$39 = $20;
        while(1) {
         $37 = (($38) + 1)|0;
         HEAP32[$39>>2] = $37;
         $40 = (($$091113145$i) + -1)|0;
         $41 = ($$091113145$i|0)>(1);
         if (!($41)) {
          break L8;
         }
         $$phi$trans$insert$i = (($2) + ($40<<2)|0);
         $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
         $42 = $$pre$i & 1;
         $43 = ($42|0)==(0);
         if ($43) {
          $$091113145$i = $40;$38 = $$pre$i;$39 = $$phi$trans$insert$i;
         } else {
          $$091113$lcssa$i = $40;$$lcssa142$i = $$phi$trans$insert$i;
          label = 7;
          break;
         }
        }
       } else {
        $$091113$lcssa$i = $18;$$lcssa142$i = $20;
        label = 7;
       }
      } while(0);
      do {
       if ((label|0) == 7) {
        label = 0;
        $30 = ($$091113$lcssa$i|0)==(1);
        if ($30) {
         $31 = HEAP32[$15>>2]|0;
         $32 = (($31) + 1)|0;
         HEAP32[$15>>2] = $32;
         break;
        } else {
         $33 = (($$091113$lcssa$i) + -1)|0;
         $34 = (($2) + ($33<<2)|0);
         $35 = HEAP32[$34>>2]|0;
         $36 = $35 << 1;
         HEAP32[$$lcssa142$i>>2] = $36;
         break;
        }
       }
      } while(0);
      $$192116$i = (($18) + 1)|0;
      $29 = ($$192116$i|0)<(33);
      if ($29) {
       $$080118$i = $21;$$192$in117$i = $18;$$192119$i = $$192116$i;
       while(1) {
        $44 = (($2) + ($$192119$i<<2)|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = $45 >>> 1;
        $47 = ($46|0)==($$080118$i|0);
        if (!($47)) {
         $$389$ph$i = $25;
         break L5;
        }
        $48 = (($2) + ($$192$in117$i<<2)|0);
        $49 = HEAP32[$48>>2]|0;
        $50 = $49 << 1;
        HEAP32[$44>>2] = $50;
        $$192$i = (($$192119$i) + 1)|0;
        $51 = ($$192$i|0)<(33);
        if ($51) {
         $$192$in117$i$phi = $$192119$i;$$080118$i = $45;$$192119$i = $$192$i;$$192$in117$i = $$192$in117$i$phi;
        } else {
         $$389$ph$i = $25;
         break;
        }
       }
      } else {
       $$389$ph$i = $25;
      }
     } else {
      $$$086$i = (($$086122$i) + 1)|0;
      $$389$ph$i = $$$086$i;
     }
    } while(0);
    $52 = (($$083123$i) + 1)|0;
    $53 = ($52|0)<($6|0);
    if ($53) {
     $$083123$i = $52;$$086122$i = $$389$ph$i;
    } else {
     break;
    }
   }
   if ((label|0) == 15) {
    _free($13);
    $$4$i = 0;
    break;
   }
   $54 = ($$389$ph$i|0)==(1);
   if ($54) {
    $55 = ((($2)) + 8|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = ($56|0)==(2);
    if ($57) {
     label = 19;
    } else {
     $$184112$i = 1;
     label = 21;
    }
   } else {
    $$184112$i = 1;
    label = 21;
   }
  } else {
   $$184112$i = 1;
   label = 21;
  }
 } while(0);
 L27: do {
  if ((label|0) == 21) {
   while(1) {
    label = 0;
    $60 = (($2) + ($$184112$i<<2)|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = (32 - ($$184112$i))|0;
    $63 = -1 >>> $62;
    $64 = $61 & $63;
    $65 = ($64|0)==(0);
    $58 = (($$184112$i) + 1)|0;
    if (!($65)) {
     break;
    }
    $59 = ($58|0)<(33);
    if ($59) {
     $$184112$i = $58;
     label = 21;
    } else {
     label = 19;
     break L27;
    }
   }
   _free($13);
   $$4$i = 0;
  }
 } while(0);
 if ((label|0) == 19) {
  if ($14) {
   $$285111$i = 0;
   while(1) {
    $66 = (($11) + ($$285111$i)|0);
    $67 = HEAP8[$66>>0]|0;
    $68 = ($67<<24>>24)>(0);
    $69 = (($13) + ($$285111$i<<2)|0);
    if ($68) {
     $70 = HEAP32[$69>>2]|0;
     $71 = $67 << 24 >> 24;
     $$0108$i = 0;$$293107$i = 0;
     while(1) {
      $72 = $$0108$i << 1;
      $73 = $70 >>> $$293107$i;
      $74 = $73 & 1;
      $75 = $74 | $72;
      $76 = (($$293107$i) + 1)|0;
      $exitcond11 = ($76|0)==($71|0);
      if ($exitcond11) {
       $$0$lcssa$i = $75;
       break;
      } else {
       $$0108$i = $75;$$293107$i = $76;
      }
     }
    } else {
     $$0$lcssa$i = 0;
    }
    $77 = (($$285111$i) + 1)|0;
    HEAP32[$69>>2] = $$0$lcssa$i;
    $exitcond133$i = ($77|0)==($6|0);
    if ($exitcond133$i) {
     $$4$i = $13;
     break;
    } else {
     $$285111$i = $77;
    }
   }
  } else {
   $$4$i = $13;
  }
 }
 $78 = ((($0)) + 20|0);
 HEAP32[$78>>2] = $$4$i;
 $79 = HEAP32[$5>>2]|0;
 $80 = HEAP32[$1>>2]|0;
 $81 = ($80|0)>(0);
 if (!($81)) {
  while(1) {
  }
 }
 $82 = (+($79|0));
 $83 = $82;
 $84 = (+($80|0));
 $85 = 1.0 / $84;
 $86 = $85;
 $87 = (+Math_pow((+$83),(+$86)));
 $88 = (+Math_floor((+$87)));
 $89 = (~~(($88)));
 $$028$us$i = $89;
 while(1) {
  $90 = (($$028$us$i) + 1)|0;
  $$02533$us$i = 0;$$02632$us$i = 1;$$02731$us$i = 1;
  while(1) {
   $91 = Math_imul($$02731$us$i, $$028$us$i)|0;
   $92 = Math_imul($$02632$us$i, $90)|0;
   $93 = (($$02533$us$i) + 1)|0;
   $exitcond = ($93|0)==($80|0);
   if ($exitcond) {
    break;
   } else {
    $$02533$us$i = $93;$$02632$us$i = $92;$$02731$us$i = $91;
   }
  }
  $94 = ($91|0)<=($79|0);
  $95 = ($92|0)>($79|0);
  $or$cond$us$i = $95 & $94;
  $96 = ($91|0)>($79|0);
  $$sink$us$i = $96 ? -1 : 1;
  $97 = (($$sink$us$i) + ($$028$us$i))|0;
  if ($or$cond$us$i) {
   break;
  } else {
   $$028$us$i = $97;
  }
 }
 $98 = ((($0)) + 44|0);
 HEAP32[$98>>2] = $$028$us$i;
 $99 = ((($1)) + 16|0);
 $100 = HEAP32[$99>>2]|0;
 $101 = $100 & 2097151;
 $102 = (+($101|0));
 $103 = $100 >>> 21;
 $104 = $103 & 1023;
 $105 = ($100|0)<(0);
 $106 = -$102;
 $$$i = $105 ? $106 : $102;
 $107 = (($104) + -788)|0;
 $108 = (+_ldexp($$$i,$107));
 $109 = $108;
 $rintf = (+_rintf($109));
 $110 = (~~(($rintf)));
 $111 = ((($0)) + 48|0);
 HEAP32[$111>>2] = $110;
 $112 = ((($1)) + 20|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = $113 & 2097151;
 $115 = (+($114|0));
 $116 = $113 >>> 21;
 $117 = $116 & 1023;
 $118 = ($113|0)<(0);
 $119 = -$115;
 $$$i19 = $118 ? $119 : $115;
 $120 = (($117) + -788)|0;
 $121 = (+_ldexp($$$i19,$120));
 $122 = $121;
 $rintf18 = (+_rintf($122));
 $123 = (~~(($rintf18)));
 $124 = ((($0)) + 52|0);
 HEAP32[$124>>2] = $123;
 STACKTOP = sp;return;
}
function _mdct_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$08696 = 0, $$08891 = 0, $$08993 = 0, $$092 = 0, $$1 = 0, $$18794 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $21 = 0, $22 = 0.0;
 var $23 = 0.0, $24 = 0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0;
 var $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0.0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($1|0) / 4)&-1;
 $3 = $2 << 2;
 $4 = (_malloc($3)|0);
 $5 = (($2) + ($1))|0;
 $6 = $5 << 2;
 $7 = (_malloc($6)|0);
 $8 = $1 >> 1;
 $9 = (+($1|0));
 $10 = $9;
 $11 = (+Math_log((+$10)));
 $12 = $11 * 1.4426950408889634;
 $13 = (+_rint($12));
 $14 = (~~(($13)));
 $15 = ((($0)) + 4|0);
 HEAP32[$15>>2] = $14;
 HEAP32[$0>>2] = $1;
 $16 = ((($0)) + 8|0);
 HEAP32[$16>>2] = $7;
 $17 = ((($0)) + 12|0);
 HEAP32[$17>>2] = $4;
 $18 = ($1|0)>(3);
 if (!($18)) {
  $89 = 4.0 / $9;
  $90 = ((($0)) + 16|0);
  HEAPF32[$90>>2] = $89;
  return;
 }
 $19 = (+($1|0));
 $20 = 3.1415926535897931 / $19;
 $21 = $1 << 1;
 $22 = (+($21|0));
 $23 = 3.1415926535897931 / $22;
 $$08696 = 0;
 while(1) {
  $26 = $$08696 << 2;
  $27 = (+($26|0));
  $28 = $27 * $20;
  $29 = (+Math_cos((+$28)));
  $30 = $29;
  $31 = $$08696 << 1;
  $32 = (($7) + ($31<<2)|0);
  HEAPF32[$32>>2] = $30;
  $33 = (+Math_sin((+$28)));
  $34 = $33;
  $35 = -$34;
  $36 = $31 | 1;
  $37 = (($7) + ($36<<2)|0);
  HEAPF32[$37>>2] = $35;
  $38 = (+($36|0));
  $39 = $38 * $23;
  $40 = (+Math_cos((+$39)));
  $41 = $40;
  $42 = (($31) + ($8))|0;
  $43 = (($7) + ($42<<2)|0);
  HEAPF32[$43>>2] = $41;
  $44 = (+Math_sin((+$39)));
  $45 = $44;
  $46 = (($42) + 1)|0;
  $47 = (($7) + ($46<<2)|0);
  HEAPF32[$47>>2] = $45;
  $48 = (($$08696) + 1)|0;
  $49 = ($48|0)<($2|0);
  if ($49) {
   $$08696 = $48;
  } else {
   break;
  }
 }
 $24 = (($1|0) / 8)&-1;
 $25 = ($1|0)>(7);
 if ($25) {
  $$18794 = 0;
 } else {
  $89 = 4.0 / $9;
  $90 = ((($0)) + 16|0);
  HEAPF32[$90>>2] = $89;
  return;
 }
 while(1) {
  $50 = $$18794 << 2;
  $51 = $50 | 2;
  $52 = (+($51|0));
  $53 = $52 * $20;
  $54 = (+Math_cos((+$53)));
  $55 = $54 * 0.5;
  $56 = $55;
  $57 = $$18794 << 1;
  $58 = (($57) + ($1))|0;
  $59 = (($7) + ($58<<2)|0);
  HEAPF32[$59>>2] = $56;
  $60 = (+Math_sin((+$53)));
  $61 = $60 * -0.5;
  $62 = $61;
  $63 = (($58) + 1)|0;
  $64 = (($7) + ($63<<2)|0);
  HEAPF32[$64>>2] = $62;
  $65 = (($$18794) + 1)|0;
  $66 = ($65|0)<($24|0);
  if ($66) {
   $$18794 = $65;
  } else {
   break;
  }
 }
 $67 = (($14) + -1)|0;
 $68 = 1 << $67;
 $69 = (($68) + -1)|0;
 $70 = (($14) + -2)|0;
 $71 = 1 << $70;
 $$08993 = 0;
 while(1) {
  $$08891 = 0;$$092 = 0;$73 = $71;
  while(1) {
   $72 = $73 & $$08993;
   $74 = ($72|0)==(0);
   $75 = 1 << $$08891;
   $76 = $74 ? 0 : $75;
   $$1 = $76 | $$092;
   $77 = (($$08891) + 1)|0;
   $78 = $71 >> $77;
   $79 = ($78|0)==(0);
   if ($79) {
    break;
   } else {
    $$08891 = $77;$$092 = $$1;$73 = $78;
   }
  }
  $80 = $$1 ^ -1;
  $81 = $69 & $80;
  $82 = (($81) + -1)|0;
  $83 = $$08993 << 1;
  $84 = (($4) + ($83<<2)|0);
  HEAP32[$84>>2] = $82;
  $85 = $83 | 1;
  $86 = (($4) + ($85<<2)|0);
  HEAP32[$86>>2] = $$1;
  $87 = (($$08993) + 1)|0;
  $88 = ($87|0)<($24|0);
  if ($88) {
   $$08993 = $87;
  } else {
   break;
  }
 }
 $89 = 4.0 / $9;
 $90 = ((($0)) + 16|0);
 HEAPF32[$90>>2] = $89;
 return;
}
function _mdct_butterflies($$0$1$val,$$0$2$val,$0,$1) {
 $$0$1$val = $$0$1$val|0;
 $$0$2$val = $$0$2$val|0;
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i33 = 0, $$03 = 0, $$0306 = 0, $$087$i = 0, $$088$i = 0, $$094$i = 0, $$095$i = 0, $$12 = 0, $$pn$i = 0, $$pn$i32 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0;
 var $126 = 0.0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0.0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0;
 var $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0, $159 = 0.0, $16 = 0.0, $160 = 0.0, $161 = 0.0;
 var $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0.0, $170 = 0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0.0, $175 = 0, $176 = 0.0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0.0;
 var $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0.0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0;
 var $199 = 0.0, $2 = 0, $20 = 0.0, $200 = 0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $206 = 0, $207 = 0.0, $208 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0.0;
 var $216 = 0.0, $217 = 0, $218 = 0, $219 = 0, $22 = 0.0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0.0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0.0, $231 = 0, $232 = 0.0, $233 = 0.0;
 var $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0.0, $238 = 0, $239 = 0.0, $24 = 0.0, $240 = 0.0, $241 = 0, $242 = 0.0, $243 = 0, $244 = 0.0, $245 = 0.0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0.0, $250 = 0.0, $251 = 0.0;
 var $252 = 0.0, $253 = 0.0, $254 = 0, $255 = 0.0, $256 = 0, $257 = 0.0, $258 = 0.0, $259 = 0, $26 = 0.0, $260 = 0.0, $261 = 0, $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0.0;
 var $270 = 0, $271 = 0.0, $272 = 0, $273 = 0.0, $274 = 0.0, $275 = 0, $276 = 0.0, $277 = 0, $278 = 0.0, $279 = 0.0, $28 = 0.0, $280 = 0.0, $281 = 0.0, $282 = 0.0, $283 = 0.0, $284 = 0.0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0;
 var $289 = 0.0, $29 = 0.0, $290 = 0, $291 = 0.0, $292 = 0.0, $293 = 0, $294 = 0.0, $295 = 0, $296 = 0.0, $297 = 0.0, $298 = 0.0, $299 = 0.0, $3 = 0, $30 = 0.0, $300 = 0, $301 = 0.0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0;
 var $306 = 0.0, $307 = 0, $308 = 0.0, $309 = 0.0, $31 = 0.0, $310 = 0.0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0, $319 = 0.0, $32 = 0, $320 = 0, $321 = 0.0, $322 = 0.0, $323 = 0;
 var $324 = 0.0, $325 = 0, $326 = 0.0, $327 = 0.0, $328 = 0.0, $329 = 0.0, $33 = 0.0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0.0, $334 = 0.0, $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0, $339 = 0.0, $34 = 0, $340 = 0, $341 = 0.0;
 var $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0.0, $35 = 0.0, $350 = 0.0, $351 = 0.0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0.0, $356 = 0.0, $357 = 0.0, $358 = 0.0, $359 = 0.0, $36 = 0.0;
 var $360 = 0.0, $361 = 0.0, $362 = 0.0, $363 = 0.0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0.0, $368 = 0.0, $369 = 0.0, $37 = 0, $370 = 0.0, $371 = 0.0, $372 = 0.0, $373 = 0.0, $374 = 0.0, $375 = 0.0, $376 = 0.0, $377 = 0.0, $378 = 0.0;
 var $379 = 0.0, $38 = 0.0, $380 = 0.0, $381 = 0.0, $382 = 0.0, $383 = 0.0, $384 = 0.0, $385 = 0.0, $386 = 0.0, $387 = 0.0, $388 = 0.0, $389 = 0.0, $39 = 0, $390 = 0.0, $391 = 0.0, $392 = 0.0, $393 = 0.0, $394 = 0.0, $395 = 0.0, $396 = 0.0;
 var $397 = 0.0, $398 = 0.0, $399 = 0.0, $4 = 0, $40 = 0.0, $400 = 0.0, $401 = 0.0, $402 = 0.0, $403 = 0.0, $404 = 0.0, $405 = 0.0, $406 = 0.0, $407 = 0.0, $408 = 0.0, $409 = 0.0, $41 = 0.0, $410 = 0.0, $411 = 0.0, $412 = 0.0, $413 = 0.0;
 var $414 = 0.0, $415 = 0.0, $416 = 0.0, $417 = 0.0, $418 = 0.0, $419 = 0.0, $42 = 0.0, $420 = 0.0, $421 = 0.0, $422 = 0.0, $423 = 0.0, $424 = 0.0, $425 = 0.0, $426 = 0.0, $427 = 0.0, $428 = 0.0, $429 = 0.0, $43 = 0.0, $430 = 0.0, $431 = 0.0;
 var $432 = 0.0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0.0, $437 = 0.0, $438 = 0.0, $439 = 0.0, $44 = 0.0, $440 = 0.0, $441 = 0.0, $442 = 0.0, $443 = 0.0, $444 = 0.0, $445 = 0.0, $446 = 0.0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $45 = 0;
 var $450 = 0.0, $451 = 0.0, $452 = 0.0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $46 = 0.0, $460 = 0.0, $461 = 0.0, $462 = 0.0, $463 = 0.0, $464 = 0.0, $465 = 0.0, $466 = 0.0, $467 = 0.0, $468 = 0.0;
 var $469 = 0.0, $47 = 0.0, $470 = 0.0, $471 = 0.0, $472 = 0.0, $473 = 0.0, $474 = 0.0, $475 = 0.0, $476 = 0.0, $477 = 0.0, $478 = 0.0, $479 = 0.0, $48 = 0, $480 = 0.0, $481 = 0.0, $482 = 0.0, $483 = 0, $484 = 0, $49 = 0.0, $5 = 0;
 var $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0, $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0;
 var $69 = 0.0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0.0, $73 = 0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0.0;
 var $87 = 0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($$0$1$val) + -6)|0;
 $3 = ($$0$1$val|0)>(6);
 if ($3) {
  $4 = (($0) + ($1<<2)|0);
  $5 = $1 >> 1;
  $6 = (($0) + ($5<<2)|0);
  $7 = ((($6)) + -32|0);
  $$0$i = $$0$2$val;$$088$i = $7;$$pn$i = $4;
  while(1) {
   $$087$i = ((($$pn$i)) + -32|0);
   $8 = ((($$pn$i)) + -8|0);
   $9 = +HEAPF32[$8>>2];
   $10 = ((($$088$i)) + 24|0);
   $11 = +HEAPF32[$10>>2];
   $12 = $9 - $11;
   $13 = ((($$pn$i)) + -4|0);
   $14 = +HEAPF32[$13>>2];
   $15 = ((($$088$i)) + 28|0);
   $16 = +HEAPF32[$15>>2];
   $17 = $14 - $16;
   $18 = $11 + $9;
   HEAPF32[$8>>2] = $18;
   $19 = +HEAPF32[$15>>2];
   $20 = $19 + $14;
   HEAPF32[$13>>2] = $20;
   $21 = ((($$0$i)) + 4|0);
   $22 = +HEAPF32[$21>>2];
   $23 = $22 * $17;
   $24 = +HEAPF32[$$0$i>>2];
   $25 = $24 * $12;
   $26 = $25 + $23;
   HEAPF32[$10>>2] = $26;
   $27 = +HEAPF32[$$0$i>>2];
   $28 = $27 * $17;
   $29 = +HEAPF32[$21>>2];
   $30 = $29 * $12;
   $31 = $28 - $30;
   HEAPF32[$15>>2] = $31;
   $32 = ((($$pn$i)) + -16|0);
   $33 = +HEAPF32[$32>>2];
   $34 = ((($$088$i)) + 16|0);
   $35 = +HEAPF32[$34>>2];
   $36 = $33 - $35;
   $37 = ((($$pn$i)) + -12|0);
   $38 = +HEAPF32[$37>>2];
   $39 = ((($$088$i)) + 20|0);
   $40 = +HEAPF32[$39>>2];
   $41 = $38 - $40;
   $42 = $35 + $33;
   HEAPF32[$32>>2] = $42;
   $43 = +HEAPF32[$39>>2];
   $44 = $43 + $38;
   HEAPF32[$37>>2] = $44;
   $45 = ((($$0$i)) + 20|0);
   $46 = +HEAPF32[$45>>2];
   $47 = $46 * $41;
   $48 = ((($$0$i)) + 16|0);
   $49 = +HEAPF32[$48>>2];
   $50 = $49 * $36;
   $51 = $50 + $47;
   HEAPF32[$34>>2] = $51;
   $52 = +HEAPF32[$48>>2];
   $53 = $52 * $41;
   $54 = +HEAPF32[$45>>2];
   $55 = $54 * $36;
   $56 = $53 - $55;
   HEAPF32[$39>>2] = $56;
   $57 = ((($$pn$i)) + -24|0);
   $58 = +HEAPF32[$57>>2];
   $59 = ((($$088$i)) + 8|0);
   $60 = +HEAPF32[$59>>2];
   $61 = $58 - $60;
   $62 = ((($$pn$i)) + -20|0);
   $63 = +HEAPF32[$62>>2];
   $64 = ((($$088$i)) + 12|0);
   $65 = +HEAPF32[$64>>2];
   $66 = $63 - $65;
   $67 = $60 + $58;
   HEAPF32[$57>>2] = $67;
   $68 = +HEAPF32[$64>>2];
   $69 = $68 + $63;
   HEAPF32[$62>>2] = $69;
   $70 = ((($$0$i)) + 36|0);
   $71 = +HEAPF32[$70>>2];
   $72 = $71 * $66;
   $73 = ((($$0$i)) + 32|0);
   $74 = +HEAPF32[$73>>2];
   $75 = $74 * $61;
   $76 = $75 + $72;
   HEAPF32[$59>>2] = $76;
   $77 = +HEAPF32[$73>>2];
   $78 = $77 * $66;
   $79 = +HEAPF32[$70>>2];
   $80 = $79 * $61;
   $81 = $78 - $80;
   HEAPF32[$64>>2] = $81;
   $82 = +HEAPF32[$$087$i>>2];
   $83 = +HEAPF32[$$088$i>>2];
   $84 = $82 - $83;
   $85 = ((($$pn$i)) + -28|0);
   $86 = +HEAPF32[$85>>2];
   $87 = ((($$088$i)) + 4|0);
   $88 = +HEAPF32[$87>>2];
   $89 = $86 - $88;
   $90 = $83 + $82;
   HEAPF32[$$087$i>>2] = $90;
   $91 = +HEAPF32[$87>>2];
   $92 = $91 + $86;
   HEAPF32[$85>>2] = $92;
   $93 = ((($$0$i)) + 52|0);
   $94 = +HEAPF32[$93>>2];
   $95 = $94 * $89;
   $96 = ((($$0$i)) + 48|0);
   $97 = +HEAPF32[$96>>2];
   $98 = $97 * $84;
   $99 = $98 + $95;
   HEAPF32[$$088$i>>2] = $99;
   $100 = +HEAPF32[$96>>2];
   $101 = $100 * $89;
   $102 = +HEAPF32[$93>>2];
   $103 = $102 * $84;
   $104 = $101 - $103;
   HEAPF32[$87>>2] = $104;
   $105 = ((($$088$i)) + -32|0);
   $106 = ((($$0$i)) + 64|0);
   $107 = ($105>>>0)<($0>>>0);
   if ($107) {
    break;
   } else {
    $$0$i = $106;$$088$i = $105;$$pn$i = $$087$i;
   }
  }
 }
 $108 = ($2|0)>(1);
 if ($108) {
  $$0306 = 1;
  while(1) {
   $109 = 1 << $$0306;
   $110 = ($$0306|0)==(31);
   if (!($110)) {
    $111 = $1 >> $$0306;
    $112 = 4 << $$0306;
    $113 = $111 >> 1;
    $$03 = 0;
    while(1) {
     $115 = Math_imul($$03, $111)|0;
     $116 = (($0) + ($115<<2)|0);
     $117 = (($116) + ($111<<2)|0);
     $118 = (($116) + ($113<<2)|0);
     $119 = ((($118)) + -32|0);
     $$0$i33 = $$0$2$val;$$095$i = $119;$$pn$i32 = $117;
     while(1) {
      $$094$i = ((($$pn$i32)) + -32|0);
      $120 = ((($$pn$i32)) + -8|0);
      $121 = +HEAPF32[$120>>2];
      $122 = ((($$095$i)) + 24|0);
      $123 = +HEAPF32[$122>>2];
      $124 = $121 - $123;
      $125 = ((($$pn$i32)) + -4|0);
      $126 = +HEAPF32[$125>>2];
      $127 = ((($$095$i)) + 28|0);
      $128 = +HEAPF32[$127>>2];
      $129 = $126 - $128;
      $130 = $123 + $121;
      HEAPF32[$120>>2] = $130;
      $131 = +HEAPF32[$127>>2];
      $132 = $131 + $126;
      HEAPF32[$125>>2] = $132;
      $133 = ((($$0$i33)) + 4|0);
      $134 = +HEAPF32[$133>>2];
      $135 = $134 * $129;
      $136 = +HEAPF32[$$0$i33>>2];
      $137 = $136 * $124;
      $138 = $137 + $135;
      HEAPF32[$122>>2] = $138;
      $139 = +HEAPF32[$$0$i33>>2];
      $140 = $139 * $129;
      $141 = +HEAPF32[$133>>2];
      $142 = $141 * $124;
      $143 = $140 - $142;
      HEAPF32[$127>>2] = $143;
      $144 = (($$0$i33) + ($112<<2)|0);
      $145 = ((($$pn$i32)) + -16|0);
      $146 = +HEAPF32[$145>>2];
      $147 = ((($$095$i)) + 16|0);
      $148 = +HEAPF32[$147>>2];
      $149 = $146 - $148;
      $150 = ((($$pn$i32)) + -12|0);
      $151 = +HEAPF32[$150>>2];
      $152 = ((($$095$i)) + 20|0);
      $153 = +HEAPF32[$152>>2];
      $154 = $151 - $153;
      $155 = $148 + $146;
      HEAPF32[$145>>2] = $155;
      $156 = +HEAPF32[$152>>2];
      $157 = $156 + $151;
      HEAPF32[$150>>2] = $157;
      $158 = ((($144)) + 4|0);
      $159 = +HEAPF32[$158>>2];
      $160 = $159 * $154;
      $161 = +HEAPF32[$144>>2];
      $162 = $161 * $149;
      $163 = $162 + $160;
      HEAPF32[$147>>2] = $163;
      $164 = +HEAPF32[$144>>2];
      $165 = $164 * $154;
      $166 = +HEAPF32[$158>>2];
      $167 = $166 * $149;
      $168 = $165 - $167;
      HEAPF32[$152>>2] = $168;
      $169 = (($144) + ($112<<2)|0);
      $170 = ((($$pn$i32)) + -24|0);
      $171 = +HEAPF32[$170>>2];
      $172 = ((($$095$i)) + 8|0);
      $173 = +HEAPF32[$172>>2];
      $174 = $171 - $173;
      $175 = ((($$pn$i32)) + -20|0);
      $176 = +HEAPF32[$175>>2];
      $177 = ((($$095$i)) + 12|0);
      $178 = +HEAPF32[$177>>2];
      $179 = $176 - $178;
      $180 = $173 + $171;
      HEAPF32[$170>>2] = $180;
      $181 = +HEAPF32[$177>>2];
      $182 = $181 + $176;
      HEAPF32[$175>>2] = $182;
      $183 = ((($169)) + 4|0);
      $184 = +HEAPF32[$183>>2];
      $185 = $184 * $179;
      $186 = +HEAPF32[$169>>2];
      $187 = $186 * $174;
      $188 = $187 + $185;
      HEAPF32[$172>>2] = $188;
      $189 = +HEAPF32[$169>>2];
      $190 = $189 * $179;
      $191 = +HEAPF32[$183>>2];
      $192 = $191 * $174;
      $193 = $190 - $192;
      HEAPF32[$177>>2] = $193;
      $194 = (($169) + ($112<<2)|0);
      $195 = +HEAPF32[$$094$i>>2];
      $196 = +HEAPF32[$$095$i>>2];
      $197 = $195 - $196;
      $198 = ((($$pn$i32)) + -28|0);
      $199 = +HEAPF32[$198>>2];
      $200 = ((($$095$i)) + 4|0);
      $201 = +HEAPF32[$200>>2];
      $202 = $199 - $201;
      $203 = $196 + $195;
      HEAPF32[$$094$i>>2] = $203;
      $204 = +HEAPF32[$200>>2];
      $205 = $204 + $199;
      HEAPF32[$198>>2] = $205;
      $206 = ((($194)) + 4|0);
      $207 = +HEAPF32[$206>>2];
      $208 = $207 * $202;
      $209 = +HEAPF32[$194>>2];
      $210 = $209 * $197;
      $211 = $210 + $208;
      HEAPF32[$$095$i>>2] = $211;
      $212 = +HEAPF32[$194>>2];
      $213 = $212 * $202;
      $214 = +HEAPF32[$206>>2];
      $215 = $214 * $197;
      $216 = $213 - $215;
      HEAPF32[$200>>2] = $216;
      $217 = (($194) + ($112<<2)|0);
      $218 = ((($$095$i)) + -32|0);
      $219 = ($218>>>0)<($116>>>0);
      if ($219) {
       break;
      } else {
       $$0$i33 = $217;$$095$i = $218;$$pn$i32 = $$094$i;
      }
     }
     $220 = (($$03) + 1)|0;
     $221 = ($220|0)<($109|0);
     if ($221) {
      $$03 = $220;
     } else {
      break;
     }
    }
   }
   $222 = (($$0306) + 1)|0;
   $exitcond = ($222|0)==($2|0);
   if ($exitcond) {
    break;
   } else {
    $$0306 = $222;
   }
  }
 }
 $114 = ($1|0)>(0);
 if ($114) {
  $$12 = 0;
 } else {
  return;
 }
 while(1) {
  $223 = (($0) + ($$12<<2)|0);
  $224 = ((($223)) + 120|0);
  $225 = +HEAPF32[$224>>2];
  $226 = ((($223)) + 56|0);
  $227 = +HEAPF32[$226>>2];
  $228 = $225 - $227;
  $229 = ((($223)) + 124|0);
  $230 = +HEAPF32[$229>>2];
  $231 = ((($223)) + 60|0);
  $232 = +HEAPF32[$231>>2];
  $233 = $230 - $232;
  $234 = $227 + $225;
  HEAPF32[$224>>2] = $234;
  $235 = $232 + $230;
  HEAPF32[$229>>2] = $235;
  HEAPF32[$226>>2] = $228;
  HEAPF32[$231>>2] = $233;
  $236 = ((($223)) + 112|0);
  $237 = +HEAPF32[$236>>2];
  $238 = ((($223)) + 48|0);
  $239 = +HEAPF32[$238>>2];
  $240 = $237 - $239;
  $241 = ((($223)) + 116|0);
  $242 = +HEAPF32[$241>>2];
  $243 = ((($223)) + 52|0);
  $244 = +HEAPF32[$243>>2];
  $245 = $242 - $244;
  $246 = $239 + $237;
  HEAPF32[$236>>2] = $246;
  $247 = $244 + $242;
  HEAPF32[$241>>2] = $247;
  $248 = $240 * 0.92387950420379638;
  $249 = $245 * 0.38268342614173889;
  $250 = $248 - $249;
  HEAPF32[$238>>2] = $250;
  $251 = $240 * 0.38268342614173889;
  $252 = $245 * 0.92387950420379638;
  $253 = $252 + $251;
  HEAPF32[$243>>2] = $253;
  $254 = ((($223)) + 104|0);
  $255 = +HEAPF32[$254>>2];
  $256 = ((($223)) + 40|0);
  $257 = +HEAPF32[$256>>2];
  $258 = $255 - $257;
  $259 = ((($223)) + 108|0);
  $260 = +HEAPF32[$259>>2];
  $261 = ((($223)) + 44|0);
  $262 = +HEAPF32[$261>>2];
  $263 = $260 - $262;
  $264 = $257 + $255;
  HEAPF32[$254>>2] = $264;
  $265 = $262 + $260;
  HEAPF32[$259>>2] = $265;
  $266 = $258 - $263;
  $267 = $266 * 0.70710676908493042;
  HEAPF32[$256>>2] = $267;
  $268 = $263 + $258;
  $269 = $268 * 0.70710676908493042;
  HEAPF32[$261>>2] = $269;
  $270 = ((($223)) + 96|0);
  $271 = +HEAPF32[$270>>2];
  $272 = ((($223)) + 32|0);
  $273 = +HEAPF32[$272>>2];
  $274 = $271 - $273;
  $275 = ((($223)) + 100|0);
  $276 = +HEAPF32[$275>>2];
  $277 = ((($223)) + 36|0);
  $278 = +HEAPF32[$277>>2];
  $279 = $276 - $278;
  $280 = $273 + $271;
  HEAPF32[$270>>2] = $280;
  $281 = $278 + $276;
  HEAPF32[$275>>2] = $281;
  $282 = $274 * 0.38268342614173889;
  $283 = $279 * 0.92387950420379638;
  $284 = $282 - $283;
  HEAPF32[$272>>2] = $284;
  $285 = $279 * 0.38268342614173889;
  $286 = $274 * 0.92387950420379638;
  $287 = $285 + $286;
  HEAPF32[$277>>2] = $287;
  $288 = ((($223)) + 88|0);
  $289 = +HEAPF32[$288>>2];
  $290 = ((($223)) + 24|0);
  $291 = +HEAPF32[$290>>2];
  $292 = $289 - $291;
  $293 = ((($223)) + 28|0);
  $294 = +HEAPF32[$293>>2];
  $295 = ((($223)) + 92|0);
  $296 = +HEAPF32[$295>>2];
  $297 = $294 - $296;
  $298 = $291 + $289;
  HEAPF32[$288>>2] = $298;
  $299 = $296 + $294;
  HEAPF32[$295>>2] = $299;
  HEAPF32[$293>>2] = $292;
  $300 = ((($223)) + 16|0);
  $301 = +HEAPF32[$300>>2];
  $302 = ((($223)) + 80|0);
  $303 = +HEAPF32[$302>>2];
  $304 = $301 - $303;
  $305 = ((($223)) + 20|0);
  $306 = +HEAPF32[$305>>2];
  $307 = ((($223)) + 84|0);
  $308 = +HEAPF32[$307>>2];
  $309 = $306 - $308;
  $310 = $303 + $301;
  HEAPF32[$302>>2] = $310;
  $311 = $308 + $306;
  HEAPF32[$307>>2] = $311;
  $312 = $309 * 0.92387950420379638;
  $313 = $304 * 0.38268342614173889;
  $314 = $312 + $313;
  $315 = $309 * 0.38268342614173889;
  $316 = $304 * 0.92387950420379638;
  $317 = $315 - $316;
  $318 = ((($223)) + 8|0);
  $319 = +HEAPF32[$318>>2];
  $320 = ((($223)) + 72|0);
  $321 = +HEAPF32[$320>>2];
  $322 = $319 - $321;
  $323 = ((($223)) + 12|0);
  $324 = +HEAPF32[$323>>2];
  $325 = ((($223)) + 76|0);
  $326 = +HEAPF32[$325>>2];
  $327 = $324 - $326;
  $328 = $321 + $319;
  HEAPF32[$320>>2] = $328;
  $329 = $326 + $324;
  HEAPF32[$325>>2] = $329;
  $330 = $327 + $322;
  $331 = $330 * 0.70710676908493042;
  $332 = $327 - $322;
  $333 = $332 * 0.70710676908493042;
  $334 = +HEAPF32[$223>>2];
  $335 = ((($223)) + 64|0);
  $336 = +HEAPF32[$335>>2];
  $337 = $334 - $336;
  $338 = ((($223)) + 4|0);
  $339 = +HEAPF32[$338>>2];
  $340 = ((($223)) + 68|0);
  $341 = +HEAPF32[$340>>2];
  $342 = $339 - $341;
  $343 = $336 + $334;
  HEAPF32[$335>>2] = $343;
  $344 = $341 + $339;
  HEAPF32[$340>>2] = $344;
  $345 = $342 * 0.38268342614173889;
  $346 = $337 * 0.92387950420379638;
  $347 = $345 + $346;
  $348 = $342 * 0.92387950420379638;
  $349 = $337 * 0.38268342614173889;
  $350 = $348 - $349;
  $351 = $350 - $287;
  $352 = $347 - $284;
  $353 = $347 + $284;
  $354 = $350 + $287;
  $355 = $352 + $351;
  $356 = $351 - $352;
  $357 = +HEAPF32[$261>>2];
  $358 = $333 - $357;
  $359 = +HEAPF32[$256>>2];
  $360 = $359 - $331;
  $361 = $359 + $331;
  $362 = $357 + $333;
  $363 = +HEAPF32[$238>>2];
  $364 = $363 - $314;
  $365 = +HEAPF32[$243>>2];
  $366 = $365 - $317;
  $367 = $363 + $314;
  $368 = $365 + $317;
  $369 = $364 - $366;
  $370 = $366 + $364;
  $371 = +HEAPF32[$226>>2];
  $372 = $371 - $297;
  $373 = +HEAPF32[$231>>2];
  $374 = $373 - $292;
  $375 = $371 + $297;
  $376 = $373 + $292;
  $377 = $372 + $358;
  $378 = $372 - $358;
  $379 = $369 + $355;
  $380 = $379 * 0.70710676908493042;
  $381 = $369 - $355;
  $382 = $381 * 0.70710676908493042;
  $383 = $380 + $377;
  HEAPF32[$290>>2] = $383;
  $384 = $377 - $380;
  HEAPF32[$300>>2] = $384;
  $385 = $370 - $356;
  $386 = $385 * 0.70710676908493042;
  $387 = $374 - $360;
  $388 = $386 + $378;
  HEAPF32[$223>>2] = $388;
  $389 = $378 - $386;
  HEAPF32[$318>>2] = $389;
  $390 = $370 + $356;
  $391 = $390 * 0.70710676908493042;
  $392 = $374 + $360;
  $393 = $387 + $382;
  HEAPF32[$323>>2] = $393;
  $394 = $387 - $382;
  HEAPF32[$338>>2] = $394;
  $395 = $392 + $391;
  HEAPF32[$293>>2] = $395;
  $396 = $392 - $391;
  HEAPF32[$305>>2] = $396;
  $397 = $375 + $361;
  $398 = $375 - $361;
  $399 = $367 + $353;
  $400 = $367 - $353;
  $401 = $397 + $399;
  HEAPF32[$226>>2] = $401;
  $402 = $397 - $399;
  HEAPF32[$238>>2] = $402;
  $403 = $368 - $354;
  $404 = $376 - $362;
  $405 = $398 + $403;
  HEAPF32[$272>>2] = $405;
  $406 = $398 - $403;
  HEAPF32[$256>>2] = $406;
  $407 = $368 + $354;
  $408 = $376 + $362;
  $409 = $404 + $400;
  HEAPF32[$261>>2] = $409;
  $410 = $404 - $400;
  HEAPF32[$277>>2] = $410;
  $411 = $408 + $407;
  HEAPF32[$231>>2] = $411;
  $412 = $408 - $407;
  HEAPF32[$243>>2] = $412;
  $413 = +HEAPF32[$275>>2];
  $414 = $344 - $413;
  $415 = +HEAPF32[$270>>2];
  $416 = $343 - $415;
  $417 = $415 + $343;
  $418 = $413 + $344;
  $419 = $416 + $414;
  $420 = $414 - $416;
  $421 = +HEAPF32[$325>>2];
  $422 = +HEAPF32[$259>>2];
  $423 = $421 - $422;
  $424 = +HEAPF32[$254>>2];
  $425 = +HEAPF32[$320>>2];
  $426 = $424 - $425;
  $427 = $425 + $424;
  $428 = $422 + $421;
  $429 = +HEAPF32[$236>>2];
  $430 = +HEAPF32[$302>>2];
  $431 = $429 - $430;
  $432 = +HEAPF32[$241>>2];
  $433 = +HEAPF32[$307>>2];
  $434 = $432 - $433;
  $435 = $430 + $429;
  $436 = $433 + $432;
  $437 = $431 - $434;
  $438 = $434 + $431;
  $439 = +HEAPF32[$224>>2];
  $440 = +HEAPF32[$288>>2];
  $441 = $439 - $440;
  $442 = +HEAPF32[$229>>2];
  $443 = +HEAPF32[$295>>2];
  $444 = $442 - $443;
  $445 = $440 + $439;
  $446 = $443 + $442;
  $447 = $441 + $423;
  $448 = $441 - $423;
  $449 = $437 + $419;
  $450 = $449 * 0.70710676908493042;
  $451 = $437 - $419;
  $452 = $451 * 0.70710676908493042;
  $453 = $450 + $447;
  HEAPF32[$288>>2] = $453;
  $454 = $447 - $450;
  HEAPF32[$302>>2] = $454;
  $455 = $438 - $420;
  $456 = $455 * 0.70710676908493042;
  $457 = $444 - $426;
  $458 = $456 + $448;
  HEAPF32[$335>>2] = $458;
  $459 = $448 - $456;
  HEAPF32[$320>>2] = $459;
  $460 = $438 + $420;
  $461 = $460 * 0.70710676908493042;
  $462 = $444 + $426;
  $463 = $457 + $452;
  HEAPF32[$325>>2] = $463;
  $464 = $457 - $452;
  HEAPF32[$340>>2] = $464;
  $465 = $462 + $461;
  HEAPF32[$295>>2] = $465;
  $466 = $462 - $461;
  HEAPF32[$307>>2] = $466;
  $467 = $445 + $427;
  $468 = $445 - $427;
  $469 = $435 + $417;
  $470 = $435 - $417;
  $471 = $467 + $469;
  HEAPF32[$224>>2] = $471;
  $472 = $467 - $469;
  HEAPF32[$236>>2] = $472;
  $473 = $436 - $418;
  $474 = $446 - $428;
  $475 = $468 + $473;
  HEAPF32[$270>>2] = $475;
  $476 = $468 - $473;
  HEAPF32[$254>>2] = $476;
  $477 = $436 + $418;
  $478 = $446 + $428;
  $479 = $474 + $470;
  HEAPF32[$259>>2] = $479;
  $480 = $474 - $470;
  HEAPF32[$275>>2] = $480;
  $481 = $478 + $477;
  HEAPF32[$229>>2] = $481;
  $482 = $478 - $477;
  HEAPF32[$241>>2] = $482;
  $483 = (($$12) + 32)|0;
  $484 = ($483|0)<($1|0);
  if ($484) {
   $$12 = $483;
  } else {
   break;
  }
 }
 return;
}
function _mdct_forward($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$lcssa = 0, $$0134$lcssa = 0, $$0134173 = 0, $$0138172 = 0, $$0141$lcssa = 0, $$0141171 = 0, $$0145151 = 0, $$0174 = 0, $$097$i = 0, $$098$i = 0, $$099$i = 0, $$1$lcssa = 0, $$1135$lcssa = 0, $$1135164 = 0, $$1139$lcssa = 0, $$1139163 = 0, $$1142162 = 0, $$1165 = 0, $$2136157 = 0;
 var $$2140156 = 0, $$2143155 = 0, $$2158 = 0, $$3137153 = 0, $$3144152 = 0, $$3154 = 0, $$alloca_mul = 0, $$idx = 0, $$idx$val = 0, $$idx147$val = 0, $$idx148$val = 0, $$idx149 = 0, $$idx149$val = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0;
 var $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0.0, $135 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0;
 var $142 = 0.0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0, $158 = 0.0, $159 = 0, $16 = 0;
 var $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0.0, $17 = 0, $170 = 0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0, $177 = 0.0, $178 = 0.0;
 var $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0, $192 = 0.0, $193 = 0.0, $194 = 0, $195 = 0.0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0.0, $213 = 0.0, $214 = 0.0;
 var $215 = 0.0, $216 = 0.0, $217 = 0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0;
 var $45 = 0.0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0;
 var $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0.0;
 var $exitcond = 0, $scevgep = 0, $scevgep186 = 0, $scevgep187 = 0, $scevgep188 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 >> 1;
 $5 = $3 >> 2;
 $6 = $3 >> 3;
 $7 = $3 << 2;
 $$alloca_mul = $7;
 $8 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $9 = (($8) + ($4<<2)|0);
 $10 = (($1) + ($4<<2)|0);
 $11 = (($10) + ($5<<2)|0);
 $12 = ((($0)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($4<<2)|0);
 $15 = ($6|0)>(0);
 if ($15) {
  $16 = ((($11)) + 4|0);
  $17 = (($5) + ($4))|0;
  $18 = (($6) + -1)|0;
  $19 = $18 >>> 1;
  $20 = $19 << 2;
  $21 = (($4) + -2)|0;
  $22 = $19 << 1;
  $23 = (($21) - ($22))|0;
  $$0134173 = $14;$$0138172 = $16;$$0141171 = $11;$$0174 = 0;
  while(1) {
   $24 = ((($$0141171)) + -16|0);
   $25 = ((($$0134173)) + -8|0);
   $26 = ((($$0141171)) + -8|0);
   $27 = +HEAPF32[$26>>2];
   $28 = +HEAPF32[$$0138172>>2];
   $29 = $28 + $27;
   $30 = +HEAPF32[$24>>2];
   $31 = ((($$0138172)) + 8|0);
   $32 = +HEAPF32[$31>>2];
   $33 = $32 + $30;
   $34 = ((($$0134173)) + -4|0);
   $35 = +HEAPF32[$34>>2];
   $36 = $33 * $35;
   $37 = +HEAPF32[$25>>2];
   $38 = $37 * $29;
   $39 = $38 + $36;
   $40 = (($9) + ($$0174<<2)|0);
   HEAPF32[$40>>2] = $39;
   $41 = +HEAPF32[$25>>2];
   $42 = $41 * $33;
   $43 = +HEAPF32[$34>>2];
   $44 = $43 * $29;
   $45 = $42 - $44;
   $46 = $$0174 | 1;
   $47 = (($9) + ($46<<2)|0);
   HEAPF32[$47>>2] = $45;
   $48 = ((($$0138172)) + 16|0);
   $49 = (($$0174) + 2)|0;
   $50 = ($49|0)<($6|0);
   if ($50) {
    $$0134173 = $25;$$0138172 = $48;$$0141171 = $24;$$0174 = $49;
   } else {
    break;
   }
  }
  $51 = (($17) + -4)|0;
  $52 = (($51) - ($20))|0;
  $scevgep188 = (($13) + ($23<<2)|0);
  $scevgep187 = (($1) + ($52<<2)|0);
  $53 = (($22) + 2)|0;
  $$0$lcssa = $53;$$0134$lcssa = $scevgep188;$$0141$lcssa = $scevgep187;
 } else {
  $$0$lcssa = 0;$$0134$lcssa = $14;$$0141$lcssa = $11;
 }
 $54 = ((($1)) + 4|0);
 $55 = (($4) - ($6))|0;
 $56 = ($$0$lcssa|0)<($55|0);
 if ($56) {
  $57 = (($4) + -1)|0;
  $58 = (($57) - ($$0$lcssa))|0;
  $59 = (($58) - ($6))|0;
  $60 = $59 >>> 1;
  $61 = $60 << 1;
  $62 = $60 << 2;
  $63 = (($62) + 5)|0;
  $$1135164 = $$0134$lcssa;$$1139163 = $54;$$1142162 = $$0141$lcssa;$$1165 = $$0$lcssa;
  while(1) {
   $64 = ((($$1135164)) + -8|0);
   $65 = ((($$1142162)) + -16|0);
   $66 = ((($$1142162)) + -8|0);
   $67 = +HEAPF32[$66>>2];
   $68 = +HEAPF32[$$1139163>>2];
   $69 = $67 - $68;
   $70 = +HEAPF32[$65>>2];
   $71 = ((($$1139163)) + 8|0);
   $72 = +HEAPF32[$71>>2];
   $73 = $70 - $72;
   $74 = ((($$1135164)) + -4|0);
   $75 = +HEAPF32[$74>>2];
   $76 = $73 * $75;
   $77 = +HEAPF32[$64>>2];
   $78 = $77 * $69;
   $79 = $78 + $76;
   $80 = (($9) + ($$1165<<2)|0);
   HEAPF32[$80>>2] = $79;
   $81 = +HEAPF32[$64>>2];
   $82 = $81 * $73;
   $83 = +HEAPF32[$74>>2];
   $84 = $83 * $69;
   $85 = $82 - $84;
   $86 = $$1165 | 1;
   $87 = (($9) + ($86<<2)|0);
   HEAPF32[$87>>2] = $85;
   $88 = ((($$1139163)) + 16|0);
   $89 = (($$1165) + 2)|0;
   $90 = ($89|0)<($55|0);
   if ($90) {
    $$1135164 = $64;$$1139163 = $88;$$1142162 = $65;$$1165 = $89;
   } else {
    break;
   }
  }
  $91 = (-2 - ($61))|0;
  $92 = (($$0$lcssa) + ($61))|0;
  $scevgep = (($$0134$lcssa) + ($91<<2)|0);
  $scevgep186 = (($1) + ($63<<2)|0);
  $93 = (($92) + 2)|0;
  $$1$lcssa = $93;$$1135$lcssa = $scevgep;$$1139$lcssa = $scevgep186;
 } else {
  $$1$lcssa = $$0$lcssa;$$1135$lcssa = $$0134$lcssa;$$1139$lcssa = $54;
 }
 $94 = ($$1$lcssa|0)<($4|0);
 if ($94) {
  $95 = (($1) + ($3<<2)|0);
  $$2136157 = $$1135$lcssa;$$2140156 = $$1139$lcssa;$$2143155 = $95;$$2158 = $$1$lcssa;
  while(1) {
   $96 = ((($$2136157)) + -8|0);
   $97 = ((($$2143155)) + -16|0);
   $98 = ((($$2143155)) + -8|0);
   $99 = +HEAPF32[$98>>2];
   $100 = -$99;
   $101 = +HEAPF32[$$2140156>>2];
   $102 = $100 - $101;
   $103 = +HEAPF32[$97>>2];
   $104 = -$103;
   $105 = ((($$2140156)) + 8|0);
   $106 = +HEAPF32[$105>>2];
   $107 = $104 - $106;
   $108 = ((($$2136157)) + -4|0);
   $109 = +HEAPF32[$108>>2];
   $110 = $107 * $109;
   $111 = +HEAPF32[$96>>2];
   $112 = $111 * $102;
   $113 = $112 + $110;
   $114 = (($9) + ($$2158<<2)|0);
   HEAPF32[$114>>2] = $113;
   $115 = +HEAPF32[$96>>2];
   $116 = $115 * $107;
   $117 = +HEAPF32[$108>>2];
   $118 = $117 * $102;
   $119 = $116 - $118;
   $120 = $$2158 | 1;
   $121 = (($9) + ($120<<2)|0);
   HEAPF32[$121>>2] = $119;
   $122 = ((($$2140156)) + 16|0);
   $123 = (($$2158) + 2)|0;
   $124 = ($123|0)<($4|0);
   if ($124) {
    $$2136157 = $96;$$2140156 = $122;$$2143155 = $97;$$2158 = $123;
   } else {
    break;
   }
  }
 }
 $$idx = ((($0)) + 4|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 _mdct_butterflies($$idx$val,$13,$9,$4);
 $$idx147$val = HEAP32[$0>>2]|0;
 $$idx148$val = HEAP32[$12>>2]|0;
 $$idx149 = ((($0)) + 12|0);
 $$idx149$val = HEAP32[$$idx149>>2]|0;
 $125 = $$idx147$val >> 1;
 $126 = (($8) + ($125<<2)|0);
 $127 = (($$idx148$val) + ($$idx147$val<<2)|0);
 $$0$i = $$idx149$val;$$097$i = $8;$$098$i = $126;$$099$i = $127;
 while(1) {
  $128 = HEAP32[$$0$i>>2]|0;
  $129 = (($126) + ($128<<2)|0);
  $130 = ((($$0$i)) + 4|0);
  $131 = HEAP32[$130>>2]|0;
  $132 = (($126) + ($131<<2)|0);
  $133 = ((($129)) + 4|0);
  $134 = +HEAPF32[$133>>2];
  $135 = ((($132)) + 4|0);
  $136 = +HEAPF32[$135>>2];
  $137 = $134 - $136;
  $138 = +HEAPF32[$129>>2];
  $139 = +HEAPF32[$132>>2];
  $140 = $139 + $138;
  $141 = +HEAPF32[$$099$i>>2];
  $142 = $140 * $141;
  $143 = ((($$099$i)) + 4|0);
  $144 = +HEAPF32[$143>>2];
  $145 = $144 * $137;
  $146 = $145 + $142;
  $147 = $144 * $140;
  $148 = $141 * $137;
  $149 = $147 - $148;
  $150 = ((($$098$i)) + -16|0);
  $151 = $136 + $134;
  $152 = $151 * 0.5;
  $153 = $138 - $139;
  $154 = $153 * 0.5;
  $155 = $146 + $152;
  HEAPF32[$$097$i>>2] = $155;
  $156 = $152 - $146;
  $157 = ((($$098$i)) + -8|0);
  HEAPF32[$157>>2] = $156;
  $158 = $149 + $154;
  $159 = ((($$097$i)) + 4|0);
  HEAPF32[$159>>2] = $158;
  $160 = $149 - $154;
  $161 = ((($$098$i)) + -4|0);
  HEAPF32[$161>>2] = $160;
  $162 = ((($$0$i)) + 8|0);
  $163 = HEAP32[$162>>2]|0;
  $164 = (($126) + ($163<<2)|0);
  $165 = ((($$0$i)) + 12|0);
  $166 = HEAP32[$165>>2]|0;
  $167 = (($126) + ($166<<2)|0);
  $168 = ((($164)) + 4|0);
  $169 = +HEAPF32[$168>>2];
  $170 = ((($167)) + 4|0);
  $171 = +HEAPF32[$170>>2];
  $172 = $169 - $171;
  $173 = +HEAPF32[$164>>2];
  $174 = +HEAPF32[$167>>2];
  $175 = $174 + $173;
  $176 = ((($$099$i)) + 8|0);
  $177 = +HEAPF32[$176>>2];
  $178 = $175 * $177;
  $179 = ((($$099$i)) + 12|0);
  $180 = +HEAPF32[$179>>2];
  $181 = $180 * $172;
  $182 = $181 + $178;
  $183 = $180 * $175;
  $184 = $177 * $172;
  $185 = $183 - $184;
  $186 = $171 + $169;
  $187 = $186 * 0.5;
  $188 = $173 - $174;
  $189 = $188 * 0.5;
  $190 = $182 + $187;
  $191 = ((($$097$i)) + 8|0);
  HEAPF32[$191>>2] = $190;
  $192 = $187 - $182;
  HEAPF32[$150>>2] = $192;
  $193 = $185 + $189;
  $194 = ((($$097$i)) + 12|0);
  HEAPF32[$194>>2] = $193;
  $195 = $185 - $189;
  $196 = ((($$098$i)) + -12|0);
  HEAPF32[$196>>2] = $195;
  $197 = ((($$099$i)) + 16|0);
  $198 = ((($$0$i)) + 16|0);
  $199 = ((($$097$i)) + 16|0);
  $200 = ($199>>>0)<($150>>>0);
  if ($200) {
   $$0$i = $198;$$097$i = $199;$$098$i = $150;$$099$i = $197;
  } else {
   break;
  }
 }
 $201 = ($5|0)>(0);
 if (!($201)) {
  STACKTOP = sp;return;
 }
 $202 = (($2) + ($4<<2)|0);
 $203 = (($$idx148$val) + ($4<<2)|0);
 $204 = ((($0)) + 16|0);
 $$0145151 = $8;$$3137153 = $203;$$3144152 = $202;$$3154 = 0;
 while(1) {
  $205 = ((($$3144152)) + -4|0);
  $206 = +HEAPF32[$$0145151>>2];
  $207 = +HEAPF32[$$3137153>>2];
  $208 = $207 * $206;
  $209 = ((($$0145151)) + 4|0);
  $210 = +HEAPF32[$209>>2];
  $211 = ((($$3137153)) + 4|0);
  $212 = +HEAPF32[$211>>2];
  $213 = $212 * $210;
  $214 = $213 + $208;
  $215 = +HEAPF32[$204>>2];
  $216 = $214 * $215;
  $217 = (($2) + ($$3154<<2)|0);
  HEAPF32[$217>>2] = $216;
  $218 = +HEAPF32[$$0145151>>2];
  $219 = +HEAPF32[$211>>2];
  $220 = $219 * $218;
  $221 = +HEAPF32[$209>>2];
  $222 = +HEAPF32[$$3137153>>2];
  $223 = $222 * $221;
  $224 = $220 - $223;
  $225 = +HEAPF32[$204>>2];
  $226 = $224 * $225;
  HEAPF32[$205>>2] = $226;
  $227 = ((($$0145151)) + 8|0);
  $228 = ((($$3137153)) + 8|0);
  $229 = (($$3154) + 1)|0;
  $exitcond = ($229|0)==($5|0);
  if ($exitcond) {
   break;
  } else {
   $$0145151 = $227;$$3137153 = $228;$$3144152 = $205;$$3154 = $229;
  }
 }
 STACKTOP = sp;return;
}
function _drft_forward($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0110118$i = 0, $$0111117$i = 0, $$0112$$i = 0, $$0112116$i = 0, $$0113115$i = 0, $$0114$i = 0, $$2$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, $exitcond120$i = 0, $or$cond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(1);
 if ($3) {
  return;
 }
 $4 = ((($0)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + ($2<<2)|0);
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)>(0);
 if (!($11)) {
  return;
 }
 $12 = (($10) + 1)|0;
 $$0110118$i = 0;$$0111117$i = $2;$$0112116$i = 1;$$0113115$i = $2;
 while(1) {
  $13 = (($12) - ($$0110118$i))|0;
  $14 = (($8) + ($13<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($$0111117$i|0) / ($15|0))&-1;
  $17 = (($2|0) / ($$0111117$i|0))&-1;
  $18 = Math_imul($17, $16)|0;
  $19 = (($15) + -1)|0;
  $20 = Math_imul($17, $19)|0;
  $21 = (($$0113115$i) - ($20))|0;
  $22 = (1 - ($$0112116$i))|0;
  L9: do {
   switch ($15|0) {
   case 4:  {
    $23 = (($21) + ($17))|0;
    $24 = (($23) + ($17))|0;
    $25 = ($22|0)==(0);
    $26 = (($6) + ($21<<2)|0);
    $27 = ((($26)) + -4|0);
    $28 = (($6) + ($23<<2)|0);
    $29 = ((($28)) + -4|0);
    $30 = (($6) + ($24<<2)|0);
    $31 = ((($30)) + -4|0);
    if ($25) {
     _dradf4($17,$16,$1,$5,$27,$29,$31);
     $$2$i = 0;
     break L9;
    } else {
     _dradf4($17,$16,$5,$1,$27,$29,$31);
     $$2$i = $22;
     break L9;
    }
    break;
   }
   case 2:  {
    $32 = ($22|0)==(0);
    $33 = (($6) + ($21<<2)|0);
    $34 = ((($33)) + -4|0);
    if ($32) {
     _dradf2($17,$16,$1,$5,$34);
     $$2$i = 0;
     break L9;
    } else {
     _dradf2($17,$16,$5,$1,$34);
     $$2$i = $22;
     break L9;
    }
    break;
   }
   default: {
    $35 = ($17|0)==(1);
    $$0112$$i = $35 ? $$0112116$i : $22;
    $36 = ($$0112$$i|0)==(0);
    $37 = (($6) + ($21<<2)|0);
    $38 = ((($37)) + -4|0);
    if ($36) {
     _dradfg($17,$15,$16,$18,$1,$1,$1,$5,$5,$38);
     $$2$i = 1;
     break L9;
    } else {
     _dradfg($17,$15,$16,$18,$5,$5,$5,$1,$1,$38);
     $$2$i = 0;
     break L9;
    }
   }
   }
  } while(0);
  $39 = (($$0110118$i) + 1)|0;
  $exitcond120$i = ($39|0)==($10|0);
  if ($exitcond120$i) {
   break;
  } else {
   $$0110118$i = $39;$$0111117$i = $16;$$0112116$i = $$2$i;$$0113115$i = $21;
  }
 }
 $40 = ($$2$i|0)!=(1);
 $41 = ($2|0)>(0);
 $or$cond$i = $41 & $40;
 if ($or$cond$i) {
  $$0114$i = 0;
 } else {
  return;
 }
 while(1) {
  $42 = (($5) + ($$0114$i<<2)|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (($1) + ($$0114$i<<2)|0);
  HEAP32[$44>>2] = $43;
  $45 = (($$0114$i) + 1)|0;
  $exitcond$i = ($45|0)==($2|0);
  if ($exitcond$i) {
   break;
  } else {
   $$0114$i = $45;
  }
 }
 return;
}
function _dradf4($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0269300 = 0, $$0270299 = 0, $$0273298 = 0, $$0276297 = 0, $$0277296 = 0, $$0280287 = 0, $$0281282 = 0, $$0290 = 0, $$1271292 = 0, $$1274289 = 0, $$1278288 = 0, $$1293 = 0, $$2272285 = 0, $$2275284 = 0, $$2279283 = 0, $$2286 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0;
 var $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0.0, $111 = 0, $112 = 0, $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0, $118 = 0, $119 = 0.0, $12 = 0, $120 = 0;
 var $121 = 0.0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0.0, $133 = 0, $134 = 0, $135 = 0, $136 = 0.0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0.0, $151 = 0, $152 = 0.0, $153 = 0.0, $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0;
 var $158 = 0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0, $173 = 0.0, $174 = 0.0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0.0, $180 = 0, $19 = 0, $20 = 0.0, $21 = 0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0, $28 = 0, $29 = 0, $30 = 0.0, $31 = 0.0, $32 = 0.0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0, $58 = 0, $59 = 0.0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0.0, $64 = 0, $65 = 0.0, $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0;
 var $72 = 0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0.0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $88 = 0, $89 = 0.0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond304 = 0, $exitcond305 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = Math_imul($1, $0)|0;
 $8 = $7 << 1;
 $9 = ($1|0)>(0);
 if ($9) {
  $10 = ($7*3)|0;
  $11 = $0 << 2;
  $12 = (($11) + -1)|0;
  $13 = $0 << 1;
  $$0269300 = 0;$$0270299 = $7;$$0273298 = $10;$$0276297 = 0;$$0277296 = $8;
  while(1) {
   $14 = (($2) + ($$0270299<<2)|0);
   $15 = +HEAPF32[$14>>2];
   $16 = (($2) + ($$0273298<<2)|0);
   $17 = +HEAPF32[$16>>2];
   $18 = $17 + $15;
   $19 = (($2) + ($$0276297<<2)|0);
   $20 = +HEAPF32[$19>>2];
   $21 = (($2) + ($$0277296<<2)|0);
   $22 = +HEAPF32[$21>>2];
   $23 = $22 + $20;
   $24 = $23 + $18;
   $25 = $$0276297 << 2;
   $26 = (($3) + ($25<<2)|0);
   HEAPF32[$26>>2] = $24;
   $27 = $23 - $18;
   $28 = (($12) + ($25))|0;
   $29 = (($3) + ($28<<2)|0);
   HEAPF32[$29>>2] = $27;
   $30 = +HEAPF32[$19>>2];
   $31 = +HEAPF32[$21>>2];
   $32 = $30 - $31;
   $33 = (($25) + ($13))|0;
   $34 = (($33) + -1)|0;
   $35 = (($3) + ($34<<2)|0);
   HEAPF32[$35>>2] = $32;
   $36 = +HEAPF32[$16>>2];
   $37 = +HEAPF32[$14>>2];
   $38 = $36 - $37;
   $39 = (($3) + ($33<<2)|0);
   HEAPF32[$39>>2] = $38;
   $40 = (($$0270299) + ($0))|0;
   $41 = (($$0273298) + ($0))|0;
   $42 = (($$0276297) + ($0))|0;
   $43 = (($$0277296) + ($0))|0;
   $44 = (($$0269300) + 1)|0;
   $exitcond305 = ($44|0)==($1|0);
   if ($exitcond305) {
    break;
   } else {
    $$0269300 = $44;$$0270299 = $40;$$0273298 = $41;$$0276297 = $42;$$0277296 = $43;
   }
  }
 }
 $45 = ($0|0)<(2);
 if ($45) {
  return;
 }
 $46 = ($0|0)==(2);
 if (!($46)) {
  if ($9) {
   $47 = $0 << 1;
   $$1271292 = 0;$$1293 = 0;
   while(1) {
    $48 = $$1271292 << 2;
    $49 = (($48) + ($47))|0;
    $$0280287 = $49;$$0290 = 2;$$1274289 = $$1271292;$$1278288 = $48;
    while(1) {
     $50 = (($$1274289) + 2)|0;
     $51 = (($$1278288) + 2)|0;
     $52 = (($$0280287) + -2)|0;
     $53 = (($50) + ($7))|0;
     $54 = (($$0290) + -2)|0;
     $55 = (($4) + ($54<<2)|0);
     $56 = +HEAPF32[$55>>2];
     $57 = (($53) + -1)|0;
     $58 = (($2) + ($57<<2)|0);
     $59 = +HEAPF32[$58>>2];
     $60 = $59 * $56;
     $61 = (($$0290) + -1)|0;
     $62 = (($4) + ($61<<2)|0);
     $63 = +HEAPF32[$62>>2];
     $64 = (($2) + ($53<<2)|0);
     $65 = +HEAPF32[$64>>2];
     $66 = $65 * $63;
     $67 = $66 + $60;
     $68 = $65 * $56;
     $69 = $63 * $59;
     $70 = $68 - $69;
     $71 = (($53) + ($7))|0;
     $72 = (($5) + ($54<<2)|0);
     $73 = +HEAPF32[$72>>2];
     $74 = (($71) + -1)|0;
     $75 = (($2) + ($74<<2)|0);
     $76 = +HEAPF32[$75>>2];
     $77 = $76 * $73;
     $78 = (($5) + ($61<<2)|0);
     $79 = +HEAPF32[$78>>2];
     $80 = (($2) + ($71<<2)|0);
     $81 = +HEAPF32[$80>>2];
     $82 = $81 * $79;
     $83 = $82 + $77;
     $84 = $81 * $73;
     $85 = $79 * $76;
     $86 = $84 - $85;
     $87 = (($71) + ($7))|0;
     $88 = (($6) + ($54<<2)|0);
     $89 = +HEAPF32[$88>>2];
     $90 = (($87) + -1)|0;
     $91 = (($2) + ($90<<2)|0);
     $92 = +HEAPF32[$91>>2];
     $93 = $92 * $89;
     $94 = (($6) + ($61<<2)|0);
     $95 = +HEAPF32[$94>>2];
     $96 = (($2) + ($87<<2)|0);
     $97 = +HEAPF32[$96>>2];
     $98 = $97 * $95;
     $99 = $98 + $93;
     $100 = $97 * $89;
     $101 = $95 * $92;
     $102 = $100 - $101;
     $103 = $99 + $67;
     $104 = $99 - $67;
     $105 = $102 + $70;
     $106 = $70 - $102;
     $107 = (($2) + ($50<<2)|0);
     $108 = +HEAPF32[$107>>2];
     $109 = $108 + $86;
     $110 = $108 - $86;
     $111 = (($$1274289) + 1)|0;
     $112 = (($2) + ($111<<2)|0);
     $113 = +HEAPF32[$112>>2];
     $114 = $113 + $83;
     $115 = $113 - $83;
     $116 = $103 + $114;
     $117 = $$1278288 | 1;
     $118 = (($3) + ($117<<2)|0);
     HEAPF32[$118>>2] = $116;
     $119 = $105 + $109;
     $120 = (($3) + ($51<<2)|0);
     HEAPF32[$120>>2] = $119;
     $121 = $115 - $106;
     $122 = (($$0280287) + -3)|0;
     $123 = (($3) + ($122<<2)|0);
     HEAPF32[$123>>2] = $121;
     $124 = $104 - $110;
     $125 = (($3) + ($52<<2)|0);
     HEAPF32[$125>>2] = $124;
     $126 = $106 + $115;
     $127 = (($51) + ($47))|0;
     $128 = (($127) + -1)|0;
     $129 = (($3) + ($128<<2)|0);
     HEAPF32[$129>>2] = $126;
     $130 = $104 + $110;
     $131 = (($3) + ($127<<2)|0);
     HEAPF32[$131>>2] = $130;
     $132 = $114 - $103;
     $133 = (($52) + ($47))|0;
     $134 = (($133) + -1)|0;
     $135 = (($3) + ($134<<2)|0);
     HEAPF32[$135>>2] = $132;
     $136 = $105 - $109;
     $137 = (($3) + ($133<<2)|0);
     HEAPF32[$137>>2] = $136;
     $138 = (($$0290) + 2)|0;
     $139 = ($138|0)<($0|0);
     if ($139) {
      $$0280287 = $52;$$0290 = $138;$$1274289 = $50;$$1278288 = $51;
     } else {
      break;
     }
    }
    $140 = (($$1271292) + ($0))|0;
    $141 = (($$1293) + 1)|0;
    $exitcond304 = ($141|0)==($1|0);
    if ($exitcond304) {
     break;
    } else {
     $$1271292 = $140;$$1293 = $141;
    }
   }
  }
  $142 = $0 & 1;
  $143 = ($142|0)==(0);
  if (!($143)) {
   return;
  }
 }
 $144 = (($0) + -1)|0;
 $145 = (($144) + ($7))|0;
 $146 = $0 << 2;
 $147 = $0 << 1;
 if (!($9)) {
  return;
 }
 $148 = (($145) + ($8))|0;
 $$0281282 = $0;$$2272285 = $145;$$2275284 = $148;$$2279283 = $0;$$2286 = 0;
 while(1) {
  $149 = (($2) + ($$2272285<<2)|0);
  $150 = +HEAPF32[$149>>2];
  $151 = (($2) + ($$2275284<<2)|0);
  $152 = +HEAPF32[$151>>2];
  $153 = $152 + $150;
  $154 = $153 * -0.70710676908493042;
  $155 = $150 - $152;
  $156 = $155 * 0.70710676908493042;
  $157 = (($$0281282) + -1)|0;
  $158 = (($2) + ($157<<2)|0);
  $159 = +HEAPF32[$158>>2];
  $160 = $156 + $159;
  $161 = (($$2279283) + -1)|0;
  $162 = (($3) + ($161<<2)|0);
  HEAPF32[$162>>2] = $160;
  $163 = +HEAPF32[$158>>2];
  $164 = $163 - $156;
  $165 = (($$2279283) + ($147))|0;
  $166 = (($165) + -1)|0;
  $167 = (($3) + ($166<<2)|0);
  HEAPF32[$167>>2] = $164;
  $168 = (($$2272285) + ($7))|0;
  $169 = (($2) + ($168<<2)|0);
  $170 = +HEAPF32[$169>>2];
  $171 = $154 - $170;
  $172 = (($3) + ($$2279283<<2)|0);
  HEAPF32[$172>>2] = $171;
  $173 = +HEAPF32[$169>>2];
  $174 = $173 + $154;
  $175 = (($3) + ($165<<2)|0);
  HEAPF32[$175>>2] = $174;
  $176 = (($$2272285) + ($0))|0;
  $177 = (($$2275284) + ($0))|0;
  $178 = (($$2279283) + ($146))|0;
  $179 = (($$0281282) + ($0))|0;
  $180 = (($$2286) + 1)|0;
  $exitcond = ($180|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$0281282 = $179;$$2272285 = $176;$$2275284 = $177;$$2279283 = $178;$$2286 = $180;
  }
 }
 return;
}
function _dradf2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0123142$us = 0, $$0124141$us = 0, $$0125140$us = 0, $$0126152 = 0, $$0128151 = 0, $$0131139$us = 0, $$0132150 = 0, $$0143$us = 0, $$1127147$us = 0, $$1129146$us = 0, $$1133145$us = 0, $$1138 = 0, $$2130136 = 0, $$2134135 = 0, $$2137 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0;
 var $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0.0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0.0;
 var $35 = 0, $36 = 0, $37 = 0.0, $38 = 0.0, $39 = 0, $40 = 0, $41 = 0.0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0;
 var $54 = 0.0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $exitcond = 0, $exitcond157 = 0, $exitcond159 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $5 = Math_imul($1, $0)|0;
 $6 = $0 << 1;
 $7 = ($1|0)>(0);
 if ($7) {
  $8 = (($6) + -1)|0;
  $$0126152 = $5;$$0128151 = 0;$$0132150 = 0;
  while(1) {
   $9 = (($2) + ($$0128151<<2)|0);
   $10 = +HEAPF32[$9>>2];
   $11 = (($2) + ($$0126152<<2)|0);
   $12 = +HEAPF32[$11>>2];
   $13 = $12 + $10;
   $14 = $$0128151 << 1;
   $15 = (($3) + ($14<<2)|0);
   HEAPF32[$15>>2] = $13;
   $16 = +HEAPF32[$9>>2];
   $17 = +HEAPF32[$11>>2];
   $18 = $16 - $17;
   $19 = (($8) + ($14))|0;
   $20 = (($3) + ($19<<2)|0);
   HEAPF32[$20>>2] = $18;
   $21 = (($$0128151) + ($0))|0;
   $22 = (($$0126152) + ($0))|0;
   $23 = (($$0132150) + 1)|0;
   $exitcond159 = ($23|0)==($1|0);
   if ($exitcond159) {
    break;
   } else {
    $$0126152 = $22;$$0128151 = $21;$$0132150 = $23;
   }
  }
 }
 $24 = ($0|0)<(2);
 if ($24) {
  return;
 }
 $25 = ($0|0)==(2);
 if (!($25)) {
  if ($7) {
   $$1127147$us = $5;$$1129146$us = 0;$$1133145$us = 0;
   while(1) {
    $26 = $$1129146$us << 1;
    $27 = (($26) + ($6))|0;
    $$0123142$us = $$1129146$us;$$0124141$us = $27;$$0125140$us = $$1127147$us;$$0131139$us = 2;$$0143$us = $26;
    while(1) {
     $28 = (($$0125140$us) + 2)|0;
     $29 = (($$0124141$us) + -2)|0;
     $30 = (($$0123142$us) + 2)|0;
     $31 = (($$0143$us) + 2)|0;
     $32 = (($$0131139$us) + -2)|0;
     $33 = (($4) + ($32<<2)|0);
     $34 = +HEAPF32[$33>>2];
     $35 = (($$0125140$us) + 1)|0;
     $36 = (($2) + ($35<<2)|0);
     $37 = +HEAPF32[$36>>2];
     $38 = $37 * $34;
     $39 = (($$0131139$us) + -1)|0;
     $40 = (($4) + ($39<<2)|0);
     $41 = +HEAPF32[$40>>2];
     $42 = (($2) + ($28<<2)|0);
     $43 = +HEAPF32[$42>>2];
     $44 = $43 * $41;
     $45 = $44 + $38;
     $46 = $43 * $34;
     $47 = $41 * $37;
     $48 = $46 - $47;
     $49 = (($2) + ($30<<2)|0);
     $50 = +HEAPF32[$49>>2];
     $51 = $48 + $50;
     $52 = (($3) + ($31<<2)|0);
     HEAPF32[$52>>2] = $51;
     $53 = +HEAPF32[$49>>2];
     $54 = $48 - $53;
     $55 = (($3) + ($29<<2)|0);
     HEAPF32[$55>>2] = $54;
     $56 = (($$0123142$us) + 1)|0;
     $57 = (($2) + ($56<<2)|0);
     $58 = +HEAPF32[$57>>2];
     $59 = $58 + $45;
     $60 = $$0143$us | 1;
     $61 = (($3) + ($60<<2)|0);
     HEAPF32[$61>>2] = $59;
     $62 = +HEAPF32[$57>>2];
     $63 = $62 - $45;
     $64 = (($$0124141$us) + -3)|0;
     $65 = (($3) + ($64<<2)|0);
     HEAPF32[$65>>2] = $63;
     $66 = (($$0131139$us) + 2)|0;
     $67 = ($66|0)<($0|0);
     if ($67) {
      $$0123142$us = $30;$$0124141$us = $29;$$0125140$us = $28;$$0131139$us = $66;$$0143$us = $31;
     } else {
      break;
     }
    }
    $68 = (($$1129146$us) + ($0))|0;
    $69 = (($$1127147$us) + ($0))|0;
    $70 = (($$1133145$us) + 1)|0;
    $exitcond157 = ($70|0)==($1|0);
    if ($exitcond157) {
     break;
    } else {
     $$1127147$us = $69;$$1129146$us = $68;$$1133145$us = $70;
    }
   }
  }
  $71 = (($0|0) % 2)&-1;
  $72 = ($71|0)==(1);
  if ($72) {
   return;
  }
 }
 $73 = (($0) + -1)|0;
 if (!($7)) {
  return;
 }
 $74 = (($5) + ($73))|0;
 $$1138 = $73;$$2130136 = $0;$$2134135 = 0;$$2137 = $74;
 while(1) {
  $75 = (($2) + ($$2137<<2)|0);
  $76 = +HEAPF32[$75>>2];
  $77 = -$76;
  $78 = (($3) + ($$2130136<<2)|0);
  HEAPF32[$78>>2] = $77;
  $79 = (($2) + ($$1138<<2)|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (($$2130136) + -1)|0;
  $82 = (($3) + ($81<<2)|0);
  HEAP32[$82>>2] = $80;
  $83 = (($$2130136) + ($6))|0;
  $84 = (($$2137) + ($0))|0;
  $85 = (($$1138) + ($0))|0;
  $86 = (($$2134135) + 1)|0;
  $exitcond = ($86|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$1138 = $85;$$2130136 = $83;$$2134135 = $86;$$2137 = $84;
  }
 }
 return;
}
function _dradfg($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$0612876$us = 0, $$0614911$us = 0, $$0622906$us = 0, $$0633828 = 0, $$0634914 = 0, $$0639887 = 0, $$0641910$us = 0, $$0652905$us = 0, $$0662820$us = 0.0, $$0663825 = 0.0, $$0664819$us = 0.0, $$0665824 = 0.0, $$0666875$us = 0, $$0675852$us = 0, $$0684812$us = 0, $$0687811$us = 0, $$0690804 = 0, $$0695847$us = 0, $$0702846$us = 0, $$0877$us = 0;
 var $$10632735$us = 0, $$10651774$us = 0, $$10744 = 0, $$11762 = 0, $$12743 = 0, $$1613896$us = 0, $$1615888 = 0, $$1623882$us = 0, $$1635843 = 0, $$1640902 = 0, $$1642886 = 0, $$1653881$us = 0, $$1667890$us = 0, $$1676867$us = 0, $$1685755$us = 0, $$1688753$us = 0, $$1691810$us = 0, $$1696863$us = 0, $$1703862$us = 0, $$1897$us = 0;
 var $$2616903 = 0, $$2624891$us = 0, $$2636806 = 0, $$2643901 = 0, $$2654895$us = 0, $$2668853$us = 0, $$2677831$us = 0, $$2686734$us = 0, $$2689733$us = 0, $$2692767$us = 0, $$2697803 = 0, $$2704802 = 0, $$2854$us = 0, $$3617860 = 0, $$3625848$us = 0, $$3637813$us = 0, $$3644859 = 0, $$3655858 = 0, $$3669868$us = 0, $$3678805 = 0;
 var $$3693751$us = 0, $$3698809$us = 0, $$3705817$us = 0, $$3864$us = 0, $$4618873 = 0, $$4626869$us = 0, $$4638794$us = 0, $$4645872 = 0, $$4656871 = 0, $$4670832$us = 0, $$4679818$us = 0, $$4694732$us = 0, $$4699766$us = 0, $$4706765$us = 0, $$4787$us = 0, $$5619839$us = 0, $$5627833$us = 0, $$5646838$us = 0, $$5657837$us = 0, $$5671786$us = 0;
 var $$5680785$us = 0, $$5700749$us = 0, $$5707759 = 0, $$5784$us = 0, $$6620821$us = 0, $$6628792$us = 0, $$6647827 = 0, $$6658826 = 0, $$6672773$us = 0, $$6681772$us = 0, $$6701731$us = 0, $$6708740 = 0, $$6746$us = 0, $$7621799$us = 0, $$7629781$us = 0, $$7648798$us = 0, $$7659793$us = 0, $$7673761 = 0, $$7682760 = 0, $$7736$us = 0;
 var $$8630768$us = 0, $$8649791$us = 0, $$8660790$us = 0, $$8674742 = 0, $$8683741 = 0, $$8775$us = 0, $$9631757$us = 0, $$9650780$us = 0, $$9661779$us = 0, $$9763 = 0, $$not = 0, $$not976 = 0, $$not977 = 0, $$not978 = 0, $$not980 = 0, $$not981 = 0, $$not986 = 0, $$not991 = 0, $$not992 = 0, $$pn = 0;
 var $10 = 0.0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0.0, $116 = 0, $117 = 0;
 var $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0, $121 = 0, $122 = 0.0, $123 = 0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0.0, $146 = 0, $147 = 0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0, $151 = 0, $152 = 0.0, $153 = 0;
 var $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0.0, $186 = 0, $187 = 0.0, $188 = 0.0, $189 = 0, $19 = 0;
 var $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0.0, $202 = 0, $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0.0, $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0.0, $226 = 0.0;
 var $227 = 0, $228 = 0, $229 = 0.0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0.0, $238 = 0.0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0.0, $244 = 0;
 var $245 = 0, $246 = 0.0, $247 = 0.0, $248 = 0.0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0.0, $254 = 0.0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0.0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0.0, $314 = 0.0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0.0, $326 = 0, $327 = 0.0, $328 = 0.0, $329 = 0, $33 = 0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0.0;
 var $354 = 0, $355 = 0, $356 = 0.0, $357 = 0.0, $358 = 0, $359 = 0, $36 = 0, $360 = 0.0, $361 = 0.0, $362 = 0.0, $363 = 0, $364 = 0, $365 = 0, $366 = 0.0, $367 = 0, $368 = 0.0, $369 = 0.0, $37 = 0, $370 = 0, $371 = 0.0;
 var $372 = 0.0, $373 = 0.0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0.0;
 var $47 = 0, $48 = 0, $49 = 0.0, $50 = 0.0, $51 = 0, $52 = 0.0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0.0, $79 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0, $85 = 0.0, $86 = 0.0;
 var $87 = 0.0, $88 = 0, $89 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge979 = 0, $brmerge982 = 0, $brmerge987 = 0, $brmerge993 = 0, $cosf = 0.0, $exitcond = 0;
 var $exitcond933 = 0, $exitcond935 = 0, $exitcond936 = 0, $exitcond937 = 0, $exitcond938 = 0, $exitcond940 = 0, $exitcond941 = 0, $exitcond943 = 0, $exitcond945 = 0, $exitcond947 = 0, $exitcond948 = 0, $exitcond950 = 0, $exitcond951 = 0, $exitcond952 = 0, $exitcond953 = 0, $exitcond954 = 0, $exitcond956 = 0, $exitcond957 = 0, $exitcond958 = 0, $exitcond960 = 0;
 var $exitcond961 = 0, $exitcond963 = 0, $exitcond964 = 0, $exitcond965 = 0, $exitcond966 = 0, $exitcond967 = 0, $exitcond968 = 0, $exitcond970 = 0, $or$cond = 0, $or$cond988 = 0, $or$cond989 = 0, $or$cond990 = 0, $sinf = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = (+($1|0));
 $11 = 6.2831854820251465 / $10;
 $cosf = (+Math_cos((+$11)));
 $sinf = (+Math_sin((+$11)));
 $12 = (($1) + 1)|0;
 $13 = $12 >> 1;
 $14 = (($0) + -1)|0;
 $15 = $14 >> 1;
 $16 = Math_imul($2, $0)|0;
 $17 = Math_imul($1, $0)|0;
 $18 = ($0|0)==(1);
 do {
  if (!($18)) {
   $19 = ($3|0)>(0);
   if ($19) {
    $$0634914 = 0;
    while(1) {
     $30 = (($6) + ($$0634914<<2)|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = (($8) + ($$0634914<<2)|0);
     HEAP32[$32>>2] = $31;
     $33 = (($$0634914) + 1)|0;
     $exitcond970 = ($33|0)==($3|0);
     if ($exitcond970) {
      break;
     } else {
      $$0634914 = $33;
     }
    }
   }
   $21 = ($1|0)>(1);
   $22 = ($2|0)>(0);
   $or$cond = $21 & $22;
   if ($or$cond) {
    $$0614911$us = 1;$$0641910$us = 0;
    while(1) {
     $23 = (($$0641910$us) + ($16))|0;
     $$0622906$us = 0;$$0652905$us = $23;
     while(1) {
      $24 = (($5) + ($$0652905$us<<2)|0);
      $25 = HEAP32[$24>>2]|0;
      $26 = (($7) + ($$0652905$us<<2)|0);
      HEAP32[$26>>2] = $25;
      $27 = (($$0652905$us) + ($0))|0;
      $28 = (($$0622906$us) + 1)|0;
      $exitcond967 = ($28|0)==($2|0);
      if ($exitcond967) {
       break;
      } else {
       $$0622906$us = $28;$$0652905$us = $27;
      }
     }
     $29 = (($$0614911$us) + 1)|0;
     $exitcond968 = ($29|0)==($1|0);
     if ($exitcond968) {
      break;
     } else {
      $$0614911$us = $29;$$0641910$us = $23;
     }
    }
   }
   $34 = (0 - ($0))|0;
   $35 = ($15|0)>($2|0);
   if ($35) {
    if ($21) {
     $36 = ($0|0)>(2);
     $$0639887 = $34;$$1615888 = 1;$$1642886 = 0;
     while(1) {
      $37 = (($$1642886) + ($16))|0;
      $38 = (($$0639887) + ($0))|0;
      if ($22) {
       $39 = (($38) + -1)|0;
       if ($36) {
        $40 = (($37) - ($0))|0;
        $$1623882$us = 0;$$1653881$us = $40;
        while(1) {
         $41 = (($$1653881$us) + ($0))|0;
         $$0612876$us = 2;$$0666875$us = $41;$$0877$us = $39;
         while(1) {
          $42 = (($$0877$us) + 2)|0;
          $43 = (($$0666875$us) + 2)|0;
          $44 = (($$0877$us) + 1)|0;
          $45 = (($9) + ($44<<2)|0);
          $46 = +HEAPF32[$45>>2];
          $47 = (($$0666875$us) + 1)|0;
          $48 = (($5) + ($47<<2)|0);
          $49 = +HEAPF32[$48>>2];
          $50 = $49 * $46;
          $51 = (($9) + ($42<<2)|0);
          $52 = +HEAPF32[$51>>2];
          $53 = (($5) + ($43<<2)|0);
          $54 = +HEAPF32[$53>>2];
          $55 = $54 * $52;
          $56 = $55 + $50;
          $57 = (($7) + ($47<<2)|0);
          HEAPF32[$57>>2] = $56;
          $58 = +HEAPF32[$45>>2];
          $59 = +HEAPF32[$53>>2];
          $60 = $59 * $58;
          $61 = +HEAPF32[$51>>2];
          $62 = +HEAPF32[$48>>2];
          $63 = $62 * $61;
          $64 = $60 - $63;
          $65 = (($7) + ($43<<2)|0);
          HEAPF32[$65>>2] = $64;
          $66 = (($$0612876$us) + 2)|0;
          $67 = ($66|0)<($0|0);
          if ($67) {
           $$0612876$us = $66;$$0666875$us = $43;$$0877$us = $42;
          } else {
           break;
          }
         }
         $68 = (($$1623882$us) + 1)|0;
         $exitcond963 = ($68|0)==($2|0);
         if ($exitcond963) {
          break;
         } else {
          $$1623882$us = $68;$$1653881$us = $41;
         }
        }
       }
      }
      $69 = (($$1615888) + 1)|0;
      $exitcond964 = ($69|0)==($1|0);
      if ($exitcond964) {
       break;
      } else {
       $$0639887 = $38;$$1615888 = $69;$$1642886 = $37;
      }
     }
    }
   } else {
    if ($21) {
     $$not = ($0|0)<(3);
     $$not976 = ($2|0)<(1);
     $brmerge = $$not | $$not976;
     $$1640902 = $34;$$2616903 = 1;$$2643901 = 0;
     while(1) {
      $70 = (($$1640902) + ($0))|0;
      $71 = (($$2643901) + ($16))|0;
      if (!($brmerge)) {
       $72 = (($70) + -1)|0;
       $$1613896$us = 2;$$1897$us = $72;$$2654895$us = $71;
       while(1) {
        $73 = (($$1897$us) + 2)|0;
        $74 = (($$2654895$us) + 2)|0;
        $75 = (($$1897$us) + 1)|0;
        $76 = (($9) + ($75<<2)|0);
        $77 = (($9) + ($73<<2)|0);
        $$1667890$us = $74;$$2624891$us = 0;
        while(1) {
         $78 = +HEAPF32[$76>>2];
         $79 = (($$1667890$us) + -1)|0;
         $80 = (($5) + ($79<<2)|0);
         $81 = +HEAPF32[$80>>2];
         $82 = $81 * $78;
         $83 = +HEAPF32[$77>>2];
         $84 = (($5) + ($$1667890$us<<2)|0);
         $85 = +HEAPF32[$84>>2];
         $86 = $85 * $83;
         $87 = $86 + $82;
         $88 = (($7) + ($79<<2)|0);
         HEAPF32[$88>>2] = $87;
         $89 = +HEAPF32[$76>>2];
         $90 = +HEAPF32[$84>>2];
         $91 = $90 * $89;
         $92 = +HEAPF32[$77>>2];
         $93 = +HEAPF32[$80>>2];
         $94 = $93 * $92;
         $95 = $91 - $94;
         $96 = (($7) + ($$1667890$us<<2)|0);
         HEAPF32[$96>>2] = $95;
         $97 = (($$1667890$us) + ($0))|0;
         $98 = (($$2624891$us) + 1)|0;
         $exitcond965 = ($98|0)==($2|0);
         if ($exitcond965) {
          break;
         } else {
          $$1667890$us = $97;$$2624891$us = $98;
         }
        }
        $99 = (($$1613896$us) + 2)|0;
        $100 = ($99|0)<($0|0);
        if ($100) {
         $$1613896$us = $99;$$1897$us = $73;$$2654895$us = $74;
        } else {
         break;
        }
       }
      }
      $101 = (($$2616903) + 1)|0;
      $exitcond966 = ($101|0)==($1|0);
      if ($exitcond966) {
       break;
      } else {
       $$1640902 = $70;$$2616903 = $101;$$2643901 = $71;
      }
     }
    }
   }
   $102 = Math_imul($16, $1)|0;
   $103 = ($15|0)<($2|0);
   $104 = ($13|0)>(1);
   if ($103) {
    if (!($104)) {
     break;
    }
    $$not977 = ($0|0)<(3);
    $$not978 = ($2|0)<(1);
    $brmerge979 = $$not977 | $$not978;
    $$3617860 = 1;$$3644859 = 0;$$3655858 = $102;
    while(1) {
     $105 = (($$3644859) + ($16))|0;
     $106 = (($$3655858) - ($16))|0;
     if (!($brmerge979)) {
      $$0675852$us = $106;$$2668853$us = $105;$$2854$us = 2;
      while(1) {
       $107 = (($$2668853$us) + 2)|0;
       $108 = (($$0675852$us) + 2)|0;
       $109 = (($107) - ($0))|0;
       $110 = (($108) - ($0))|0;
       $$0695847$us = $110;$$0702846$us = $109;$$3625848$us = 0;
       while(1) {
        $111 = (($$0702846$us) + ($0))|0;
        $112 = (($$0695847$us) + ($0))|0;
        $113 = (($111) + -1)|0;
        $114 = (($7) + ($113<<2)|0);
        $115 = +HEAPF32[$114>>2];
        $116 = (($112) + -1)|0;
        $117 = (($7) + ($116<<2)|0);
        $118 = +HEAPF32[$117>>2];
        $119 = $118 + $115;
        $120 = (($5) + ($113<<2)|0);
        HEAPF32[$120>>2] = $119;
        $121 = (($7) + ($111<<2)|0);
        $122 = +HEAPF32[$121>>2];
        $123 = (($7) + ($112<<2)|0);
        $124 = +HEAPF32[$123>>2];
        $125 = $122 - $124;
        $126 = (($5) + ($116<<2)|0);
        HEAPF32[$126>>2] = $125;
        $127 = +HEAPF32[$121>>2];
        $128 = +HEAPF32[$123>>2];
        $129 = $128 + $127;
        $130 = (($5) + ($111<<2)|0);
        HEAPF32[$130>>2] = $129;
        $131 = +HEAPF32[$117>>2];
        $132 = +HEAPF32[$114>>2];
        $133 = $131 - $132;
        $134 = (($5) + ($112<<2)|0);
        HEAPF32[$134>>2] = $133;
        $135 = (($$3625848$us) + 1)|0;
        $exitcond957 = ($135|0)==($2|0);
        if ($exitcond957) {
         break;
        } else {
         $$0695847$us = $112;$$0702846$us = $111;$$3625848$us = $135;
        }
       }
       $136 = (($$2854$us) + 2)|0;
       $137 = ($136|0)<($0|0);
       if ($137) {
        $$0675852$us = $108;$$2668853$us = $107;$$2854$us = $136;
       } else {
        break;
       }
      }
     }
     $138 = (($$3617860) + 1)|0;
     $exitcond958 = ($138|0)==($13|0);
     if ($exitcond958) {
      break;
     } else {
      $$3617860 = $138;$$3644859 = $105;$$3655858 = $106;
     }
    }
   } else {
    if (!($104)) {
     break;
    }
    $$not980 = ($2|0)<(1);
    $$not981 = ($0|0)<(3);
    $brmerge982 = $$not980 | $$not981;
    $$4618873 = 1;$$4645872 = 0;$$4656871 = $102;
    while(1) {
     $139 = (($$4645872) + ($16))|0;
     $140 = (($$4656871) - ($16))|0;
     if (!($brmerge982)) {
      $$1676867$us = $140;$$3669868$us = $139;$$4626869$us = 0;
      while(1) {
       $$1696863$us = $$1676867$us;$$1703862$us = $$3669868$us;$$3864$us = 2;
       while(1) {
        $141 = (($$1703862$us) + 2)|0;
        $142 = (($$1696863$us) + 2)|0;
        $143 = (($$1703862$us) + 1)|0;
        $144 = (($7) + ($143<<2)|0);
        $145 = +HEAPF32[$144>>2];
        $146 = (($$1696863$us) + 1)|0;
        $147 = (($7) + ($146<<2)|0);
        $148 = +HEAPF32[$147>>2];
        $149 = $148 + $145;
        $150 = (($5) + ($143<<2)|0);
        HEAPF32[$150>>2] = $149;
        $151 = (($7) + ($141<<2)|0);
        $152 = +HEAPF32[$151>>2];
        $153 = (($7) + ($142<<2)|0);
        $154 = +HEAPF32[$153>>2];
        $155 = $152 - $154;
        $156 = (($5) + ($146<<2)|0);
        HEAPF32[$156>>2] = $155;
        $157 = +HEAPF32[$151>>2];
        $158 = +HEAPF32[$153>>2];
        $159 = $158 + $157;
        $160 = (($5) + ($141<<2)|0);
        HEAPF32[$160>>2] = $159;
        $161 = +HEAPF32[$147>>2];
        $162 = +HEAPF32[$144>>2];
        $163 = $161 - $162;
        $164 = (($5) + ($142<<2)|0);
        HEAPF32[$164>>2] = $163;
        $165 = (($$3864$us) + 2)|0;
        $166 = ($165|0)<($0|0);
        if ($166) {
         $$1696863$us = $142;$$1703862$us = $141;$$3864$us = $165;
        } else {
         break;
        }
       }
       $167 = (($$3669868$us) + ($0))|0;
       $168 = (($$1676867$us) + ($0))|0;
       $169 = (($$4626869$us) + 1)|0;
       $exitcond960 = ($169|0)==($2|0);
       if ($exitcond960) {
        break;
       } else {
        $$1676867$us = $168;$$3669868$us = $167;$$4626869$us = $169;
       }
      }
     }
     $170 = (($$4618873) + 1)|0;
     $exitcond961 = ($170|0)==($13|0);
     if ($exitcond961) {
      break;
     } else {
      $$4618873 = $170;$$4645872 = $139;$$4656871 = $140;
     }
    }
   }
  }
 } while(0);
 $20 = ($3|0)>(0);
 if ($20) {
  $$1635843 = 0;
  while(1) {
   $171 = (($8) + ($$1635843<<2)|0);
   $172 = HEAP32[$171>>2]|0;
   $173 = (($6) + ($$1635843<<2)|0);
   HEAP32[$173>>2] = $172;
   $174 = (($$1635843) + 1)|0;
   $exitcond956 = ($174|0)==($3|0);
   if ($exitcond956) {
    break;
   } else {
    $$1635843 = $174;
   }
  }
 }
 $175 = Math_imul($3, $1)|0;
 $176 = ($13|0)>(1);
 if ($176) {
  $177 = ($2|0)>(0);
  if ($177) {
   $$5619839$us = 1;$$5646838$us = 0;$$5657837$us = $175;
   while(1) {
    $178 = (($$5646838$us) + ($16))|0;
    $179 = (($$5657837$us) - ($16))|0;
    $180 = (($178) - ($0))|0;
    $181 = (($179) - ($0))|0;
    $$2677831$us = $181;$$4670832$us = $180;$$5627833$us = 0;
    while(1) {
     $182 = (($$4670832$us) + ($0))|0;
     $183 = (($$2677831$us) + ($0))|0;
     $184 = (($7) + ($182<<2)|0);
     $185 = +HEAPF32[$184>>2];
     $186 = (($7) + ($183<<2)|0);
     $187 = +HEAPF32[$186>>2];
     $188 = $187 + $185;
     $189 = (($5) + ($182<<2)|0);
     HEAPF32[$189>>2] = $188;
     $190 = +HEAPF32[$186>>2];
     $191 = +HEAPF32[$184>>2];
     $192 = $190 - $191;
     $193 = (($5) + ($183<<2)|0);
     HEAPF32[$193>>2] = $192;
     $194 = (($$5627833$us) + 1)|0;
     $exitcond953 = ($194|0)==($2|0);
     if ($exitcond953) {
      break;
     } else {
      $$2677831$us = $183;$$4670832$us = $182;$$5627833$us = $194;
     }
    }
    $195 = (($$5619839$us) + 1)|0;
    $exitcond954 = ($195|0)==($13|0);
    if ($exitcond954) {
     break;
    } else {
     $$5619839$us = $195;$$5646838$us = $178;$$5657837$us = $179;
    }
   }
  }
  $$pn = (($1) + -1)|0;
  $196 = Math_imul($$pn, $3)|0;
  $197 = ($13|0)==(2);
  $$not986 = $20 ^ 1;
  $brmerge987 = $197 | $$not986;
  $$0633828 = 1;$$0663825 = 1.0;$$0665824 = 0.0;$$6647827 = 0;$$6658826 = $175;
  while(1) {
   $207 = (($$6647827) + ($3))|0;
   $208 = (($$6658826) - ($3))|0;
   $209 = $$0663825 * $cosf;
   $210 = $$0665824 * $sinf;
   $211 = $209 - $210;
   $212 = $$0665824 * $cosf;
   $213 = $$0663825 * $sinf;
   $214 = $213 + $212;
   if ($20) {
    $$0690804 = $3;$$2636806 = 0;$$2697803 = $196;$$2704802 = $208;$$3678805 = $207;
    while(1) {
     $242 = (($6) + ($$2636806<<2)|0);
     $243 = +HEAPF32[$242>>2];
     $244 = (($$0690804) + 1)|0;
     $245 = (($6) + ($$0690804<<2)|0);
     $246 = +HEAPF32[$245>>2];
     $247 = $246 * $211;
     $248 = $247 + $243;
     $249 = (($$3678805) + 1)|0;
     $250 = (($8) + ($$3678805<<2)|0);
     HEAPF32[$250>>2] = $248;
     $251 = (($$2697803) + 1)|0;
     $252 = (($6) + ($$2697803<<2)|0);
     $253 = +HEAPF32[$252>>2];
     $254 = $253 * $214;
     $255 = (($$2704802) + 1)|0;
     $256 = (($8) + ($$2704802<<2)|0);
     HEAPF32[$256>>2] = $254;
     $257 = (($$2636806) + 1)|0;
     $exitcond950 = ($257|0)==($3|0);
     if ($exitcond950) {
      break;
     } else {
      $$0690804 = $244;$$2636806 = $257;$$2697803 = $251;$$2704802 = $255;$$3678805 = $249;
     }
    }
   }
   if (!($brmerge987)) {
    $$0662820$us = $211;$$0664819$us = $214;$$3705817$us = $196;$$4679818$us = $3;$$6620821$us = 2;
    while(1) {
     $215 = (($$4679818$us) + ($3))|0;
     $216 = (($$3705817$us) - ($3))|0;
     $217 = $$0662820$us * $211;
     $218 = $$0664819$us * $214;
     $219 = $217 - $218;
     $220 = $$0664819$us * $211;
     $221 = $$0662820$us * $214;
     $222 = $221 + $220;
     $$0684812$us = $216;$$0687811$us = $215;$$1691810$us = $208;$$3637813$us = 0;$$3698809$us = $207;
     while(1) {
      $223 = (($$0687811$us) + 1)|0;
      $224 = (($6) + ($$0687811$us<<2)|0);
      $225 = +HEAPF32[$224>>2];
      $226 = $225 * $219;
      $227 = (($$3698809$us) + 1)|0;
      $228 = (($8) + ($$3698809$us<<2)|0);
      $229 = +HEAPF32[$228>>2];
      $230 = $229 + $226;
      HEAPF32[$228>>2] = $230;
      $231 = (($$0684812$us) + 1)|0;
      $232 = (($6) + ($$0684812$us<<2)|0);
      $233 = +HEAPF32[$232>>2];
      $234 = $233 * $222;
      $235 = (($$1691810$us) + 1)|0;
      $236 = (($8) + ($$1691810$us<<2)|0);
      $237 = +HEAPF32[$236>>2];
      $238 = $237 + $234;
      HEAPF32[$236>>2] = $238;
      $239 = (($$3637813$us) + 1)|0;
      $exitcond951 = ($239|0)==($3|0);
      if ($exitcond951) {
       break;
      } else {
       $$0684812$us = $231;$$0687811$us = $223;$$1691810$us = $235;$$3637813$us = $239;$$3698809$us = $227;
      }
     }
     $240 = (($$6620821$us) + 1)|0;
     $241 = ($240|0)<($13|0);
     if ($241) {
      $$0662820$us = $219;$$0664819$us = $222;$$3705817$us = $216;$$4679818$us = $215;$$6620821$us = $240;
     } else {
      break;
     }
    }
   }
   $258 = (($$0633828) + 1)|0;
   $exitcond952 = ($258|0)==($13|0);
   if ($exitcond952) {
    break;
   } else {
    $$0633828 = $258;$$0663825 = $211;$$0665824 = $214;$$6647827 = $207;$$6658826 = $208;
   }
  }
  if ($20) {
   $$7621799$us = 1;$$7648798$us = 0;
   while(1) {
    $198 = (($$7648798$us) + ($3))|0;
    $$4638794$us = 0;$$7659793$us = $198;
    while(1) {
     $199 = (($$7659793$us) + 1)|0;
     $200 = (($6) + ($$7659793$us<<2)|0);
     $201 = +HEAPF32[$200>>2];
     $202 = (($8) + ($$4638794$us<<2)|0);
     $203 = +HEAPF32[$202>>2];
     $204 = $203 + $201;
     HEAPF32[$202>>2] = $204;
     $205 = (($$4638794$us) + 1)|0;
     $exitcond947 = ($205|0)==($3|0);
     if ($exitcond947) {
      break;
     } else {
      $$4638794$us = $205;$$7659793$us = $199;
     }
    }
    $206 = (($$7621799$us) + 1)|0;
    $exitcond948 = ($206|0)==($13|0);
    if ($exitcond948) {
     break;
    } else {
     $$7621799$us = $206;$$7648798$us = $198;
    }
   }
  }
 }
 $259 = ($0|0)<($2|0);
 if ($259) {
  $271 = ($0|0)>(0);
  $272 = ($2|0)>(0);
  $or$cond989 = $271 & $272;
  if ($or$cond989) {
   $$5784$us = 0;
   while(1) {
    $$7629781$us = 0;$$9650780$us = $$5784$us;$$9661779$us = $$5784$us;
    while(1) {
     $273 = (($7) + ($$9650780$us<<2)|0);
     $274 = HEAP32[$273>>2]|0;
     $275 = (($4) + ($$9661779$us<<2)|0);
     HEAP32[$275>>2] = $274;
     $276 = (($$9650780$us) + ($0))|0;
     $277 = (($$9661779$us) + ($17))|0;
     $278 = (($$7629781$us) + 1)|0;
     $exitcond940 = ($278|0)==($2|0);
     if ($exitcond940) {
      break;
     } else {
      $$7629781$us = $278;$$9650780$us = $276;$$9661779$us = $277;
     }
    }
    $279 = (($$5784$us) + 1)|0;
    $exitcond941 = ($279|0)==($0|0);
    if ($exitcond941) {
     break;
    } else {
     $$5784$us = $279;
    }
   }
  }
 } else {
  $260 = ($2|0)>(0);
  $261 = ($0|0)>(0);
  $or$cond988 = $260 & $261;
  if ($or$cond988) {
   $$6628792$us = 0;$$8649791$us = 0;$$8660790$us = 0;
   while(1) {
    $$4787$us = 0;$$5671786$us = $$8649791$us;$$5680785$us = $$8660790$us;
    while(1) {
     $262 = (($$5671786$us) + 1)|0;
     $263 = (($7) + ($$5671786$us<<2)|0);
     $264 = HEAP32[$263>>2]|0;
     $265 = (($$5680785$us) + 1)|0;
     $266 = (($4) + ($$5680785$us<<2)|0);
     HEAP32[$266>>2] = $264;
     $267 = (($$4787$us) + 1)|0;
     $exitcond943 = ($267|0)==($0|0);
     if ($exitcond943) {
      break;
     } else {
      $$4787$us = $267;$$5671786$us = $262;$$5680785$us = $265;
     }
    }
    $268 = (($$8649791$us) + ($0))|0;
    $269 = (($$8660790$us) + ($17))|0;
    $270 = (($$6628792$us) + 1)|0;
    $exitcond945 = ($270|0)==($2|0);
    if ($exitcond945) {
     break;
    } else {
     $$6628792$us = $270;$$8649791$us = $268;$$8660790$us = $269;
    }
   }
  }
 }
 $280 = $0 << 1;
 $281 = Math_imul($16, $1)|0;
 $282 = ($2|0)>(0);
 $or$cond990 = $176 & $282;
 if ($or$cond990) {
  $$10651774$us = 0;$$6672773$us = 0;$$6681772$us = $281;$$8775$us = 1;
  while(1) {
   $283 = (($$10651774$us) + ($280))|0;
   $284 = (($$6672773$us) + ($16))|0;
   $285 = (($$6681772$us) - ($16))|0;
   $$2692767$us = $285;$$4699766$us = $284;$$4706765$us = $283;$$8630768$us = 0;
   while(1) {
    $286 = (($7) + ($$4699766$us<<2)|0);
    $287 = HEAP32[$286>>2]|0;
    $288 = (($$4706765$us) + -1)|0;
    $289 = (($4) + ($288<<2)|0);
    HEAP32[$289>>2] = $287;
    $290 = (($7) + ($$2692767$us<<2)|0);
    $291 = HEAP32[$290>>2]|0;
    $292 = (($4) + ($$4706765$us<<2)|0);
    HEAP32[$292>>2] = $291;
    $293 = (($$4706765$us) + ($17))|0;
    $294 = (($$4699766$us) + ($0))|0;
    $295 = (($$2692767$us) + ($0))|0;
    $296 = (($$8630768$us) + 1)|0;
    $exitcond937 = ($296|0)==($2|0);
    if ($exitcond937) {
     break;
    } else {
     $$2692767$us = $295;$$4699766$us = $294;$$4706765$us = $293;$$8630768$us = $296;
    }
   }
   $297 = (($$8775$us) + 1)|0;
   $exitcond938 = ($297|0)==($13|0);
   if ($exitcond938) {
    break;
   } else {
    $$10651774$us = $283;$$6672773$us = $284;$$6681772$us = $285;$$8775$us = $297;
   }
  }
 }
 if ($18) {
  return;
 }
 $298 = ($15|0)<($2|0);
 $299 = (0 - ($0))|0;
 if (!($298)) {
  if (!($176)) {
   return;
  }
  $$not991 = ($2|0)<(1);
  $$not992 = ($0|0)<(3);
  $brmerge993 = $$not991 | $$not992;
  $$11762 = $299;$$5707759 = $281;$$7673761 = 0;$$7682760 = 0;$$9763 = 1;
  while(1) {
   $301 = (($$11762) + ($280))|0;
   $302 = (($$7673761) + ($280))|0;
   $303 = (($$7682760) + ($16))|0;
   $304 = (($$5707759) - ($16))|0;
   if (!($brmerge993)) {
    $$1685755$us = $304;$$1688753$us = $303;$$3693751$us = $302;$$5700749$us = $301;$$9631757$us = 0;
    while(1) {
     $$6746$us = 2;
     while(1) {
      $305 = (($0) - ($$6746$us))|0;
      $306 = (($$6746$us) + ($$1688753$us))|0;
      $307 = (($306) + -1)|0;
      $308 = (($7) + ($307<<2)|0);
      $309 = +HEAPF32[$308>>2];
      $310 = (($$6746$us) + ($$1685755$us))|0;
      $311 = (($310) + -1)|0;
      $312 = (($7) + ($311<<2)|0);
      $313 = +HEAPF32[$312>>2];
      $314 = $313 + $309;
      $315 = (($$6746$us) + ($$3693751$us))|0;
      $316 = (($315) + -1)|0;
      $317 = (($4) + ($316<<2)|0);
      HEAPF32[$317>>2] = $314;
      $318 = +HEAPF32[$308>>2];
      $319 = +HEAPF32[$312>>2];
      $320 = $318 - $319;
      $321 = (($305) + ($$5700749$us))|0;
      $322 = (($321) + -1)|0;
      $323 = (($4) + ($322<<2)|0);
      HEAPF32[$323>>2] = $320;
      $324 = (($7) + ($306<<2)|0);
      $325 = +HEAPF32[$324>>2];
      $326 = (($7) + ($310<<2)|0);
      $327 = +HEAPF32[$326>>2];
      $328 = $327 + $325;
      $329 = (($4) + ($315<<2)|0);
      HEAPF32[$329>>2] = $328;
      $330 = +HEAPF32[$326>>2];
      $331 = +HEAPF32[$324>>2];
      $332 = $330 - $331;
      $333 = (($4) + ($321<<2)|0);
      HEAPF32[$333>>2] = $332;
      $334 = (($$6746$us) + 2)|0;
      $335 = ($334|0)<($0|0);
      if ($335) {
       $$6746$us = $334;
      } else {
       break;
      }
     }
     $336 = (($$5700749$us) + ($17))|0;
     $337 = (($$3693751$us) + ($17))|0;
     $338 = (($$1688753$us) + ($0))|0;
     $339 = (($$1685755$us) + ($0))|0;
     $340 = (($$9631757$us) + 1)|0;
     $exitcond935 = ($340|0)==($2|0);
     if ($exitcond935) {
      break;
     } else {
      $$1685755$us = $339;$$1688753$us = $338;$$3693751$us = $337;$$5700749$us = $336;$$9631757$us = $340;
     }
    }
   }
   $341 = (($$9763) + 1)|0;
   $exitcond936 = ($341|0)==($13|0);
   if ($exitcond936) {
    break;
   } else {
    $$11762 = $301;$$5707759 = $304;$$7673761 = $302;$$7682760 = $303;$$9763 = $341;
   }
  }
  return;
 }
 if (!($176)) {
  return;
 }
 $300 = ($0|0)>(2);
 $$10744 = 1;$$12743 = $299;$$6708740 = $281;$$8674742 = 0;$$8683741 = 0;
 while(1) {
  $342 = (($$12743) + ($280))|0;
  $343 = (($$8674742) + ($280))|0;
  $344 = (($$8683741) + ($16))|0;
  $345 = (($$6708740) - ($16))|0;
  if ($300) {
   $346 = (($342) + ($0))|0;
   if ($282) {
    $$7736$us = 2;
    while(1) {
     $347 = (($346) - ($$7736$us))|0;
     $348 = (($$7736$us) + ($343))|0;
     $349 = (($$7736$us) + ($344))|0;
     $350 = (($$7736$us) + ($345))|0;
     $$10632735$us = 0;$$2686734$us = $350;$$2689733$us = $349;$$4694732$us = $348;$$6701731$us = $347;
     while(1) {
      $351 = (($$2689733$us) + -1)|0;
      $352 = (($7) + ($351<<2)|0);
      $353 = +HEAPF32[$352>>2];
      $354 = (($$2686734$us) + -1)|0;
      $355 = (($7) + ($354<<2)|0);
      $356 = +HEAPF32[$355>>2];
      $357 = $356 + $353;
      $358 = (($$4694732$us) + -1)|0;
      $359 = (($4) + ($358<<2)|0);
      HEAPF32[$359>>2] = $357;
      $360 = +HEAPF32[$352>>2];
      $361 = +HEAPF32[$355>>2];
      $362 = $360 - $361;
      $363 = (($$6701731$us) + -1)|0;
      $364 = (($4) + ($363<<2)|0);
      HEAPF32[$364>>2] = $362;
      $365 = (($7) + ($$2689733$us<<2)|0);
      $366 = +HEAPF32[$365>>2];
      $367 = (($7) + ($$2686734$us<<2)|0);
      $368 = +HEAPF32[$367>>2];
      $369 = $368 + $366;
      $370 = (($4) + ($$4694732$us<<2)|0);
      HEAPF32[$370>>2] = $369;
      $371 = +HEAPF32[$367>>2];
      $372 = +HEAPF32[$365>>2];
      $373 = $371 - $372;
      $374 = (($4) + ($$6701731$us<<2)|0);
      HEAPF32[$374>>2] = $373;
      $375 = (($$6701731$us) + ($17))|0;
      $376 = (($$4694732$us) + ($17))|0;
      $377 = (($$2689733$us) + ($0))|0;
      $378 = (($$2686734$us) + ($0))|0;
      $379 = (($$10632735$us) + 1)|0;
      $exitcond = ($379|0)==($2|0);
      if ($exitcond) {
       break;
      } else {
       $$10632735$us = $379;$$2686734$us = $378;$$2689733$us = $377;$$4694732$us = $376;$$6701731$us = $375;
      }
     }
     $380 = (($$7736$us) + 2)|0;
     $381 = ($380|0)<($0|0);
     if ($381) {
      $$7736$us = $380;
     } else {
      break;
     }
    }
   }
  }
  $382 = (($$10744) + 1)|0;
  $exitcond933 = ($382|0)==($13|0);
  if ($exitcond933) {
   break;
  } else {
   $$10744 = $382;$$12743 = $342;$$6708740 = $345;$$8674742 = $343;$$8683741 = $344;
  }
 }
 return;
}
function _drft_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$i = 0, $$0$i = 0, $$0$i$i = 0, $$0112$i$i = 0, $$0114135$us$i$i = 0.0, $$0115$i$i = 0, $$0117146$i$i = 0, $$0119$i$i = 0, $$0121144$i$i = 0, $$0122143$i$i = 0, $$0124142$i$i = 0, $$0125133$us$i$i = 0, $$0126136$us$i$i = 0, $$1$lcssa131$i$i = 0, $$1$us$i$i = 0, $$1113$i$i = 0, $$1113$us$i$i = 0, $$1116$ph$i$i = 0, $$1118134$us$i$i = 0, $$1120138$us$i$i = 0;
 var $$1123$lcssa$i$i = 0, $$1123137$us$i$i = 0, $$lcssa$i$i = 0, $$lcssa$not$i$i = 0, $$lcssa130$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $cosf$us$i$i = 0.0, $exitcond$i$i = 0, $exitcond160$i$i = 0, $exitcond161$i$i = 0, $indvars$iv$i$i = 0, $indvars$iv$in$i$i = 0, $or$cond$i$i = 0, $sinf$us$i$i = 0.0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 $2 = ($1*3)|0;
 $3 = ($1|0)==(0);
 if ($3) {
  $$0$i = 0;
 } else {
  $4 = ($1*12)|0;
  $5 = ($2>>>0)>(65535);
  if ($5) {
   $6 = (($4>>>0) / ($2>>>0))&-1;
   $7 = ($6|0)==(4);
   $$$i = $7 ? $4 : -1;
   $$0$i = $$$i;
  } else {
   $$0$i = $4;
  }
 }
 $8 = (_malloc($$0$i)|0);
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $10 = ((($8)) + -4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 & 3;
  $13 = ($12|0)==(0);
  if (!($13)) {
   _memset(($8|0),0,($$0$i|0))|0;
  }
 }
 $14 = ((($0)) + 4|0);
 HEAP32[$14>>2] = $8;
 $15 = (_malloc(128)|0);
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  $17 = ((($15)) + -4|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = $18 & 3;
  $20 = ($19|0)==(0);
  if (!($20)) {
   dest=$15; stop=dest+128|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  }
 }
 $21 = ((($0)) + 8|0);
 HEAP32[$21>>2] = $15;
 $22 = ($1|0)==(1);
 if ($22) {
  return;
 }
 $23 = (($8) + ($1<<2)|0);
 $24 = ((($15)) + 8|0);
 $$0$i$i = 0;$$0112$i$i = $1;$$0115$i$i = 0;$$0119$i$i = -1;
 L16: while(1) {
  $25 = (($$0119$i$i) + 1)|0;
  $26 = ($25|0)<(4);
  if ($26) {
   $27 = (59560 + ($25<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $$1116$ph$i$i = $28;
  } else {
   $29 = (($$0115$i$i) + 2)|0;
   $$1116$ph$i$i = $29;
  }
  $30 = ($$1116$ph$i$i|0)==(2);
  if ($30) {
   $$1113$i$i = $$0112$i$i;$indvars$iv$in$i$i = $$0$i$i;
  } else {
   $$1$us$i$i = $$0$i$i;$$1113$us$i$i = $$0112$i$i;
   while(1) {
    $31 = (($$1113$us$i$i|0) / ($$1116$ph$i$i|0))&-1;
    $32 = Math_imul($31, $$1116$ph$i$i)|0;
    $33 = ($$1113$us$i$i|0)==($32|0);
    if (!($33)) {
     $$0$i$i = $$1$us$i$i;$$0112$i$i = $$1113$us$i$i;$$0115$i$i = $$1116$ph$i$i;$$0119$i$i = $25;
     continue L16;
    }
    $34 = (($$1$us$i$i) + 1)|0;
    $35 = (($$1$us$i$i) + 2)|0;
    $36 = (($15) + ($35<<2)|0);
    HEAP32[$36>>2] = $$1116$ph$i$i;
    $37 = ($31|0)==(1);
    if ($37) {
     label = 18;
     break L16;
    } else {
     $$1$us$i$i = $34;$$1113$us$i$i = $31;
    }
   }
  }
  while(1) {
   $indvars$iv$i$i = (($indvars$iv$in$i$i) + 1)|0;
   $39 = (($$1113$i$i|0) / 2)&-1;
   $40 = $39 << 1;
   $41 = ($$1113$i$i|0)==($40|0);
   if (!($41)) {
    $$0$i$i = $indvars$iv$in$i$i;$$0112$i$i = $$1113$i$i;$$0115$i$i = $$1116$ph$i$i;$$0119$i$i = $25;
    continue L16;
   }
   $42 = (($indvars$iv$in$i$i) + 2)|0;
   $43 = (($15) + ($42<<2)|0);
   HEAP32[$43>>2] = 2;
   $44 = ($indvars$iv$in$i$i|0)==(0);
   if (!($44)) {
    $45 = ($indvars$iv$in$i$i|0)<(1);
    if (!($45)) {
     $$0117146$i$i = 1;
     while(1) {
      $46 = (($indvars$iv$i$i) - ($$0117146$i$i))|0;
      $47 = (($46) + 1)|0;
      $48 = (($15) + ($47<<2)|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = (($46) + 2)|0;
      $51 = (($15) + ($50<<2)|0);
      HEAP32[$51>>2] = $49;
      $52 = (($$0117146$i$i) + 1)|0;
      $exitcond161$i$i = ($52|0)==($indvars$iv$i$i|0);
      if ($exitcond161$i$i) {
       break;
      } else {
       $$0117146$i$i = $52;
      }
     }
    }
    HEAP32[$24>>2] = 2;
   }
   $53 = $$1113$i$i & -2;
   $54 = ($53|0)==(2);
   if ($54) {
    $$1$lcssa131$i$i = $indvars$iv$in$i$i;$$lcssa$i$i = $44;$$lcssa130$i$i = $indvars$iv$i$i;
    break L16;
   } else {
    $$1113$i$i = $39;$indvars$iv$in$i$i = $indvars$iv$i$i;
   }
  }
 }
 if ((label|0) == 18) {
  $38 = ($$1$us$i$i|0)==(0);
  $$1$lcssa131$i$i = $$1$us$i$i;$$lcssa$i$i = $38;$$lcssa130$i$i = $34;
 }
 HEAP32[$15>>2] = $1;
 $55 = ((($15)) + 4|0);
 HEAP32[$55>>2] = $$lcssa130$i$i;
 $56 = (+($1|0));
 $57 = 6.2831854820251465 / $56;
 $$lcssa$not$i$i = $$lcssa$i$i ^ 1;
 $58 = ($$1$lcssa131$i$i|0)>(0);
 $or$cond$i$i = $58 & $$lcssa$not$i$i;
 if ($or$cond$i$i) {
  $$0121144$i$i = 0;$$0122143$i$i = 0;$$0124142$i$i = 1;
 } else {
  return;
 }
 while(1) {
  $59 = (($$0121144$i$i) + 2)|0;
  $60 = (($15) + ($59<<2)|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = Math_imul($61, $$0124142$i$i)|0;
  $63 = (($1|0) / ($62|0))&-1;
  $64 = (($61) + -1)|0;
  $65 = ($61|0)>(1);
  do {
   if ($65) {
    $66 = ($63|0)>(2);
    $67 = Math_imul($63, $64)|0;
    if ($66) {
     $$0126136$us$i$i = 0;$$1120138$us$i$i = 0;$$1123137$us$i$i = $$0122143$i$i;
    } else {
     $68 = (($67) + ($$0122143$i$i))|0;
     $$1123$lcssa$i$i = $68;
     break;
    }
    while(1) {
     $69 = (($$0126136$us$i$i) + ($$0124142$i$i))|0;
     $70 = (+($69|0));
     $71 = $70 * $57;
     $$0114135$us$i$i = 0.0;$$0125133$us$i$i = 2;$$1118134$us$i$i = $$1123137$us$i$i;
     while(1) {
      $72 = $$0114135$us$i$i + 1.0;
      $73 = $71 * $72;
      $cosf$us$i$i = (+Math_cos((+$73)));
      $74 = (($$1118134$us$i$i) + 1)|0;
      $75 = (($23) + ($$1118134$us$i$i<<2)|0);
      HEAPF32[$75>>2] = $cosf$us$i$i;
      $sinf$us$i$i = (+Math_sin((+$73)));
      $76 = (($$1118134$us$i$i) + 2)|0;
      $77 = (($23) + ($74<<2)|0);
      HEAPF32[$77>>2] = $sinf$us$i$i;
      $78 = (($$0125133$us$i$i) + 2)|0;
      $79 = ($78|0)<($63|0);
      if ($79) {
       $$0114135$us$i$i = $72;$$0125133$us$i$i = $78;$$1118134$us$i$i = $76;
      } else {
       break;
      }
     }
     $80 = (($$1123137$us$i$i) + ($63))|0;
     $81 = (($$1120138$us$i$i) + 1)|0;
     $exitcond$i$i = ($81|0)==($64|0);
     if ($exitcond$i$i) {
      break;
     } else {
      $$0126136$us$i$i = $69;$$1120138$us$i$i = $81;$$1123137$us$i$i = $80;
     }
    }
    $82 = (($67) + ($$0122143$i$i))|0;
    $$1123$lcssa$i$i = $82;
   } else {
    $$1123$lcssa$i$i = $$0122143$i$i;
   }
  } while(0);
  $83 = (($$0121144$i$i) + 1)|0;
  $exitcond160$i$i = ($83|0)==($$1$lcssa131$i$i|0);
  if ($exitcond160$i$i) {
   break;
  } else {
   $$0121144$i$i = $83;$$0122143$i$i = $$1123$lcssa$i$i;$$0124142$i$i = $62;
  }
 }
 return;
}
function _floor1_pack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$0 = 0, $$0$lcssa$i6 = 0, $$056$i = 0, $$056$i3 = 0, $$06687 = 0, $$06880 = 0, $$07$i = 0, $$07$i2 = 0, $$07174 = 0, $$088 = 0, $$16783 = 0, $$16975 = 0, $$270$lcssa = 0, $$27073 = 0, $$276 = 0, $$pre = 0, $$pre93 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 836|0);
 $3 = ((($0)) + 840|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$0>>2]|0;
 _oggpack_write($1,$5,5);
 $6 = HEAP32[$0>>2]|0;
 $7 = ($6|0)>(0);
 if ($7) {
  $8 = ((($0)) + 4|0);
  $$06687 = 0;$$088 = -1;
  while(1) {
   $14 = (($8) + ($$06687<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   _oggpack_write($1,$15,4);
   $16 = HEAP32[$14>>2]|0;
   $17 = ($$088|0)<($16|0);
   $$$0 = $17 ? $16 : $$088;
   $18 = (($$06687) + 1)|0;
   $19 = HEAP32[$0>>2]|0;
   $20 = ($18|0)<($19|0);
   if ($20) {
    $$06687 = $18;$$088 = $$$0;
   } else {
    break;
   }
  }
  $9 = ($$$0|0)<(0);
  if (!($9)) {
   $10 = ((($0)) + 128|0);
   $11 = ((($0)) + 192|0);
   $12 = ((($0)) + 256|0);
   $13 = ((($0)) + 320|0);
   $$16783 = 0;
   while(1) {
    $21 = (($10) + ($$16783<<2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (($22) + -1)|0;
    _oggpack_write($1,$23,3);
    $24 = (($11) + ($$16783<<2)|0);
    $25 = HEAP32[$24>>2]|0;
    _oggpack_write($1,$25,2);
    $26 = HEAP32[$24>>2]|0;
    $27 = ($26|0)==(0);
    if ($27) {
     $$06880 = 0;
     label = 8;
    } else {
     $28 = (($12) + ($$16783<<2)|0);
     $29 = HEAP32[$28>>2]|0;
     _oggpack_write($1,$29,8);
     $$pre = HEAP32[$24>>2]|0;
     $30 = ($$pre|0)==(31);
     if (!($30)) {
      $$06880 = 0;
      label = 8;
     }
    }
    if ((label|0) == 8) {
     while(1) {
      label = 0;
      $31 = ((($13) + ($$16783<<5)|0) + ($$06880<<2)|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + 1)|0;
      _oggpack_write($1,$33,8);
      $34 = (($$06880) + 1)|0;
      $35 = HEAP32[$24>>2]|0;
      $36 = 1 << $35;
      $37 = ($34|0)<($36|0);
      if ($37) {
       $$06880 = $34;
       label = 8;
      } else {
       break;
      }
     }
    }
    $38 = (($$16783) + 1)|0;
    $exitcond92 = ($$16783|0)==($$$0|0);
    if ($exitcond92) {
     break;
    } else {
     $$16783 = $38;
    }
   }
  }
 }
 $39 = ((($0)) + 832|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (($40) + -1)|0;
 _oggpack_write($1,$41,2);
 $42 = (($4) + -1)|0;
 $43 = ($42|0)==(0);
 if ($43) {
  _oggpack_write($1,0,4);
  $$0$lcssa$i6 = 0;
 } else {
  $$056$i = $42;$$07$i = 0;
  while(1) {
   $44 = $$056$i >>> 1;
   $45 = (($$07$i) + 1)|0;
   $46 = ($44|0)==(0);
   if ($46) {
    break;
   } else {
    $$056$i = $44;$$07$i = $45;
   }
  }
  _oggpack_write($1,$45,4);
  $$056$i3 = $42;$$07$i2 = 0;
  while(1) {
   $47 = $$056$i3 >>> 1;
   $48 = (($$07$i2) + 1)|0;
   $49 = ($47|0)==(0);
   if ($49) {
    $$0$lcssa$i6 = $48;
    break;
   } else {
    $$056$i3 = $47;$$07$i2 = $48;
   }
  }
 }
 $50 = HEAP32[$0>>2]|0;
 $51 = ($50|0)>(0);
 if (!($51)) {
  return;
 }
 $52 = ((($0)) + 128|0);
 $53 = ((($0)) + 4|0);
 $$07174 = 0;$$16975 = 0;$$276 = 0;$67 = $50;
 while(1) {
  $54 = (($53) + ($$276<<2)|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = (($52) + ($55<<2)|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = (($57) + ($$07174))|0;
  $59 = ($$16975|0)<($58|0);
  if ($59) {
   $$27073 = $$16975;
   while(1) {
    $60 = (($$27073) + 2)|0;
    $61 = (($2) + ($60<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    _oggpack_write($1,$62,$$0$lcssa$i6);
    $63 = (($$27073) + 1)|0;
    $exitcond = ($63|0)==($58|0);
    if ($exitcond) {
     break;
    } else {
     $$27073 = $63;
    }
   }
   $$pre93 = HEAP32[$0>>2]|0;
   $$270$lcssa = $58;$66 = $$pre93;
  } else {
   $$270$lcssa = $$16975;$66 = $67;
  }
  $64 = (($$276) + 1)|0;
  $65 = ($64|0)<($66|0);
  if ($65) {
   $$07174 = $58;$$16975 = $$270$lcssa;$$276 = $64;$67 = $66;
  } else {
   break;
  }
 }
 return;
}
function _floor1_unpack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$0112 = 0, $$0106 = 0, $$0107152 = 0, $$0109144 = 0, $$0112151 = 0, $$0114$lcssa = 0, $$0114138 = 0, $$1108147 = 0, $$1110139 = 0, $$2111$lcssa = 0, $$2111134 = 0, $$2140 = 0, $$3130 = 0, $$4129 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi169Z2D = 0, $$pre$phi171Z2D = 0, $$pre164 = 0, $$pre166 = 0;
 var $$pre167 = 0, $$pre168 = 0, $$pre170 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $2 = sp;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_malloc(1120)|0);
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $7 = ((($5)) + -4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & 3;
  $10 = ($9|0)==(0);
  if (!($10)) {
   _memset(($5|0),0,1120)|0;
  }
 }
 $11 = (_oggpack_read($1,5)|0);
 HEAP32[$5>>2] = $11;
 $12 = ($11|0)>(0);
 L5: do {
  if ($12) {
   $13 = ((($5)) + 4|0);
   $$0107152 = 0;$$0112151 = -1;
   while(1) {
    $20 = (_oggpack_read($1,4)|0);
    $21 = (($13) + ($$0107152<<2)|0);
    HEAP32[$21>>2] = $20;
    $22 = ($20|0)<(0);
    if ($22) {
     break L5;
    }
    $23 = ($$0112151|0)<($20|0);
    $$$0112 = $23 ? $20 : $$0112151;
    $24 = (($$0107152) + 1)|0;
    $25 = HEAP32[$5>>2]|0;
    $26 = ($24|0)<($25|0);
    if ($26) {
     $$0107152 = $24;$$0112151 = $$$0112;
    } else {
     break;
    }
   }
   $14 = ($$$0112|0)<(0);
   if ($14) {
    label = 21;
   } else {
    $15 = ((($5)) + 128|0);
    $16 = ((($5)) + 192|0);
    $17 = ((($5)) + 256|0);
    $18 = ((($4)) + 24|0);
    $19 = ((($5)) + 320|0);
    $$1108147 = 0;
    while(1) {
     $27 = (_oggpack_read($1,3)|0);
     $28 = (($27) + 1)|0;
     $29 = (($15) + ($$1108147<<2)|0);
     HEAP32[$29>>2] = $28;
     $30 = (_oggpack_read($1,2)|0);
     $31 = (($16) + ($$1108147<<2)|0);
     HEAP32[$31>>2] = $30;
     $32 = ($30|0)<(0);
     if ($32) {
      break L5;
     }
     $33 = ($30|0)==(0);
     $$phi$trans$insert = (($17) + ($$1108147<<2)|0);
     if ($33) {
      $$pre = HEAP32[$$phi$trans$insert>>2]|0;
      $35 = $$pre;
     } else {
      $34 = (_oggpack_read($1,8)|0);
      HEAP32[$$phi$trans$insert>>2] = $34;
      $35 = $34;
     }
     $36 = ($35|0)<(0);
     if ($36) {
      break L5;
     }
     $37 = HEAP32[$18>>2]|0;
     $38 = ($35|0)<($37|0);
     if (!($38)) {
      break L5;
     }
     $39 = HEAP32[$31>>2]|0;
     $40 = ($39|0)==(31);
     if (!($40)) {
      $$0109144 = 0;
      while(1) {
       $45 = (_oggpack_read($1,8)|0);
       $46 = (($45) + -1)|0;
       $47 = ((($19) + ($$1108147<<5)|0) + ($$0109144<<2)|0);
       HEAP32[$47>>2] = $46;
       $48 = ($45|0)<(0);
       if ($48) {
        break L5;
       }
       $49 = HEAP32[$18>>2]|0;
       $50 = ($45|0)>($49|0);
       $43 = (($$0109144) + 1)|0;
       if ($50) {
        break L5;
       }
       $41 = HEAP32[$31>>2]|0;
       $42 = 1 << $41;
       $44 = ($43|0)<($42|0);
       if ($44) {
        $$0109144 = $43;
       } else {
        break;
       }
      }
     }
     $51 = (($$1108147) + 1)|0;
     $52 = ($$1108147|0)<($$$0112|0);
     if ($52) {
      $$1108147 = $51;
     } else {
      label = 21;
      break;
     }
    }
   }
  } else {
   label = 21;
  }
 } while(0);
 L27: do {
  if ((label|0) == 21) {
   $53 = (_oggpack_read($1,2)|0);
   $54 = (($53) + 1)|0;
   $55 = ((($5)) + 832|0);
   HEAP32[$55>>2] = $54;
   $56 = (_oggpack_read($1,4)|0);
   $57 = ($56|0)<(0);
   if (!($57)) {
    $58 = HEAP32[$5>>2]|0;
    $59 = ($58|0)>(0);
    if ($59) {
     $60 = ((($5)) + 128|0);
     $61 = ((($5)) + 4|0);
     $62 = ((($5)) + 836|0);
     $63 = 1 << $56;
     $$0114138 = 0;$$1110139 = 0;$$2140 = 0;$96 = $58;
     while(1) {
      $64 = (($61) + ($$2140<<2)|0);
      $65 = HEAP32[$64>>2]|0;
      $66 = (($60) + ($65<<2)|0);
      $67 = HEAP32[$66>>2]|0;
      $68 = (($67) + ($$0114138))|0;
      $69 = ($68|0)>(63);
      if ($69) {
       break L27;
      }
      $70 = ($$1110139|0)<($68|0);
      if ($70) {
       $$2111134 = $$1110139;
       while(1) {
        $71 = (_oggpack_read($1,$56)|0);
        $72 = (($$2111134) + 2)|0;
        $73 = (($62) + ($72<<2)|0);
        HEAP32[$73>>2] = $71;
        $74 = ($71|0)>(-1);
        $75 = ($71|0)<($63|0);
        $or$cond = $74 & $75;
        if (!($or$cond)) {
         break L27;
        }
        $76 = (($$2111134) + 1)|0;
        $77 = ($76|0)<($68|0);
        if ($77) {
         $$2111134 = $76;
        } else {
         break;
        }
       }
       $$pre164 = HEAP32[$5>>2]|0;
       $$2111$lcssa = $76;$80 = $$pre164;
      } else {
       $$2111$lcssa = $$1110139;$80 = $96;
      }
      $78 = (($$2140) + 1)|0;
      $79 = ($78|0)<($80|0);
      if ($79) {
       $$0114138 = $68;$$1110139 = $$2111$lcssa;$$2140 = $78;$96 = $80;
      } else {
       $$0114$lcssa = $68;$$pre$phi169Z2D = $62;$$pre$phi171Z2D = $63;
       break;
      }
     }
    } else {
     $$pre168 = ((($5)) + 836|0);
     $$pre170 = 1 << $56;
     $$0114$lcssa = 0;$$pre$phi169Z2D = $$pre168;$$pre$phi171Z2D = $$pre170;
    }
    HEAP32[$$pre$phi169Z2D>>2] = 0;
    $81 = ((($5)) + 840|0);
    HEAP32[$81>>2] = $$pre$phi171Z2D;
    $82 = (($$0114$lcssa) + 2)|0;
    $83 = ($$0114$lcssa|0)>(-2);
    if ($83) {
     $$3130 = 0;
     while(1) {
      $84 = (($$pre$phi169Z2D) + ($$3130<<2)|0);
      $85 = (($2) + ($$3130<<2)|0);
      HEAP32[$85>>2] = $84;
      $86 = (($$3130) + 1)|0;
      $87 = ($86|0)<($82|0);
      if ($87) {
       $$3130 = $86;
      } else {
       break;
      }
     }
    }
    _qsort($2,$82,27);
    $88 = ($82|0)>(1);
    L47: do {
     if ($88) {
      $$pre166 = HEAP32[$2>>2]|0;
      $$pre167 = HEAP32[$$pre166>>2]|0;
      $$4129 = 1;$94 = $$pre167;
      while(1) {
       $91 = (($2) + ($$4129<<2)|0);
       $92 = HEAP32[$91>>2]|0;
       $93 = HEAP32[$92>>2]|0;
       $95 = ($94|0)==($93|0);
       $89 = (($$4129) + 1)|0;
       if ($95) {
        break;
       }
       $90 = ($89|0)<($82|0);
       if ($90) {
        $$4129 = $89;$94 = $93;
       } else {
        break L47;
       }
      }
      if ($6) {
       $$0106 = 0;
      } else {
       break L27;
      }
      STACKTOP = sp;return ($$0106|0);
     }
    } while(0);
    $$0106 = $5;
    STACKTOP = sp;return ($$0106|0);
   }
  }
 } while(0);
 _free($5);
 $$0106 = 0;
 STACKTOP = sp;return ($$0106|0);
}
function _floor1_look($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0101118 = 0, $$0102117 = 0, $$0104116 = 0, $$0106115 = 0, $$0108114 = 0, $$0110$lcssa142144146149 = 0, $$0110$lcssa143 = 0, $$0110135 = 0, $$0136 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$1109 = 0, $$1131 = 0, $$2128 = 0, $$3126 = 0, $$4123 = 0, $$5120 = 0, $$sink = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond1 = 0, $exitcond141 = 0, $indvars$iv = 0, $indvars$iv$next = 0, $or$cond = 0, $or$cond111 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $2 = sp;
 $3 = (_malloc(1312)|0);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($3)) + -4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = $6 & 3;
  $8 = ($7|0)==(0);
  if (!($8)) {
   _memset(($3|0),0,1312)|0;
  }
 }
 $9 = ((($3)) + 1296|0);
 HEAP32[$9>>2] = $1;
 $10 = ((($1)) + 836|0);
 $11 = ((($1)) + 840|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($3)) + 1288|0);
 HEAP32[$13>>2] = $12;
 $14 = HEAP32[$1>>2]|0;
 $15 = ($14|0)>(0);
 if ($15) {
  $17 = ((($1)) + 128|0);
  $18 = ((($1)) + 4|0);
  $$0110135 = 0;$$0136 = 0;
  while(1) {
   $19 = (($18) + ($$0136<<2)|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (($17) + ($20<<2)|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (($22) + ($$0110135))|0;
   $24 = (($$0136) + 1)|0;
   $exitcond1 = ($24|0)==($14|0);
   if ($exitcond1) {
    break;
   } else {
    $$0110135 = $23;$$0136 = $24;
   }
  }
  $25 = (($23) + 2)|0;
  $26 = ((($3)) + 1284|0);
  HEAP32[$26>>2] = $25;
  $27 = ($23|0)>(-2);
  if ($27) {
   $$0110$lcssa143 = $23;$32 = $25;
   label = 10;
  } else {
   _qsort($2,$25,27);
   $$0110$lcssa142144146149 = $23;
  }
 } else {
  $16 = ((($3)) + 1284|0);
  HEAP32[$16>>2] = 2;
  $$0110$lcssa143 = 0;$32 = 2;
  label = 10;
 }
 if ((label|0) == 10) {
  $$1131 = 0;
  while(1) {
   $28 = (($10) + ($$1131<<2)|0);
   $29 = (($2) + ($$1131<<2)|0);
   HEAP32[$29>>2] = $28;
   $30 = (($$1131) + 1)|0;
   $31 = ($30|0)<($32|0);
   if ($31) {
    $$1131 = $30;
   } else {
    break;
   }
  }
  _qsort($2,$32,27);
  $33 = $10;
  $34 = ((($3)) + 260|0);
  $$2128 = 0;
  while(1) {
   $36 = (($2) + ($$2128<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (($37) - ($33))|0;
   $39 = $38 >> 2;
   $40 = (($34) + ($$2128<<2)|0);
   HEAP32[$40>>2] = $39;
   $41 = (($$2128) + 1)|0;
   $42 = ($41|0)<($32|0);
   if ($42) {
    $$2128 = $41;
   } else {
    break;
   }
  }
  $35 = ((($3)) + 520|0);
  $$3126 = 0;
  while(1) {
   $43 = (($34) + ($$3126<<2)|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (($35) + ($44<<2)|0);
   HEAP32[$45>>2] = $$3126;
   $46 = (($$3126) + 1)|0;
   $47 = ($46|0)<($32|0);
   if ($47) {
    $$3126 = $46;
   } else {
    break;
   }
  }
  $$4123 = 0;
  while(1) {
   $48 = (($34) + ($$4123<<2)|0);
   $49 = HEAP32[$48>>2]|0;
   $50 = (($10) + ($49<<2)|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (($3) + ($$4123<<2)|0);
   HEAP32[$52>>2] = $51;
   $53 = (($$4123) + 1)|0;
   $54 = ($53|0)<($32|0);
   if ($54) {
    $$4123 = $53;
   } else {
    $$0110$lcssa142144146149 = $$0110$lcssa143;
    break;
   }
  }
 }
 $55 = ((($1)) + 832|0);
 $56 = HEAP32[$55>>2]|0;
 switch ($56|0) {
 case 1:  {
  $$sink = 256;
  label = 22;
  break;
 }
 case 2:  {
  $$sink = 128;
  label = 22;
  break;
 }
 case 3:  {
  $$sink = 86;
  label = 22;
  break;
 }
 case 4:  {
  $$sink = 64;
  label = 22;
  break;
 }
 default: {
 }
 }
 if ((label|0) == 22) {
  $57 = ((($3)) + 1292|0);
  HEAP32[$57>>2] = $$sink;
 }
 $58 = ($$0110$lcssa142144146149|0)>(0);
 if (!($58)) {
  STACKTOP = sp;return ($3|0);
 }
 $59 = ((($3)) + 1032|0);
 $60 = ((($3)) + 780|0);
 $$5120 = 0;$indvars$iv = 2;
 while(1) {
  $61 = (($$5120) + 2)|0;
  $62 = (($10) + ($61<<2)|0);
  $63 = HEAP32[$62>>2]|0;
  $64 = HEAP32[$13>>2]|0;
  $$0101118 = 0;$$0102117 = $64;$$0104116 = 0;$$0106115 = 1;$$0108114 = 0;
  while(1) {
   $65 = (($10) + ($$0101118<<2)|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ($66|0)>($$0104116|0);
   $68 = ($66|0)<($63|0);
   $or$cond = $67 & $68;
   $$1109 = $or$cond ? $$0101118 : $$0108114;
   $$1105 = $or$cond ? $66 : $$0104116;
   $69 = ($66|0)<($$0102117|0);
   $70 = ($66|0)>($63|0);
   $or$cond111 = $69 & $70;
   $$1107 = $or$cond111 ? $$0101118 : $$0106115;
   $$1103 = $or$cond111 ? $66 : $$0102117;
   $71 = (($$0101118) + 1)|0;
   $exitcond = ($71|0)==($indvars$iv|0);
   if ($exitcond) {
    break;
   } else {
    $$0101118 = $71;$$0102117 = $$1103;$$0104116 = $$1105;$$0106115 = $$1107;$$0108114 = $$1109;
   }
  }
  $72 = (($59) + ($$5120<<2)|0);
  HEAP32[$72>>2] = $$1109;
  $73 = (($60) + ($$5120<<2)|0);
  HEAP32[$73>>2] = $$1107;
  $74 = (($$5120) + 1)|0;
  $indvars$iv$next = (($indvars$iv) + 1)|0;
  $exitcond141 = ($74|0)==($$0110$lcssa142144146149|0);
  if ($exitcond141) {
   break;
  } else {
   $$5120 = $74;$indvars$iv = $indvars$iv$next;
  }
 }
 STACKTOP = sp;return ($3|0);
}
function _floor1_free_info($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 return;
}
function _floor1_free_look($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 return;
}
function _floor1_inverse1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$0$lcssa$i6 = 0, $$0$p$i = 0, $$0143165 = 0, $$0145163 = 0, $$0147161 = 0, $$056$i = 0, $$056$i3 = 0, $$07$i = 0, $$07$i2 = 0, $$1 = 0, $$1144159 = 0, $$1151$ph = 0, $$1151160 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $ispos$i = 0, $neg$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 1296|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 64|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 2848|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 4|0);
 $13 = (_oggpack_read($12,1)|0);
 $14 = ($13|0)==(1);
 if (!($14)) {
  $$1 = 0;
  return ($$1|0);
 }
 $15 = ((($1)) + 1284|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 << 2;
 $18 = (($17) + 7)|0;
 $19 = $18 & -8;
 $20 = ((($0)) + 72|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (($21) + ($19))|0;
 $23 = ((($0)) + 76|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($22|0)>($24|0);
 $26 = ((($0)) + 68|0);
 $27 = HEAP32[$26>>2]|0;
 if ($25) {
  $28 = ($27|0)==(0|0);
  if (!($28)) {
   $29 = $27;
   $30 = (_malloc(8)|0);
   $31 = ((($0)) + 80|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = (($32) + ($21))|0;
   HEAP32[$31>>2] = $33;
   $34 = ((($0)) + 84|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($30)) + 4|0);
   HEAP32[$36>>2] = $35;
   HEAP32[$30>>2] = $29;
   HEAP32[$34>>2] = $30;
  }
  HEAP32[$23>>2] = $19;
  $37 = (_malloc($19)|0);
  HEAP32[$26>>2] = $37;
  HEAP32[$20>>2] = 0;
  $39 = $37;$40 = 0;
 } else {
  $39 = $27;$40 = $21;
 }
 $38 = (($39) + ($40)|0);
 $41 = (($40) + ($19))|0;
 HEAP32[$20>>2] = $41;
 $42 = ((($1)) + 1292|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = (($43) + -1)|0;
 $45 = ($44|0)==(0);
 if ($45) {
  $$0$lcssa$i = 0;
 } else {
  $$056$i = $44;$$07$i = 0;
  while(1) {
   $46 = $$056$i >>> 1;
   $47 = (($$07$i) + 1)|0;
   $48 = ($46|0)==(0);
   if ($48) {
    $$0$lcssa$i = $47;
    break;
   } else {
    $$056$i = $46;$$07$i = $47;
   }
  }
 }
 $49 = (_oggpack_read($12,$$0$lcssa$i)|0);
 HEAP32[$38>>2] = $49;
 $50 = HEAP32[$42>>2]|0;
 $51 = (($50) + -1)|0;
 $52 = ($51|0)==(0);
 if ($52) {
  $$0$lcssa$i6 = 0;
 } else {
  $$056$i3 = $51;$$07$i2 = 0;
  while(1) {
   $53 = $$056$i3 >>> 1;
   $54 = (($$07$i2) + 1)|0;
   $55 = ($53|0)==(0);
   if ($55) {
    $$0$lcssa$i6 = $54;
    break;
   } else {
    $$056$i3 = $53;$$07$i2 = $54;
   }
  }
 }
 $56 = (_oggpack_read($12,$$0$lcssa$i6)|0);
 $57 = ((($38)) + 4|0);
 HEAP32[$57>>2] = $56;
 $58 = HEAP32[$3>>2]|0;
 $59 = ($58|0)>(0);
 L18: do {
  if ($59) {
   $$0143165 = 0;$$0145163 = 2;
   L19: while(1) {
    $64 = (((($3)) + 4|0) + ($$0143165<<2)|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (((($3)) + 128|0) + ($65<<2)|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = (((($3)) + 192|0) + ($65<<2)|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = 1 << $69;
    $71 = ($69|0)==(0);
    if ($71) {
     $$1151$ph = 0;
    } else {
     $72 = (((($3)) + 256|0) + ($65<<2)|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = (((($11) + (($73*56)|0)|0)) + 8|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = ($75|0)>(0);
     if (!($76)) {
      $$1 = 0;
      label = 38;
      break;
     }
     $77 = (($11) + (($73*56)|0)|0);
     $78 = (_decode_packed_entry_number($77,$12)|0);
     $79 = ($78|0)>(-1);
     if (!($79)) {
      $$1 = 0;
      label = 38;
      break;
     }
     $80 = (((($11) + (($73*56)|0)|0)) + 24|0);
     $81 = HEAP32[$80>>2]|0;
     $82 = (($81) + ($78<<2)|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = ($83|0)==(-1);
     if ($84) {
      $$1 = 0;
      label = 38;
      break;
     } else {
      $$1151$ph = $83;
     }
    }
    $85 = ($67|0)>(0);
    if ($85) {
     $86 = (($70) + -1)|0;
     $$0147161 = 0;$$1151160 = $$1151$ph;
     while(1) {
      $87 = $$1151160 & $86;
      $88 = ((((($3)) + 320|0) + ($65<<5)|0) + ($87<<2)|0);
      $89 = HEAP32[$88>>2]|0;
      $90 = $$1151160 >> $69;
      $91 = ($89|0)>(-1);
      if ($91) {
       $92 = (((($11) + (($89*56)|0)|0)) + 8|0);
       $93 = HEAP32[$92>>2]|0;
       $94 = ($93|0)>(0);
       if (!($94)) {
        label = 22;
        break L19;
       }
       $95 = (($11) + (($89*56)|0)|0);
       $96 = (_decode_packed_entry_number($95,$12)|0);
       $97 = ($96|0)>(-1);
       if (!($97)) {
        label = 22;
        break L19;
       }
       $100 = (((($11) + (($89*56)|0)|0)) + 24|0);
       $101 = HEAP32[$100>>2]|0;
       $102 = (($101) + ($96<<2)|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = (($$0147161) + ($$0145163))|0;
       $105 = (($38) + ($104<<2)|0);
       HEAP32[$105>>2] = $103;
       $106 = ($103|0)==(-1);
       if ($106) {
        $$1 = 0;
        label = 38;
        break L19;
       }
      } else {
       $107 = (($$0147161) + ($$0145163))|0;
       $108 = (($38) + ($107<<2)|0);
       HEAP32[$108>>2] = 0;
      }
      $109 = (($$0147161) + 1)|0;
      $110 = ($109|0)<($67|0);
      if ($110) {
       $$0147161 = $109;$$1151160 = $90;
      } else {
       break;
      }
     }
    }
    $111 = (($67) + ($$0145163))|0;
    $112 = (($$0143165) + 1)|0;
    $113 = HEAP32[$3>>2]|0;
    $114 = ($112|0)<($113|0);
    if ($114) {
     $$0143165 = $112;$$0145163 = $111;
    } else {
     break L18;
    }
   }
   if ((label|0) == 22) {
    $98 = (($$0147161) + ($$0145163))|0;
    $99 = (($38) + ($98<<2)|0);
    HEAP32[$99>>2] = -1;
    $$1 = 0;
    return ($$1|0);
   }
   else if ((label|0) == 38) {
    return ($$1|0);
   }
  }
 } while(0);
 $60 = HEAP32[$15>>2]|0;
 $61 = ($60|0)>(2);
 if (!($61)) {
  $$1 = $38;
  return ($$1|0);
 }
 $62 = ((($1)) + 1032|0);
 $63 = ((($1)) + 780|0);
 $$1144159 = 2;
 while(1) {
  $115 = (($$1144159) + -2)|0;
  $116 = (($62) + ($115<<2)|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = (((($3)) + 836|0) + ($117<<2)|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = (($63) + ($115<<2)|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = (((($3)) + 836|0) + ($121<<2)|0);
  $123 = HEAP32[$122>>2]|0;
  $124 = (($38) + ($117<<2)|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = (($38) + ($121<<2)|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = (((($3)) + 836|0) + ($$1144159<<2)|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = $125 & 32767;
  $131 = $127 & 32767;
  $132 = (($131) - ($130))|0;
  $133 = (($123) - ($119))|0;
  $ispos$i = ($132|0)>(-1);
  $neg$i = (0 - ($132))|0;
  $134 = $ispos$i ? $132 : $neg$i;
  $135 = (($129) - ($119))|0;
  $136 = Math_imul($134, $135)|0;
  $137 = (($136|0) / ($133|0))&-1;
  $138 = ($132|0)<(0);
  $139 = (0 - ($137))|0;
  $$0$p$i = $138 ? $139 : $137;
  $$0$i = (($$0$p$i) + ($130))|0;
  $140 = HEAP32[$42>>2]|0;
  $141 = (($140) - ($$0$i))|0;
  $142 = (($38) + ($$1144159<<2)|0);
  $143 = HEAP32[$142>>2]|0;
  $144 = ($143|0)==(0);
  if ($144) {
   $169 = $$0$i | 32768;
   HEAP32[$142>>2] = $169;
  } else {
   $145 = ($141|0)<($$0$i|0);
   $146 = $145 ? $141 : $$0$i;
   $147 = $146 << 1;
   $148 = ($143|0)<($147|0);
   do {
    if ($148) {
     $153 = $143 & 1;
     $154 = ($153|0)==(0);
     if ($154) {
      $158 = $143 >> 1;
      $$0 = $158;
      break;
     } else {
      $155 = (($143) + 1)|0;
      $156 = $155 >> 1;
      $157 = (0 - ($156))|0;
      $$0 = $157;
      break;
     }
    } else {
     $149 = ($141|0)>($$0$i|0);
     if ($149) {
      $150 = (($143) - ($$0$i))|0;
      $$0 = $150;
      break;
     } else {
      $151 = (($143) - ($141))|0;
      $152 = $151 ^ -1;
      $$0 = $152;
      break;
     }
    }
   } while(0);
   $159 = (($$0) + ($$0$i))|0;
   $160 = $159 & 32767;
   HEAP32[$142>>2] = $160;
   $161 = HEAP32[$116>>2]|0;
   $162 = (($38) + ($161<<2)|0);
   $163 = HEAP32[$162>>2]|0;
   $164 = $163 & 32767;
   HEAP32[$162>>2] = $164;
   $165 = HEAP32[$120>>2]|0;
   $166 = (($38) + ($165<<2)|0);
   $167 = HEAP32[$166>>2]|0;
   $168 = $167 & 32767;
   HEAP32[$166>>2] = $168;
  }
  $170 = (($$1144159) + 1)|0;
  $171 = HEAP32[$15>>2]|0;
  $172 = ($170|0)<($171|0);
  if ($172) {
   $$1144159 = $170;
  } else {
   $$1 = $38;
   break;
  }
 }
 return ($$1|0);
}
function _floor1_inverse2($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$i = 0, $$0 = 0, $$0$i = 0, $$054$i = 0, $$057$i = 0, $$067$lcssa = 0, $$06778 = 0, $$06877 = 0, $$070$lcssa = 0, $$07076 = 0, $$07275 = 0, $$1 = 0, $$1$i = 0, $$155$i = 0, $$158$i = 0, $$169 = 0, $$171 = 0, $$17374 = 0, $$2$i = 0, $$256$i = 0;
 var $$pn$i = 0, $$sink$i = 0, $$sink3$i = 0.0, $$sink3$in$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond1 = 0, $ispos$i = 0, $ispos60$i = 0, $neg$i = 0, $neg61$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 1296|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 64|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 28|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + ($13<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15|0) / 2)&-1;
 $17 = ($2|0)==(0|0);
 if ($17) {
  $70 = $16 << 2;
  _memset(($3|0),0,($70|0))|0;
  $$0 = 0;
  return ($$0|0);
 }
 $18 = HEAP32[$2>>2]|0;
 $19 = ((($5)) + 832|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = Math_imul($20, $18)|0;
 $22 = ($21|0)<(0);
 $23 = ($21|0)<(255);
 $24 = $23 ? $21 : 255;
 $25 = $22 ? 0 : $24;
 $26 = ((($1)) + 1284|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)>(1);
 if ($28) {
  $29 = ((($1)) + 260|0);
  $$06778 = $25;$$06877 = 0;$$07076 = 0;$$07275 = 1;
  while(1) {
   $33 = (($29) + ($$07275<<2)|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (($2) + ($34<<2)|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = $36 & 32767;
   $38 = ($37|0)==($36|0);
   L9: do {
    if ($38) {
     $39 = (((($5)) + 836|0) + ($34<<2)|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = Math_imul($20, $36)|0;
     $42 = ($41|0)<(0);
     $43 = ($41|0)<(255);
     $44 = $43 ? $41 : 255;
     $45 = $42 ? 0 : $44;
     $46 = (($45) - ($$06778))|0;
     $47 = (($40) - ($$06877))|0;
     $ispos$i = ($46|0)>(-1);
     $neg$i = (0 - ($46))|0;
     $48 = $ispos$i ? $46 : $neg$i;
     $49 = (($46|0) / ($47|0))&-1;
     $50 = $46 >> 31;
     $51 = $50 | 1;
     $52 = Math_imul($49, $47)|0;
     $ispos60$i = ($52|0)>(-1);
     $neg61$i = (0 - ($52))|0;
     $53 = $ispos60$i ? $52 : $neg61$i;
     $54 = (($48) - ($53))|0;
     $55 = ($16|0)>($40|0);
     $$$i = $55 ? $40 : $16;
     $56 = ($$$i|0)>($$06877|0);
     if ($56) {
      $$0$i = 0;$$054$i = $$06778;$$057$i = $$06877;
      label = 8;
     } else {
      $$1$i = 0;$$155$i = $$06778;$$158$i = $$06877;
     }
     while(1) {
      if ((label|0) == 8) {
       label = 0;
       $$sink3$in$i = (59604 + ($$054$i<<2)|0);
       $$sink3$i = +HEAPF32[$$sink3$in$i>>2];
       $$sink$i = (($3) + ($$057$i<<2)|0);
       $57 = +HEAPF32[$$sink$i>>2];
       $58 = $57 * $$sink3$i;
       HEAPF32[$$sink$i>>2] = $58;
       $$1$i = $$0$i;$$155$i = $$054$i;$$158$i = $$057$i;
      }
      $59 = (($$158$i) + 1)|0;
      $60 = ($59|0)<($$$i|0);
      if (!($60)) {
       $$1 = $45;$$169 = $40;$$171 = $40;
       break L9;
      }
      $61 = (($$1$i) + ($54))|0;
      $62 = ($61|0)<($47|0);
      $63 = $62 ? 0 : $51;
      $64 = $62 ? 0 : $47;
      $$2$i = (($61) - ($64))|0;
      $$pn$i = (($$155$i) + ($49))|0;
      $$256$i = (($$pn$i) + ($63))|0;
      $$0$i = $$2$i;$$054$i = $$256$i;$$057$i = $59;
      label = 8;
     }
    } else {
     $$1 = $$06778;$$169 = $$06877;$$171 = $$07076;
    }
   } while(0);
   $65 = (($$07275) + 1)|0;
   $exitcond1 = ($65|0)==($27|0);
   if ($exitcond1) {
    $$067$lcssa = $$1;$$070$lcssa = $$171;
    break;
   } else {
    $$06778 = $$1;$$06877 = $$169;$$07076 = $$171;$$07275 = $65;
   }
  }
 } else {
  $$067$lcssa = $25;$$070$lcssa = 0;
 }
 $30 = ($$070$lcssa|0)<($16|0);
 if (!($30)) {
  $$0 = 1;
  return ($$0|0);
 }
 $31 = (59604 + ($$067$lcssa<<2)|0);
 $32 = +HEAPF32[$31>>2];
 $$17374 = $$070$lcssa;
 while(1) {
  $66 = (($3) + ($$17374<<2)|0);
  $67 = +HEAPF32[$66>>2];
  $68 = $67 * $32;
  HEAPF32[$66>>2] = $68;
  $69 = (($$17374) + 1)|0;
  $exitcond = ($69|0)==($16|0);
  if ($exitcond) {
   $$0 = 1;
   break;
  } else {
   $$17374 = $69;
  }
 }
 return ($$0|0);
}
function _icomp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$1>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) - ($5))|0;
 return ($6|0);
}
function _floor1_fit($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$$i = 0, $$$$i217 = 0, $$$$i262 = 0, $$$i = 0, $$$i$i = 0, $$$i$i235 = 0, $$$i$i266 = 0, $$$i106$i = 0, $$$i215 = 0, $$$i217 = 0, $$$i219 = 0, $$$i262 = 0, $$$i273 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i236 = 0, $$0$i$i267 = 0, $$0$i107$i = 0, $$0$lcssa$i = 0, $$0$p$i = 0;
 var $$0101$lcssa$i = 0, $$0101$lcssa$i258 = 0, $$0101132$i = 0, $$0101132$i223 = 0, $$0103$lcssa$i = 0, $$0103$lcssa$i257 = 0, $$0103131$i = 0, $$0103131$i224 = 0, $$0105$lcssa$i = 0, $$0105$lcssa$i256 = 0, $$0105130$i = 0, $$0105130$i225 = 0, $$0107$lcssa$i = 0, $$0107$lcssa$i255 = 0, $$0107129$i = 0, $$0107129$i226 = 0, $$0109$lcssa$i = 0, $$0109$lcssa$i254 = 0, $$0109128$i = 0, $$0109128$i227 = 0;
 var $$0111$lcssa$i = 0, $$0111$lcssa$i253 = 0, $$0111127$i = 0, $$0111127$i228 = 0, $$0113$i = 0, $$0113$lcssa$i = 0, $$0113$lcssa$i252 = 0, $$0113126$i = 0, $$0113126$i229 = 0, $$0115$lcssa$i = 0, $$0115$lcssa$i251 = 0, $$0115125$i = 0, $$0115125$i230 = 0, $$0117$lcssa$i = 0, $$0117$lcssa$i250 = 0, $$0117124$i = 0, $$0117124$i231 = 0, $$0119$lcssa$i = 0, $$0119$lcssa$i249 = 0, $$0119123$i = 0;
 var $$0119123$i232 = 0, $$0121122$i = 0, $$0121122$i233 = 0, $$0209290 = 0, $$0209290$in = 0, $$0211303 = 0, $$0213 = 0, $$0315 = 0, $$097$lcssa$i = 0, $$097112$i = 0, $$098$lcssa$i = 0, $$098$lcssa$i260 = 0, $$098111$i = 0, $$098134$i = 0, $$098134$i221 = 0, $$099$lcssa$i = 0, $$099$lcssa$i259 = 0, $$099110$i = 0, $$099133$i = 0, $$099133$i222 = 0;
 var $$1$i = 0, $$1$i248 = 0, $$1$i269 = 0, $$1100$i = 0, $$1100$i247 = 0, $$1100$i270 = 0, $$1102$i = 0, $$1102$i246 = 0, $$1104$i = 0, $$1104$i245 = 0, $$1106$i = 0, $$1106$i244 = 0, $$1108$i = 0, $$1108$i243 = 0, $$1110$i = 0, $$1110$i242 = 0, $$1112$i = 0, $$1112$i241 = 0, $$1114$i = 0, $$1114$i240 = 0;
 var $$1116$i = 0, $$1116$i239 = 0, $$1118$i = 0, $$1118$i238 = 0, $$1120$i = 0, $$1120$i237 = 0, $$1210 = 0, $$1210292 = 0, $$1210293 = 0, $$1212 = 0, $$1313 = 0, $$3309 = 0, $$5304 = 0, $$6296 = 0, $$7288 = 0, $$pn$i = 0, $$pre = 0, $$pre328 = 0, $$pre329 = 0, $$pre330 = 0;
 var $$pre331 = 0, $$sink = 0, $$sink6 = 0, $$val$i = 0.0, $$val$i234 = 0.0, $$val$i271 = 0.0, $$val105$i = 0.0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0.0, $187 = 0.0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $20 = 0, $200 = 0, $201 = 0.0;
 var $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0.0, $232 = 0.0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0.0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0.0, $245 = 0.0, $246 = 0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0;
 var $91 = 0.0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, $exitcond321 = 0, $exitcond322 = 0, $exitcond324 = 0, $exitcond326 = 0, $exitcond327 = 0, $ispos$i = 0, $ispos$i264 = 0, $ispos103$i = 0, $neg$i = 0, $neg$i265 = 0;
 var $neg104$i = 0, $or$cond = 0, $or$cond$i = 0, $or$cond214 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4912|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(4912|0);
 $4 = sp + 1328|0;
 $5 = sp + 1064|0;
 $6 = sp + 804|0;
 $7 = sp + 544|0;
 $8 = sp + 284|0;
 $9 = sp + 24|0;
 $10 = sp + 20|0;
 $11 = sp + 16|0;
 $12 = sp + 12|0;
 $13 = sp + 8|0;
 $14 = sp + 4|0;
 $15 = sp;
 $16 = ((($1)) + 1296|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($1)) + 1288|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($1)) + 1284|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)>(0);
 if ($22) {
  $$0315 = 0;
  while(1) {
   $23 = (($5) + ($$0315<<2)|0);
   HEAP32[$23>>2] = -200;
   $24 = (($$0315) + 1)|0;
   $exitcond327 = ($24|0)==($21|0);
   if ($exitcond327) {
    $$1313 = 0;
    break;
   } else {
    $$0315 = $24;
   }
  }
  while(1) {
   $25 = (($6) + ($$1313<<2)|0);
   HEAP32[$25>>2] = -200;
   $26 = (($$1313) + 1)|0;
   $exitcond326 = ($26|0)==($21|0);
   if ($exitcond326) {
    break;
   } else {
    $$1313 = $26;
   }
  }
  $27 = $21 << 2;
  _memset(($7|0),0,($27|0))|0;
  $$3309 = 0;
  while(1) {
   $28 = (($8) + ($$3309<<2)|0);
   HEAP32[$28>>2] = 1;
   $29 = (($$3309) + 1)|0;
   $exitcond324 = ($29|0)==($21|0);
   if ($exitcond324) {
    break;
   } else {
    $$3309 = $29;
   }
  }
  _memset(($9|0),-1,($27|0))|0;
  $31 = (($21) + -1)|0;
  $32 = ($21|0)==(1);
  if ($32) {
   $$0213 = 0;
   STACKTOP = sp;return ($$0213|0);
  }
  $33 = (($19) + -1)|0;
  $34 = ((($17)) + 1112|0);
  $$pre = HEAP32[$1>>2]|0;
  $$0211303 = 0;$$5304 = 0;$85 = $$pre;
  while(1) {
   $80 = (($$5304) + 1)|0;
   $81 = (($1) + ($80<<2)|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (((($4) + (($$5304*56)|0)|0)) + 8|0);
   dest=$83; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   $84 = (($4) + (($$5304*56)|0)|0);
   HEAP32[$84>>2] = $85;
   $86 = (((($4) + (($$5304*56)|0)|0)) + 4|0);
   HEAP32[$86>>2] = $82;
   $87 = ($82|0)<($19|0);
   $$$i219 = $87 ? $82 : $33;
   $88 = ($$$i219|0)<($85|0);
   if ($88) {
    $$0101$lcssa$i258 = 0;$$0103$lcssa$i257 = 0;$$0105$lcssa$i256 = 0;$$0107$lcssa$i255 = 0;$$0109$lcssa$i254 = 0;$$0111$lcssa$i253 = 0;$$0113$lcssa$i252 = 0;$$0115$lcssa$i251 = 0;$$0117$lcssa$i250 = 0;$$0119$lcssa$i249 = 0;$$098$lcssa$i260 = 0;$$099$lcssa$i259 = 0;
   } else {
    $$0101132$i223 = 0;$$0103131$i224 = 0;$$0105130$i225 = 0;$$0107129$i226 = 0;$$0109128$i227 = 0;$$0111127$i228 = 0;$$0113126$i229 = 0;$$0115125$i230 = 0;$$0117124$i231 = 0;$$0119123$i232 = 0;$$0121122$i233 = $85;$$098134$i221 = 0;$$099133$i222 = 0;
    while(1) {
     $89 = (($3) + ($$0121122$i233<<2)|0);
     $$val$i234 = +HEAPF32[$89>>2];
     $90 = $$val$i234 * 7.3142857551574707;
     $91 = $90 + 1023.5;
     $92 = (~~(($91)));
     $93 = ($92|0)>(1023);
     $94 = ($92|0)>(0);
     $$$i$i235 = $94 ? $92 : 0;
     $$0$i$i236 = $93 ? 1023 : $$$i$i235;
     $95 = ($$0$i$i236|0)==(0);
     do {
      if ($95) {
       $$1$i248 = $$098134$i221;$$1100$i247 = $$099133$i222;$$1102$i246 = $$0101132$i223;$$1104$i245 = $$0103131$i224;$$1106$i244 = $$0105130$i225;$$1108$i243 = $$0107129$i226;$$1110$i242 = $$0109128$i227;$$1112$i241 = $$0111127$i228;$$1114$i240 = $$0113126$i229;$$1116$i239 = $$0115125$i230;$$1118$i238 = $$0117124$i231;$$1120$i237 = $$0119123$i232;
      } else {
       $96 = (($2) + ($$0121122$i233<<2)|0);
       $97 = +HEAPF32[$96>>2];
       $98 = +HEAPF32[$34>>2];
       $99 = $98 + $97;
       $100 = !($99 >= $$val$i234);
       $101 = Math_imul($$0121122$i233, $$0121122$i233)|0;
       $102 = Math_imul($92, $92)|0;
       $103 = $94 ? $102 : 0;
       $104 = $93 ? 1046529 : $103;
       $105 = Math_imul($$0$i$i236, $$0121122$i233)|0;
       if ($100) {
        $112 = (($$0121122$i233) + ($$0107129$i226))|0;
        $113 = (($$0$i$i236) + ($$0105130$i225))|0;
        $114 = (($101) + ($$0103131$i224))|0;
        $115 = (($104) + ($$0101132$i223))|0;
        $116 = (($105) + ($$099133$i222))|0;
        $117 = (($$098134$i221) + 1)|0;
        $$1$i248 = $117;$$1100$i247 = $116;$$1102$i246 = $115;$$1104$i245 = $114;$$1106$i244 = $113;$$1108$i243 = $112;$$1110$i242 = $$0109128$i227;$$1112$i241 = $$0111127$i228;$$1114$i240 = $$0113126$i229;$$1116$i239 = $$0115125$i230;$$1118$i238 = $$0117124$i231;$$1120$i237 = $$0119123$i232;
        break;
       } else {
        $106 = (($$0121122$i233) + ($$0119123$i232))|0;
        $107 = (($$0$i$i236) + ($$0117124$i231))|0;
        $108 = (($101) + ($$0115125$i230))|0;
        $109 = (($104) + ($$0113126$i229))|0;
        $110 = (($105) + ($$0111127$i228))|0;
        $111 = (($$0109128$i227) + 1)|0;
        $$1$i248 = $$098134$i221;$$1100$i247 = $$099133$i222;$$1102$i246 = $$0101132$i223;$$1104$i245 = $$0103131$i224;$$1106$i244 = $$0105130$i225;$$1108$i243 = $$0107129$i226;$$1110$i242 = $111;$$1112$i241 = $110;$$1114$i240 = $109;$$1116$i239 = $108;$$1118$i238 = $107;$$1120$i237 = $106;
        break;
       }
      }
     } while(0);
     $118 = (($$0121122$i233) + 1)|0;
     $119 = ($$0121122$i233|0)<($$$i219|0);
     if ($119) {
      $$0101132$i223 = $$1102$i246;$$0103131$i224 = $$1104$i245;$$0105130$i225 = $$1106$i244;$$0107129$i226 = $$1108$i243;$$0109128$i227 = $$1110$i242;$$0111127$i228 = $$1112$i241;$$0113126$i229 = $$1114$i240;$$0115125$i230 = $$1116$i239;$$0117124$i231 = $$1118$i238;$$0119123$i232 = $$1120$i237;$$0121122$i233 = $118;$$098134$i221 = $$1$i248;$$099133$i222 = $$1100$i247;
     } else {
      $$0101$lcssa$i258 = $$1102$i246;$$0103$lcssa$i257 = $$1104$i245;$$0105$lcssa$i256 = $$1106$i244;$$0107$lcssa$i255 = $$1108$i243;$$0109$lcssa$i254 = $$1110$i242;$$0111$lcssa$i253 = $$1112$i241;$$0113$lcssa$i252 = $$1114$i240;$$0115$lcssa$i251 = $$1116$i239;$$0117$lcssa$i250 = $$1118$i238;$$0119$lcssa$i249 = $$1120$i237;$$098$lcssa$i260 = $$1$i248;$$099$lcssa$i259 = $$1100$i247;
      break;
     }
    }
   }
   HEAP32[$83>>2] = $$0119$lcssa$i249;
   $120 = (((($4) + (($$5304*56)|0)|0)) + 12|0);
   HEAP32[$120>>2] = $$0117$lcssa$i250;
   $121 = (((($4) + (($$5304*56)|0)|0)) + 16|0);
   HEAP32[$121>>2] = $$0115$lcssa$i251;
   $122 = (((($4) + (($$5304*56)|0)|0)) + 20|0);
   HEAP32[$122>>2] = $$0113$lcssa$i252;
   $123 = (((($4) + (($$5304*56)|0)|0)) + 24|0);
   HEAP32[$123>>2] = $$0111$lcssa$i253;
   $124 = (((($4) + (($$5304*56)|0)|0)) + 28|0);
   HEAP32[$124>>2] = $$0109$lcssa$i254;
   $125 = (((($4) + (($$5304*56)|0)|0)) + 32|0);
   HEAP32[$125>>2] = $$0107$lcssa$i255;
   $126 = (((($4) + (($$5304*56)|0)|0)) + 36|0);
   HEAP32[$126>>2] = $$0105$lcssa$i256;
   $127 = (((($4) + (($$5304*56)|0)|0)) + 40|0);
   HEAP32[$127>>2] = $$0103$lcssa$i257;
   $128 = (((($4) + (($$5304*56)|0)|0)) + 44|0);
   HEAP32[$128>>2] = $$0101$lcssa$i258;
   $129 = (((($4) + (($$5304*56)|0)|0)) + 48|0);
   HEAP32[$129>>2] = $$099$lcssa$i259;
   $130 = (((($4) + (($$5304*56)|0)|0)) + 52|0);
   HEAP32[$130>>2] = $$098$lcssa$i260;
   $131 = (($$0109$lcssa$i254) + ($$0211303))|0;
   $exitcond322 = ($80|0)==($31|0);
   if ($exitcond322) {
    $$1212 = $131;
    break;
   } else {
    $$0211303 = $131;$$5304 = $80;$85 = $82;
   }
  }
 } else {
  $30 = ($21|0)==(0);
  if (!($30)) {
   $$0213 = 0;
   STACKTOP = sp;return ($$0213|0);
  }
  $35 = ((($4)) + 8|0);
  dest=$35; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  HEAP32[$4>>2] = 0;
  $36 = ((($4)) + 4|0);
  HEAP32[$36>>2] = $19;
  $37 = ($19|0)<(1);
  if ($37) {
   $$0101$lcssa$i = 0;$$0103$lcssa$i = 0;$$0105$lcssa$i = 0;$$0107$lcssa$i = 0;$$0109$lcssa$i = 0;$$0111$lcssa$i = 0;$$0113$lcssa$i = 0;$$0115$lcssa$i = 0;$$0117$lcssa$i = 0;$$0119$lcssa$i = 0;$$098$lcssa$i = 0;$$099$lcssa$i = 0;
  } else {
   $38 = ((($17)) + 1112|0);
   $$0101132$i = 0;$$0103131$i = 0;$$0105130$i = 0;$$0107129$i = 0;$$0109128$i = 0;$$0111127$i = 0;$$0113126$i = 0;$$0115125$i = 0;$$0117124$i = 0;$$0119123$i = 0;$$0121122$i = 0;$$098134$i = 0;$$099133$i = 0;
   while(1) {
    $39 = (($3) + ($$0121122$i<<2)|0);
    $$val$i = +HEAPF32[$39>>2];
    $40 = $$val$i * 7.3142857551574707;
    $41 = $40 + 1023.5;
    $42 = (~~(($41)));
    $43 = ($42|0)>(1023);
    $44 = ($42|0)>(0);
    $$$i$i = $44 ? $42 : 0;
    $$0$i$i = $43 ? 1023 : $$$i$i;
    $45 = ($$0$i$i|0)==(0);
    do {
     if ($45) {
      $$1$i = $$098134$i;$$1100$i = $$099133$i;$$1102$i = $$0101132$i;$$1104$i = $$0103131$i;$$1106$i = $$0105130$i;$$1108$i = $$0107129$i;$$1110$i = $$0109128$i;$$1112$i = $$0111127$i;$$1114$i = $$0113126$i;$$1116$i = $$0115125$i;$$1118$i = $$0117124$i;$$1120$i = $$0119123$i;
     } else {
      $46 = (($2) + ($$0121122$i<<2)|0);
      $47 = +HEAPF32[$46>>2];
      $48 = +HEAPF32[$38>>2];
      $49 = $48 + $47;
      $50 = !($49 >= $$val$i);
      $51 = Math_imul($$0121122$i, $$0121122$i)|0;
      $52 = Math_imul($42, $42)|0;
      $53 = $44 ? $52 : 0;
      $54 = $43 ? 1046529 : $53;
      $55 = Math_imul($$0$i$i, $$0121122$i)|0;
      if ($50) {
       $62 = (($$0121122$i) + ($$0107129$i))|0;
       $63 = (($$0$i$i) + ($$0105130$i))|0;
       $64 = (($51) + ($$0103131$i))|0;
       $65 = (($54) + ($$0101132$i))|0;
       $66 = (($55) + ($$099133$i))|0;
       $67 = (($$098134$i) + 1)|0;
       $$1$i = $67;$$1100$i = $66;$$1102$i = $65;$$1104$i = $64;$$1106$i = $63;$$1108$i = $62;$$1110$i = $$0109128$i;$$1112$i = $$0111127$i;$$1114$i = $$0113126$i;$$1116$i = $$0115125$i;$$1118$i = $$0117124$i;$$1120$i = $$0119123$i;
       break;
      } else {
       $56 = (($$0121122$i) + ($$0119123$i))|0;
       $57 = (($$0$i$i) + ($$0117124$i))|0;
       $58 = (($51) + ($$0115125$i))|0;
       $59 = (($54) + ($$0113126$i))|0;
       $60 = (($55) + ($$0111127$i))|0;
       $61 = (($$0109128$i) + 1)|0;
       $$1$i = $$098134$i;$$1100$i = $$099133$i;$$1102$i = $$0101132$i;$$1104$i = $$0103131$i;$$1106$i = $$0105130$i;$$1108$i = $$0107129$i;$$1110$i = $61;$$1112$i = $60;$$1114$i = $59;$$1116$i = $58;$$1118$i = $57;$$1120$i = $56;
       break;
      }
     }
    } while(0);
    $68 = (($$0121122$i) + 1)|0;
    $exitcond321 = ($68|0)==($19|0);
    if ($exitcond321) {
     $$0101$lcssa$i = $$1102$i;$$0103$lcssa$i = $$1104$i;$$0105$lcssa$i = $$1106$i;$$0107$lcssa$i = $$1108$i;$$0109$lcssa$i = $$1110$i;$$0111$lcssa$i = $$1112$i;$$0113$lcssa$i = $$1114$i;$$0115$lcssa$i = $$1116$i;$$0117$lcssa$i = $$1118$i;$$0119$lcssa$i = $$1120$i;$$098$lcssa$i = $$1$i;$$099$lcssa$i = $$1100$i;
     break;
    } else {
     $$0101132$i = $$1102$i;$$0103131$i = $$1104$i;$$0105130$i = $$1106$i;$$0107129$i = $$1108$i;$$0109128$i = $$1110$i;$$0111127$i = $$1112$i;$$0113126$i = $$1114$i;$$0115125$i = $$1116$i;$$0117124$i = $$1118$i;$$0119123$i = $$1120$i;$$0121122$i = $68;$$098134$i = $$1$i;$$099133$i = $$1100$i;
    }
   }
  }
  HEAP32[$35>>2] = $$0119$lcssa$i;
  $69 = ((($4)) + 12|0);
  HEAP32[$69>>2] = $$0117$lcssa$i;
  $70 = ((($4)) + 16|0);
  HEAP32[$70>>2] = $$0115$lcssa$i;
  $71 = ((($4)) + 20|0);
  HEAP32[$71>>2] = $$0113$lcssa$i;
  $72 = ((($4)) + 24|0);
  HEAP32[$72>>2] = $$0111$lcssa$i;
  $73 = ((($4)) + 28|0);
  HEAP32[$73>>2] = $$0109$lcssa$i;
  $74 = ((($4)) + 32|0);
  HEAP32[$74>>2] = $$0107$lcssa$i;
  $75 = ((($4)) + 36|0);
  HEAP32[$75>>2] = $$0105$lcssa$i;
  $76 = ((($4)) + 40|0);
  HEAP32[$76>>2] = $$0103$lcssa$i;
  $77 = ((($4)) + 44|0);
  HEAP32[$77>>2] = $$0101$lcssa$i;
  $78 = ((($4)) + 48|0);
  HEAP32[$78>>2] = $$099$lcssa$i;
  $79 = ((($4)) + 52|0);
  HEAP32[$79>>2] = $$098$lcssa$i;
  $$1212 = $$0109$lcssa$i;
 }
 $132 = ($$1212|0)==(0);
 if ($132) {
  $$0213 = 0;
  STACKTOP = sp;return ($$0213|0);
 }
 HEAP32[$10>>2] = -200;
 HEAP32[$11>>2] = -200;
 $133 = (($21) + -1)|0;
 (_fit_line($4,$133,$10,$11,$17)|0);
 $134 = HEAP32[$10>>2]|0;
 HEAP32[$5>>2] = $134;
 HEAP32[$6>>2] = $134;
 $135 = HEAP32[$11>>2]|0;
 $136 = ((($6)) + 4|0);
 HEAP32[$136>>2] = $135;
 $137 = ((($5)) + 4|0);
 HEAP32[$137>>2] = $135;
 $138 = ($21|0)>(2);
 do {
  if ($138) {
   $139 = ((($17)) + 1112|0);
   $140 = ((($17)) + 1096|0);
   $141 = ((($17)) + 1100|0);
   $142 = ((($17)) + 1104|0);
   $$6296 = 2;
   L46: while(1) {
    $143 = (((($1)) + 520|0) + ($$6296<<2)|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (($7) + ($144<<2)|0);
    $146 = HEAP32[$145>>2]|0;
    $147 = (($8) + ($144<<2)|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = (($9) + ($146<<2)|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = ($150|0)==($148|0);
    L48: do {
     if (!($151)) {
      $152 = (((($1)) + 520|0) + ($146<<2)|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = (((($1)) + 520|0) + ($148<<2)|0);
      $155 = HEAP32[$154>>2]|0;
      HEAP32[$149>>2] = $148;
      $156 = (((($17)) + 836|0) + ($146<<2)|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = (((($17)) + 836|0) + ($148<<2)|0);
      $159 = HEAP32[$158>>2]|0;
      $160 = (($5) + ($146<<2)|0);
      $161 = HEAP32[$160>>2]|0;
      $162 = ($161|0)<(0);
      $163 = (($6) + ($146<<2)|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ($164|0)<(0);
      $166 = (($164) + ($161))|0;
      $167 = $166 >> 1;
      $$$i262 = $165 ? $161 : $167;
      $$$$i262 = $162 ? $164 : $$$i262;
      $168 = (($5) + ($148<<2)|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = ($169|0)<(0);
      $171 = (($6) + ($148<<2)|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = ($172|0)<(0);
      $174 = (($172) + ($169))|0;
      $175 = $174 >> 1;
      $$$i273 = $173 ? $169 : $175;
      $176 = $170 ? $172 : $$$i273;
      $177 = ($$$$i262|0)==(-1);
      $178 = ($176|0)==(-1);
      $or$cond = $177 | $178;
      if ($or$cond) {
       label = 29;
       break L46;
      }
      $179 = (($176) - ($$$$i262))|0;
      $180 = (($159) - ($157))|0;
      $ispos$i264 = ($179|0)>(-1);
      $neg$i265 = (0 - ($179))|0;
      $181 = $ispos$i264 ? $179 : $neg$i265;
      $182 = (($179|0) / ($180|0))&-1;
      $183 = $179 >> 31;
      $184 = $183 | 1;
      $185 = (($3) + ($157<<2)|0);
      $$val105$i = +HEAPF32[$185>>2];
      $186 = $$val105$i * 7.3142857551574707;
      $187 = $186 + 1023.5;
      $188 = (~~(($187)));
      $189 = ($188|0)>(1023);
      $190 = ($188|0)>(0);
      $$$i$i266 = $190 ? $188 : 0;
      $$0$i$i267 = $189 ? 1023 : $$$i$i266;
      $191 = Math_imul($182, $180)|0;
      $ispos103$i = ($191|0)>(-1);
      $neg104$i = (0 - ($191))|0;
      $192 = $ispos103$i ? $191 : $neg104$i;
      $193 = (($181) - ($192))|0;
      $194 = (($$$$i262) - ($$0$i$i267))|0;
      $195 = Math_imul($194, $194)|0;
      $196 = (($2) + ($157<<2)|0);
      $197 = +HEAPF32[$196>>2];
      $198 = +HEAPF32[$139>>2];
      $199 = $198 + $197;
      $200 = !($199 >= $$val105$i);
      if ($200) {
       label = 33;
      } else {
       $201 = (+($$$$i262|0));
       $202 = +HEAPF32[$140>>2];
       $203 = $202 + $201;
       $204 = (+($$0$i$i267|0));
       $205 = $203 < $204;
       if (!($205)) {
        $206 = +HEAPF32[$141>>2];
        $207 = $201 - $206;
        $208 = $207 > $204;
        if (!($208)) {
         label = 33;
        }
       }
      }
      L54: do {
       if ((label|0) == 33) {
        label = 0;
        $209 = (($157) + 1)|0;
        $210 = ($209|0)<($159|0);
        if ($210) {
         $$0113$i = 1;$$097112$i = $195;$$098111$i = 0;$$099110$i = $$$$i262;$216 = $209;
         while(1) {
          $211 = (($$098111$i) + ($193))|0;
          $212 = ($211|0)<($180|0);
          $213 = $212 ? 0 : $184;
          $214 = $212 ? 0 : $180;
          $$1$i269 = (($211) - ($214))|0;
          $$pn$i = (($$099110$i) + ($182))|0;
          $$1100$i270 = (($$pn$i) + ($213))|0;
          $215 = (($3) + ($216<<2)|0);
          $$val$i271 = +HEAPF32[$215>>2];
          $217 = $$val$i271 * 7.3142857551574707;
          $218 = $217 + 1023.5;
          $219 = (~~(($218)));
          $220 = ($219|0)>(1023);
          $221 = ($219|0)>(0);
          $$$i106$i = $221 ? $219 : 0;
          $$0$i107$i = $220 ? 1023 : $$$i106$i;
          $222 = (($$1100$i270) - ($$0$i107$i))|0;
          $223 = Math_imul($222, $222)|0;
          $224 = (($223) + ($$097112$i))|0;
          $225 = (($$0113$i) + 1)|0;
          $226 = (($2) + ($216<<2)|0);
          $227 = +HEAPF32[$226>>2];
          $228 = $227 + $198;
          $229 = $228 >= $$val$i271;
          $230 = ($$0$i107$i|0)!=(0);
          $or$cond$i = $229 & $230;
          if ($or$cond$i) {
           $231 = (+($$1100$i270|0));
           $232 = +HEAPF32[$140>>2];
           $233 = $232 + $231;
           $234 = (+($$0$i107$i|0));
           $235 = $233 < $234;
           if ($235) {
            break L54;
           }
           $236 = +HEAPF32[$141>>2];
           $237 = $231 - $236;
           $238 = $237 > $234;
           if ($238) {
            break L54;
           }
          }
          $239 = (($216) + 1)|0;
          $240 = ($239|0)<($159|0);
          if ($240) {
           $$0113$i = $225;$$097112$i = $224;$$098111$i = $$1$i269;$$099110$i = $$1100$i270;$216 = $239;
          } else {
           $$0$lcssa$i = $225;$$097$lcssa$i = $224;
           break;
          }
         }
        } else {
         $$0$lcssa$i = 1;$$097$lcssa$i = $195;
        }
        $241 = +HEAPF32[$140>>2];
        $242 = $241 * $241;
        $243 = (+($$0$lcssa$i|0));
        $244 = $242 / $243;
        $245 = +HEAPF32[$142>>2];
        $246 = $244 > $245;
        if (!($246)) {
         $247 = +HEAPF32[$141>>2];
         $248 = $247 * $247;
         $249 = $248 / $243;
         $250 = $249 > $245;
         if (!($250)) {
          $251 = (($$097$lcssa$i|0) / ($$0$lcssa$i|0))&-1;
          $252 = (+($251|0));
          $253 = $252 > $245;
          if ($253) {
           break;
          }
         }
        }
        $286 = (($5) + ($$6296<<2)|0);
        HEAP32[$286>>2] = -200;
        $287 = (($6) + ($$6296<<2)|0);
        HEAP32[$287>>2] = -200;
        break L48;
       }
      } while(0);
      HEAP32[$12>>2] = -200;
      HEAP32[$13>>2] = -200;
      HEAP32[$14>>2] = -200;
      HEAP32[$15>>2] = -200;
      $254 = (($4) + (($153*56)|0)|0);
      $255 = (($144) - ($153))|0;
      $256 = (_fit_line($254,$255,$12,$13,$17)|0);
      $257 = (($4) + (($144*56)|0)|0);
      $258 = (($155) - ($144))|0;
      $259 = (_fit_line($257,$258,$14,$15,$17)|0);
      $260 = ($256|0)!=(0);
      if ($260) {
       HEAP32[$12>>2] = $$$$i262;
       $261 = HEAP32[$14>>2]|0;
       HEAP32[$13>>2] = $261;
      }
      $262 = ($259|0)==(0);
      if ($262) {
       label = 46;
      } else {
       $263 = HEAP32[$13>>2]|0;
       HEAP32[$14>>2] = $263;
       HEAP32[$15>>2] = $176;
       if ($260) {
        $264 = (($5) + ($$6296<<2)|0);
        HEAP32[$264>>2] = -200;
        $265 = (($6) + ($$6296<<2)|0);
        HEAP32[$265>>2] = -200;
       } else {
        label = 46;
       }
      }
      L75: do {
       if ((label|0) == 46) {
        label = 0;
        $266 = HEAP32[$12>>2]|0;
        HEAP32[$163>>2] = $266;
        $267 = ($146|0)==(0);
        if ($267) {
         HEAP32[$5>>2] = $266;
        }
        $268 = HEAP32[$13>>2]|0;
        $269 = (($5) + ($$6296<<2)|0);
        HEAP32[$269>>2] = $268;
        $270 = HEAP32[$14>>2]|0;
        $271 = (($6) + ($$6296<<2)|0);
        HEAP32[$271>>2] = $270;
        $272 = HEAP32[$15>>2]|0;
        HEAP32[$168>>2] = $272;
        $273 = ($148|0)==(1);
        if ($273) {
         HEAP32[$136>>2] = $272;
        }
        $274 = $270 & $268;
        $275 = ($274|0)>(-1);
        if ($275) {
         $276 = ($144|0)>(0);
         L84: do {
          if ($276) {
           $$0209290$in = $144;
           while(1) {
            $$0209290 = (($$0209290$in) + -1)|0;
            $278 = (($8) + ($$0209290<<2)|0);
            $279 = HEAP32[$278>>2]|0;
            $280 = ($279|0)==($148|0);
            if (!($280)) {
             break L84;
            }
            HEAP32[$278>>2] = $$6296;
            $281 = ($$0209290$in|0)>(1);
            if ($281) {
             $$0209290$in = $$0209290;
            } else {
             break;
            }
           }
          }
         } while(0);
         $$1210292 = (($144) + 1)|0;
         $277 = ($$1210292|0)<($21|0);
         if ($277) {
          $$1210293 = $$1210292;
          while(1) {
           $282 = (($7) + ($$1210293<<2)|0);
           $283 = HEAP32[$282>>2]|0;
           $284 = ($283|0)==($146|0);
           if (!($284)) {
            break L75;
           }
           HEAP32[$282>>2] = $$6296;
           $$1210 = (($$1210293) + 1)|0;
           $285 = ($$1210|0)<($21|0);
           if ($285) {
            $$1210293 = $$1210;
           } else {
            break;
           }
          }
         }
        }
       }
      } while(0);
     }
    } while(0);
    $288 = (($$6296) + 1)|0;
    $289 = ($288|0)<($21|0);
    if ($289) {
     $$6296 = $288;
    } else {
     label = 60;
     break;
    }
   }
   if ((label|0) == 29) {
    _exit(1);
    // unreachable;
   }
   else if ((label|0) == 60) {
    $$pre328 = HEAP32[$5>>2]|0;
    $$pre329 = HEAP32[$6>>2]|0;
    $$pre330 = HEAP32[$137>>2]|0;
    $$pre331 = HEAP32[$136>>2]|0;
    $315 = $$pre328;$317 = $$pre329;$321 = $$pre330;$323 = $$pre331;
    break;
   }
  } else {
   $315 = $134;$317 = $134;$321 = $135;$323 = $135;
  }
 } while(0);
 $290 = $21 << 2;
 $291 = (($290) + 7)|0;
 $292 = $291 & -8;
 $293 = ((($0)) + 72|0);
 $294 = HEAP32[$293>>2]|0;
 $295 = (($294) + ($292))|0;
 $296 = ((($0)) + 76|0);
 $297 = HEAP32[$296>>2]|0;
 $298 = ($295|0)>($297|0);
 $299 = ((($0)) + 68|0);
 $300 = HEAP32[$299>>2]|0;
 if ($298) {
  $301 = ($300|0)==(0|0);
  if (!($301)) {
   $302 = $300;
   $303 = (_malloc(8)|0);
   $304 = ((($0)) + 80|0);
   $305 = HEAP32[$304>>2]|0;
   $306 = (($305) + ($294))|0;
   HEAP32[$304>>2] = $306;
   $307 = ((($0)) + 84|0);
   $308 = HEAP32[$307>>2]|0;
   $309 = ((($303)) + 4|0);
   HEAP32[$309>>2] = $308;
   HEAP32[$303>>2] = $302;
   HEAP32[$307>>2] = $303;
  }
  HEAP32[$296>>2] = $292;
  $310 = (_malloc($292)|0);
  HEAP32[$299>>2] = $310;
  HEAP32[$293>>2] = 0;
  $312 = $310;$313 = 0;
 } else {
  $312 = $300;$313 = $294;
 }
 $311 = (($312) + ($313)|0);
 $314 = (($313) + ($292))|0;
 HEAP32[$293>>2] = $314;
 $316 = ($315|0)<(0);
 $318 = ($317|0)<(0);
 $319 = (($317) + ($315))|0;
 $320 = $319 >> 1;
 $$$i217 = $318 ? $315 : $320;
 $$$$i217 = $316 ? $317 : $$$i217;
 HEAP32[$311>>2] = $$$$i217;
 $322 = ($321|0)<(0);
 $324 = ($323|0)<(0);
 $325 = (($323) + ($321))|0;
 $326 = $325 >> 1;
 $$$i215 = $324 ? $321 : $326;
 $327 = $322 ? $323 : $$$i215;
 $328 = ((($311)) + 4|0);
 HEAP32[$328>>2] = $327;
 if ($138) {
  $$7288 = 2;
  while(1) {
   $329 = (($$7288) + -2)|0;
   $330 = (((($1)) + 1032|0) + ($329<<2)|0);
   $331 = HEAP32[$330>>2]|0;
   $332 = (((($1)) + 780|0) + ($329<<2)|0);
   $333 = HEAP32[$332>>2]|0;
   $334 = (((($17)) + 836|0) + ($331<<2)|0);
   $335 = HEAP32[$334>>2]|0;
   $336 = (((($17)) + 836|0) + ($333<<2)|0);
   $337 = HEAP32[$336>>2]|0;
   $338 = (($311) + ($331<<2)|0);
   $339 = HEAP32[$338>>2]|0;
   $340 = (($311) + ($333<<2)|0);
   $341 = HEAP32[$340>>2]|0;
   $342 = (((($17)) + 836|0) + ($$7288<<2)|0);
   $343 = HEAP32[$342>>2]|0;
   $344 = $339 & 32767;
   $345 = $341 & 32767;
   $346 = (($345) - ($344))|0;
   $347 = (($337) - ($335))|0;
   $ispos$i = ($346|0)>(-1);
   $neg$i = (0 - ($346))|0;
   $348 = $ispos$i ? $346 : $neg$i;
   $349 = (($343) - ($335))|0;
   $350 = Math_imul($348, $349)|0;
   $351 = (($350|0) / ($347|0))&-1;
   $352 = ($346|0)<(0);
   $353 = (0 - ($351))|0;
   $$0$p$i = $352 ? $353 : $351;
   $$0$i = (($$0$p$i) + ($344))|0;
   $354 = (($5) + ($$7288<<2)|0);
   $355 = HEAP32[$354>>2]|0;
   $356 = ($355|0)<(0);
   $357 = (($6) + ($$7288<<2)|0);
   $358 = HEAP32[$357>>2]|0;
   $359 = ($358|0)<(0);
   $360 = (($358) + ($355))|0;
   $361 = $360 >> 1;
   $$$i = $359 ? $355 : $361;
   $$$$i = $356 ? $358 : $$$i;
   $362 = ($$$$i|0)<(0);
   $363 = ($$0$i|0)==($$$$i|0);
   $or$cond214 = $362 | $363;
   $364 = $$0$i | 32768;
   $$sink = $or$cond214 ? $364 : $$$$i;
   $$sink6 = (($311) + ($$7288<<2)|0);
   HEAP32[$$sink6>>2] = $$sink;
   $365 = (($$7288) + 1)|0;
   $exitcond = ($365|0)==($21|0);
   if ($exitcond) {
    break;
   } else {
    $$7288 = $365;
   }
  }
 }
 $$0213 = $311;
 STACKTOP = sp;return ($$0213|0);
}
function _fit_line($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$ph = 0, $$0137$lcssa = 0.0, $$0137158 = 0.0, $$0138$lcssa = 0.0, $$0138157 = 0.0, $$0141$lcssa = 0.0, $$0141156 = 0.0, $$0146$lcssa = 0.0, $$0146155 = 0.0, $$0149154 = 0, $$0150$lcssa = 0.0, $$0150153 = 0.0, $$1 = 0.0, $$1139 = 0.0, $$1142 = 0.0, $$1147 = 0.0, $$1151 = 0.0, $$2 = 0.0, $$2140 = 0.0;
 var $$2143 = 0.0, $$2148 = 0.0, $$2152 = 0.0, $$pr = 0, $$pre = 0, $$pre167 = 0, $10 = 0, $100 = 0.0, $101 = 0.0, $102 = 0.0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $11 = 0.0, $110 = 0.0, $111 = 0.0;
 var $112 = 0.0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0;
 var $20 = 0.0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0, $25 = 0, $26 = 0.0, $27 = 0, $28 = 0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0;
 var $40 = 0.0, $41 = 0.0, $42 = 0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0.0, $49 = 0.0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $58 = 0.0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0, $66 = 0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0, $76 = 0.0;
 var $77 = 0.0, $78 = 0.0, $79 = 0, $8 = 0, $80 = 0, $81 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0.0, $87 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0.0;
 var $95 = 0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$0>>2]|0;
 $6 = (($1) + -1)|0;
 $7 = (((($0) + (($6*56)|0)|0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($1|0)>(0);
 if ($9) {
  $10 = ((($4)) + 1108|0);
  $11 = +HEAPF32[$10>>2];
  $$0137158 = 0.0;$$0138157 = 0.0;$$0141156 = 0.0;$$0146155 = 0.0;$$0149154 = 0;$$0150153 = 0.0;
  while(1) {
   $12 = (((($0) + (($$0149154*56)|0)|0)) + 52|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = (((($0) + (($$0149154*56)|0)|0)) + 28|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = (($15) + ($13))|0;
   $17 = (+($16|0));
   $18 = $17 * $11;
   $19 = (($15) + 1)|0;
   $20 = (+($19|0));
   $21 = $18 / $20;
   $22 = $21;
   $23 = $22 + 1.0;
   $24 = (((($0) + (($$0149154*56)|0)|0)) + 32|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = (+($25|0));
   $27 = (((($0) + (($$0149154*56)|0)|0)) + 8|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (+($28|0));
   $30 = $23 * $29;
   $31 = $26 + $$0137158;
   $32 = $31 + $30;
   $33 = (((($0) + (($$0149154*56)|0)|0)) + 36|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (+($34|0));
   $36 = (((($0) + (($$0149154*56)|0)|0)) + 12|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (+($37|0));
   $39 = $38 * $23;
   $40 = $35 + $$0138157;
   $41 = $40 + $39;
   $42 = (((($0) + (($$0149154*56)|0)|0)) + 40|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (+($43|0));
   $45 = (((($0) + (($$0149154*56)|0)|0)) + 16|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = (+($46|0));
   $48 = $47 * $23;
   $49 = $44 + $$0141156;
   $50 = $49 + $48;
   $51 = (((($0) + (($$0149154*56)|0)|0)) + 48|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = (+($52|0));
   $54 = (((($0) + (($$0149154*56)|0)|0)) + 24|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (+($55|0));
   $57 = $56 * $23;
   $58 = $53 + $$0146155;
   $59 = $58 + $57;
   $60 = (+($13|0));
   $61 = (+($15|0));
   $62 = $23 * $61;
   $63 = $60 + $$0150153;
   $64 = $63 + $62;
   $65 = (($$0149154) + 1)|0;
   $exitcond = ($65|0)==($1|0);
   if ($exitcond) {
    $$0137$lcssa = $32;$$0138$lcssa = $41;$$0141$lcssa = $50;$$0146$lcssa = $59;$$0150$lcssa = $64;
    break;
   } else {
    $$0137158 = $32;$$0138157 = $41;$$0141156 = $50;$$0146155 = $59;$$0149154 = $65;$$0150153 = $64;
   }
  }
 } else {
  $$0137$lcssa = 0.0;$$0138$lcssa = 0.0;$$0141$lcssa = 0.0;$$0146$lcssa = 0.0;$$0150$lcssa = 0.0;
 }
 $66 = HEAP32[$2>>2]|0;
 $67 = ($66|0)>(-1);
 if ($67) {
  $68 = (+($5|0));
  $69 = $$0137$lcssa + $68;
  $70 = (+($66|0));
  $71 = $70 + $$0138$lcssa;
  $72 = Math_imul($5, $5)|0;
  $73 = (+($72|0));
  $74 = $$0141$lcssa + $73;
  $75 = Math_imul($66, $5)|0;
  $76 = (+($75|0));
  $77 = $76 + $$0146$lcssa;
  $78 = $$0150$lcssa + 1.0;
  $$1 = $69;$$1139 = $71;$$1142 = $74;$$1147 = $77;$$1151 = $78;
 } else {
  $$1 = $$0137$lcssa;$$1139 = $$0138$lcssa;$$1142 = $$0141$lcssa;$$1147 = $$0146$lcssa;$$1151 = $$0150$lcssa;
 }
 $79 = HEAP32[$3>>2]|0;
 $80 = ($79|0)>(-1);
 if ($80) {
  $81 = (+($8|0));
  $82 = $$1 + $81;
  $83 = (+($79|0));
  $84 = $83 + $$1139;
  $85 = Math_imul($8, $8)|0;
  $86 = (+($85|0));
  $87 = $$1142 + $86;
  $88 = Math_imul($79, $8)|0;
  $89 = (+($88|0));
  $90 = $89 + $$1147;
  $91 = $$1151 + 1.0;
  $$2 = $82;$$2140 = $84;$$2143 = $87;$$2148 = $90;$$2152 = $91;
 } else {
  $$2 = $$1;$$2140 = $$1139;$$2143 = $$1142;$$2148 = $$1147;$$2152 = $$1151;
 }
 $92 = $$2143 * $$2152;
 $93 = $$2 * $$2;
 $94 = $92 - $93;
 $95 = $94 > 0.0;
 if ($95) {
  $96 = $$2140 * $$2143;
  $97 = $$2 * $$2148;
  $98 = $96 - $97;
  $99 = $98 / $94;
  $100 = $$2148 * $$2152;
  $101 = $$2 * $$2140;
  $102 = $100 - $101;
  $103 = $102 / $94;
  $104 = (+($5|0));
  $105 = $103 * $104;
  $106 = $105 + $99;
  $107 = (+_rint($106));
  $108 = (~~(($107)));
  HEAP32[$2>>2] = $108;
  $109 = (+($8|0));
  $110 = $103 * $109;
  $111 = $110 + $99;
  $112 = (+_rint($111));
  $113 = (~~(($112)));
  HEAP32[$3>>2] = $113;
  $114 = HEAP32[$2>>2]|0;
  $115 = ($114|0)>(1023);
  if ($115) {
   HEAP32[$2>>2] = 1023;
   $$pr = HEAP32[$3>>2]|0;
   $116 = $$pr;$122 = 1023;
  } else {
   $116 = $113;$122 = $114;
  }
  $117 = ($116|0)>(1023);
  if ($117) {
   HEAP32[$3>>2] = 1023;
   $$pre = HEAP32[$2>>2]|0;
   $118 = $$pre;$123 = 1023;
  } else {
   $118 = $122;$123 = $116;
  }
  $119 = ($118|0)<(0);
  if ($119) {
   HEAP32[$2>>2] = 0;
   $$pre167 = HEAP32[$3>>2]|0;
   $120 = $$pre167;
  } else {
   $120 = $123;
  }
  $121 = ($120|0)<(0);
  if ($121) {
   $$0$ph = 0;
  } else {
   $$0 = 0;
   return ($$0|0);
  }
 } else {
  HEAP32[$2>>2] = 0;
  $$0$ph = 1;
 }
 HEAP32[$3>>2] = 0;
 $$0 = $$0$ph;
 return ($$0|0);
}
function _floor0_unpack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04142 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_malloc(96)|0);
 $5 = (_oggpack_read($1,8)|0);
 HEAP32[$4>>2] = $5;
 $6 = (_oggpack_read($1,16)|0);
 $7 = ((($4)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = (_oggpack_read($1,16)|0);
 $9 = ((($4)) + 8|0);
 HEAP32[$9>>2] = $8;
 $10 = (_oggpack_read($1,6)|0);
 $11 = ((($4)) + 12|0);
 HEAP32[$11>>2] = $10;
 $12 = (_oggpack_read($1,8)|0);
 $13 = ((($4)) + 16|0);
 HEAP32[$13>>2] = $12;
 $14 = (_oggpack_read($1,4)|0);
 $15 = (($14) + 1)|0;
 $16 = ((($4)) + 20|0);
 HEAP32[$16>>2] = $15;
 $17 = ($5|0)<(1);
 L1: do {
  if ($17) {
   $39 = ($4|0)==(0|0);
   if ($39) {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $18 = ($6|0)<(1);
   if (!($18)) {
    $19 = ($8|0)<(1);
    $20 = ($14|0)<(0);
    $or$cond = $20 | $19;
    if (!($or$cond)) {
     $21 = ($14|0)>(-1);
     if (!($21)) {
      $$0 = $4;
      return ($$0|0);
     }
     $22 = ((($4)) + 24|0);
     $23 = ((($3)) + 24|0);
     $$04142 = 0;
     while(1) {
      $27 = (_oggpack_read($1,8)|0);
      $28 = (($22) + ($$04142<<2)|0);
      HEAP32[$28>>2] = $27;
      $29 = ($27|0)<(0);
      if ($29) {
       break L1;
      }
      $30 = HEAP32[$23>>2]|0;
      $31 = ($27|0)<($30|0);
      if (!($31)) {
       break L1;
      }
      $32 = (((($3)) + 1824|0) + ($27<<2)|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = ((($33)) + 12|0);
      $35 = HEAP32[$34>>2]|0;
      $36 = ($35|0)==(0);
      if ($36) {
       break L1;
      }
      $37 = HEAP32[$33>>2]|0;
      $38 = ($37|0)<(1);
      $25 = (($$04142) + 1)|0;
      if ($38) {
       break L1;
      }
      $24 = HEAP32[$16>>2]|0;
      $26 = ($25|0)<($24|0);
      if ($26) {
       $$04142 = $25;
      } else {
       $$0 = $4;
       break;
      }
     }
     return ($$0|0);
    }
   }
  }
 } while(0);
 _free($4);
 $$0 = 0;
 return ($$0|0);
}
function _floor0_look($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = (_malloc(32)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($2)) + -4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $5 & 3;
  $7 = ($6|0)==(0);
  if (!($7)) {
   dest=$2; stop=dest+32|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  }
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = ((($2)) + 4|0);
 HEAP32[$9>>2] = $8;
 $10 = ((($1)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$2>>2] = $11;
 $12 = ((($2)) + 20|0);
 HEAP32[$12>>2] = $1;
 $13 = (_malloc(8)|0);
 $14 = ($13|0)==(0|0);
 if ($14) {
  $23 = ((($2)) + 8|0);
  HEAP32[$23>>2] = $13;
  return ($2|0);
 }
 $15 = ((($13)) + -4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = $16 & 3;
 $18 = ($17|0)==(0);
 if ($18) {
  $23 = ((($2)) + 8|0);
  HEAP32[$23>>2] = $13;
  return ($2|0);
 }
 $19 = $13;
 $20 = $19;
 HEAP8[$20>>0]=0&255;HEAP8[$20+1>>0]=(0>>8)&255;HEAP8[$20+2>>0]=(0>>16)&255;HEAP8[$20+3>>0]=0>>24;
 $21 = (($19) + 4)|0;
 $22 = $21;
 HEAP8[$22>>0]=0&255;HEAP8[$22+1>>0]=(0>>8)&255;HEAP8[$22+2>>0]=(0>>16)&255;HEAP8[$22+3>>0]=0>>24;
 $23 = ((($2)) + 8|0);
 HEAP32[$23>>2] = $13;
 return ($2|0);
}
function _floor0_free_info($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 return;
}
function _floor0_free_look($0) {
 $0 = $0|0;
 var $$in = 0, $$pre = 0, $$pre11 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = HEAP32[$3>>2]|0;
  $6 = ($5|0)==(0|0);
  if ($6) {
   $$in = $3;
  } else {
   _free($5);
   $$pre = HEAP32[$2>>2]|0;
   $$in = $$pre;
  }
  $7 = ((($$in)) + 4|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $10 = $$in;
  } else {
   _free($8);
   $$pre11 = HEAP32[$2>>2]|0;
   $10 = $$pre11;
  }
  _free($10);
 }
 _free($0);
 return;
}
function _floor0_inverse1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa$i = 0, $$03341$i = 0, $$03539$i = 0, $$056$i = 0, $$06878 = 0.0, $$06977 = 0, $$07$i = 0, $$07173 = 0, $$134$lcssa$i = 0, $$13440$i = 0, $$170$lcssa = 0, $$17074 = 0, $$2 = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0.0, $106 = 0, $107 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0;
 var $or$cond$i = 0, $or$cond38$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 4|0);
 $5 = ((($3)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_oggpack_read($4,$6)|0);
 $8 = ($7|0)>(0);
 if (!($8)) {
  $$2 = 0;
  return ($$2|0);
 }
 $9 = HEAP32[$5>>2]|0;
 $10 = 1 << $9;
 $11 = (($10) + -1)|0;
 $12 = (+($7|0));
 $13 = (+($11|0));
 $14 = $12 / $13;
 $15 = ((($3)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (+($16|0));
 $18 = $14 * $17;
 $19 = ((($3)) + 20|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0);
 if ($21) {
  $$0$lcssa$i = 0;
 } else {
  $$056$i = $20;$$07$i = 0;
  while(1) {
   $22 = $$056$i >>> 1;
   $23 = (($$07$i) + 1)|0;
   $24 = ($22|0)==(0);
   if ($24) {
    $$0$lcssa$i = $23;
    break;
   } else {
    $$056$i = $22;$$07$i = $23;
   }
  }
 }
 $25 = (_oggpack_read($4,$$0$lcssa$i)|0);
 $26 = ($25|0)==(-1);
 if ($26) {
  $$2 = 0;
  return ($$2|0);
 }
 $27 = HEAP32[$19>>2]|0;
 $28 = ($25|0)<($27|0);
 if (!($28)) {
  $$2 = 0;
  return ($$2|0);
 }
 $29 = ((($0)) + 64|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ((($30)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($32)) + 28|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 2848|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = (((($3)) + 24|0) + ($25<<2)|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (($36) + (($38*56)|0)|0);
 $40 = ((($1)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = HEAP32[$39>>2]|0;
 $43 = (($42) + ($41))|0;
 $44 = $43 << 2;
 $45 = (($44) + 11)|0;
 $46 = $45 & -8;
 $47 = ((($0)) + 72|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = (($48) + ($46))|0;
 $50 = ((($0)) + 76|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = ($49|0)>($51|0);
 $53 = ((($0)) + 68|0);
 $54 = HEAP32[$53>>2]|0;
 if ($52) {
  $55 = ($54|0)==(0|0);
  if (!($55)) {
   $56 = $54;
   $57 = (_malloc(8)|0);
   $58 = ((($0)) + 80|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (($59) + ($48))|0;
   HEAP32[$58>>2] = $60;
   $61 = ((($0)) + 84|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($57)) + 4|0);
   HEAP32[$63>>2] = $62;
   HEAP32[$57>>2] = $56;
   HEAP32[$61>>2] = $57;
  }
  HEAP32[$50>>2] = $46;
  $64 = (_malloc($46)|0);
  HEAP32[$53>>2] = $64;
  HEAP32[$47>>2] = 0;
  $$pre = HEAP32[$40>>2]|0;
  $66 = $64;$67 = 0;$72 = $$pre;
 } else {
  $66 = $54;$67 = $48;$72 = $41;
 }
 $65 = (($66) + ($67)|0);
 $68 = (($67) + ($46))|0;
 HEAP32[$47>>2] = $68;
 $69 = (((($36) + (($38*56)|0)|0)) + 8|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = ($70|0)>(0);
 $73 = ($72|0)>(0);
 L20: do {
  if ($71) {
   if ($73) {
    $75 = (((($36) + (($38*56)|0)|0)) + 16|0);
    $$03341$i = 0;
    while(1) {
     $77 = (_decode_packed_entry_number($39,$4)|0);
     $78 = ($77|0)==(-1);
     if ($78) {
      $$2 = 0;
      break;
     }
     $79 = HEAP32[$75>>2]|0;
     $80 = HEAP32[$39>>2]|0;
     $81 = Math_imul($80, $77)|0;
     $82 = (($79) + ($81<<2)|0);
     $83 = ($$03341$i|0)<($72|0);
     $84 = ($80|0)>(0);
     $or$cond38$i = $84 & $83;
     if ($or$cond38$i) {
      $$03539$i = 0;$$13440$i = $$03341$i;
      while(1) {
       $85 = (($$03539$i) + 1)|0;
       $86 = (($82) + ($$03539$i<<2)|0);
       $87 = HEAP32[$86>>2]|0;
       $88 = (($$13440$i) + 1)|0;
       $89 = (($65) + ($$13440$i<<2)|0);
       HEAP32[$89>>2] = $87;
       $90 = ($88|0)<($72|0);
       $91 = ($85|0)<($80|0);
       $or$cond$i = $91 & $90;
       if ($or$cond$i) {
        $$03539$i = $85;$$13440$i = $88;
       } else {
        $$134$lcssa$i = $88;
        break;
       }
      }
     } else {
      $$134$lcssa$i = $$03341$i;
     }
     $76 = ($$134$lcssa$i|0)<($72|0);
     if ($76) {
      $$03341$i = $$134$lcssa$i;
     } else {
      break L20;
     }
    }
    return ($$2|0);
   }
  } else {
   if ($73) {
    $74 = $72 << 2;
    _memset(($65|0),0,($74|0))|0;
   }
  }
 } while(0);
 $92 = HEAP32[$40>>2]|0;
 $93 = ($92|0)>(0);
 if ($93) {
  $$06878 = 0.0;$$06977 = 0;
  while(1) {
   $94 = ($$06977|0)<($92|0);
   L37: do {
    if ($94) {
     $95 = HEAP32[$39>>2]|0;
     $$07173 = 0;$$17074 = $$06977;
     while(1) {
      $96 = ($$07173|0)<($95|0);
      if (!($96)) {
       $$170$lcssa = $$17074;
       break L37;
      }
      $97 = (($65) + ($$17074<<2)|0);
      $98 = +HEAPF32[$97>>2];
      $99 = $98 + $$06878;
      HEAPF32[$97>>2] = $99;
      $100 = (($$07173) + 1)|0;
      $101 = (($$17074) + 1)|0;
      $102 = ($101|0)<($92|0);
      if ($102) {
       $$07173 = $100;$$17074 = $101;
      } else {
       $$170$lcssa = $101;
       break;
      }
     }
    } else {
     $$170$lcssa = $$06977;
    }
   } while(0);
   $103 = (($$170$lcssa) + -1)|0;
   $104 = (($65) + ($103<<2)|0);
   $105 = +HEAPF32[$104>>2];
   $106 = ($$170$lcssa|0)<($92|0);
   if ($106) {
    $$06878 = $105;$$06977 = $$170$lcssa;
   } else {
    break;
   }
  }
 }
 $107 = (($65) + ($92<<2)|0);
 HEAPF32[$107>>2] = $18;
 $$2 = $65;
 return ($$2|0);
}
function _floor0_inverse2($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$$i = 0, $$0 = 0, $$062$lcssa$i = 0, $$06263$i = 0, $$07178$us$i = 0.0, $$07377$us$i = 0.0, $$07576$us$i = 0, $$084$i = 0, $$172$i = 0.0, $$172$us$i = 0.0, $$174$i = 0.0, $$174$in$i = 0.0, $$174$us$i = 0.0, $$181$i = 0, $$181$us$i = 0, $$2$i = 0, $$2$us$i = 0, $$phi$trans$insert = 0, $$phi$trans$insert30 = 0, $$pre = 0;
 var $$pre$i = 0, $$pre$i1 = 0, $$pre92$i = 0, $$sink$i = 0, $$sink$us$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0.0, $109 = 0, $11 = 0, $110 = 0.0, $111 = 0.0, $112 = 0.0;
 var $113 = 0.0, $114 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0;
 var $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0.0, $148 = 0.0, $149 = 0;
 var $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0, $166 = 0.0, $167 = 0.0;
 var $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0;
 var $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $41 = 0.0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0.0;
 var $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0;
 var $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0.0, $99 = 0.0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + ($9<<2)|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($0)) + 64|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ((($16)) + 28|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (($18) + ($9<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (($20|0) / 2)&-1;
  $22 = HEAP32[$1>>2]|0;
  $23 = ((($5)) + 4|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (+($24|0));
  $26 = $21 << 2;
  $27 = (($26) + 4)|0;
  $28 = (_malloc($27)|0);
  HEAP32[$10>>2] = $28;
  $29 = ($20|0)>(1);
  $30 = HEAP32[$6>>2]|0;
  $31 = (($30) + ($9<<2)|0);
  $32 = HEAP32[$31>>2]|0;
  L3: do {
   if ($29) {
    $33 = (+($22|0));
    $34 = $25 * $25;
    $35 = $34 * 4.624999938585006E-9;
    $36 = $35;
    $37 = (+Math_atan((+$36)));
    $38 = $37 * 2.2400000095367432;
    $39 = $25 * 3.6999999429099262E-4;
    $40 = $39;
    $41 = (+Math_atan((+$40)));
    $42 = $41 * 13.100000381469727;
    $43 = $25 * 4.9999998736893758E-5;
    $44 = $43;
    $45 = $38 + $44;
    $46 = $45 + $42;
    $47 = $33 / $46;
    $48 = $47;
    $49 = $25 * 0.5;
    $50 = (+($21|0));
    $51 = $49 / $50;
    $52 = $48;
    $$06263$i = 0;$72 = $22;
    while(1) {
     $53 = (+($$06263$i|0));
     $54 = $53 * $51;
     $55 = $54 * 7.3999998858198524E-4;
     $56 = $55;
     $57 = (+Math_atan((+$56)));
     $58 = $57 * 13.100000381469727;
     $59 = $54 * $54;
     $60 = $59 * 1.8499999754340024E-8;
     $61 = $60;
     $62 = (+Math_atan((+$61)));
     $63 = $62 * 2.2400000095367432;
     $64 = $63 + $58;
     $65 = $54 * 9.9999997473787516E-5;
     $66 = $65;
     $67 = $64 + $66;
     $68 = $67 * $52;
     $69 = (+Math_floor((+$68)));
     $70 = (~~(($69)));
     $71 = ($70|0)<($72|0);
     $73 = (($72) + -1)|0;
     $$$i = $71 ? $70 : $73;
     $74 = (($32) + ($$06263$i<<2)|0);
     HEAP32[$74>>2] = $$$i;
     $75 = (($$06263$i) + 1)|0;
     $76 = ($75|0)<($21|0);
     if (!($76)) {
      $$062$lcssa$i = $75;
      break L3;
     }
     $$pre$i = HEAP32[$1>>2]|0;
     $$06263$i = $75;$72 = $$pre$i;
    }
   } else {
    $$062$lcssa$i = 0;
   }
  } while(0);
  $77 = (($32) + ($$062$lcssa$i<<2)|0);
  HEAP32[$77>>2] = -1;
  $78 = (((($1)) + 12|0) + ($9<<2)|0);
  HEAP32[$78>>2] = $21;
  $95 = $21;
 } else {
  $$phi$trans$insert = ((($1)) + 12|0);
  $$phi$trans$insert30 = (($$phi$trans$insert) + ($9<<2)|0);
  $$pre = HEAP32[$$phi$trans$insert30>>2]|0;
  $95 = $$pre;
 }
 $79 = ($2|0)==(0|0);
 if ($79) {
  $193 = $95 << 2;
  _memset(($3|0),0,($193|0))|0;
  $$0 = 0;
  return ($$0|0);
 }
 $80 = ((($1)) + 4|0);
 $81 = HEAP32[$80>>2]|0;
 $82 = (($2) + ($81<<2)|0);
 $83 = +HEAPF32[$82>>2];
 $84 = HEAP32[$6>>2]|0;
 $85 = (($84) + ($9<<2)|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = HEAP32[$1>>2]|0;
 $88 = ((($5)) + 16|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = (+($89|0));
 $91 = (+($87|0));
 $92 = 3.1415926535897931 / $91;
 $93 = $92;
 $94 = ($81|0)>(0);
 if ($94) {
  $$084$i = 0;
  while(1) {
   $155 = (($2) + ($$084$i<<2)|0);
   $156 = +HEAPF32[$155>>2];
   $157 = $156;
   $158 = (+Math_cos((+$157)));
   $159 = $158 * 2.0;
   $160 = $159;
   HEAPF32[$155>>2] = $160;
   $161 = (($$084$i) + 1)|0;
   $exitcond$i = ($161|0)==($81|0);
   if ($exitcond$i) {
    break;
   } else {
    $$084$i = $161;
   }
  }
 }
 $96 = ($95|0)>(0);
 if (!($96)) {
  $$0 = 1;
  return ($$0|0);
 }
 $97 = ($81|0)>(1);
 $98 = $83;
 $99 = $90;
 if (!($97)) {
  $$pre$i1 = HEAP32[$86>>2]|0;
  $100 = ($81|0)==(1);
  $$181$i = 0;$165 = $$pre$i1;
  while(1) {
   $164 = (+($165|0));
   $166 = $164 * $93;
   $167 = $166;
   $168 = (+Math_cos((+$167)));
   $169 = $168 * 2.0;
   $170 = $169;
   if ($100) {
    $171 = +HEAPF32[$2>>2];
    $172 = $170 - $171;
    $173 = $172 * 0.5;
    $174 = $170 * $170;
    $175 = 4.0 - $174;
    $176 = $173 * $173;
    $$172$i = $176;$$174$in$i = $175;
   } else {
    $177 = 2.0 - $170;
    $178 = $170 + 2.0;
    $179 = $178 * 0.25;
    $$172$i = $179;$$174$in$i = $177;
   }
   $$174$i = $$174$in$i * 0.25;
   $180 = $$172$i + $$174$i;
   $181 = $180;
   $182 = (+Math_sqrt((+$181)));
   $183 = $98 / $182;
   $184 = $183 - $99;
   $185 = $184 * 0.1151292473077774;
   $186 = (+Math_exp((+$185)));
   $187 = $186;
   $$2$i = $$181$i;
   while(1) {
    $$sink$i = (($3) + ($$2$i<<2)|0);
    $188 = +HEAPF32[$$sink$i>>2];
    $189 = $188 * $187;
    HEAPF32[$$sink$i>>2] = $189;
    $162 = (($$2$i) + 1)|0;
    $190 = (($86) + ($162<<2)|0);
    $191 = HEAP32[$190>>2]|0;
    $192 = ($191|0)==($165|0);
    if ($192) {
     $$2$i = $162;
    } else {
     break;
    }
   }
   $163 = ($162|0)<($95|0);
   if ($163) {
    $$181$i = $162;$165 = $191;
   } else {
    $$0 = 1;
    break;
   }
  }
  return ($$0|0);
 }
 $101 = (($81) + -2)|0;
 $102 = $101 & -2;
 $103 = $101 | 1;
 $104 = (($102) + 3)|0;
 $$pre92$i = HEAP32[$86>>2]|0;
 $105 = ($104|0)==($81|0);
 $106 = (($103) + 1)|0;
 $107 = (($2) + ($106<<2)|0);
 $$181$us$i = 0;$109 = $$pre92$i;
 while(1) {
  $108 = (+($109|0));
  $110 = $108 * $93;
  $111 = $110;
  $112 = (+Math_cos((+$111)));
  $113 = $112 * 2.0;
  $114 = $113;
  $$07178$us$i = 0.5;$$07377$us$i = 0.5;$$07576$us$i = 1;
  while(1) {
   $145 = (($$07576$us$i) + -1)|0;
   $146 = (($2) + ($145<<2)|0);
   $147 = +HEAPF32[$146>>2];
   $148 = $114 - $147;
   $121 = $148 * $$07178$us$i;
   $149 = (($2) + ($$07576$us$i<<2)|0);
   $150 = +HEAPF32[$149>>2];
   $151 = $114 - $150;
   $117 = $151 * $$07377$us$i;
   $152 = (($$07576$us$i) + 2)|0;
   $153 = ($152|0)<($81|0);
   if ($153) {
    $$07178$us$i = $121;$$07377$us$i = $117;$$07576$us$i = $152;
   } else {
    break;
   }
  }
  if ($105) {
   $123 = +HEAPF32[$107>>2];
   $124 = $114 - $123;
   $125 = $124 * $121;
   $126 = $114 * $114;
   $127 = 4.0 - $126;
   $128 = $117 * $117;
   $129 = $128 * $127;
   $130 = $125 * $125;
   $$172$us$i = $130;$$174$us$i = $129;
  } else {
   $115 = 2.0 - $114;
   $116 = $117 * $117;
   $118 = $116 * $115;
   $119 = $114 + 2.0;
   $120 = $121 * $121;
   $122 = $120 * $119;
   $$172$us$i = $122;$$174$us$i = $118;
  }
  $131 = $$172$us$i + $$174$us$i;
  $132 = $131;
  $133 = (+Math_sqrt((+$132)));
  $134 = $98 / $133;
  $135 = $134 - $99;
  $136 = $135 * 0.1151292473077774;
  $137 = (+Math_exp((+$136)));
  $138 = $137;
  $$2$us$i = $$181$us$i;
  while(1) {
   $$sink$us$i = (($3) + ($$2$us$i<<2)|0);
   $139 = +HEAPF32[$$sink$us$i>>2];
   $140 = $139 * $138;
   HEAPF32[$$sink$us$i>>2] = $140;
   $141 = (($$2$us$i) + 1)|0;
   $142 = (($86) + ($141<<2)|0);
   $143 = HEAP32[$142>>2]|0;
   $144 = ($143|0)==($109|0);
   if ($144) {
    $$2$us$i = $141;
   } else {
    break;
   }
  }
  $154 = ($141|0)<($95|0);
  if ($154) {
   $$181$us$i = $141;$109 = $143;
  } else {
   $$0 = 1;
   break;
  }
 }
 return ($$0|0);
}
function _res0_unpack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa$i = 0, $$0117 = 0, $$067$i = 0, $$08$i = 0, $$087116 = 0, $$088 = 0, $$089125 = 0, $$093$lcssa132 = 0, $$093124 = 0, $$095 = 0, $$1121 = 0, $$196 = 0, $$2118 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_malloc(2840)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($2)) + -4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $5 & 3;
  $7 = ($6|0)==(0);
  if (!($7)) {
   _memset(($2|0),0,2840)|0;
  }
 }
 $8 = ((($0)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_oggpack_read($1,24)|0);
 HEAP32[$2>>2] = $10;
 $11 = (_oggpack_read($1,24)|0);
 $12 = ((($2)) + 4|0);
 HEAP32[$12>>2] = $11;
 $13 = (_oggpack_read($1,24)|0);
 $14 = (($13) + 1)|0;
 $15 = ((($2)) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = (_oggpack_read($1,6)|0);
 $17 = (($16) + 1)|0;
 $18 = ((($2)) + 12|0);
 HEAP32[$18>>2] = $17;
 $19 = (_oggpack_read($1,8)|0);
 $20 = ((($2)) + 20|0);
 HEAP32[$20>>2] = $19;
 $21 = ($19|0)<(0);
 L5: do {
  if (!($21)) {
   $22 = ($16|0)>(-1);
   if ($22) {
    $23 = ((($2)) + 24|0);
    $$089125 = 0;$$093124 = 0;
    while(1) {
     $27 = (_oggpack_read($1,3)|0);
     $28 = (_oggpack_read($1,1)|0);
     $29 = ($28|0)<(0);
     if ($29) {
      break L5;
     }
     $30 = ($28|0)==(0);
     if ($30) {
      $$196 = $27;
     } else {
      $31 = (_oggpack_read($1,5)|0);
      $32 = ($31|0)<(0);
      $33 = $31 << 3;
      $34 = $32 ? 0 : $33;
      $$095 = $34 | $27;
      $35 = $31 >> 31;
      $36 = $35 & 2;
      $cond = ($36|0)==(0);
      if ($cond) {
       $$196 = $$095;
      } else {
       break L5;
      }
     }
     $37 = (($23) + ($$089125<<2)|0);
     HEAP32[$37>>2] = $$196;
     $38 = ($$196|0)==(0);
     if ($38) {
      $$0$lcssa$i = 0;
     } else {
      $$067$i = $$196;$$08$i = 0;
      while(1) {
       $39 = $$067$i & 1;
       $40 = (($39) + ($$08$i))|0;
       $41 = $$067$i >>> 1;
       $42 = ($41|0)==(0);
       if ($42) {
        $$0$lcssa$i = $40;
        break;
       } else {
        $$067$i = $41;$$08$i = $40;
       }
      }
     }
     $24 = (($$0$lcssa$i) + ($$093124))|0;
     $43 = (($$089125) + 1)|0;
     $44 = HEAP32[$18>>2]|0;
     $45 = ($43|0)<($44|0);
     if ($45) {
      $$089125 = $43;$$093124 = $24;
     } else {
      break;
     }
    }
    $25 = ($24|0)>(0);
    if ($25) {
     $26 = ((($2)) + 280|0);
     $$1121 = 0;
     while(1) {
      $46 = (_oggpack_read($1,8)|0);
      $47 = ($46|0)<(0);
      if ($47) {
       break L5;
      }
      $48 = (($26) + ($$1121<<2)|0);
      HEAP32[$48>>2] = $46;
      $49 = (($$1121) + 1)|0;
      $50 = ($49|0)<($24|0);
      if ($50) {
       $$1121 = $49;
      } else {
       $$093$lcssa132 = $24;$78 = 1;
       break;
      }
     }
    } else {
     $$093$lcssa132 = $24;$78 = 0;
    }
   } else {
    $$093$lcssa132 = 0;$78 = 0;
   }
   $51 = HEAP32[$20>>2]|0;
   $52 = ((($9)) + 24|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ($51|0)<($53|0);
   if ($54) {
    if ($78) {
     $55 = ((($2)) + 280|0);
     $$2118 = 0;
     while(1) {
      $58 = (($55) + ($$2118<<2)|0);
      $59 = HEAP32[$58>>2]|0;
      $60 = ($59|0)<($53|0);
      if (!($60)) {
       break L5;
      }
      $61 = (((($9)) + 1824|0) + ($59<<2)|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ((($62)) + 12|0);
      $64 = HEAP32[$63>>2]|0;
      $65 = ($64|0)==(0);
      $56 = (($$2118) + 1)|0;
      if ($65) {
       break L5;
      }
      $57 = ($56|0)<($$093$lcssa132|0);
      if ($57) {
       $$2118 = $56;
      } else {
       break;
      }
     }
    }
    $66 = (((($9)) + 1824|0) + ($51<<2)|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = ((($67)) + 4|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = HEAP32[$67>>2]|0;
    $71 = ($70|0)<(1);
    if (!($71)) {
     $72 = HEAP32[$18>>2]|0;
     $$0117 = 1;$$087116 = $70;
     while(1) {
      $75 = Math_imul($72, $$0117)|0;
      $76 = ($75|0)>($69|0);
      if ($76) {
       break L5;
      }
      $73 = (($$087116) + -1)|0;
      $74 = ($$087116|0)>(1);
      if ($74) {
       $$0117 = $75;$$087116 = $73;
      } else {
       break;
      }
     }
     $77 = ((($2)) + 16|0);
     HEAP32[$77>>2] = $75;
     $$088 = $2;
     return ($$088|0);
    }
   }
  }
 } while(0);
 _free($2);
 $$088 = 0;
 return ($$088|0);
}
function _res0_look($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$$098 = 0, $$$i = 0, $$$i2 = 0, $$0$i = 0, $$0$i3 = 0, $$0101122 = 0, $$0124 = 0, $$056$i = 0, $$07$i = 0, $$094107$us = 0, $$095106$us = 0, $$096118 = 0, $$098$lcssa = 0, $$098123 = 0, $$1102117 = 0, $$1112 = 0, $$197105$us = 0, $$2100 = 0, $$2103 = 0, $$2108 = 0;
 var $$2108$us = 0, $$3 = 0, $$cast = 0, $$lcssa = 0, $$pn = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $exitcond = 0, $exitcond12 = 0, $exitcond13 = 0, $exitcond134 = 0, $exitcond135 = 0;
 var $exitcond14 = 0, $phitmp = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $2 = (_malloc(44)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($2)) + -4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = $5 & 3;
  $7 = ($6|0)==(0);
  if (!($7)) {
   dest=$2; stop=dest+44|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
  }
 }
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$2>>2] = $1;
 $12 = ((($1)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($2)) + 4|0);
 HEAP32[$14>>2] = $13;
 $15 = ((($11)) + 2848|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($2)) + 12|0);
 HEAP32[$17>>2] = $16;
 $$cast = $16;
 $18 = ((($1)) + 20|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($$cast) + (($19*56)|0)|0);
 $21 = ((($2)) + 16|0);
 HEAP32[$21>>2] = $20;
 $22 = HEAP32[$20>>2]|0;
 $23 = ($13|0)==(0);
 if ($23) {
  $$0$i = 0;
 } else {
  $24 = $13 << 2;
  $25 = ($13>>>0)>(65535);
  if ($25) {
   $26 = (($24>>>0) / ($13>>>0))&-1;
   $27 = ($26|0)==(4);
   $$$i = $27 ? $24 : -1;
   $$0$i = $$$i;
  } else {
   $$0$i = $24;
  }
 }
 $28 = (_malloc($$0$i)|0);
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = ((($28)) + -4|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = $31 & 3;
  $33 = ($32|0)==(0);
  if (!($33)) {
   _memset(($28|0),0,($$0$i|0))|0;
  }
 }
 $34 = ((($2)) + 20|0);
 HEAP32[$34>>2] = $28;
 $35 = ($13|0)>(0);
 if ($35) {
  $36 = ((($1)) + 24|0);
  $37 = ((($1)) + 280|0);
  $$0101122 = 0;$$0124 = 0;$$098123 = 0;
  while(1) {
   $38 = (($36) + ($$0124<<2)|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($39|0)==(0);
   if ($40) {
    $$2100 = $$098123;$$3 = $$0101122;
   } else {
    $$056$i = $39;$$07$i = 0;
    while(1) {
     $41 = $$056$i >>> 1;
     $42 = (($$07$i) + 1)|0;
     $43 = ($41|0)==(0);
     if ($43) {
      break;
     } else {
      $$056$i = $41;$$07$i = $42;
     }
    }
    $44 = ($42|0)>($$098123|0);
    $$$098 = $44 ? $42 : $$098123;
    $45 = $42 << 2;
    $46 = ($42>>>0)>(65535);
    if ($46) {
     $47 = (($45>>>0) / ($42>>>0))&-1;
     $48 = ($47|0)==(4);
     $$$i2 = $48 ? $45 : -1;
     $$0$i3 = $$$i2;
    } else {
     $$0$i3 = $45;
    }
    $49 = (_malloc($$0$i3)|0);
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     $51 = ((($49)) + -4|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = $52 & 3;
     $54 = ($53|0)==(0);
     if (!($54)) {
      _memset(($49|0),0,($$0$i3|0))|0;
     }
    }
    $55 = (($28) + ($$0124<<2)|0);
    HEAP32[$55>>2] = $49;
    $56 = ($$07$i|0)>(-1);
    if ($56) {
     $57 = HEAP32[$38>>2]|0;
     $$096118 = 0;$$1102117 = $$0101122;
     while(1) {
      $58 = 1 << $$096118;
      $59 = $57 & $58;
      $60 = ($59|0)==(0);
      if ($60) {
       $$2103 = $$1102117;
      } else {
       $61 = HEAP32[$15>>2]|0;
       $62 = (($$1102117) + 1)|0;
       $63 = (($37) + ($$1102117<<2)|0);
       $64 = HEAP32[$63>>2]|0;
       $65 = (($61) + (($64*56)|0)|0);
       $66 = HEAP32[$55>>2]|0;
       $67 = (($66) + ($$096118<<2)|0);
       HEAP32[$67>>2] = $65;
       $$2103 = $62;
      }
      $68 = (($$096118) + 1)|0;
      $exitcond135 = ($68|0)==($42|0);
      if ($exitcond135) {
       $$2100 = $$$098;$$3 = $$2103;
       break;
      } else {
       $$096118 = $68;$$1102117 = $$2103;
      }
     }
    } else {
     $$2100 = $$$098;$$3 = $$0101122;
    }
   }
   $69 = (($$0124) + 1)|0;
   $exitcond14 = ($69|0)==($13|0);
   if ($exitcond14) {
    $$098$lcssa = $$2100;
    break;
   } else {
    $$0101122 = $$3;$$0124 = $69;$$098123 = $$2100;
   }
  }
 } else {
  $$098$lcssa = 0;
 }
 $70 = ((($2)) + 24|0);
 HEAP32[$70>>2] = 1;
 $71 = ($22|0)>(0);
 if ($71) {
  $$1112 = 0;$73 = 1;
  while(1) {
   $72 = Math_imul($73, $13)|0;
   $74 = (($$1112) + 1)|0;
   $exitcond134 = ($74|0)==($22|0);
   if ($exitcond134) {
    break;
   } else {
    $$1112 = $74;$73 = $72;
   }
  }
  HEAP32[$70>>2] = $72;
  $phitmp = $72 << 2;
  $$lcssa = $phitmp;$78 = $72;
 } else {
  $$lcssa = 4;$78 = 1;
 }
 $75 = ((($2)) + 8|0);
 HEAP32[$75>>2] = $$098$lcssa;
 $76 = (_malloc($$lcssa)|0);
 $77 = ((($2)) + 28|0);
 HEAP32[$77>>2] = $76;
 $79 = ($78|0)>(0);
 if (!($79)) {
  return ($2|0);
 }
 $80 = $22 << 2;
 if ($71) {
  $$2108$us = 0;
 } else {
  $$2108 = 0;
  while(1) {
   $89 = (_malloc($80)|0);
   $90 = (($76) + ($$2108<<2)|0);
   HEAP32[$90>>2] = $89;
   $91 = (($$2108) + 1)|0;
   $exitcond13 = ($91|0)==($78|0);
   if ($exitcond13) {
    break;
   } else {
    $$2108 = $91;
   }
  }
  return ($2|0);
 }
 while(1) {
  $81 = (_malloc($80)|0);
  $82 = (($76) + ($$2108$us<<2)|0);
  HEAP32[$82>>2] = $81;
  $$095106$us = $$2108$us;$$197105$us = 0;$$pn = $78;
  while(1) {
   $$094107$us = (($$pn|0) / ($13|0))&-1;
   $83 = (($$095106$us|0) / ($$094107$us|0))&-1;
   $84 = Math_imul($83, $$094107$us)|0;
   $85 = (($$095106$us) - ($84))|0;
   $86 = (($81) + ($$197105$us<<2)|0);
   HEAP32[$86>>2] = $83;
   $87 = (($$197105$us) + 1)|0;
   $exitcond = ($87|0)==($22|0);
   if ($exitcond) {
    break;
   } else {
    $$095106$us = $85;$$197105$us = $87;$$pn = $$094107$us;
   }
  }
  $88 = (($$2108$us) + 1)|0;
  $exitcond12 = ($88|0)==($78|0);
  if ($exitcond12) {
   break;
  } else {
   $$2108$us = $88;
  }
 }
 return ($2|0);
}
function _res0_free_info($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 return;
}
function _res0_free_look($0) {
 $0 = $0|0;
 var $$020 = 0, $$119 = 0, $$lcssa = 0, $$lcssa18 = 0, $$pre = 0, $$pre26 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(0);
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 if ($4) {
  $$020 = 0;$26 = $3;$8 = $6;
  while(1) {
   $7 = (($8) + ($$020<<2)|0);
   $9 = HEAP32[$7>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $13 = $26;$27 = $8;
   } else {
    _free($9);
    $$pre = HEAP32[$2>>2]|0;
    $$pre26 = HEAP32[$5>>2]|0;
    $13 = $$pre;$27 = $$pre26;
   }
   $11 = (($$020) + 1)|0;
   $12 = ($11|0)<($13|0);
   if ($12) {
    $$020 = $11;$26 = $13;$8 = $27;
   } else {
    $$lcssa18 = $27;
    break;
   }
  }
 } else {
  $$lcssa18 = $6;
 }
 _free($$lcssa18);
 $14 = ((($0)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)>(0);
 $17 = ((($0)) + 28|0);
 $18 = HEAP32[$17>>2]|0;
 if ($16) {
  $$119 = 0;$20 = $18;
  while(1) {
   $19 = (($20) + ($$119<<2)|0);
   $21 = HEAP32[$19>>2]|0;
   _free($21);
   $22 = (($$119) + 1)|0;
   $23 = HEAP32[$14>>2]|0;
   $24 = ($22|0)<($23|0);
   $25 = HEAP32[$17>>2]|0;
   if ($24) {
    $$119 = $22;$20 = $25;
   } else {
    $$lcssa = $25;
    break;
   }
  }
 } else {
  $$lcssa = $18;
 }
 _free($$lcssa);
 _free($0);
 return;
}
function _res0_inverse($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$01719 = 0, $$020 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if ($5) {
  $$01719 = 0;$$020 = 0;
 } else {
  return 0;
 }
 while(1) {
  $6 = (($3) + ($$01719<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0);
  if ($8) {
   $$1 = $$020;
  } else {
   $9 = (($2) + ($$020<<2)|0);
   $10 = (($$020) + 1)|0;
   $11 = (($2) + ($$01719<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   HEAP32[$9>>2] = $12;
   $$1 = $10;
  }
  $13 = (($$01719) + 1)|0;
  $exitcond = ($13|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$01719 = $13;$$020 = $$1;
  }
 }
 $14 = ($$1|0)==(0);
 if ($14) {
  return 0;
 }
 __01inverse($0,$1,$2,$$1,28);
 return 0;
}
function __01inverse($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$012032 = 0, $$012522$us = 0, $$012624 = 0, $$012730 = 0, $$027 = 0, $$1$lcssa = 0, $$112118 = 0, $$123$us = 0, $$219$us = 0, $$alloca_mul = 0, $$not = 0, $$not35 = 0, $$pre = 0, $$pre3 = 0, $$pre4 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0;
 var $or$cond$us = 0, $or$cond21 = 0, $umax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$1>>2]|0;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 36|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 >> 1;
 $14 = ((($5)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)<($13|0);
 $$ = $16 ? $15 : $13;
 $17 = HEAP32[$5>>2]|0;
 $18 = (($$) - ($17))|0;
 $19 = ($18|0)>(0);
 if (!($19)) {
  STACKTOP = sp;return;
 }
 $20 = (($18|0) / ($7|0))&-1;
 $21 = $3 << 2;
 $$alloca_mul = $21;
 $22 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $23 = ($3|0)>(0);
 if ($23) {
  $24 = (($10) + -1)|0;
  $25 = (($24) + ($20))|0;
  $26 = (($25|0) / ($10|0))&-1;
  $27 = $26 << 2;
  $28 = (($27) + 7)|0;
  $29 = $28 & -8;
  $30 = ((($0)) + 72|0);
  $31 = ((($0)) + 76|0);
  $32 = ((($0)) + 68|0);
  $33 = ((($0)) + 80|0);
  $34 = ((($0)) + 84|0);
  $$pre3 = HEAP32[$30>>2]|0;
  $$pre4 = HEAP32[$32>>2]|0;
  $$012032 = 0;$46 = $$pre3;$49 = $$pre4;
  while(1) {
   $45 = (($46) + ($29))|0;
   $47 = HEAP32[$31>>2]|0;
   $48 = ($45|0)>($47|0);
   if ($48) {
    $50 = ($49|0)==(0|0);
    if (!($50)) {
     $51 = $49;
     $52 = (_malloc(8)|0);
     $53 = HEAP32[$33>>2]|0;
     $54 = (($53) + ($46))|0;
     HEAP32[$33>>2] = $54;
     $55 = HEAP32[$34>>2]|0;
     $56 = ((($52)) + 4|0);
     HEAP32[$56>>2] = $55;
     HEAP32[$52>>2] = $51;
     HEAP32[$34>>2] = $52;
    }
    HEAP32[$31>>2] = $29;
    $57 = (_malloc($29)|0);
    HEAP32[$32>>2] = $57;
    HEAP32[$30>>2] = 0;
    $59 = $57;$60 = 0;
   } else {
    $59 = $49;$60 = $46;
   }
   $58 = (($59) + ($60)|0);
   $61 = (($60) + ($29))|0;
   HEAP32[$30>>2] = $61;
   $62 = (($22) + ($$012032<<2)|0);
   HEAP32[$62>>2] = $58;
   $63 = (($$012032) + 1)|0;
   $exitcond = ($63|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$012032 = $63;$46 = $61;$49 = $59;
   }
  }
 }
 $35 = ((($1)) + 8|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)>(0);
 if (!($37)) {
  STACKTOP = sp;return;
 }
 $38 = ($20|0)>(0);
 $39 = ((($0)) + 4|0);
 $40 = ((($5)) + 16|0);
 $41 = ((($1)) + 28|0);
 $42 = ($10|0)>(0);
 $43 = ((($1)) + 20|0);
 $44 = (0 - ($10))|0;
 $$not35 = ($3|0)<(1);
 $$012730 = 0;$126 = $36;
 L18: while(1) {
  if ($38) {
   $64 = 1 << $$012730;
   $$not = ($$012730|0)!=(0);
   $brmerge = $$not | $$not35;
   $$012624 = 0;$$027 = 0;
   while(1) {
    if (!($brmerge)) {
     $$112118 = 0;
     while(1) {
      $101 = HEAP32[$8>>2]|0;
      $102 = ((($101)) + 8|0);
      $103 = HEAP32[$102>>2]|0;
      $104 = ($103|0)>(0);
      if (!($104)) {
       label = 32;
       break L18;
      }
      $105 = (_decode_packed_entry_number($101,$39)|0);
      $106 = ($105|0)>(-1);
      if (!($106)) {
       label = 32;
       break L18;
      }
      $107 = ((($101)) + 24|0);
      $108 = HEAP32[$107>>2]|0;
      $109 = (($108) + ($105<<2)|0);
      $110 = HEAP32[$109>>2]|0;
      $111 = ($110|0)==(-1);
      if ($111) {
       label = 32;
       break L18;
      }
      $112 = HEAP32[$40>>2]|0;
      $113 = ($110|0)<($112|0);
      if (!($113)) {
       label = 32;
       break L18;
      }
      $114 = HEAP32[$41>>2]|0;
      $115 = (($114) + ($110<<2)|0);
      $116 = HEAP32[$115>>2]|0;
      $117 = (($22) + ($$112118<<2)|0);
      $118 = HEAP32[$117>>2]|0;
      $119 = (($118) + ($$012624<<2)|0);
      HEAP32[$119>>2] = $116;
      $120 = ($116|0)==(0);
      $99 = (($$112118) + 1)|0;
      if ($120) {
       label = 32;
       break L18;
      }
      $100 = ($99|0)<($3|0);
      if ($100) {
       $$112118 = $99;
      } else {
       break;
      }
     }
    }
    $65 = ($$027|0)<($20|0);
    $or$cond21 = $42 & $65;
    do {
     if ($or$cond21) {
      if ($23) {
       $$012522$us = 0;$$123$us = $$027;
      } else {
       $66 = (($$027) - ($20))|0;
       $67 = ($66>>>0)<($44>>>0);
       $umax = $67 ? $44 : $66;
       $68 = (($$027) - ($umax))|0;
       $$1$lcssa = $68;
       break;
      }
      while(1) {
       $69 = Math_imul($$123$us, $7)|0;
       $$219$us = 0;
       while(1) {
        $70 = HEAP32[$5>>2]|0;
        $71 = (($70) + ($69))|0;
        $72 = (($22) + ($$219$us<<2)|0);
        $73 = HEAP32[$72>>2]|0;
        $74 = (($73) + ($$012624<<2)|0);
        $75 = HEAP32[$74>>2]|0;
        $76 = (($75) + ($$012522$us<<2)|0);
        $77 = HEAP32[$76>>2]|0;
        $78 = (((($5)) + 24|0) + ($77<<2)|0);
        $79 = HEAP32[$78>>2]|0;
        $80 = $79 & $64;
        $81 = ($80|0)==(0);
        if (!($81)) {
         $82 = HEAP32[$43>>2]|0;
         $83 = (($82) + ($77<<2)|0);
         $84 = HEAP32[$83>>2]|0;
         $85 = (($84) + ($$012730<<2)|0);
         $86 = HEAP32[$85>>2]|0;
         $87 = ($86|0)==(0|0);
         if (!($87)) {
          $88 = (($2) + ($$219$us<<2)|0);
          $89 = HEAP32[$88>>2]|0;
          $90 = (($89) + ($71<<2)|0);
          $91 = (FUNCTION_TABLE_iiiii[$4 & 31]($86,$90,$39,$7)|0);
          $92 = ($91|0)==(-1);
          if ($92) {
           label = 32;
           break L18;
          }
         }
        }
        $93 = (($$219$us) + 1)|0;
        $94 = ($93|0)<($3|0);
        if ($94) {
         $$219$us = $93;
        } else {
         break;
        }
       }
       $95 = (($$012522$us) + 1)|0;
       $96 = (($$123$us) + 1)|0;
       $97 = ($95|0)<($10|0);
       $98 = ($96|0)<($20|0);
       $or$cond$us = $97 & $98;
       if ($or$cond$us) {
        $$012522$us = $95;$$123$us = $96;
       } else {
        $$1$lcssa = $96;
        break;
       }
      }
     } else {
      $$1$lcssa = $$027;
     }
    } while(0);
    $121 = (($$012624) + 1)|0;
    $122 = ($$1$lcssa|0)<($20|0);
    if ($122) {
     $$012624 = $121;$$027 = $$1$lcssa;
    } else {
     break;
    }
   }
   $$pre = HEAP32[$35>>2]|0;
   $125 = $$pre;
  } else {
   $125 = $126;
  }
  $123 = (($$012730) + 1)|0;
  $124 = ($123|0)<($125|0);
  if ($124) {
   $$012730 = $123;$126 = $125;
  } else {
   label = 32;
   break;
  }
 }
 if ((label|0) == 32) {
  STACKTOP = sp;return;
 }
}
function _res0_pack($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa$i = 0, $$03638 = 0, $$039 = 0, $$056$i = 0, $$067$i = 0, $$07$i = 0, $$08$i = 0, $$137 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 _oggpack_write($1,$2,24);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 _oggpack_write($1,$4,24);
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($6) + -1)|0;
 _oggpack_write($1,$7,24);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + -1)|0;
 _oggpack_write($1,$10,6);
 $11 = ((($0)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 _oggpack_write($1,$12,8);
 $13 = HEAP32[$8>>2]|0;
 $14 = ($13|0)>(0);
 if (!($14)) {
  return;
 }
 $15 = ((($0)) + 24|0);
 $$03638 = 0;$$039 = 0;
 while(1) {
  $19 = (($15) + ($$03638<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   label = 9;
  } else {
   $$056$i = $20;$$07$i = 0;
   while(1) {
    $22 = $$056$i >>> 1;
    $23 = (($$07$i) + 1)|0;
    $24 = ($22|0)==(0);
    if ($24) {
     break;
    } else {
     $$056$i = $22;$$07$i = $23;
    }
   }
   $25 = ($$07$i|0)>(2);
   if ($25) {
    _oggpack_write($1,$20,3);
    _oggpack_write($1,1,1);
    $26 = HEAP32[$19>>2]|0;
    $27 = $26 >> 3;
    _oggpack_write($1,$27,5);
   } else {
    label = 9;
   }
  }
  if ((label|0) == 9) {
   label = 0;
   _oggpack_write($1,$20,4);
  }
  $28 = HEAP32[$19>>2]|0;
  $29 = ($28|0)==(0);
  if ($29) {
   $$0$lcssa$i = 0;
  } else {
   $$067$i = $28;$$08$i = 0;
   while(1) {
    $30 = $$067$i & 1;
    $31 = (($30) + ($$08$i))|0;
    $32 = $$067$i >>> 1;
    $33 = ($32|0)==(0);
    if ($33) {
     $$0$lcssa$i = $31;
     break;
    } else {
     $$067$i = $32;$$08$i = $31;
    }
   }
  }
  $16 = (($$0$lcssa$i) + ($$039))|0;
  $34 = (($$03638) + 1)|0;
  $35 = HEAP32[$8>>2]|0;
  $36 = ($34|0)<($35|0);
  if ($36) {
   $$03638 = $34;$$039 = $16;
  } else {
   break;
  }
 }
 $17 = ($16|0)>(0);
 if (!($17)) {
  return;
 }
 $18 = ((($0)) + 280|0);
 $$137 = 0;
 while(1) {
  $37 = (($18) + ($$137<<2)|0);
  $38 = HEAP32[$37>>2]|0;
  _oggpack_write($1,$38,8);
  $39 = (($$137) + 1)|0;
  $exitcond = ($39|0)==($16|0);
  if ($exitcond) {
   break;
  } else {
   $$137 = $39;
  }
 }
 return;
}
function _res1_class($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$094$us$i$us = 0, $$0103$us$i$us = 0, $$01722 = 0, $$018 = 0, $$023 = 0, $$094102$us$i$us = 0, $$095142$i = 0, $$097112$i = 0, $$097112$us$i = 0, $$097112$us$i$us = 0, $$097112$us115$i = 0, $$098101$us$i$us = 0, $$1 = 0, $$196136$i = 0, $$199$lcssa$us$i$ph$us = 0, $$199$lcssa$us120$i = 0, $$199105$us$i$us = 0, $$199105$us118$i = 0, $$pre = 0, $$pre6 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0.0, $52 = 0.0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond147$i = 0, $exitcond148$i$us = 0, $exitcond149$i = 0, $exitcond149$i$us = 0, $exitcond150$i = 0, $exitcond151$i = 0, $ispos$us$i$us = 0, $neg$us$i$us = 0, $or$cond$us$i$us = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if ($5) {
  $$01722 = 0;$$023 = 0;
 } else {
  $$018 = 0;
  return ($$018|0);
 }
 while(1) {
  $6 = (($3) + ($$01722<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0);
  if ($8) {
   $$1 = $$023;
  } else {
   $9 = (($2) + ($$023<<2)|0);
   $10 = (($$023) + 1)|0;
   $11 = (($2) + ($$01722<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   HEAP32[$9>>2] = $12;
   $$1 = $10;
  }
  $13 = (($$01722) + 1)|0;
  $exitcond = ($13|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$01722 = $13;$$023 = $$1;
  }
 }
 $14 = ($$1|0)==(0);
 if ($14) {
  $$018 = 0;
  return ($$018|0);
 }
 $15 = HEAP32[$1>>2]|0;
 $16 = ((($15)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($15)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ((($15)) + 4|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = HEAP32[$15>>2]|0;
 $23 = (($21) - ($22))|0;
 $24 = (($23|0) / ($17|0))&-1;
 $25 = $$1 << 2;
 $26 = (($25) + 7)|0;
 $27 = $26 & -8;
 $28 = ((($0)) + 72|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = (($29) + ($27))|0;
 $31 = ((($0)) + 76|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($30|0)>($32|0);
 $34 = ((($0)) + 68|0);
 $35 = HEAP32[$34>>2]|0;
 if ($33) {
  $36 = ($35|0)==(0|0);
  if (!($36)) {
   $37 = $35;
   $38 = (_malloc(8)|0);
   $39 = ((($0)) + 80|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = (($40) + ($29))|0;
   HEAP32[$39>>2] = $41;
   $42 = ((($0)) + 84|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ((($38)) + 4|0);
   HEAP32[$44>>2] = $43;
   HEAP32[$38>>2] = $37;
   HEAP32[$42>>2] = $38;
  }
  HEAP32[$31>>2] = $27;
  $45 = (_malloc($27)|0);
  HEAP32[$34>>2] = $45;
  HEAP32[$28>>2] = 0;
  $47 = $45;$48 = 0;
 } else {
  $47 = $35;$48 = $29;
 }
 $46 = (($47) + ($48)|0);
 $49 = (($48) + ($27))|0;
 HEAP32[$28>>2] = $49;
 $50 = (+($17|0));
 $51 = 100.0 / $50;
 $52 = $51;
 $53 = ($$1|0)>(0);
 L18: do {
  if ($53) {
   $54 = $24 << 2;
   $55 = (($54) + 7)|0;
   $56 = $55 & -8;
   $57 = ((($0)) + 80|0);
   $58 = ((($0)) + 84|0);
   $$095142$i = 0;$64 = $49;$67 = $47;
   while(1) {
    $63 = (($64) + ($56))|0;
    $65 = HEAP32[$31>>2]|0;
    $66 = ($63|0)>($65|0);
    if ($66) {
     $68 = ($67|0)==(0|0);
     if (!($68)) {
      $69 = $67;
      $70 = (_malloc(8)|0);
      $71 = HEAP32[$57>>2]|0;
      $72 = (($71) + ($64))|0;
      HEAP32[$57>>2] = $72;
      $73 = HEAP32[$58>>2]|0;
      $74 = ((($70)) + 4|0);
      HEAP32[$74>>2] = $73;
      HEAP32[$70>>2] = $69;
      HEAP32[$58>>2] = $70;
     }
     HEAP32[$31>>2] = $56;
     $75 = (_malloc($56)|0);
     HEAP32[$34>>2] = $75;
     HEAP32[$28>>2] = 0;
     $77 = $75;$78 = 0;
    } else {
     $77 = $67;$78 = $64;
    }
    $76 = (($77) + ($78)|0);
    $79 = (($78) + ($56))|0;
    HEAP32[$28>>2] = $79;
    $80 = (($46) + ($$095142$i<<2)|0);
    HEAP32[$80>>2] = $76;
    _memset(($76|0),0,($54|0))|0;
    $81 = (($$095142$i) + 1)|0;
    $exitcond151$i = ($81|0)==($$1|0);
    if ($exitcond151$i) {
     break L18;
    }
    $$pre = HEAP32[$28>>2]|0;
    $$pre6 = HEAP32[$34>>2]|0;
    $$095142$i = $81;$64 = $$pre;$67 = $$pre6;
   }
  }
 } while(0);
 $59 = ($24|0)>(0);
 if ($59) {
  $60 = ($17|0)>(0);
  $61 = (($19) + -1)|0;
  $62 = ($19|0)>(1);
  $$196136$i = 0;
  while(1) {
   $82 = Math_imul($$196136$i, $17)|0;
   $83 = HEAP32[$15>>2]|0;
   $84 = (($83) + ($82))|0;
   L34: do {
    if ($53) {
     if (!($60)) {
      if ($62) {
       $$097112$us115$i = 0;
      } else {
       $$097112$i = 0;
       while(1) {
        $126 = (($46) + ($$097112$i<<2)|0);
        $127 = HEAP32[$126>>2]|0;
        $128 = (($127) + ($$196136$i<<2)|0);
        HEAP32[$128>>2] = 0;
        $129 = (($$097112$i) + 1)|0;
        $exitcond$i = ($129|0)==($$1|0);
        if ($exitcond$i) {
         break L34;
        } else {
         $$097112$i = $129;
        }
       }
      }
      while(1) {
       $$199105$us118$i = 0;
       while(1) {
        $114 = (((($15)) + 2328|0) + ($$199105$us118$i<<2)|0);
        $115 = HEAP32[$114>>2]|0;
        $116 = ($115|0)<(0);
        if (!($116)) {
         $117 = (((($15)) + 2584|0) + ($$199105$us118$i<<2)|0);
         $118 = HEAP32[$117>>2]|0;
         $119 = ($118|0)==(0);
         if (!($119)) {
          $$199$lcssa$us120$i = $$199105$us118$i;
          break;
         }
        }
        $124 = (($$199105$us118$i) + 1)|0;
        $125 = ($124|0)<($61|0);
        if ($125) {
         $$199105$us118$i = $124;
        } else {
         $$199$lcssa$us120$i = $124;
         break;
        }
       }
       $120 = (($46) + ($$097112$us115$i<<2)|0);
       $121 = HEAP32[$120>>2]|0;
       $122 = (($121) + ($$196136$i<<2)|0);
       HEAP32[$122>>2] = $$199$lcssa$us120$i;
       $123 = (($$097112$us115$i) + 1)|0;
       $exitcond147$i = ($123|0)==($$1|0);
       if ($exitcond147$i) {
        break L34;
       } else {
        $$097112$us115$i = $123;
       }
      }
     }
     if ($62) {
      $$097112$us$i$us = 0;
     } else {
      $$097112$us$i = 0;
      while(1) {
       $110 = (($46) + ($$097112$us$i<<2)|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = (($111) + ($$196136$i<<2)|0);
       HEAP32[$112>>2] = 0;
       $113 = (($$097112$us$i) + 1)|0;
       $exitcond149$i = ($113|0)==($$1|0);
       if ($exitcond149$i) {
        break L34;
       } else {
        $$097112$us$i = $113;
       }
      }
     }
     while(1) {
      $85 = (($2) + ($$097112$us$i$us<<2)|0);
      $86 = HEAP32[$85>>2]|0;
      $$0103$us$i$us = 0;$$094102$us$i$us = 0;$$098101$us$i$us = 0;
      while(1) {
       $87 = (($84) + ($$098101$us$i$us))|0;
       $88 = (($86) + ($87<<2)|0);
       $89 = HEAP32[$88>>2]|0;
       $ispos$us$i$us = ($89|0)>(-1);
       $neg$us$i$us = (0 - ($89))|0;
       $90 = $ispos$us$i$us ? $89 : $neg$us$i$us;
       $91 = ($90|0)>($$094102$us$i$us|0);
       $$$094$us$i$us = $91 ? $90 : $$094102$us$i$us;
       $92 = (($90) + ($$0103$us$i$us))|0;
       $93 = (($$098101$us$i$us) + 1)|0;
       $exitcond148$i$us = ($93|0)==($17|0);
       if ($exitcond148$i$us) {
        break;
       } else {
        $$0103$us$i$us = $92;$$094102$us$i$us = $$$094$us$i$us;$$098101$us$i$us = $93;
       }
      }
      $94 = (+($92|0));
      $95 = $94 * $52;
      $96 = (~~(($95)));
      $$199105$us$i$us = 0;
      while(1) {
       $97 = (((($15)) + 2328|0) + ($$199105$us$i$us<<2)|0);
       $98 = HEAP32[$97>>2]|0;
       $99 = ($$$094$us$i$us|0)>($98|0);
       if (!($99)) {
        $100 = (((($15)) + 2584|0) + ($$199105$us$i$us<<2)|0);
        $101 = HEAP32[$100>>2]|0;
        $102 = ($101|0)<(0);
        $103 = ($96|0)<($101|0);
        $or$cond$us$i$us = $102 | $103;
        if ($or$cond$us$i$us) {
         $$199$lcssa$us$i$ph$us = $$199105$us$i$us;
         break;
        }
       }
       $104 = (($$199105$us$i$us) + 1)|0;
       $105 = ($104|0)<($61|0);
       if ($105) {
        $$199105$us$i$us = $104;
       } else {
        $$199$lcssa$us$i$ph$us = $104;
        break;
       }
      }
      $106 = (($46) + ($$097112$us$i$us<<2)|0);
      $107 = HEAP32[$106>>2]|0;
      $108 = (($107) + ($$196136$i<<2)|0);
      HEAP32[$108>>2] = $$199$lcssa$us$i$ph$us;
      $109 = (($$097112$us$i$us) + 1)|0;
      $exitcond149$i$us = ($109|0)==($$1|0);
      if ($exitcond149$i$us) {
       break;
      } else {
       $$097112$us$i$us = $109;
      }
     }
    }
   } while(0);
   $130 = (($$196136$i) + 1)|0;
   $exitcond150$i = ($130|0)==($24|0);
   if ($exitcond150$i) {
    break;
   } else {
    $$196136$i = $130;
   }
  }
 }
 $131 = ((($1)) + 40|0);
 $132 = HEAP32[$131>>2]|0;
 $133 = (($132) + 1)|0;
 HEAP32[$131>>2] = $133;
 $$018 = $46;
 return ($$018|0);
}
function _res1_forward($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$02022 = 0, $$023 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = ($5|0)>(0);
 if ($8) {
  $$02022 = 0;$$023 = 0;
 } else {
  return 0;
 }
 while(1) {
  $9 = (($4) + ($$02022<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $$1 = $$023;
  } else {
   $12 = (($3) + ($$023<<2)|0);
   $13 = (($$023) + 1)|0;
   $14 = (($3) + ($$02022<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$12>>2] = $15;
   $$1 = $13;
  }
  $16 = (($$02022) + 1)|0;
  $exitcond = ($16|0)==($5|0);
  if ($exitcond) {
   break;
  } else {
   $$02022 = $16;$$023 = $$1;
  }
 }
 $17 = ($$1|0)==(0);
 if ($17) {
  return 0;
 }
 __01forward($0,$2,$3,$$1,$6);
 return 0;
}
function _res1_inverse($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$01719 = 0, $$020 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if ($5) {
  $$01719 = 0;$$020 = 0;
 } else {
  return 0;
 }
 while(1) {
  $6 = (($3) + ($$01719<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0);
  if ($8) {
   $$1 = $$020;
  } else {
   $9 = (($2) + ($$020<<2)|0);
   $10 = (($$020) + 1)|0;
   $11 = (($2) + ($$01719<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   HEAP32[$9>>2] = $12;
   $$1 = $10;
  }
  $13 = (($$01719) + 1)|0;
  $exitcond = ($13|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$01719 = $13;$$020 = $$1;
  }
 }
 $14 = ($$1|0)==(0);
 if ($14) {
  return 0;
 }
 __01inverse($0,$1,$2,$$1,29);
 return 0;
}
function __01forward($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i$i = 0, $$0$i = 0, $$0$i1 = 0, $$0$i3 = 0, $$010813 = 0, $$010813$us = 0, $$011012$us = 0, $$011211$us = 0, $$011427 = 0, $$0128151$us$i$i = 0, $$0129174$i$i = 0, $$0130160$i$i = 0, $$0130160$us$i$i = 0, $$0133150$us$i$i = 0, $$0135173$i$i = 0, $$0137172$i$i = 0, $$0149$i$i = 0, $$023$lcssa$i = 0, $$02332$i = 0, $$025 = 0;
 var $$033$i = 0, $$1$lcssa = 0, $$110915 = 0, $$111120 = 0, $$1113$us = 0, $$1134153$i$i = 0, $$1134153$us$i$i = 0, $$1136168$i$i = 0, $$1138167$i$i = 0, $$1169$i$i = 0, $$121 = 0, $$141$i$i = 0, $$2132$i$i = 0, $$2132$us$i$i = 0, $$2139$i$i = 0, $$2161$i$i = 0, $$2161$us$i$i = 0, $$3140$lcssa$i$i = 0, $$3140159$i$i = 0, $$3140159$us$i$i = 0;
 var $$3148$i$i = 0, $$5$i$i = 0, $$5$us$i$i = 0, $$6$i$i = 0, $$lcssa$i$i = 0, $$lcssa$us$i$i = 0, $$lcssa147$i$i = 0, $$lcssa147$us$i$i = 0, $$not = 0, $$not30 = 0, $$pre = 0, $$pre$i = 0, $$pre45 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond187$i$i = 0, $exitcond188$i$i = 0, $exitcond189$i$i = 0;
 var $exitcond42 = 0, $exitcond43 = 0, $exitcond44 = 0, $exitcond44$i = 0, $exitcond45$i = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond$us$i$i = 0, $or$cond177$i$i = 0, $or$cond19 = 0, $scevgep$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1088|0);
 $5 = sp + 1056|0;
 $6 = sp + 1024|0;
 $7 = sp + 512|0;
 $8 = sp;
 $9 = HEAP32[$1>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($9)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($1)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($9)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = HEAP32[$9>>2]|0;
 $20 = (($18) - ($19))|0;
 $21 = (($20|0) / ($11|0))&-1;
 _memset(($7|0),0,512)|0;
 _memset(($8|0),0,512)|0;
 $22 = ((($1)) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)>(0);
 if (!($24)) {
  STACKTOP = sp;return;
 }
 $25 = ($21|0)>(0);
 $26 = ($16|0)>(1);
 $27 = ((($1)) + 36|0);
 $28 = ($16|0)>(0);
 $29 = ($3|0)>(0);
 $30 = ((($1)) + 20|0);
 $31 = ((($1)) + 32|0);
 $$not30 = ($3|0)<(1);
 $$011427 = 0;$284 = $23;
 while(1) {
  if ($25) {
   $32 = ($$011427|0)==(0);
   $33 = 1 << $$011427;
   $$not = $32 ^ 1;
   $brmerge = $$not30 | $$not;
   $$025 = 0;
   while(1) {
    L10: do {
     if (!($brmerge)) {
      if ($26) {
       $$010813$us = 0;
      } else {
       $$010813 = 0;
       while(1) {
        $75 = (($4) + ($$010813<<2)|0);
        $76 = HEAP32[$75>>2]|0;
        $77 = (($76) + ($$025<<2)|0);
        $78 = HEAP32[$77>>2]|0;
        $79 = HEAP32[$14>>2]|0;
        $80 = ((($79)) + 4|0);
        $81 = HEAP32[$80>>2]|0;
        $82 = ($78|0)<($81|0);
        if ($82) {
         $83 = ($78|0)<(0);
         if ($83) {
          $$0$i1 = 0;
         } else {
          $84 = ((($79)) + 12|0);
          $85 = HEAP32[$84>>2]|0;
          $86 = ((($85)) + 4|0);
          $87 = HEAP32[$86>>2]|0;
          $88 = ($87|0)>($78|0);
          if ($88) {
           $89 = ((($79)) + 20|0);
           $90 = HEAP32[$89>>2]|0;
           $91 = (($90) + ($78<<2)|0);
           $92 = HEAP32[$91>>2]|0;
           $93 = ((($85)) + 8|0);
           $94 = HEAP32[$93>>2]|0;
           $95 = (($94) + ($78)|0);
           $96 = HEAP8[$95>>0]|0;
           $97 = $96 << 24 >> 24;
           _oggpack_write($0,$92,$97);
           $98 = HEAP32[$84>>2]|0;
           $99 = ((($98)) + 8|0);
           $100 = HEAP32[$99>>2]|0;
           $101 = (($100) + ($78)|0);
           $102 = HEAP8[$101>>0]|0;
           $103 = $102 << 24 >> 24;
           $$0$i1 = $103;
          } else {
           $$0$i1 = 0;
          }
         }
         $104 = HEAP32[$27>>2]|0;
         $105 = (($104) + ($$0$i1))|0;
         HEAP32[$27>>2] = $105;
        }
        $106 = (($$010813) + 1)|0;
        $exitcond = ($106|0)==($3|0);
        if ($exitcond) {
         break L10;
        } else {
         $$010813 = $106;
        }
       }
      }
      while(1) {
       $35 = (($4) + ($$010813$us<<2)|0);
       $36 = HEAP32[$35>>2]|0;
       $37 = (($36) + ($$025<<2)|0);
       $38 = HEAP32[$37>>2]|0;
       $$011012$us = 1;$$011211$us = $38;
       while(1) {
        $64 = Math_imul($$011211$us, $13)|0;
        $65 = (($$011012$us) + ($$025))|0;
        $66 = ($65|0)<($21|0);
        if ($66) {
         $67 = (($36) + ($65<<2)|0);
         $68 = HEAP32[$67>>2]|0;
         $69 = (($68) + ($64))|0;
         $$1113$us = $69;
        } else {
         $$1113$us = $64;
        }
        $70 = (($$011012$us) + 1)|0;
        $exitcond42 = ($70|0)==($16|0);
        if ($exitcond42) {
         break;
        } else {
         $$011012$us = $70;$$011211$us = $$1113$us;
        }
       }
       $41 = HEAP32[$14>>2]|0;
       $71 = ((($41)) + 4|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ($$1113$us|0)<($72|0);
       if ($73) {
        $39 = ($$1113$us|0)<(0);
        if ($39) {
         $$0$i = 0;
        } else {
         $40 = ((($41)) + 12|0);
         $42 = HEAP32[$40>>2]|0;
         $43 = ((($42)) + 4|0);
         $44 = HEAP32[$43>>2]|0;
         $45 = ($44|0)>($$1113$us|0);
         if ($45) {
          $46 = ((($41)) + 20|0);
          $47 = HEAP32[$46>>2]|0;
          $48 = (($47) + ($$1113$us<<2)|0);
          $49 = HEAP32[$48>>2]|0;
          $50 = ((($42)) + 8|0);
          $51 = HEAP32[$50>>2]|0;
          $52 = (($51) + ($$1113$us)|0);
          $53 = HEAP8[$52>>0]|0;
          $54 = $53 << 24 >> 24;
          _oggpack_write($0,$49,$54);
          $55 = HEAP32[$40>>2]|0;
          $56 = ((($55)) + 8|0);
          $57 = HEAP32[$56>>2]|0;
          $58 = (($57) + ($$1113$us)|0);
          $59 = HEAP8[$58>>0]|0;
          $60 = $59 << 24 >> 24;
          $$0$i = $60;
         } else {
          $$0$i = 0;
         }
        }
        $61 = HEAP32[$27>>2]|0;
        $62 = (($61) + ($$0$i))|0;
        HEAP32[$27>>2] = $62;
       }
       $63 = (($$010813$us) + 1)|0;
       $exitcond43 = ($63|0)==($3|0);
       if ($exitcond43) {
        break;
       } else {
        $$010813$us = $63;
       }
      }
     }
    } while(0);
    $74 = ($$025|0)<($21|0);
    $or$cond19 = $28 & $74;
    if ($or$cond19) {
     $$111120 = 0;$$121 = $$025;
     while(1) {
      $107 = Math_imul($$121, $11)|0;
      $108 = HEAP32[$9>>2]|0;
      $109 = (($108) + ($107))|0;
      if ($29) {
       $$110915 = 0;
       while(1) {
        $110 = (($4) + ($$110915<<2)|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = (($111) + ($$121<<2)|0);
        $113 = HEAP32[$112>>2]|0;
        $114 = (($8) + ($113<<2)|0);
        if ($32) {
         $115 = HEAP32[$114>>2]|0;
         $116 = (($115) + ($11))|0;
         HEAP32[$114>>2] = $116;
        }
        $117 = (((($9)) + 24|0) + ($113<<2)|0);
        $118 = HEAP32[$117>>2]|0;
        $119 = $118 & $33;
        $120 = ($119|0)==(0);
        if (!($120)) {
         $121 = HEAP32[$30>>2]|0;
         $122 = (($121) + ($113<<2)|0);
         $123 = HEAP32[$122>>2]|0;
         $124 = (($123) + ($$011427<<2)|0);
         $125 = HEAP32[$124>>2]|0;
         $126 = ($125|0)==(0|0);
         if (!($126)) {
          $127 = (($2) + ($$110915<<2)|0);
          $128 = HEAP32[$127>>2]|0;
          $129 = (($128) + ($109<<2)|0);
          $130 = HEAP32[$125>>2]|0;
          $131 = (($11|0) / ($130|0))&-1;
          $132 = ($131|0)>(0);
          if ($132) {
           $133 = ((($125)) + 48|0);
           $134 = ((($125)) + 52|0);
           $135 = ((($125)) + 44|0);
           $136 = ((($125)) + 12|0);
           $137 = ((($125)) + 4|0);
           $138 = ((($125)) + 20|0);
           $$02332$i = 0;$$033$i = 0;$145 = $130;
           while(1) {
            $139 = Math_imul($$033$i, $130)|0;
            $scevgep$i = (($129) + ($139<<2)|0);
            $140 = HEAP32[$133>>2]|0;
            $141 = HEAP32[$134>>2]|0;
            $142 = HEAP32[$135>>2]|0;
            $143 = $142 >> 1;
            ;HEAP32[$5>>2]=0|0;HEAP32[$5+4>>2]=0|0;HEAP32[$5+8>>2]=0|0;HEAP32[$5+12>>2]=0|0;HEAP32[$5+16>>2]=0|0;HEAP32[$5+20>>2]=0|0;HEAP32[$5+24>>2]=0|0;HEAP32[$5+28>>2]=0|0;
            $144 = ($141|0)==(1);
            $146 = ($145|0)>(0);
            do {
             if ($144) {
              if (!($146)) {
               $$2139$i$i = 0;
               break;
              }
              $150 = (($142) + -1)|0;
              $151 = $145 << 2;
              _memcpy(($5|0),($scevgep$i|0),($151|0))|0;
              $$1136168$i$i = $145;$$1138167$i$i = 0;$$1169$i$i = 0;
              while(1) {
               $173 = (($$1136168$i$i) + -1)|0;
               $174 = (($scevgep$i) + ($173<<2)|0);
               $175 = HEAP32[$174>>2]|0;
               $176 = (($175) - ($140))|0;
               $177 = ($176|0)<($143|0);
               if ($177) {
                $178 = (($143) - ($176))|0;
                $179 = $178 << 1;
                $180 = (($179) + -1)|0;
                $184 = $180;
               } else {
                $181 = (($176) - ($143))|0;
                $182 = $181 << 1;
                $184 = $182;
               }
               $183 = Math_imul($$1138167$i$i, $142)|0;
               $185 = ($184|0)<(0);
               $186 = ($184|0)>=($142|0);
               $187 = $186 ? $150 : $184;
               $$141$i$i = $185 ? 0 : $187;
               $188 = (($$141$i$i) + ($183))|0;
               $189 = (($$1169$i$i) + 1)|0;
               $exitcond188$i$i = ($189|0)==($145|0);
               if ($exitcond188$i$i) {
                $$2139$i$i = $188;
                break;
               } else {
                $$1136168$i$i = $173;$$1138167$i$i = $188;$$1169$i$i = $189;
               }
              }
             } else {
              if (!($146)) {
               $$2139$i$i = 0;
               break;
              }
              $147 = $141 >> 1;
              $148 = (($147) - ($140))|0;
              $149 = (($142) + -1)|0;
              $$0129174$i$i = 0;$$0135173$i$i = $145;$$0137172$i$i = 0;
              while(1) {
               $152 = (($$0135173$i$i) + -1)|0;
               $153 = (($scevgep$i) + ($152<<2)|0);
               $154 = HEAP32[$153>>2]|0;
               $155 = (($148) + ($154))|0;
               $156 = (($155|0) / ($141|0))&-1;
               $157 = ($156|0)<($143|0);
               if ($157) {
                $158 = (($143) - ($156))|0;
                $159 = $158 << 1;
                $160 = (($159) + -1)|0;
                $164 = $160;
               } else {
                $161 = (($156) - ($143))|0;
                $162 = $161 << 1;
                $164 = $162;
               }
               $163 = Math_imul($$0137172$i$i, $142)|0;
               $165 = ($164|0)<(0);
               $166 = ($164|0)>=($142|0);
               $167 = $166 ? $149 : $164;
               $$$i$i = $165 ? 0 : $167;
               $168 = (($$$i$i) + ($163))|0;
               $169 = Math_imul($156, $141)|0;
               $170 = (($169) + ($140))|0;
               $171 = (($5) + ($152<<2)|0);
               HEAP32[$171>>2] = $170;
               $172 = (($$0129174$i$i) + 1)|0;
               $exitcond189$i$i = ($172|0)==($145|0);
               if ($exitcond189$i$i) {
                $$2139$i$i = $168;
                break;
               } else {
                $$0129174$i$i = $172;$$0135173$i$i = $152;$$0137172$i$i = $168;
               }
              }
             }
            } while(0);
            $190 = HEAP32[$136>>2]|0;
            $191 = ((($190)) + 8|0);
            $192 = HEAP32[$191>>2]|0;
            $193 = (($192) + ($$2139$i$i)|0);
            $194 = HEAP8[$193>>0]|0;
            $195 = ($194<<24>>24)<(1);
            if ($195) {
             ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;HEAP32[$6+16>>2]=0|0;HEAP32[$6+20>>2]=0|0;HEAP32[$6+24>>2]=0|0;HEAP32[$6+28>>2]=0|0;
             $196 = (($142) + -1)|0;
             $197 = Math_imul($196, $141)|0;
             $198 = (($197) + ($140))|0;
             $199 = HEAP32[$137>>2]|0;
             $200 = ($199|0)>(0);
             L74: do {
              if ($200) {
               if ($146) {
                $$0130160$us$i$i = -1;$$2161$us$i$i = 0;$$3140159$us$i$i = $$2139$i$i;
               } else {
                $$0130160$i$i = -1;$$2161$i$i = 0;$$3140159$i$i = $$2139$i$i;
                while(1) {
                 $226 = (($192) + ($$2161$i$i)|0);
                 $227 = HEAP8[$226>>0]|0;
                 $228 = ($227<<24>>24)>(0);
                 do {
                  if ($228) {
                   $229 = ($$0130160$i$i|0)==(-1);
                   $230 = ($$0130160$i$i|0)>(0);
                   $or$cond$i$i = $229 | $230;
                   if (!($or$cond$i$i)) {
                    $$2132$i$i = $$0130160$i$i;$$5$i$i = $$3140159$i$i;
                    break;
                   }
                   ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[$6+20>>2]|0;HEAP32[$5+24>>2]=HEAP32[$6+24>>2]|0;HEAP32[$5+28>>2]=HEAP32[$6+28>>2]|0;
                   $$2132$i$i = 0;$$5$i$i = $$2161$i$i;
                  } else {
                   $$2132$i$i = $$0130160$i$i;$$5$i$i = $$3140159$i$i;
                  }
                 } while(0);
                 $231 = HEAP32[$6>>2]|0;
                 $232 = ($231|0)<($198|0);
                 if ($232) {
                  $$lcssa$i$i = $231;$$lcssa147$i$i = $6;
                 } else {
                  $$1134153$i$i = 0;$234 = $6;
                  while(1) {
                   $233 = (($$1134153$i$i) + 1)|0;
                   HEAP32[$234>>2] = 0;
                   $235 = (($6) + ($233<<2)|0);
                   $236 = HEAP32[$235>>2]|0;
                   $237 = ($236|0)<($198|0);
                   if ($237) {
                    $$lcssa$i$i = $236;$$lcssa147$i$i = $235;
                    break;
                   } else {
                    $$1134153$i$i = $233;$234 = $235;
                   }
                  }
                 }
                 $238 = ($$lcssa$i$i|0)>(-1);
                 $239 = (($$lcssa$i$i) + ($141))|0;
                 if ($238) {
                  HEAP32[$$lcssa147$i$i>>2] = $239;
                  $241 = $239;
                 } else {
                  $241 = $$lcssa$i$i;
                 }
                 $240 = (0 - ($241))|0;
                 HEAP32[$$lcssa147$i$i>>2] = $240;
                 $242 = (($$2161$i$i) + 1)|0;
                 $exitcond$i = ($242|0)==($199|0);
                 if ($exitcond$i) {
                  $$3140$lcssa$i$i = $$5$i$i;
                  break L74;
                 } else {
                  $$0130160$i$i = $$2132$i$i;$$2161$i$i = $242;$$3140159$i$i = $$5$i$i;
                 }
                }
               }
               while(1) {
                $201 = (($192) + ($$2161$us$i$i)|0);
                $202 = HEAP8[$201>>0]|0;
                $203 = ($202<<24>>24)>(0);
                do {
                 if ($203) {
                  $$0128151$us$i$i = 0;$$0133150$us$i$i = 0;
                  while(1) {
                   $216 = (($6) + ($$0133150$us$i$i<<2)|0);
                   $217 = HEAP32[$216>>2]|0;
                   $218 = (($scevgep$i) + ($$0133150$us$i$i<<2)|0);
                   $219 = HEAP32[$218>>2]|0;
                   $220 = (($217) - ($219))|0;
                   $221 = Math_imul($220, $220)|0;
                   $222 = (($221) + ($$0128151$us$i$i))|0;
                   $223 = (($$0133150$us$i$i) + 1)|0;
                   $exitcond187$i$i = ($223|0)==($145|0);
                   if ($exitcond187$i$i) {
                    break;
                   } else {
                    $$0128151$us$i$i = $222;$$0133150$us$i$i = $223;
                   }
                  }
                  $224 = ($$0130160$us$i$i|0)==(-1);
                  $225 = ($222|0)<($$0130160$us$i$i|0);
                  $or$cond$us$i$i = $224 | $225;
                  if (!($or$cond$us$i$i)) {
                   $$2132$us$i$i = $$0130160$us$i$i;$$5$us$i$i = $$3140159$us$i$i;
                   break;
                  }
                  ;HEAP32[$5>>2]=HEAP32[$6>>2]|0;HEAP32[$5+4>>2]=HEAP32[$6+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[$6+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[$6+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[$6+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[$6+20>>2]|0;HEAP32[$5+24>>2]=HEAP32[$6+24>>2]|0;HEAP32[$5+28>>2]=HEAP32[$6+28>>2]|0;
                  $$2132$us$i$i = $222;$$5$us$i$i = $$2161$us$i$i;
                 } else {
                  $$2132$us$i$i = $$0130160$us$i$i;$$5$us$i$i = $$3140159$us$i$i;
                 }
                } while(0);
                $204 = HEAP32[$6>>2]|0;
                $205 = ($204|0)<($198|0);
                if ($205) {
                 $$lcssa$us$i$i = $204;$$lcssa147$us$i$i = $6;
                } else {
                 $$1134153$us$i$i = 0;$207 = $6;
                 while(1) {
                  $206 = (($$1134153$us$i$i) + 1)|0;
                  HEAP32[$207>>2] = 0;
                  $208 = (($6) + ($206<<2)|0);
                  $209 = HEAP32[$208>>2]|0;
                  $210 = ($209|0)<($198|0);
                  if ($210) {
                   $$lcssa$us$i$i = $209;$$lcssa147$us$i$i = $208;
                   break;
                  } else {
                   $$1134153$us$i$i = $206;$207 = $208;
                  }
                 }
                }
                $211 = ($$lcssa$us$i$i|0)>(-1);
                $212 = (($$lcssa$us$i$i) + ($141))|0;
                if ($211) {
                 HEAP32[$$lcssa147$us$i$i>>2] = $212;
                 $214 = $212;
                } else {
                 $214 = $$lcssa$us$i$i;
                }
                $213 = (0 - ($214))|0;
                HEAP32[$$lcssa147$us$i$i>>2] = $213;
                $215 = (($$2161$us$i$i) + 1)|0;
                $exitcond44$i = ($215|0)==($199|0);
                if ($exitcond44$i) {
                 $$3140$lcssa$i$i = $$5$us$i$i;
                 break;
                } else {
                 $$0130160$us$i$i = $$2132$us$i$i;$$2161$us$i$i = $215;$$3140159$us$i$i = $$5$us$i$i;
                }
               }
              } else {
               $$3140$lcssa$i$i = $$2139$i$i;
              }
             } while(0);
             $$6$i$i = $$3140$lcssa$i$i;
            } else {
             $$6$i$i = $$2139$i$i;
            }
            $243 = ($$6$i$i|0)>(-1);
            $or$cond177$i$i = $146 & $243;
            if ($or$cond177$i$i) {
             $$0149$i$i = $scevgep$i;$$3148$i$i = 0;
             while(1) {
              $244 = (($5) + ($$3148$i$i<<2)|0);
              $245 = HEAP32[$244>>2]|0;
              $246 = ((($$0149$i$i)) + 4|0);
              $247 = HEAP32[$$0149$i$i>>2]|0;
              $248 = (($247) - ($245))|0;
              HEAP32[$$0149$i$i>>2] = $248;
              $249 = (($$3148$i$i) + 1)|0;
              $exitcond$i$i = ($249|0)==($145|0);
              if ($exitcond$i$i) {
               break;
              } else {
               $$0149$i$i = $246;$$3148$i$i = $249;
              }
             }
            }
            $250 = ($$6$i$i|0)<(0);
            do {
             if ($250) {
              $$0$i3 = 0;
             } else {
              $251 = ((($190)) + 4|0);
              $252 = HEAP32[$251>>2]|0;
              $253 = ($252|0)>($$6$i$i|0);
              if (!($253)) {
               $$0$i3 = 0;
               break;
              }
              $254 = HEAP32[$138>>2]|0;
              $255 = (($254) + ($$6$i$i<<2)|0);
              $256 = HEAP32[$255>>2]|0;
              $257 = (($192) + ($$6$i$i)|0);
              $258 = HEAP8[$257>>0]|0;
              $259 = $258 << 24 >> 24;
              _oggpack_write($0,$256,$259);
              $260 = HEAP32[$136>>2]|0;
              $261 = ((($260)) + 8|0);
              $262 = HEAP32[$261>>2]|0;
              $263 = (($262) + ($$6$i$i)|0);
              $264 = HEAP8[$263>>0]|0;
              $265 = $264 << 24 >> 24;
              $$0$i3 = $265;
             }
            } while(0);
            $266 = (($$0$i3) + ($$02332$i))|0;
            $267 = (($$033$i) + 1)|0;
            $exitcond45$i = ($267|0)==($131|0);
            if ($exitcond45$i) {
             break;
            }
            $$pre$i = HEAP32[$125>>2]|0;
            $$02332$i = $266;$$033$i = $267;$145 = $$pre$i;
           }
           $$pre = HEAP32[$110>>2]|0;
           $$023$lcssa$i = $266;$271 = $$pre;
          } else {
           $$023$lcssa$i = 0;$271 = $111;
          }
          $268 = HEAP32[$31>>2]|0;
          $269 = (($268) + ($$023$lcssa$i))|0;
          HEAP32[$31>>2] = $269;
          $270 = (($271) + ($$121<<2)|0);
          $272 = HEAP32[$270>>2]|0;
          $273 = (($7) + ($272<<2)|0);
          $274 = HEAP32[$273>>2]|0;
          $275 = (($274) + ($$023$lcssa$i))|0;
          HEAP32[$273>>2] = $275;
         }
        }
        $276 = (($$110915) + 1)|0;
        $exitcond44 = ($276|0)==($3|0);
        if ($exitcond44) {
         break;
        } else {
         $$110915 = $276;
        }
       }
      }
      $277 = (($$111120) + 1)|0;
      $278 = (($$121) + 1)|0;
      $279 = ($277|0)<($16|0);
      $280 = ($278|0)<($21|0);
      $or$cond = $279 & $280;
      if ($or$cond) {
       $$111120 = $277;$$121 = $278;
      } else {
       $$1$lcssa = $278;
       break;
      }
     }
    } else {
     $$1$lcssa = $$025;
    }
    $34 = ($$1$lcssa|0)<($21|0);
    if ($34) {
     $$025 = $$1$lcssa;
    } else {
     break;
    }
   }
   $$pre45 = HEAP32[$22>>2]|0;
   $283 = $$pre45;
  } else {
   $283 = $284;
  }
  $281 = (($$011427) + 1)|0;
  $282 = ($281|0)<($283|0);
  if ($282) {
   $$011427 = $281;$284 = $283;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _res2_class($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$077$us$us$i$us = 0, $$$077$us113$i = 0, $$$1$us$us$i$us = 0, $$0$ = 0, $$01419 = 0, $$015 = 0, $$020 = 0, $$07792$us$us$i$us = 0, $$07792$us108$i = 0, $$079105$i$us = 0, $$079105$us$i = 0, $$079105$us$i$us = 0, $$08091$us$us$i$us = 0, $$08091$us109$i = 0, $$08288$us$us$i$us = 0, $$083104$us$i = 0, $$083104$us$i$us = 0, $$093$us$us$i$us = 0, $$181$lcssa$i$ph$us = 0, $$181$lcssa$us$i = 0;
 var $$181$lcssa$us$i$us = 0, $$18198$i$us = 0, $$18198$us$i = 0, $$18198$us$i$us = 0, $$18490$us$us$i$us = 0, $$18490$us110$i = 0, $$189$us$us$i$us = 0, $$pre = 0, $$pre$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i$us = 0, $exitcond131$i = 0, $exitcond131$i$us = 0, $exitcond132$i$us = 0, $ispos$us$us$i$us = 0, $ispos$us111$i = 0, $ispos85$us$us$i$us = 0, $neg$us$us$i$us = 0, $neg$us112$i = 0, $neg86$us$us$i$us = 0;
 var $not$ = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)>(0);
 if ($5) {
  $$01419 = 0;$$020 = 0;
 } else {
  $$015 = 0;
  return ($$015|0);
 }
 while(1) {
  $6 = (($3) + ($$01419<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $not$ = ($7|0)!=(0);
  $8 = $not$&1;
  $$0$ = (($8) + ($$020))|0;
  $9 = (($$01419) + 1)|0;
  $exitcond = ($9|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$01419 = $9;$$020 = $$0$;
  }
 }
 $10 = ($$0$|0)==(0);
 if ($10) {
  $$015 = 0;
  return ($$015|0);
 }
 $11 = HEAP32[$1>>2]|0;
 $12 = ((($11)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($11)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($11)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = HEAP32[$11>>2]|0;
 $19 = (($17) - ($18))|0;
 $20 = (($19|0) / ($13|0))&-1;
 $21 = ((($0)) + 72|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (($22) + 8)|0;
 $24 = ((($0)) + 76|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ($23|0)>($25|0);
 $27 = ((($0)) + 68|0);
 $28 = HEAP32[$27>>2]|0;
 if ($26) {
  $29 = ($28|0)==(0|0);
  if (!($29)) {
   $30 = $28;
   $31 = (_malloc(8)|0);
   $32 = ((($0)) + 80|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = (($33) + ($22))|0;
   HEAP32[$32>>2] = $34;
   $35 = ((($0)) + 84|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ((($31)) + 4|0);
   HEAP32[$37>>2] = $36;
   HEAP32[$31>>2] = $30;
   HEAP32[$35>>2] = $31;
  }
  HEAP32[$24>>2] = 8;
  $38 = (_malloc(8)|0);
  HEAP32[$27>>2] = $38;
  HEAP32[$21>>2] = 0;
  $$pre = HEAP32[$24>>2]|0;
  $40 = $38;$41 = 0;$48 = $$pre;
 } else {
  $40 = $28;$41 = $22;$48 = $25;
 }
 $39 = (($40) + ($41)|0);
 $42 = (($41) + 8)|0;
 HEAP32[$21>>2] = $42;
 $43 = $20 << 2;
 $44 = (($43) + 7)|0;
 $45 = $44 & -8;
 $46 = (($42) + ($45))|0;
 $47 = ($46|0)>($48|0);
 if ($47) {
  $49 = ($40|0)==(0|0);
  if (!($49)) {
   $50 = $40;
   $51 = (_malloc(8)|0);
   $52 = ((($0)) + 80|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = (($53) + ($42))|0;
   HEAP32[$52>>2] = $54;
   $55 = ((($0)) + 84|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($51)) + 4|0);
   HEAP32[$57>>2] = $56;
   HEAP32[$51>>2] = $50;
   HEAP32[$55>>2] = $51;
  }
  HEAP32[$24>>2] = $45;
  $58 = (_malloc($45)|0);
  HEAP32[$27>>2] = $58;
  HEAP32[$21>>2] = 0;
  $60 = $58;$61 = 0;
 } else {
  $60 = $40;$61 = $42;
 }
 $59 = (($60) + ($61)|0);
 $62 = (($61) + ($45))|0;
 HEAP32[$21>>2] = $62;
 HEAP32[$39>>2] = $59;
 _memset(($59|0),0,($43|0))|0;
 $63 = ($20|0)>(0);
 L21: do {
  if ($63) {
   $64 = ($13|0)>(0);
   $65 = (($15) + -1)|0;
   $66 = ($15|0)>(1);
   $67 = HEAP32[$39>>2]|0;
   if (!($64)) {
    if ($66) {
     $$079105$i$us = 0;
    } else {
     _memset(($67|0),0,($43|0))|0;
     break;
    }
    while(1) {
     $$18198$i$us = 0;
     while(1) {
      $68 = (((($11)) + 2328|0) + ($$18198$i$us<<2)|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)<(0);
      if (!($70)) {
       $71 = (((($11)) + 2584|0) + ($$18198$i$us<<2)|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ($72|0)<(0);
       if (!($73)) {
        $$181$lcssa$i$ph$us = $$18198$i$us;
        break;
       }
      }
      $74 = (($$18198$i$us) + 1)|0;
      $75 = ($74|0)<($65|0);
      if ($75) {
       $$18198$i$us = $74;
      } else {
       $$181$lcssa$i$ph$us = $74;
       break;
      }
     }
     $76 = (($67) + ($$079105$i$us<<2)|0);
     HEAP32[$76>>2] = $$181$lcssa$i$ph$us;
     $77 = (($$079105$i$us) + 1)|0;
     $exitcond132$i$us = ($77|0)==($20|0);
     if ($exitcond132$i$us) {
      break L21;
     } else {
      $$079105$i$us = $77;
     }
    }
   }
   $78 = ($4|0)>(1);
   $79 = HEAP32[$11>>2]|0;
   $80 = (($79|0) / ($4|0))&-1;
   $$pre$i = HEAP32[$2>>2]|0;
   if ($78) {
    $$079105$us$i$us = 0;$$083104$us$i$us = $80;
   } else {
    $$079105$us$i = 0;$$083104$us$i = $80;
    while(1) {
     $$07792$us108$i = 0;$$08091$us109$i = 0;$$18490$us110$i = $$083104$us$i;
     while(1) {
      $115 = (($$pre$i) + ($$18490$us110$i<<2)|0);
      $116 = HEAP32[$115>>2]|0;
      $ispos$us111$i = ($116|0)>(-1);
      $neg$us112$i = (0 - ($116))|0;
      $117 = $ispos$us111$i ? $116 : $neg$us112$i;
      $118 = ($117|0)>($$07792$us108$i|0);
      $$$077$us113$i = $118 ? $117 : $$07792$us108$i;
      $119 = (($$18490$us110$i) + 1)|0;
      $120 = (($$08091$us109$i) + ($4))|0;
      $121 = ($120|0)<($13|0);
      if ($121) {
       $$07792$us108$i = $$$077$us113$i;$$08091$us109$i = $120;$$18490$us110$i = $119;
      } else {
       break;
      }
     }
     L42: do {
      if ($66) {
       $$18198$us$i = 0;
       while(1) {
        $105 = (((($11)) + 2328|0) + ($$18198$us$i<<2)|0);
        $106 = HEAP32[$105>>2]|0;
        $107 = ($$$077$us113$i|0)>($106|0);
        if (!($107)) {
         $108 = (((($11)) + 2584|0) + ($$18198$us$i<<2)|0);
         $109 = HEAP32[$108>>2]|0;
         $110 = ($109|0)<(0);
         if (!($110)) {
          $$181$lcssa$us$i = $$18198$us$i;
          break L42;
         }
        }
        $113 = (($$18198$us$i) + 1)|0;
        $114 = ($113|0)<($65|0);
        if ($114) {
         $$18198$us$i = $113;
        } else {
         $$181$lcssa$us$i = $113;
         break;
        }
       }
      } else {
       $$181$lcssa$us$i = 0;
      }
     } while(0);
     $111 = (($67) + ($$079105$us$i<<2)|0);
     HEAP32[$111>>2] = $$181$lcssa$us$i;
     $112 = (($$079105$us$i) + 1)|0;
     $exitcond131$i = ($112|0)==($20|0);
     if ($exitcond131$i) {
      break L21;
     } else {
      $$079105$us$i = $112;$$083104$us$i = $119;
     }
    }
   }
   while(1) {
    $$07792$us$us$i$us = 0;$$08091$us$us$i$us = 0;$$093$us$us$i$us = 0;$$18490$us$us$i$us = $$083104$us$i$us;
    while(1) {
     $81 = (($$pre$i) + ($$18490$us$us$i$us<<2)|0);
     $82 = HEAP32[$81>>2]|0;
     $neg$us$us$i$us = (0 - ($82))|0;
     $$08288$us$us$i$us = 1;$$189$us$us$i$us = $$093$us$us$i$us;
     while(1) {
      $83 = (($2) + ($$08288$us$us$i$us<<2)|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = (($84) + ($$18490$us$us$i$us<<2)|0);
      $86 = HEAP32[$85>>2]|0;
      $ispos85$us$us$i$us = ($86|0)>(-1);
      $neg86$us$us$i$us = (0 - ($86))|0;
      $87 = $ispos85$us$us$i$us ? $86 : $neg86$us$us$i$us;
      $88 = ($87|0)>($$189$us$us$i$us|0);
      $$$1$us$us$i$us = $88 ? $87 : $$189$us$us$i$us;
      $89 = (($$08288$us$us$i$us) + 1)|0;
      $exitcond$i$us = ($89|0)==($4|0);
      if ($exitcond$i$us) {
       break;
      } else {
       $$08288$us$us$i$us = $89;$$189$us$us$i$us = $$$1$us$us$i$us;
      }
     }
     $ispos$us$us$i$us = ($82|0)>(-1);
     $90 = $ispos$us$us$i$us ? $82 : $neg$us$us$i$us;
     $91 = ($90|0)>($$07792$us$us$i$us|0);
     $$$077$us$us$i$us = $91 ? $90 : $$07792$us$us$i$us;
     $92 = (($$18490$us$us$i$us) + 1)|0;
     $93 = (($$08091$us$us$i$us) + ($4))|0;
     $94 = ($93|0)<($13|0);
     if ($94) {
      $$07792$us$us$i$us = $$$077$us$us$i$us;$$08091$us$us$i$us = $93;$$093$us$us$i$us = $$$1$us$us$i$us;$$18490$us$us$i$us = $92;
     } else {
      break;
     }
    }
    L57: do {
     if ($66) {
      $$18198$us$i$us = 0;
      while(1) {
       $95 = (((($11)) + 2328|0) + ($$18198$us$i$us<<2)|0);
       $96 = HEAP32[$95>>2]|0;
       $97 = ($$$077$us$us$i$us|0)>($96|0);
       if (!($97)) {
        $98 = (((($11)) + 2584|0) + ($$18198$us$i$us<<2)|0);
        $99 = HEAP32[$98>>2]|0;
        $100 = ($$$1$us$us$i$us|0)>($99|0);
        if (!($100)) {
         $$181$lcssa$us$i$us = $$18198$us$i$us;
         break L57;
        }
       }
       $101 = (($$18198$us$i$us) + 1)|0;
       $102 = ($101|0)<($65|0);
       if ($102) {
        $$18198$us$i$us = $101;
       } else {
        $$181$lcssa$us$i$us = $101;
        break;
       }
      }
     } else {
      $$181$lcssa$us$i$us = 0;
     }
    } while(0);
    $103 = (($67) + ($$079105$us$i$us<<2)|0);
    HEAP32[$103>>2] = $$181$lcssa$us$i$us;
    $104 = (($$079105$us$i$us) + 1)|0;
    $exitcond131$i$us = ($104|0)==($20|0);
    if ($exitcond131$i$us) {
     break;
    } else {
     $$079105$us$i$us = $104;$$083104$us$i$us = $92;
    }
   }
  }
 } while(0);
 $122 = ((($1)) + 40|0);
 $123 = HEAP32[$122>>2]|0;
 $124 = (($123) + 1)|0;
 HEAP32[$122>>2] = $124;
 $$015 = $39;
 return ($$015|0);
}
function _res2_forward($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$037$ = 0, $$037$$us = 0, $$037$lcssa = 0, $$03744 = 0, $$03744$us = 0, $$03843 = 0, $$03843$us = 0, $$03942$us = 0, $$04041$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond49 = 0;
 var $not$ = 0, $not$$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $8 = sp;
 $9 = ((($1)) + 36|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($10|0) / 2)&-1;
 $12 = $5 << 2;
 $13 = Math_imul($12, $11)|0;
 $14 = (($13) + 7)|0;
 $15 = $14 & -8;
 $16 = ((($1)) + 72|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($17) + ($15))|0;
 $19 = ((($1)) + 76|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($18|0)>($20|0);
 $22 = ((($1)) + 68|0);
 $23 = HEAP32[$22>>2]|0;
 if ($21) {
  $24 = ($23|0)==(0|0);
  if (!($24)) {
   $25 = $23;
   $26 = (_malloc(8)|0);
   $27 = ((($1)) + 80|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (($28) + ($17))|0;
   HEAP32[$27>>2] = $29;
   $30 = ((($1)) + 84|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ((($26)) + 4|0);
   HEAP32[$32>>2] = $31;
   HEAP32[$26>>2] = $25;
   HEAP32[$30>>2] = $26;
  }
  HEAP32[$19>>2] = $15;
  $33 = (_malloc($15)|0);
  HEAP32[$22>>2] = $33;
  HEAP32[$16>>2] = 0;
  $35 = $33;$36 = 0;
 } else {
  $35 = $23;$36 = $17;
 }
 $34 = (($35) + ($36)|0);
 $37 = (($36) + ($15))|0;
 HEAP32[$16>>2] = $37;
 HEAP32[$8>>2] = $34;
 $38 = ($5|0)>(0);
 if (!($38)) {
  STACKTOP = sp;return 0;
 }
 $39 = ($10|0)>(1);
 if ($39) {
  $$03744$us = 0;$$03843$us = 0;
  while(1) {
   $40 = (($3) + ($$03843$us<<2)|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (($4) + ($$03843$us<<2)|0);
   $43 = HEAP32[$42>>2]|0;
   $not$$us = ($43|0)!=(0);
   $$03942$us = $$03843$us;$$04041$us = 0;
   while(1) {
    $44 = (($41) + ($$04041$us<<2)|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($34) + ($$03942$us<<2)|0);
    HEAP32[$46>>2] = $45;
    $47 = (($$04041$us) + 1)|0;
    $48 = (($$03942$us) + ($5))|0;
    $49 = ($47|0)<($11|0);
    if ($49) {
     $$03942$us = $48;$$04041$us = $47;
    } else {
     break;
    }
   }
   $50 = $not$$us&1;
   $$037$$us = (($50) + ($$03744$us))|0;
   $51 = (($$03843$us) + 1)|0;
   $exitcond = ($51|0)==($5|0);
   if ($exitcond) {
    $$037$lcssa = $$037$$us;
    break;
   } else {
    $$03744$us = $$037$$us;$$03843$us = $51;
   }
  }
 } else {
  $$03744 = 0;$$03843 = 0;
  while(1) {
   $52 = (($4) + ($$03843<<2)|0);
   $53 = HEAP32[$52>>2]|0;
   $not$ = ($53|0)!=(0);
   $54 = $not$&1;
   $$037$ = (($54) + ($$03744))|0;
   $55 = (($$03843) + 1)|0;
   $exitcond49 = ($55|0)==($5|0);
   if ($exitcond49) {
    $$037$lcssa = $$037$;
    break;
   } else {
    $$03744 = $$037$;$$03843 = $55;
   }
  }
 }
 $56 = ($$037$lcssa|0)==(0);
 if ($56) {
  STACKTOP = sp;return 0;
 }
 __01forward($0,$2,$8,1,$6);
 STACKTOP = sp;return 0;
}
function _res2_inverse($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$$135$i = 0, $$$135$i12 = 0, $$$i = 0, $$$i13 = 0, $$0104$lcssa = 0, $$0104130 = 0, $$0109122 = 0, $$0109122$us = 0, $$0110124 = 0, $$0110124$us = 0, $$0111127 = 0, $$03344$i = 0, $$03344$i6 = 0, $$03443$i = 0, $$03443$i7 = 0, $$03739$i = 0, $$03739$i11 = 0, $$1$lcssa$i = 0, $$1$lcssa$i4 = 0;
 var $$1105125 = 0, $$1105125$us = 0, $$135$lcssa$i = 0, $$135$lcssa$i3 = 0, $$13540$i = 0, $$13540$i10 = 0, $$141$i = 0, $$141$i9 = 0, $$2$lcssa = 0, $$2$lcssa$us = 0, $$2123 = 0, $$2123$us = 0, $$pre = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0.0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i14 = 0, $or$cond = 0;
 var $or$cond$us = 0, $or$cond121 = 0, $or$cond121$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[$1>>2]|0;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 36|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = Math_imul($12, $4)|0;
 $14 = $13 >> 1;
 $15 = ((($5)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)<($14|0);
 $$ = $17 ? $16 : $14;
 $18 = HEAP32[$5>>2]|0;
 $19 = (($$) - ($18))|0;
 $20 = ($19|0)>(0);
 if (!($20)) {
  return 0;
 }
 $21 = (($19|0) / ($7|0))&-1;
 $22 = (($10) + -1)|0;
 $23 = (($22) + ($21))|0;
 $24 = (($23|0) / ($10|0))&-1;
 $25 = $24 << 2;
 $26 = (($25) + 7)|0;
 $27 = $26 & -8;
 $28 = ((($0)) + 72|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = (($29) + ($27))|0;
 $31 = ((($0)) + 76|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($30|0)>($32|0);
 $34 = ((($0)) + 68|0);
 $35 = HEAP32[$34>>2]|0;
 if ($33) {
  $36 = ($35|0)==(0|0);
  if (!($36)) {
   $37 = $35;
   $38 = (_malloc(8)|0);
   $39 = ((($0)) + 80|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = (($40) + ($29))|0;
   HEAP32[$39>>2] = $41;
   $42 = ((($0)) + 84|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ((($38)) + 4|0);
   HEAP32[$44>>2] = $43;
   HEAP32[$38>>2] = $37;
   HEAP32[$42>>2] = $38;
  }
  HEAP32[$31>>2] = $27;
  $45 = (_malloc($27)|0);
  HEAP32[$34>>2] = $45;
  HEAP32[$28>>2] = 0;
  $47 = $45;$48 = 0;
 } else {
  $47 = $35;$48 = $29;
 }
 $46 = (($47) + ($48)|0);
 $49 = (($48) + ($27))|0;
 HEAP32[$28>>2] = $49;
 $50 = ($4|0)>(0);
 L10: do {
  if ($50) {
   $$0104130 = 0;
   while(1) {
    $51 = (($3) + ($$0104130<<2)|0);
    $52 = HEAP32[$51>>2]|0;
    $53 = ($52|0)==(0);
    if (!($53)) {
     $$0104$lcssa = $$0104130;
     break L10;
    }
    $54 = (($$0104130) + 1)|0;
    $55 = ($54|0)<($4|0);
    if ($55) {
     $$0104130 = $54;
    } else {
     $$0104$lcssa = $54;
     break;
    }
   }
  } else {
   $$0104$lcssa = 0;
  }
 } while(0);
 $56 = ($$0104$lcssa|0)==($4|0);
 if ($56) {
  return 0;
 }
 $57 = ((($1)) + 8|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = ($58|0)>(0);
 if (!($59)) {
  return 0;
 }
 $60 = ($21|0)>(0);
 $61 = ((($0)) + 4|0);
 $62 = ((($5)) + 16|0);
 $63 = ((($1)) + 28|0);
 $64 = ($10|0)>(0);
 $65 = ((($1)) + 20|0);
 $$0111127 = 0;
 L21: while(1) {
  L23: do {
   if ($60) {
    $66 = ($$0111127|0)==(0);
    $67 = 1 << $$0111127;
    if ($66) {
     $$0110124$us = 0;$$1105125$us = 0;
    } else {
     $$0110124 = 0;$$1105125 = 0;
     while(1) {
      $135 = ($$1105125|0)<($21|0);
      $or$cond121 = $64 & $135;
      if ($or$cond121) {
       $136 = (($46) + ($$0110124<<2)|0);
       $$0109122 = 0;$$2123 = $$1105125;
       while(1) {
        $137 = HEAP32[$136>>2]|0;
        $138 = (($137) + ($$0109122<<2)|0);
        $139 = HEAP32[$138>>2]|0;
        $140 = (((($5)) + 24|0) + ($139<<2)|0);
        $141 = HEAP32[$140>>2]|0;
        $142 = $141 & $67;
        $143 = ($142|0)==(0);
        if (!($143)) {
         $144 = HEAP32[$65>>2]|0;
         $145 = (($144) + ($139<<2)|0);
         $146 = HEAP32[$145>>2]|0;
         $147 = (($146) + ($$0111127<<2)|0);
         $148 = HEAP32[$147>>2]|0;
         $149 = ($148|0)==(0|0);
         if (!($149)) {
          $150 = Math_imul($$2123, $7)|0;
          $151 = HEAP32[$5>>2]|0;
          $152 = (($151) + ($150))|0;
          $153 = ((($148)) + 8|0);
          $154 = HEAP32[$153>>2]|0;
          $155 = ($154|0)>(0);
          if ($155) {
           $156 = (($152|0) / ($4|0))&-1;
           $157 = (($7) + ($152))|0;
           $158 = (($157|0) / ($4|0))&-1;
           $159 = ($156|0)<($158|0);
           if ($159) {
            $160 = ((($148)) + 16|0);
            $$03344$i6 = 0;$$03443$i7 = $156;
            while(1) {
             $162 = (_decode_packed_entry_number($148,$61)|0);
             $163 = ($162|0)==(-1);
             if ($163) {
              label = 46;
              break L21;
             }
             $164 = HEAP32[$160>>2]|0;
             $165 = HEAP32[$148>>2]|0;
             $166 = Math_imul($165, $162)|0;
             $167 = (($164) + ($166<<2)|0);
             $168 = ($165|0)>(0);
             if ($168) {
              $$03739$i11 = 0;$$13540$i10 = $$03443$i7;$$141$i9 = $$03344$i6;
              while(1) {
               $169 = (($167) + ($$03739$i11<<2)|0);
               $170 = +HEAPF32[$169>>2];
               $171 = (($$141$i9) + 1)|0;
               $172 = (($2) + ($$141$i9<<2)|0);
               $173 = HEAP32[$172>>2]|0;
               $174 = (($173) + ($$13540$i10<<2)|0);
               $175 = +HEAPF32[$174>>2];
               $176 = $175 + $170;
               HEAPF32[$174>>2] = $176;
               $177 = ($171|0)==($4|0);
               $178 = $177&1;
               $$$135$i12 = (($178) + ($$13540$i10))|0;
               $$$i13 = $177 ? 0 : $171;
               $179 = (($$03739$i11) + 1)|0;
               $exitcond$i14 = ($179|0)==($165|0);
               if ($exitcond$i14) {
                $$1$lcssa$i4 = $$$i13;$$135$lcssa$i3 = $$$135$i12;
                break;
               } else {
                $$03739$i11 = $179;$$13540$i10 = $$$135$i12;$$141$i9 = $$$i13;
               }
              }
             } else {
              $$1$lcssa$i4 = $$03344$i6;$$135$lcssa$i3 = $$03443$i7;
             }
             $161 = ($$135$lcssa$i3|0)<($158|0);
             if ($161) {
              $$03344$i6 = $$1$lcssa$i4;$$03443$i7 = $$135$lcssa$i3;
             } else {
              break;
             }
            }
           }
          }
         }
        }
        $180 = (($$0109122) + 1)|0;
        $181 = (($$2123) + 1)|0;
        $182 = ($180|0)<($10|0);
        $183 = ($181|0)<($21|0);
        $or$cond = $182 & $183;
        if ($or$cond) {
         $$0109122 = $180;$$2123 = $181;
        } else {
         $$2$lcssa = $181;
         break;
        }
       }
      } else {
       $$2$lcssa = $$1105125;
      }
      $184 = (($$0110124) + 1)|0;
      $185 = ($$2$lcssa|0)<($21|0);
      if ($185) {
       $$0110124 = $184;$$1105125 = $$2$lcssa;
      } else {
       break L23;
      }
     }
    }
    while(1) {
     $68 = HEAP32[$8>>2]|0;
     $69 = ((($68)) + 8|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = ($70|0)>(0);
     if (!($71)) {
      label = 46;
      break L21;
     }
     $72 = (_decode_packed_entry_number($68,$61)|0);
     $73 = ($72|0)>(-1);
     if (!($73)) {
      label = 46;
      break L21;
     }
     $74 = ((($68)) + 24|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (($75) + ($72<<2)|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = ($77|0)==(-1);
     if ($78) {
      label = 46;
      break L21;
     }
     $79 = HEAP32[$62>>2]|0;
     $80 = ($77|0)<($79|0);
     if (!($80)) {
      label = 46;
      break L21;
     }
     $81 = HEAP32[$63>>2]|0;
     $82 = (($81) + ($77<<2)|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = (($46) + ($$0110124$us<<2)|0);
     HEAP32[$84>>2] = $83;
     $85 = ($83|0)==(0|0);
     if ($85) {
      label = 46;
      break L21;
     }
     $134 = ($$1105125$us|0)<($21|0);
     $or$cond121$us = $64 & $134;
     L53: do {
      if ($or$cond121$us) {
       $$0109122$us = 0;$$2123$us = $$1105125$us;$89 = $83;
       while(1) {
        $88 = (($89) + ($$0109122$us<<2)|0);
        $90 = HEAP32[$88>>2]|0;
        $91 = (((($5)) + 24|0) + ($90<<2)|0);
        $92 = HEAP32[$91>>2]|0;
        $93 = $92 & $67;
        $94 = ($93|0)==(0);
        do {
         if (!($94)) {
          $95 = HEAP32[$65>>2]|0;
          $96 = (($95) + ($90<<2)|0);
          $97 = HEAP32[$96>>2]|0;
          $98 = HEAP32[$97>>2]|0;
          $99 = ($98|0)==(0|0);
          if ($99) {
           break;
          }
          $100 = Math_imul($$2123$us, $7)|0;
          $101 = HEAP32[$5>>2]|0;
          $102 = (($101) + ($100))|0;
          $103 = ((($98)) + 8|0);
          $104 = HEAP32[$103>>2]|0;
          $105 = ($104|0)>(0);
          if (!($105)) {
           break;
          }
          $106 = (($102|0) / ($4|0))&-1;
          $107 = (($7) + ($102))|0;
          $108 = (($107|0) / ($4|0))&-1;
          $109 = ($106|0)<($108|0);
          if (!($109)) {
           break;
          }
          $110 = ((($98)) + 16|0);
          $$03344$i = 0;$$03443$i = $106;
          while(1) {
           $112 = (_decode_packed_entry_number($98,$61)|0);
           $113 = ($112|0)==(-1);
           if ($113) {
            label = 46;
            break L21;
           }
           $114 = HEAP32[$110>>2]|0;
           $115 = HEAP32[$98>>2]|0;
           $116 = Math_imul($115, $112)|0;
           $117 = (($114) + ($116<<2)|0);
           $118 = ($115|0)>(0);
           if ($118) {
            $$03739$i = 0;$$13540$i = $$03443$i;$$141$i = $$03344$i;
            while(1) {
             $119 = (($117) + ($$03739$i<<2)|0);
             $120 = +HEAPF32[$119>>2];
             $121 = (($$141$i) + 1)|0;
             $122 = (($2) + ($$141$i<<2)|0);
             $123 = HEAP32[$122>>2]|0;
             $124 = (($123) + ($$13540$i<<2)|0);
             $125 = +HEAPF32[$124>>2];
             $126 = $125 + $120;
             HEAPF32[$124>>2] = $126;
             $127 = ($121|0)==($4|0);
             $128 = $127&1;
             $$$135$i = (($128) + ($$13540$i))|0;
             $$$i = $127 ? 0 : $121;
             $129 = (($$03739$i) + 1)|0;
             $exitcond$i = ($129|0)==($115|0);
             if ($exitcond$i) {
              $$1$lcssa$i = $$$i;$$135$lcssa$i = $$$135$i;
              break;
             } else {
              $$03739$i = $129;$$13540$i = $$$135$i;$$141$i = $$$i;
             }
            }
           } else {
            $$1$lcssa$i = $$03344$i;$$135$lcssa$i = $$03443$i;
           }
           $111 = ($$135$lcssa$i|0)<($108|0);
           if ($111) {
            $$03344$i = $$1$lcssa$i;$$03443$i = $$135$lcssa$i;
           } else {
            break;
           }
          }
         }
        } while(0);
        $130 = (($$0109122$us) + 1)|0;
        $131 = (($$2123$us) + 1)|0;
        $132 = ($130|0)<($10|0);
        $133 = ($131|0)<($21|0);
        $or$cond$us = $132 & $133;
        if (!($or$cond$us)) {
         $$2$lcssa$us = $131;
         break L53;
        }
        $$pre = HEAP32[$84>>2]|0;
        $$0109122$us = $130;$$2123$us = $131;$89 = $$pre;
       }
      } else {
       $$2$lcssa$us = $$1105125$us;
      }
     } while(0);
     $86 = (($$0110124$us) + 1)|0;
     $87 = ($$2$lcssa$us|0)<($21|0);
     if ($87) {
      $$0110124$us = $86;$$1105125$us = $$2$lcssa$us;
     } else {
      break;
     }
    }
   }
  } while(0);
  $186 = (($$0111127) + 1)|0;
  $187 = HEAP32[$57>>2]|0;
  $188 = ($186|0)<($187|0);
  if ($188) {
   $$0111127 = $186;
  } else {
   label = 46;
   break;
  }
 }
 if ((label|0) == 46) {
  return 0;
 }
 return (0)|0;
}
function _mapping0_pack($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa$i = 0, $$0$lcssa$i6 = 0, $$044 = 0, $$056$i = 0, $$056$i3 = 0, $$07$i = 0, $$07$i2 = 0, $$142 = 0, $$241 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($3|0)>(1);
 if ($4) {
  _oggpack_write($2,1,1);
  $5 = HEAP32[$1>>2]|0;
  $6 = (($5) + -1)|0;
  _oggpack_write($2,$6,4);
 } else {
  _oggpack_write($2,0,1);
 }
 $7 = ((($1)) + 1156|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)>(0);
 if ($9) {
  _oggpack_write($2,1,1);
  $10 = HEAP32[$7>>2]|0;
  $11 = (($10) + -1)|0;
  _oggpack_write($2,$11,8);
  $12 = HEAP32[$7>>2]|0;
  $13 = ($12|0)>(0);
  if ($13) {
   $14 = ((($1)) + 1160|0);
   $15 = ((($0)) + 4|0);
   $16 = ((($1)) + 2184|0);
   $$044 = 0;
   while(1) {
    $17 = (($14) + ($$044<<2)|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = HEAP32[$15>>2]|0;
    $20 = (($19) + -1)|0;
    $21 = ($20|0)==(0);
    if ($21) {
     $$0$lcssa$i = 0;
    } else {
     $$056$i = $20;$$07$i = 0;
     while(1) {
      $22 = $$056$i >>> 1;
      $23 = (($$07$i) + 1)|0;
      $24 = ($22|0)==(0);
      if ($24) {
       $$0$lcssa$i = $23;
       break;
      } else {
       $$056$i = $22;$$07$i = $23;
      }
     }
    }
    _oggpack_write($2,$18,$$0$lcssa$i);
    $25 = (($16) + ($$044<<2)|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = HEAP32[$15>>2]|0;
    $28 = (($27) + -1)|0;
    $29 = ($28|0)==(0);
    if ($29) {
     $$0$lcssa$i6 = 0;
    } else {
     $$056$i3 = $28;$$07$i2 = 0;
     while(1) {
      $30 = $$056$i3 >>> 1;
      $31 = (($$07$i2) + 1)|0;
      $32 = ($30|0)==(0);
      if ($32) {
       $$0$lcssa$i6 = $31;
       break;
      } else {
       $$056$i3 = $30;$$07$i2 = $31;
      }
     }
    }
    _oggpack_write($2,$26,$$0$lcssa$i6);
    $33 = (($$044) + 1)|0;
    $34 = HEAP32[$7>>2]|0;
    $35 = ($33|0)<($34|0);
    if ($35) {
     $$044 = $33;
    } else {
     break;
    }
   }
  }
 } else {
  _oggpack_write($2,0,1);
 }
 _oggpack_write($2,0,2);
 $36 = HEAP32[$1>>2]|0;
 $37 = ($36|0)>(1);
 if ($37) {
  $38 = ((($0)) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ($39|0)>(0);
  if ($40) {
   $41 = ((($1)) + 4|0);
   $$142 = 0;
   while(1) {
    $46 = (($41) + ($$142<<2)|0);
    $47 = HEAP32[$46>>2]|0;
    _oggpack_write($2,$47,4);
    $48 = (($$142) + 1)|0;
    $49 = HEAP32[$38>>2]|0;
    $50 = ($48|0)<($49|0);
    if ($50) {
     $$142 = $48;
    } else {
     break;
    }
   }
   $$pre = HEAP32[$1>>2]|0;
   $42 = $$pre;
   label = 17;
  }
 } else {
  $42 = $36;
  label = 17;
 }
 if ((label|0) == 17) {
  $43 = ($42|0)>(0);
  if (!($43)) {
   return;
  }
 }
 $44 = ((($1)) + 1028|0);
 $45 = ((($1)) + 1092|0);
 $$241 = 0;
 while(1) {
  _oggpack_write($2,0,8);
  $51 = (($44) + ($$241<<2)|0);
  $52 = HEAP32[$51>>2]|0;
  _oggpack_write($2,$52,8);
  $53 = (($45) + ($$241<<2)|0);
  $54 = HEAP32[$53>>2]|0;
  _oggpack_write($2,$54,8);
  $55 = (($$241) + 1)|0;
  $56 = HEAP32[$1>>2]|0;
  $57 = ($55|0)<($56|0);
  if ($57) {
   $$241 = $55;
  } else {
   break;
  }
 }
 return;
}
function _mapping0_forward($0) {
 $0 = $0|0;
 var $$ = 0, $$$0$i = 0.0, $$$0$i16 = 0.0, $$$0$us$i = 0.0, $$$i = 0, $$$i$i = 0, $$0$i$i = 0, $$0$i102 = 0, $$0$i11 = 0.0, $$0$i110 = 0, $$0$i120 = 0, $$0$i15 = 0.0, $$0$i16$i = 0, $$0$i23 = 0, $$0$i277$i = 0, $$0$i30 = 0, $$0$i38 = 0, $$0$i46 = 0, $$0$i54 = 0, $$0$i62 = 0;
 var $$0$i70 = 0, $$0$i78 = 0, $$0$i8$i = 0, $$0$i86 = 0, $$0$i94 = 0, $$0$lcssa$i$i = 0, $$0$lcssa$i14$i = 0, $$0$lcssa$i6$i = 0, $$0$p$i$i = 0, $$0$us$i = 0.0, $$0256316$i = 0, $$0257$lcssa$i = 0, $$0257288$i = 0, $$0259287$i = 0, $$0261$lcssa$i = 0, $$0261286$i = 0, $$0263302$i = 0, $$0267$i = 0, $$0268$i = 0, $$0269293$us$i = 0;
 var $$0270291$i = 0, $$0273296$i = 0, $$0273296$us$i = 0, $$0274$lcssa$i = 0, $$0274$lcssa$i123 = 0, $$0274295$i = 0, $$0274295$us$i = 0, $$02829$i = 0, $$02829$i107 = 0, $$02829$i27 = 0, $$02829$i35 = 0, $$02829$i43 = 0, $$02829$i51 = 0, $$02829$i59 = 0, $$02829$i67 = 0, $$02829$i75 = 0, $$02829$i83 = 0, $$02829$i91 = 0, $$02829$i99 = 0, $$0375436 = 0;
 var $$0375436$us = 0, $$0379$lcssa = 0, $$0379404 = 0, $$0383430$us = 0, $$0390$lcssa = 0.0, $$0390435 = 0.0, $$0390435$us = 0.0, $$05153$i = 0, $$05153$i14 = 0, $$05153$us$i = 0, $$052$i$i = 0, $$052$us$i = 0.0, $$055$i$i = 0, $$056$i$i = 0, $$056$i11$i = 0, $$056$i3$i = 0, $$07$i$i = 0, $$07$i10$i = 0, $$07$i2$i = 0, $$1$i$i = 0;
 var $$1258$i = 0, $$1260$i = 0, $$1262$i = 0, $$1264285$i = 0, $$1271297$i = 0, $$1271297$us$i = 0, $$1311$i = 0, $$1376426 = 0, $$1380 = 0, $$1384420 = 0, $$1391 = 0.0, $$1391$us = 0.0, $$153$i$i = 0, $$156$i$i = 0, $$2$i$i = 0, $$2265284$i = 0, $$2272299$i = 0, $$2307$i = 0, $$2377402 = 0, $$2381$lcssa = 0;
 var $$2381410 = 0, $$2385403 = 0, $$2389419 = 0, $$254$i$i = 0, $$3 = 0, $$3378415 = 0, $$3382 = 0, $$3386409 = 0, $$alloca_mul = 0, $$alloca_mul4 = 0, $$alloca_mul6 = 0, $$alloca_mul8 = 0, $$in = 0, $$lcssa = 0, $$phi$trans$insert$i = 0, $$pn$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi449Z2D = 0, $$pre$phi451Z2D = 0;
 var $$pre$phiZ2D = 0, $$pre136 = 0, $$pre137 = 0, $$pre138 = 0, $$pre139 = 0, $$pre140 = 0, $$pre141 = 0, $$pre142 = 0, $$pre143 = 0, $$pre144 = 0, $$pre145 = 0, $$pre146 = 0, $$pre147 = 0, $$pre148 = 0, $$pre149 = 0, $$pre326$i = 0, $$pre327$i = 0, $$pre328$i = 0, $$pre447 = 0, $$pre448 = 0;
 var $$pre450 = 0, $$sink$i = 0, $$sink1$i$i = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0;
 var $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0;
 var $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0;
 var $105 = 0.0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0.0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0;
 var $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0;
 var $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0;
 var $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0.0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0.0, $1120 = 0;
 var $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0.0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0;
 var $114 = 0.0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0.0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0;
 var $1158 = 0, $1159 = 0, $116 = 0.0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0;
 var $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0;
 var $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0.0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0;
 var $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0;
 var $123 = 0.0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0;
 var $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0;
 var $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0;
 var $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0;
 var $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0;
 var $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0;
 var $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0;
 var $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0;
 var $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0;
 var $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0;
 var $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0;
 var $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0;
 var $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0;
 var $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0;
 var $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0;
 var $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0;
 var $1518 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0;
 var $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0, $185 = 0, $186 = 0.0, $187 = 0.0;
 var $188 = 0, $189 = 0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0, $194 = 0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0.0, $201 = 0, $202 = 0, $203 = 0, $204 = 0.0;
 var $205 = 0.0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0.0, $352 = 0.0, $353 = 0.0, $354 = 0.0, $355 = 0.0, $356 = 0.0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0.0, $362 = 0, $363 = 0, $364 = 0, $365 = 0.0, $366 = 0, $367 = 0.0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0.0, $373 = 0.0, $374 = 0.0, $375 = 0, $376 = 0.0, $377 = 0, $378 = 0.0, $379 = 0.0, $38 = 0, $380 = 0.0, $381 = 0, $382 = 0, $383 = 0.0, $384 = 0.0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0.0, $389 = 0.0, $39 = 0, $390 = 0, $391 = 0.0, $392 = 0.0, $393 = 0.0, $394 = 0.0, $395 = 0.0, $396 = 0.0, $397 = 0.0, $398 = 0.0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0.0, $402 = 0.0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0.0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0.0, $435 = 0, $436 = 0.0, $437 = 0.0, $438 = 0.0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0.0, $442 = 0.0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0.0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0.0, $463 = 0, $464 = 0.0, $465 = 0.0, $466 = 0.0, $467 = 0, $468 = 0, $469 = 0.0, $47 = 0, $470 = 0.0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0;
 var $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0;
 var $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0;
 var $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0;
 var $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0;
 var $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0;
 var $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0;
 var $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0;
 var $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0;
 var $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0;
 var $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0;
 var $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0.0, $870 = 0, $871 = 0;
 var $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0;
 var $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0;
 var $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0;
 var $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0;
 var $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0;
 var $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0;
 var $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0;
 var $999 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i100 = 0, $exitcond$i108 = 0, $exitcond$i116 = 0, $exitcond$i22 = 0, $exitcond$i28 = 0, $exitcond$i36 = 0, $exitcond$i44 = 0, $exitcond$i52 = 0, $exitcond$i60 = 0, $exitcond$i68 = 0, $exitcond$i76 = 0, $exitcond$i84 = 0, $exitcond$i92 = 0, $exitcond322$i = 0, $exitcond323$i = 0, $exitcond324$i = 0, $exitcond325$i = 0;
 var $exitcond55$i = 0, $exitcond55$i17 = 0, $ispos$i$i = 0, $ispos$i275$i = 0, $ispos58$i$i = 0, $neg$i$i = 0, $neg$i276$i = 0, $neg59$i$i = 0, $not$ = 0, $not$$i = 0, $not$$i113 = 0, $not$$i121 = 0, $or$cond$i = 0, $or$cond$i105 = 0, $or$cond$i115 = 0, $or$cond$i25 = 0, $or$cond$i33 = 0, $or$cond$i41 = 0, $or$cond$i49 = 0, $or$cond$i57 = 0;
 var $or$cond$i65 = 0, $or$cond$i73 = 0, $or$cond$i81 = 0, $or$cond$i89 = 0, $or$cond$i97 = 0, $storemerge = 0.0, $storemerge441 = 0.0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(336|0);
 $1 = sp + 64|0;
 $2 = sp + 32|0;
 $3 = sp;
 $4 = ((($0)) + 64|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($5)) + 104|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 104|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($7)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 << 2;
 $$alloca_mul = $18;
 $19 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul)|0)+15)&-16)|0);;
 $20 = (($18) + 7)|0;
 $21 = $20 & -8;
 $22 = ((($0)) + 72|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (($23) + ($21))|0;
 $25 = ((($0)) + 76|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($24|0)>($26|0);
 $28 = ((($0)) + 68|0);
 $29 = HEAP32[$28>>2]|0;
 if ($27) {
  $30 = ($29|0)==(0|0);
  if (!($30)) {
   $31 = $29;
   $32 = (_malloc(8)|0);
   $33 = ((($0)) + 80|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (($34) + ($23))|0;
   HEAP32[$33>>2] = $35;
   $36 = ((($0)) + 84|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = ((($32)) + 4|0);
   HEAP32[$38>>2] = $37;
   HEAP32[$32>>2] = $31;
   HEAP32[$36>>2] = $32;
  }
  HEAP32[$25>>2] = $21;
  $39 = (_malloc($21)|0);
  HEAP32[$28>>2] = $39;
  HEAP32[$22>>2] = 0;
  $$pre136 = HEAP32[$16>>2]|0;
  $$pre137 = HEAP32[$25>>2]|0;
  $41 = $39;$42 = 0;$45 = $$pre136;$50 = $$pre137;
 } else {
  $41 = $29;$42 = $23;$45 = $17;$50 = $26;
 }
 $40 = (($41) + ($42)|0);
 $43 = (($42) + ($21))|0;
 HEAP32[$22>>2] = $43;
 $44 = $45 << 2;
 $46 = (($44) + 7)|0;
 $47 = $46 & -8;
 $48 = (($43) + ($47))|0;
 $49 = ($48|0)>($50|0);
 if ($49) {
  $51 = ($41|0)==(0|0);
  if (!($51)) {
   $52 = $41;
   $53 = (_malloc(8)|0);
   $54 = ((($0)) + 80|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = (($55) + ($43))|0;
   HEAP32[$54>>2] = $56;
   $57 = ((($0)) + 84|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($53)) + 4|0);
   HEAP32[$59>>2] = $58;
   HEAP32[$53>>2] = $52;
   HEAP32[$57>>2] = $53;
  }
  HEAP32[$25>>2] = $47;
  $60 = (_malloc($47)|0);
  HEAP32[$28>>2] = $60;
  HEAP32[$22>>2] = 0;
  $$pre138 = HEAP32[$16>>2]|0;
  $$pre139 = HEAP32[$25>>2]|0;
  $62 = $60;$63 = 0;$66 = $$pre138;$71 = $$pre139;
 } else {
  $62 = $41;$63 = $43;$66 = $45;$71 = $50;
 }
 $61 = (($62) + ($63)|0);
 $64 = (($63) + ($47))|0;
 HEAP32[$22>>2] = $64;
 $65 = $66 << 2;
 $67 = (($65) + 7)|0;
 $68 = $67 & -8;
 $69 = (($64) + ($68))|0;
 $70 = ($69|0)>($71|0);
 if ($70) {
  $72 = ($62|0)==(0|0);
  if (!($72)) {
   $73 = $62;
   $74 = (_malloc(8)|0);
   $75 = ((($0)) + 80|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = (($76) + ($64))|0;
   HEAP32[$75>>2] = $77;
   $78 = ((($0)) + 84|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = ((($74)) + 4|0);
   HEAP32[$80>>2] = $79;
   HEAP32[$74>>2] = $73;
   HEAP32[$78>>2] = $74;
  }
  HEAP32[$25>>2] = $68;
  $81 = (_malloc($68)|0);
  HEAP32[$28>>2] = $81;
  HEAP32[$22>>2] = 0;
  $$pre140 = HEAP32[$16>>2]|0;
  $83 = $81;$84 = 0;$89 = $$pre140;
 } else {
  $83 = $62;$84 = $64;$89 = $66;
 }
 $82 = (($83) + ($84)|0);
 $85 = (($84) + ($68))|0;
 HEAP32[$22>>2] = $85;
 $86 = ((($13)) + 4|0);
 $87 = +HEAPF32[$86>>2];
 $88 = $89 << 2;
 $$alloca_mul4 = $88;
 $90 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul4)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul4)|0)+15)&-16)|0);;
 $91 = ((($13)) + 8|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ((($0)) + 28|0);
 $94 = HEAP32[$93>>2]|0;
 $95 = (((($9)) + 544|0) + ($94<<2)|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ((($11)) + 56|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = (($98) + (($92*52)|0)|0);
 $100 = ($94|0)!=(0);
 $101 = $100 ? 2 : 0;
 $102 = (($99) + (($101*52)|0)|0);
 $103 = ((($0)) + 40|0);
 HEAP32[$103>>2] = $94;
 $104 = ($89|0)>(0);
 L19: do {
  if ($104) {
   $105 = (+($15|0));
   $106 = 4.0 / $105;
   $107 = (HEAPF32[tempDoublePtr>>2]=$106,HEAP32[tempDoublePtr>>2]|0);
   $108 = (($15|0) / 2)&-1;
   $109 = $108 << 2;
   $110 = $107 & 2147483647;
   $111 = (+($110>>>0));
   $112 = $111 * 7.1771142984289327E-7;
   $113 = $112 + -764.6162109375;
   $114 = $113;
   $115 = $114 + 0.34499999999999997;
   $116 = $115;
   $117 = ((($11)) + 4|0);
   $118 = ((($0)) + 24|0);
   $119 = ((($0)) + 32|0);
   $120 = $116 + -764.6162109375;
   $121 = (($15) + -1)|0;
   $122 = ($121|0)>(1);
   $123 = $116 + -382.30810546875;
   $124 = (($109) + 7)|0;
   $125 = $124 & -8;
   $126 = ((($0)) + 80|0);
   $127 = ((($0)) + 84|0);
   if ($122) {
    $$0375436$us = 0;$$0390435$us = $87;$132 = $85;$135 = $83;
   } else {
    $$0375436 = 0;$$0390435 = $87;$217 = $85;$220 = $83;
    while(1) {
     $213 = HEAP32[$0>>2]|0;
     $214 = (($213) + ($$0375436<<2)|0);
     $215 = HEAP32[$214>>2]|0;
     $216 = (($217) + ($125))|0;
     $218 = HEAP32[$25>>2]|0;
     $219 = ($216|0)>($218|0);
     if ($219) {
      $221 = ($220|0)==(0|0);
      if (!($221)) {
       $222 = $220;
       $223 = (_malloc(8)|0);
       $224 = HEAP32[$126>>2]|0;
       $225 = (($224) + ($217))|0;
       HEAP32[$126>>2] = $225;
       $226 = HEAP32[$127>>2]|0;
       $227 = ((($223)) + 4|0);
       HEAP32[$227>>2] = $226;
       HEAP32[$223>>2] = $222;
       HEAP32[$127>>2] = $223;
      }
      HEAP32[$25>>2] = $125;
      $228 = (_malloc($125)|0);
      HEAP32[$28>>2] = $228;
      HEAP32[$22>>2] = 0;
      $$pre143 = HEAP32[$25>>2]|0;
      $230 = $228;$231 = 0;$236 = $$pre143;
     } else {
      $230 = $220;$231 = $217;$236 = $218;
     }
     $229 = (($230) + ($231)|0);
     $232 = (($231) + ($125))|0;
     HEAP32[$22>>2] = $232;
     $233 = (($61) + ($$0375436<<2)|0);
     HEAP32[$233>>2] = $229;
     $234 = (($232) + ($125))|0;
     $235 = ($234|0)>($236|0);
     $237 = HEAP32[$28>>2]|0;
     if ($235) {
      $238 = ($237|0)==(0|0);
      if (!($238)) {
       $239 = $237;
       $240 = (_malloc(8)|0);
       $241 = HEAP32[$126>>2]|0;
       $242 = (($241) + ($232))|0;
       HEAP32[$126>>2] = $242;
       $243 = HEAP32[$127>>2]|0;
       $244 = ((($240)) + 4|0);
       HEAP32[$244>>2] = $243;
       HEAP32[$240>>2] = $239;
       HEAP32[$127>>2] = $240;
      }
      HEAP32[$25>>2] = $125;
      $245 = (_malloc($125)|0);
      HEAP32[$28>>2] = $245;
      HEAP32[$22>>2] = 0;
      $247 = $245;$248 = 0;
     } else {
      $247 = $237;$248 = $232;
     }
     $246 = (($247) + ($248)|0);
     $249 = (($248) + ($125))|0;
     HEAP32[$22>>2] = $249;
     $250 = (($40) + ($$0375436<<2)|0);
     HEAP32[$250>>2] = $246;
     $251 = HEAP32[$118>>2]|0;
     $252 = HEAP32[$93>>2]|0;
     $253 = HEAP32[$119>>2]|0;
     __vorbis_apply_window($215,$117,$9,$251,$252,$253);
     $254 = HEAP32[$93>>2]|0;
     $255 = (((($11)) + 12|0) + ($254<<2)|0);
     $256 = HEAP32[$255>>2]|0;
     $257 = HEAP32[$256>>2]|0;
     $258 = HEAP32[$250>>2]|0;
     _mdct_forward($257,$215,$258);
     $259 = HEAP32[$93>>2]|0;
     $260 = (((($11)) + 20|0) + (($259*12)|0)|0);
     _drft_forward($260,$215);
     $261 = HEAP32[$215>>2]|0;
     $262 = $261 & 2147483647;
     $263 = (+($262>>>0));
     $264 = $263 * 7.1771142984289327E-7;
     $265 = $120 + $264;
     $266 = $265;
     $267 = $266 + 0.34499999999999997;
     $268 = $267;
     HEAPF32[$215>>2] = $268;
     $269 = (($90) + ($$0375436<<2)|0);
     $270 = $268 > 0.0;
     $storemerge = $270 ? 0.0 : $268;
     HEAPF32[$269>>2] = $storemerge;
     $271 = $storemerge > $$0390435;
     $$1391 = $271 ? $storemerge : $$0390435;
     $272 = (($$0375436) + 1)|0;
     $273 = HEAP32[$16>>2]|0;
     $274 = ($272|0)<($273|0);
     if (!($274)) {
      $$0390$lcssa = $$1391;$$pre$phi449Z2D = $109;$$pre$phiZ2D = $108;
      break L19;
     }
     $$pre141 = HEAP32[$22>>2]|0;
     $$pre142 = HEAP32[$28>>2]|0;
     $$0375436 = $272;$$0390435 = $$1391;$217 = $$pre141;$220 = $$pre142;
    }
   }
   while(1) {
    $128 = HEAP32[$0>>2]|0;
    $129 = (($128) + ($$0375436$us<<2)|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = (($132) + ($125))|0;
    $133 = HEAP32[$25>>2]|0;
    $134 = ($131|0)>($133|0);
    if ($134) {
     $136 = ($135|0)==(0|0);
     if (!($136)) {
      $137 = $135;
      $138 = (_malloc(8)|0);
      $139 = HEAP32[$126>>2]|0;
      $140 = (($139) + ($132))|0;
      HEAP32[$126>>2] = $140;
      $141 = HEAP32[$127>>2]|0;
      $142 = ((($138)) + 4|0);
      HEAP32[$142>>2] = $141;
      HEAP32[$138>>2] = $137;
      HEAP32[$127>>2] = $138;
     }
     HEAP32[$25>>2] = $125;
     $143 = (_malloc($125)|0);
     HEAP32[$28>>2] = $143;
     HEAP32[$22>>2] = 0;
     $$pre146 = HEAP32[$25>>2]|0;
     $145 = $143;$146 = 0;$151 = $$pre146;
    } else {
     $145 = $135;$146 = $132;$151 = $133;
    }
    $144 = (($145) + ($146)|0);
    $147 = (($146) + ($125))|0;
    HEAP32[$22>>2] = $147;
    $148 = (($61) + ($$0375436$us<<2)|0);
    HEAP32[$148>>2] = $144;
    $149 = (($147) + ($125))|0;
    $150 = ($149|0)>($151|0);
    $152 = HEAP32[$28>>2]|0;
    if ($150) {
     $153 = ($152|0)==(0|0);
     if (!($153)) {
      $154 = $152;
      $155 = (_malloc(8)|0);
      $156 = HEAP32[$126>>2]|0;
      $157 = (($156) + ($147))|0;
      HEAP32[$126>>2] = $157;
      $158 = HEAP32[$127>>2]|0;
      $159 = ((($155)) + 4|0);
      HEAP32[$159>>2] = $158;
      HEAP32[$155>>2] = $154;
      HEAP32[$127>>2] = $155;
     }
     HEAP32[$25>>2] = $125;
     $160 = (_malloc($125)|0);
     HEAP32[$28>>2] = $160;
     HEAP32[$22>>2] = 0;
     $162 = $160;$163 = 0;
    } else {
     $162 = $152;$163 = $147;
    }
    $161 = (($162) + ($163)|0);
    $164 = (($163) + ($125))|0;
    HEAP32[$22>>2] = $164;
    $165 = (($40) + ($$0375436$us<<2)|0);
    HEAP32[$165>>2] = $161;
    $166 = HEAP32[$118>>2]|0;
    $167 = HEAP32[$93>>2]|0;
    $168 = HEAP32[$119>>2]|0;
    __vorbis_apply_window($130,$117,$9,$166,$167,$168);
    $169 = HEAP32[$93>>2]|0;
    $170 = (((($11)) + 12|0) + ($169<<2)|0);
    $171 = HEAP32[$170>>2]|0;
    $172 = HEAP32[$171>>2]|0;
    $173 = HEAP32[$165>>2]|0;
    _mdct_forward($172,$130,$173);
    $174 = HEAP32[$93>>2]|0;
    $175 = (((($11)) + 20|0) + (($174*12)|0)|0);
    _drft_forward($175,$130);
    $176 = HEAP32[$130>>2]|0;
    $177 = $176 & 2147483647;
    $178 = (+($177>>>0));
    $179 = $178 * 7.1771142984289327E-7;
    $180 = $120 + $179;
    $181 = $180;
    $182 = $181 + 0.34499999999999997;
    $183 = $182;
    HEAPF32[$130>>2] = $183;
    $184 = (($90) + ($$0375436$us<<2)|0);
    HEAPF32[$184>>2] = $183;
    $$0383430$us = 1;$204 = $183;
    while(1) {
     $185 = (($130) + ($$0383430$us<<2)|0);
     $186 = +HEAPF32[$185>>2];
     $187 = $186 * $186;
     $188 = (($$0383430$us) + 1)|0;
     $189 = (($130) + ($188<<2)|0);
     $190 = +HEAPF32[$189>>2];
     $191 = $190 * $190;
     $192 = $191 + $187;
     $193 = (HEAPF32[tempDoublePtr>>2]=$192,HEAP32[tempDoublePtr>>2]|0);
     $194 = $193 & 2147483647;
     $195 = (+($194>>>0));
     $196 = $195 * 3.5885571492144663E-7;
     $197 = $123 + $196;
     $198 = $197;
     $199 = $198 + 0.34499999999999997;
     $200 = $199;
     $201 = $188 >> 1;
     $202 = (($130) + ($201<<2)|0);
     HEAPF32[$202>>2] = $200;
     $203 = $200 > $204;
     $205 = $203 ? $200 : $204;
     $206 = (($$0383430$us) + 2)|0;
     $207 = ($206|0)<($121|0);
     if ($207) {
      $$0383430$us = $206;$204 = $205;
     } else {
      break;
     }
    }
    $208 = $205 > 0.0;
    $storemerge441 = $208 ? 0.0 : $205;
    HEAPF32[$184>>2] = $storemerge441;
    $209 = $storemerge441 > $$0390435$us;
    $$1391$us = $209 ? $storemerge441 : $$0390435$us;
    $210 = (($$0375436$us) + 1)|0;
    $211 = HEAP32[$16>>2]|0;
    $212 = ($210|0)<($211|0);
    if (!($212)) {
     $$0390$lcssa = $$1391$us;$$pre$phi449Z2D = $109;$$pre$phiZ2D = $108;
     break L19;
    }
    $$pre144 = HEAP32[$22>>2]|0;
    $$pre145 = HEAP32[$28>>2]|0;
    $$0375436$us = $210;$$0390435$us = $$1391$us;$132 = $$pre144;$135 = $$pre145;
   }
  } else {
   $$pre447 = (($15|0) / 2)&-1;
   $$pre448 = $$pre447 << 2;
   $$0390$lcssa = $87;$$pre$phi449Z2D = $$pre448;$$pre$phiZ2D = $$pre447;
  }
 } while(0);
 $275 = (($$pre$phi449Z2D) + 7)|0;
 $276 = $275 & -8;
 $277 = HEAP32[$22>>2]|0;
 $278 = (($277) + ($276))|0;
 $279 = HEAP32[$25>>2]|0;
 $280 = ($278|0)>($279|0);
 $281 = HEAP32[$28>>2]|0;
 if ($280) {
  $282 = ($281|0)==(0|0);
  if (!($282)) {
   $283 = $281;
   $284 = (_malloc(8)|0);
   $285 = ((($0)) + 80|0);
   $286 = HEAP32[$285>>2]|0;
   $287 = (($286) + ($277))|0;
   HEAP32[$285>>2] = $287;
   $288 = ((($0)) + 84|0);
   $289 = HEAP32[$288>>2]|0;
   $290 = ((($284)) + 4|0);
   HEAP32[$290>>2] = $289;
   HEAP32[$284>>2] = $283;
   HEAP32[$288>>2] = $284;
  }
  HEAP32[$25>>2] = $276;
  $291 = (_malloc($276)|0);
  HEAP32[$28>>2] = $291;
  HEAP32[$22>>2] = 0;
  $$pre147 = HEAP32[$25>>2]|0;
  $293 = $291;$294 = 0;$298 = $$pre147;
 } else {
  $293 = $281;$294 = $277;$298 = $279;
 }
 $292 = (($293) + ($294)|0);
 $295 = (($294) + ($276))|0;
 HEAP32[$22>>2] = $295;
 $296 = (($295) + ($276))|0;
 $297 = ($296|0)>($298|0);
 if ($297) {
  $299 = ($293|0)==(0|0);
  if (!($299)) {
   $300 = $293;
   $301 = (_malloc(8)|0);
   $302 = ((($0)) + 80|0);
   $303 = HEAP32[$302>>2]|0;
   $304 = (($303) + ($295))|0;
   HEAP32[$302>>2] = $304;
   $305 = ((($0)) + 84|0);
   $306 = HEAP32[$305>>2]|0;
   $307 = ((($301)) + 4|0);
   HEAP32[$307>>2] = $306;
   HEAP32[$301>>2] = $300;
   HEAP32[$305>>2] = $301;
  }
  HEAP32[$25>>2] = $276;
  $308 = (_malloc($276)|0);
  HEAP32[$28>>2] = $308;
  HEAP32[$22>>2] = 0;
  $310 = $308;$311 = 0;
 } else {
  $310 = $293;$311 = $295;
 }
 $309 = (($310) + ($311)|0);
 $312 = (($311) + ($276))|0;
 HEAP32[$22>>2] = $312;
 $313 = HEAP32[$16>>2]|0;
 $314 = ($313|0)>(0);
 L69: do {
  if ($314) {
   $315 = ($15|0)>(1);
   $316 = ((($11)) + 48|0);
   $317 = ((($0)) + 80|0);
   $318 = ((($0)) + 84|0);
   $319 = ((($102)) + 4|0);
   $320 = ((($102)) + 48|0);
   $321 = ((($102)) + 12|0);
   $$1376426 = 0;$331 = $312;$334 = $310;
   while(1) {
    $322 = (((($96)) + 4|0) + ($$1376426<<2)|0);
    $323 = HEAP32[$322>>2]|0;
    $324 = (($40) + ($$1376426<<2)|0);
    $325 = HEAP32[$324>>2]|0;
    $326 = HEAP32[$0>>2]|0;
    $327 = (($326) + ($$1376426<<2)|0);
    $328 = HEAP32[$327>>2]|0;
    $329 = (($328) + ($$pre$phiZ2D<<2)|0);
    HEAP32[$103>>2] = $94;
    $330 = (($331) + 64)|0;
    $332 = HEAP32[$25>>2]|0;
    $333 = ($330|0)>($332|0);
    if ($333) {
     $335 = ($334|0)==(0|0);
     if (!($335)) {
      $336 = $334;
      $337 = (_malloc(8)|0);
      $338 = HEAP32[$317>>2]|0;
      $339 = (($338) + ($331))|0;
      HEAP32[$317>>2] = $339;
      $340 = HEAP32[$318>>2]|0;
      $341 = ((($337)) + 4|0);
      HEAP32[$341>>2] = $340;
      HEAP32[$337>>2] = $336;
      HEAP32[$318>>2] = $337;
     }
     HEAP32[$25>>2] = 64;
     $342 = (_malloc(64)|0);
     HEAP32[$28>>2] = $342;
     HEAP32[$22>>2] = 0;
     $344 = $342;$345 = 0;
    } else {
     $344 = $334;$345 = $331;
    }
    $343 = (($344) + ($345)|0);
    $346 = (($345) + 64)|0;
    HEAP32[$22>>2] = $346;
    $347 = (($82) + ($$1376426<<2)|0);
    HEAP32[$347>>2] = $343;
    dest=$343; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    if ($315) {
     $$1384420 = 0;
     while(1) {
      $348 = (($325) + ($$1384420<<2)|0);
      $349 = HEAP32[$348>>2]|0;
      $350 = $349 & 2147483647;
      $351 = (+($350>>>0));
      $352 = $351 * 7.1771142984289327E-7;
      $353 = $352 + -764.6162109375;
      $354 = $353;
      $355 = $354 + 0.34499999999999997;
      $356 = $355;
      $357 = (($329) + ($$1384420<<2)|0);
      HEAPF32[$357>>2] = $356;
      $358 = (($$1384420) + 1)|0;
      $359 = ($358|0)<($$pre$phiZ2D|0);
      if ($359) {
       $$1384420 = $358;
      } else {
       break;
      }
     }
    }
    __vp_noisemask($102,$329,$292);
    $360 = (($90) + ($$1376426<<2)|0);
    $361 = +HEAPF32[$360>>2];
    __vp_tonemask($102,$328,$309,$$0390$lcssa,$361);
    $362 = HEAP32[$102>>2]|0;
    $363 = HEAP32[$319>>2]|0;
    $364 = ((($363)) + 16|0);
    $365 = +HEAPF32[$364>>2];
    $366 = ($362|0)>(0);
    if ($366) {
     $367 = +HEAPF32[$320>>2];
     $368 = HEAP32[$321>>2]|0;
     $369 = ((($368)) + 4|0);
     $370 = HEAP32[$369>>2]|0;
     $371 = ((($363)) + 108|0);
     $372 = $367;
     $373 = $372 * 0.0050000000000000001;
     $374 = $372 * 2.9999999999999997E-4;
     $$05153$us$i = 0;
     while(1) {
      $375 = (($292) + ($$05153$us$i<<2)|0);
      $376 = +HEAPF32[$375>>2];
      $377 = (($370) + ($$05153$us$i<<2)|0);
      $378 = +HEAPF32[$377>>2];
      $379 = $378 + $376;
      $380 = +HEAPF32[$371>>2];
      $381 = $379 > $380;
      $$0$us$i = $381 ? $380 : $379;
      $382 = (($309) + ($$05153$us$i<<2)|0);
      $383 = +HEAPF32[$382>>2];
      $384 = $383 + $365;
      $385 = $$0$us$i < $384;
      $$$0$us$i = $385 ? $384 : $$0$us$i;
      $386 = (($328) + ($$05153$us$i<<2)|0);
      HEAPF32[$386>>2] = $$$0$us$i;
      $387 = (($329) + ($$05153$us$i<<2)|0);
      $388 = +HEAPF32[$387>>2];
      $389 = $$0$us$i - $388;
      $390 = $389 > -17.200000762939453;
      $391 = $389 + 17.200000762939453;
      $392 = $391;
      if ($390) {
       $396 = $373 * $392;
       $397 = 1.0 - $396;
       $398 = $397;
       $399 = $398 < 0.0;
       if ($399) {
        $$052$us$i = 9.9999997473787516E-5;
       } else {
        $$052$us$i = $398;
       }
      } else {
       $393 = $374 * $392;
       $394 = 1.0 - $393;
       $395 = $394;
       $$052$us$i = $395;
      }
      $400 = (($325) + ($$05153$us$i<<2)|0);
      $401 = +HEAPF32[$400>>2];
      $402 = $401 * $$052$us$i;
      HEAPF32[$400>>2] = $402;
      $403 = (($$05153$us$i) + 1)|0;
      $exitcond$i = ($403|0)==($362|0);
      if ($exitcond$i) {
       break;
      } else {
       $$05153$us$i = $403;
      }
     }
    }
    $404 = (((($96)) + 1028|0) + ($323<<2)|0);
    $405 = HEAP32[$404>>2]|0;
    $406 = (((($9)) + 800|0) + ($405<<2)|0);
    $407 = HEAP32[$406>>2]|0;
    $408 = ($407|0)==(1);
    if (!($408)) {
     $$3 = -1;
     break;
    }
    $409 = HEAP32[$316>>2]|0;
    $410 = (($409) + ($405<<2)|0);
    $411 = HEAP32[$410>>2]|0;
    $412 = (_floor1_fit($0,$411,$329,$328)|0);
    $413 = HEAP32[$347>>2]|0;
    $414 = ((($413)) + 28|0);
    HEAP32[$414>>2] = $412;
    $415 = HEAP32[$4>>2]|0;
    $416 = ((($415)) + 104|0);
    $417 = HEAP32[$416>>2]|0;
    $418 = ((($417)) + 80|0);
    $419 = HEAP32[$418>>2]|0;
    $not$$i = ($419|0)==(0);
    if (!($not$$i)) {
     $420 = HEAP32[$347>>2]|0;
     $421 = ((($420)) + 28|0);
     $422 = HEAP32[$421>>2]|0;
     $423 = ($422|0)==(0|0);
     if (!($423)) {
      $424 = HEAP32[$102>>2]|0;
      $425 = HEAP32[$319>>2]|0;
      $426 = ((($425)) + 20|0);
      $427 = +HEAPF32[$426>>2];
      $428 = ($424|0)>(0);
      if ($428) {
       $429 = HEAP32[$321>>2]|0;
       $430 = ((($429)) + 8|0);
       $431 = HEAP32[$430>>2]|0;
       $432 = ((($425)) + 108|0);
       $$05153$i = 0;
       while(1) {
        $433 = (($292) + ($$05153$i<<2)|0);
        $434 = +HEAPF32[$433>>2];
        $435 = (($431) + ($$05153$i<<2)|0);
        $436 = +HEAPF32[$435>>2];
        $437 = $436 + $434;
        $438 = +HEAPF32[$432>>2];
        $439 = $437 > $438;
        $$0$i11 = $439 ? $438 : $437;
        $440 = (($309) + ($$05153$i<<2)|0);
        $441 = +HEAPF32[$440>>2];
        $442 = $441 + $427;
        $443 = $$0$i11 < $442;
        $$$0$i = $443 ? $442 : $$0$i11;
        $444 = (($328) + ($$05153$i<<2)|0);
        HEAPF32[$444>>2] = $$$0$i;
        $445 = (($$05153$i) + 1)|0;
        $exitcond55$i = ($445|0)==($424|0);
        if ($exitcond55$i) {
         break;
        } else {
         $$05153$i = $445;
        }
       }
      }
      $446 = HEAP32[$316>>2]|0;
      $447 = HEAP32[$404>>2]|0;
      $448 = (($446) + ($447<<2)|0);
      $449 = HEAP32[$448>>2]|0;
      $450 = (_floor1_fit($0,$449,$329,$328)|0);
      $451 = HEAP32[$347>>2]|0;
      $452 = ((($451)) + 56|0);
      HEAP32[$452>>2] = $450;
      $453 = HEAP32[$102>>2]|0;
      $454 = HEAP32[$319>>2]|0;
      $455 = ((($454)) + 12|0);
      $456 = +HEAPF32[$455>>2];
      $457 = ($453|0)>(0);
      if ($457) {
       $458 = HEAP32[$321>>2]|0;
       $459 = HEAP32[$458>>2]|0;
       $460 = ((($454)) + 108|0);
       $$05153$i14 = 0;
       while(1) {
        $461 = (($292) + ($$05153$i14<<2)|0);
        $462 = +HEAPF32[$461>>2];
        $463 = (($459) + ($$05153$i14<<2)|0);
        $464 = +HEAPF32[$463>>2];
        $465 = $464 + $462;
        $466 = +HEAPF32[$460>>2];
        $467 = $465 > $466;
        $$0$i15 = $467 ? $466 : $465;
        $468 = (($309) + ($$05153$i14<<2)|0);
        $469 = +HEAPF32[$468>>2];
        $470 = $469 + $456;
        $471 = $$0$i15 < $470;
        $$$0$i16 = $471 ? $470 : $$0$i15;
        $472 = (($328) + ($$05153$i14<<2)|0);
        HEAPF32[$472>>2] = $$$0$i16;
        $473 = (($$05153$i14) + 1)|0;
        $exitcond55$i17 = ($473|0)==($453|0);
        if ($exitcond55$i17) {
         break;
        } else {
         $$05153$i14 = $473;
        }
       }
      }
      $474 = HEAP32[$316>>2]|0;
      $475 = HEAP32[$404>>2]|0;
      $476 = (($474) + ($475<<2)|0);
      $477 = HEAP32[$476>>2]|0;
      $478 = (_floor1_fit($0,$477,$329,$328)|0);
      $479 = HEAP32[$347>>2]|0;
      HEAP32[$479>>2] = $478;
      $480 = HEAP32[$316>>2]|0;
      $481 = HEAP32[$404>>2]|0;
      $482 = (($480) + ($481<<2)|0);
      $483 = HEAP32[$482>>2]|0;
      $484 = HEAP32[$347>>2]|0;
      $485 = HEAP32[$484>>2]|0;
      $486 = ((($484)) + 28|0);
      $487 = HEAP32[$486>>2]|0;
      $488 = ((($483)) + 1284|0);
      $489 = HEAP32[$488>>2]|0;
      $490 = ($485|0)!=(0|0);
      $491 = ($487|0)!=(0|0);
      $or$cond$i = $490 & $491;
      do {
       if ($or$cond$i) {
        $492 = $489 << 2;
        $493 = (($492) + 7)|0;
        $494 = $493 & -8;
        $495 = HEAP32[$22>>2]|0;
        $496 = (($495) + ($494))|0;
        $497 = HEAP32[$25>>2]|0;
        $498 = ($496|0)>($497|0);
        $499 = HEAP32[$28>>2]|0;
        if ($498) {
         $500 = ($499|0)==(0|0);
         if (!($500)) {
          $501 = $499;
          $502 = (_malloc(8)|0);
          $503 = HEAP32[$317>>2]|0;
          $504 = (($503) + ($495))|0;
          HEAP32[$317>>2] = $504;
          $505 = HEAP32[$318>>2]|0;
          $506 = ((($502)) + 4|0);
          HEAP32[$506>>2] = $505;
          HEAP32[$502>>2] = $501;
          HEAP32[$318>>2] = $502;
         }
         HEAP32[$25>>2] = $494;
         $507 = (_malloc($494)|0);
         HEAP32[$28>>2] = $507;
         HEAP32[$22>>2] = 0;
         $509 = $507;$510 = 0;
        } else {
         $509 = $499;$510 = $495;
        }
        $508 = (($509) + ($510)|0);
        $511 = (($510) + ($494))|0;
        HEAP32[$22>>2] = $511;
        $512 = ($489|0)>(0);
        if ($512) {
         $$02829$i = 0;
        } else {
         $$0$i23 = $508;
         break;
        }
        while(1) {
         $513 = (($485) + ($$02829$i<<2)|0);
         $514 = HEAP32[$513>>2]|0;
         $515 = $514 & 32767;
         $516 = ($515*56174)|0;
         $517 = (($487) + ($$02829$i<<2)|0);
         $518 = HEAP32[$517>>2]|0;
         $519 = $518 & 32767;
         $520 = ($519*9362)|0;
         $521 = (($516) + 32768)|0;
         $522 = (($521) + ($520))|0;
         $523 = $522 >> 16;
         $524 = (($508) + ($$02829$i<<2)|0);
         HEAP32[$524>>2] = $523;
         $525 = HEAP32[$513>>2]|0;
         $526 = $525 & 32768;
         $527 = ($526|0)==(0);
         do {
          if (!($527)) {
           $528 = HEAP32[$517>>2]|0;
           $529 = $528 & 32768;
           $530 = ($529|0)==(0);
           if ($530) {
            break;
           }
           $531 = $523 | 32768;
           HEAP32[$524>>2] = $531;
          }
         } while(0);
         $532 = (($$02829$i) + 1)|0;
         $exitcond$i22 = ($532|0)==($489|0);
         if ($exitcond$i22) {
          $$0$i23 = $508;
          break;
         } else {
          $$02829$i = $532;
         }
        }
       } else {
        $$0$i23 = 0;
       }
      } while(0);
      $533 = HEAP32[$347>>2]|0;
      $534 = ((($533)) + 4|0);
      HEAP32[$534>>2] = $$0$i23;
      $535 = HEAP32[$316>>2]|0;
      $536 = HEAP32[$404>>2]|0;
      $537 = (($535) + ($536<<2)|0);
      $538 = HEAP32[$537>>2]|0;
      $539 = HEAP32[$347>>2]|0;
      $540 = HEAP32[$539>>2]|0;
      $541 = ((($539)) + 28|0);
      $542 = HEAP32[$541>>2]|0;
      $543 = ((($538)) + 1284|0);
      $544 = HEAP32[$543>>2]|0;
      $545 = ($540|0)!=(0|0);
      $546 = ($542|0)!=(0|0);
      $or$cond$i25 = $545 & $546;
      do {
       if ($or$cond$i25) {
        $547 = $544 << 2;
        $548 = (($547) + 7)|0;
        $549 = $548 & -8;
        $550 = HEAP32[$22>>2]|0;
        $551 = (($550) + ($549))|0;
        $552 = HEAP32[$25>>2]|0;
        $553 = ($551|0)>($552|0);
        $554 = HEAP32[$28>>2]|0;
        if ($553) {
         $555 = ($554|0)==(0|0);
         if (!($555)) {
          $556 = $554;
          $557 = (_malloc(8)|0);
          $558 = HEAP32[$317>>2]|0;
          $559 = (($558) + ($550))|0;
          HEAP32[$317>>2] = $559;
          $560 = HEAP32[$318>>2]|0;
          $561 = ((($557)) + 4|0);
          HEAP32[$561>>2] = $560;
          HEAP32[$557>>2] = $556;
          HEAP32[$318>>2] = $557;
         }
         HEAP32[$25>>2] = $549;
         $562 = (_malloc($549)|0);
         HEAP32[$28>>2] = $562;
         HEAP32[$22>>2] = 0;
         $564 = $562;$565 = 0;
        } else {
         $564 = $554;$565 = $550;
        }
        $563 = (($564) + ($565)|0);
        $566 = (($565) + ($549))|0;
        HEAP32[$22>>2] = $566;
        $567 = ($544|0)>(0);
        if ($567) {
         $$02829$i27 = 0;
        } else {
         $$0$i30 = $563;
         break;
        }
        while(1) {
         $568 = (($540) + ($$02829$i27<<2)|0);
         $569 = HEAP32[$568>>2]|0;
         $570 = $569 & 32767;
         $571 = ($570*46812)|0;
         $572 = (($542) + ($$02829$i27<<2)|0);
         $573 = HEAP32[$572>>2]|0;
         $574 = $573 & 32767;
         $575 = ($574*18724)|0;
         $576 = (($571) + 32768)|0;
         $577 = (($576) + ($575))|0;
         $578 = $577 >> 16;
         $579 = (($563) + ($$02829$i27<<2)|0);
         HEAP32[$579>>2] = $578;
         $580 = HEAP32[$568>>2]|0;
         $581 = $580 & 32768;
         $582 = ($581|0)==(0);
         do {
          if (!($582)) {
           $583 = HEAP32[$572>>2]|0;
           $584 = $583 & 32768;
           $585 = ($584|0)==(0);
           if ($585) {
            break;
           }
           $586 = $578 | 32768;
           HEAP32[$579>>2] = $586;
          }
         } while(0);
         $587 = (($$02829$i27) + 1)|0;
         $exitcond$i28 = ($587|0)==($544|0);
         if ($exitcond$i28) {
          $$0$i30 = $563;
          break;
         } else {
          $$02829$i27 = $587;
         }
        }
       } else {
        $$0$i30 = 0;
       }
      } while(0);
      $588 = HEAP32[$347>>2]|0;
      $589 = ((($588)) + 8|0);
      HEAP32[$589>>2] = $$0$i30;
      $590 = HEAP32[$316>>2]|0;
      $591 = HEAP32[$404>>2]|0;
      $592 = (($590) + ($591<<2)|0);
      $593 = HEAP32[$592>>2]|0;
      $594 = HEAP32[$347>>2]|0;
      $595 = HEAP32[$594>>2]|0;
      $596 = ((($594)) + 28|0);
      $597 = HEAP32[$596>>2]|0;
      $598 = ((($593)) + 1284|0);
      $599 = HEAP32[$598>>2]|0;
      $600 = ($595|0)!=(0|0);
      $601 = ($597|0)!=(0|0);
      $or$cond$i33 = $600 & $601;
      do {
       if ($or$cond$i33) {
        $602 = $599 << 2;
        $603 = (($602) + 7)|0;
        $604 = $603 & -8;
        $605 = HEAP32[$22>>2]|0;
        $606 = (($605) + ($604))|0;
        $607 = HEAP32[$25>>2]|0;
        $608 = ($606|0)>($607|0);
        $609 = HEAP32[$28>>2]|0;
        if ($608) {
         $610 = ($609|0)==(0|0);
         if (!($610)) {
          $611 = $609;
          $612 = (_malloc(8)|0);
          $613 = HEAP32[$317>>2]|0;
          $614 = (($613) + ($605))|0;
          HEAP32[$317>>2] = $614;
          $615 = HEAP32[$318>>2]|0;
          $616 = ((($612)) + 4|0);
          HEAP32[$616>>2] = $615;
          HEAP32[$612>>2] = $611;
          HEAP32[$318>>2] = $612;
         }
         HEAP32[$25>>2] = $604;
         $617 = (_malloc($604)|0);
         HEAP32[$28>>2] = $617;
         HEAP32[$22>>2] = 0;
         $619 = $617;$620 = 0;
        } else {
         $619 = $609;$620 = $605;
        }
        $618 = (($619) + ($620)|0);
        $621 = (($620) + ($604))|0;
        HEAP32[$22>>2] = $621;
        $622 = ($599|0)>(0);
        if ($622) {
         $$02829$i35 = 0;
        } else {
         $$0$i38 = $618;
         break;
        }
        while(1) {
         $623 = (($595) + ($$02829$i35<<2)|0);
         $624 = HEAP32[$623>>2]|0;
         $625 = $624 & 32767;
         $626 = ($625*37450)|0;
         $627 = (($597) + ($$02829$i35<<2)|0);
         $628 = HEAP32[$627>>2]|0;
         $629 = $628 & 32767;
         $630 = ($629*28086)|0;
         $631 = (($626) + 32768)|0;
         $632 = (($631) + ($630))|0;
         $633 = $632 >> 16;
         $634 = (($618) + ($$02829$i35<<2)|0);
         HEAP32[$634>>2] = $633;
         $635 = HEAP32[$623>>2]|0;
         $636 = $635 & 32768;
         $637 = ($636|0)==(0);
         do {
          if (!($637)) {
           $638 = HEAP32[$627>>2]|0;
           $639 = $638 & 32768;
           $640 = ($639|0)==(0);
           if ($640) {
            break;
           }
           $641 = $633 | 32768;
           HEAP32[$634>>2] = $641;
          }
         } while(0);
         $642 = (($$02829$i35) + 1)|0;
         $exitcond$i36 = ($642|0)==($599|0);
         if ($exitcond$i36) {
          $$0$i38 = $618;
          break;
         } else {
          $$02829$i35 = $642;
         }
        }
       } else {
        $$0$i38 = 0;
       }
      } while(0);
      $643 = HEAP32[$347>>2]|0;
      $644 = ((($643)) + 12|0);
      HEAP32[$644>>2] = $$0$i38;
      $645 = HEAP32[$316>>2]|0;
      $646 = HEAP32[$404>>2]|0;
      $647 = (($645) + ($646<<2)|0);
      $648 = HEAP32[$647>>2]|0;
      $649 = HEAP32[$347>>2]|0;
      $650 = HEAP32[$649>>2]|0;
      $651 = ((($649)) + 28|0);
      $652 = HEAP32[$651>>2]|0;
      $653 = ((($648)) + 1284|0);
      $654 = HEAP32[$653>>2]|0;
      $655 = ($650|0)!=(0|0);
      $656 = ($652|0)!=(0|0);
      $or$cond$i41 = $655 & $656;
      do {
       if ($or$cond$i41) {
        $657 = $654 << 2;
        $658 = (($657) + 7)|0;
        $659 = $658 & -8;
        $660 = HEAP32[$22>>2]|0;
        $661 = (($660) + ($659))|0;
        $662 = HEAP32[$25>>2]|0;
        $663 = ($661|0)>($662|0);
        $664 = HEAP32[$28>>2]|0;
        if ($663) {
         $665 = ($664|0)==(0|0);
         if (!($665)) {
          $666 = $664;
          $667 = (_malloc(8)|0);
          $668 = HEAP32[$317>>2]|0;
          $669 = (($668) + ($660))|0;
          HEAP32[$317>>2] = $669;
          $670 = HEAP32[$318>>2]|0;
          $671 = ((($667)) + 4|0);
          HEAP32[$671>>2] = $670;
          HEAP32[$667>>2] = $666;
          HEAP32[$318>>2] = $667;
         }
         HEAP32[$25>>2] = $659;
         $672 = (_malloc($659)|0);
         HEAP32[$28>>2] = $672;
         HEAP32[$22>>2] = 0;
         $674 = $672;$675 = 0;
        } else {
         $674 = $664;$675 = $660;
        }
        $673 = (($674) + ($675)|0);
        $676 = (($675) + ($659))|0;
        HEAP32[$22>>2] = $676;
        $677 = ($654|0)>(0);
        if ($677) {
         $$02829$i43 = 0;
        } else {
         $$0$i46 = $673;
         break;
        }
        while(1) {
         $678 = (($650) + ($$02829$i43<<2)|0);
         $679 = HEAP32[$678>>2]|0;
         $680 = $679 & 32767;
         $681 = ($680*28087)|0;
         $682 = (($652) + ($$02829$i43<<2)|0);
         $683 = HEAP32[$682>>2]|0;
         $684 = $683 & 32767;
         $685 = ($684*37449)|0;
         $686 = (($681) + 32768)|0;
         $687 = (($686) + ($685))|0;
         $688 = $687 >> 16;
         $689 = (($673) + ($$02829$i43<<2)|0);
         HEAP32[$689>>2] = $688;
         $690 = HEAP32[$678>>2]|0;
         $691 = $690 & 32768;
         $692 = ($691|0)==(0);
         do {
          if (!($692)) {
           $693 = HEAP32[$682>>2]|0;
           $694 = $693 & 32768;
           $695 = ($694|0)==(0);
           if ($695) {
            break;
           }
           $696 = $688 | 32768;
           HEAP32[$689>>2] = $696;
          }
         } while(0);
         $697 = (($$02829$i43) + 1)|0;
         $exitcond$i44 = ($697|0)==($654|0);
         if ($exitcond$i44) {
          $$0$i46 = $673;
          break;
         } else {
          $$02829$i43 = $697;
         }
        }
       } else {
        $$0$i46 = 0;
       }
      } while(0);
      $698 = HEAP32[$347>>2]|0;
      $699 = ((($698)) + 16|0);
      HEAP32[$699>>2] = $$0$i46;
      $700 = HEAP32[$316>>2]|0;
      $701 = HEAP32[$404>>2]|0;
      $702 = (($700) + ($701<<2)|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = HEAP32[$347>>2]|0;
      $705 = HEAP32[$704>>2]|0;
      $706 = ((($704)) + 28|0);
      $707 = HEAP32[$706>>2]|0;
      $708 = ((($703)) + 1284|0);
      $709 = HEAP32[$708>>2]|0;
      $710 = ($705|0)!=(0|0);
      $711 = ($707|0)!=(0|0);
      $or$cond$i49 = $710 & $711;
      do {
       if ($or$cond$i49) {
        $712 = $709 << 2;
        $713 = (($712) + 7)|0;
        $714 = $713 & -8;
        $715 = HEAP32[$22>>2]|0;
        $716 = (($715) + ($714))|0;
        $717 = HEAP32[$25>>2]|0;
        $718 = ($716|0)>($717|0);
        $719 = HEAP32[$28>>2]|0;
        if ($718) {
         $720 = ($719|0)==(0|0);
         if (!($720)) {
          $721 = $719;
          $722 = (_malloc(8)|0);
          $723 = HEAP32[$317>>2]|0;
          $724 = (($723) + ($715))|0;
          HEAP32[$317>>2] = $724;
          $725 = HEAP32[$318>>2]|0;
          $726 = ((($722)) + 4|0);
          HEAP32[$726>>2] = $725;
          HEAP32[$722>>2] = $721;
          HEAP32[$318>>2] = $722;
         }
         HEAP32[$25>>2] = $714;
         $727 = (_malloc($714)|0);
         HEAP32[$28>>2] = $727;
         HEAP32[$22>>2] = 0;
         $729 = $727;$730 = 0;
        } else {
         $729 = $719;$730 = $715;
        }
        $728 = (($729) + ($730)|0);
        $731 = (($730) + ($714))|0;
        HEAP32[$22>>2] = $731;
        $732 = ($709|0)>(0);
        if ($732) {
         $$02829$i51 = 0;
        } else {
         $$0$i54 = $728;
         break;
        }
        while(1) {
         $733 = (($705) + ($$02829$i51<<2)|0);
         $734 = HEAP32[$733>>2]|0;
         $735 = $734 & 32767;
         $736 = ($735*18725)|0;
         $737 = (($707) + ($$02829$i51<<2)|0);
         $738 = HEAP32[$737>>2]|0;
         $739 = $738 & 32767;
         $740 = ($739*46811)|0;
         $741 = (($736) + 32768)|0;
         $742 = (($741) + ($740))|0;
         $743 = $742 >> 16;
         $744 = (($728) + ($$02829$i51<<2)|0);
         HEAP32[$744>>2] = $743;
         $745 = HEAP32[$733>>2]|0;
         $746 = $745 & 32768;
         $747 = ($746|0)==(0);
         do {
          if (!($747)) {
           $748 = HEAP32[$737>>2]|0;
           $749 = $748 & 32768;
           $750 = ($749|0)==(0);
           if ($750) {
            break;
           }
           $751 = $743 | 32768;
           HEAP32[$744>>2] = $751;
          }
         } while(0);
         $752 = (($$02829$i51) + 1)|0;
         $exitcond$i52 = ($752|0)==($709|0);
         if ($exitcond$i52) {
          $$0$i54 = $728;
          break;
         } else {
          $$02829$i51 = $752;
         }
        }
       } else {
        $$0$i54 = 0;
       }
      } while(0);
      $753 = HEAP32[$347>>2]|0;
      $754 = ((($753)) + 20|0);
      HEAP32[$754>>2] = $$0$i54;
      $755 = HEAP32[$316>>2]|0;
      $756 = HEAP32[$404>>2]|0;
      $757 = (($755) + ($756<<2)|0);
      $758 = HEAP32[$757>>2]|0;
      $759 = HEAP32[$347>>2]|0;
      $760 = HEAP32[$759>>2]|0;
      $761 = ((($759)) + 28|0);
      $762 = HEAP32[$761>>2]|0;
      $763 = ((($758)) + 1284|0);
      $764 = HEAP32[$763>>2]|0;
      $765 = ($760|0)!=(0|0);
      $766 = ($762|0)!=(0|0);
      $or$cond$i57 = $765 & $766;
      do {
       if ($or$cond$i57) {
        $767 = $764 << 2;
        $768 = (($767) + 7)|0;
        $769 = $768 & -8;
        $770 = HEAP32[$22>>2]|0;
        $771 = (($770) + ($769))|0;
        $772 = HEAP32[$25>>2]|0;
        $773 = ($771|0)>($772|0);
        $774 = HEAP32[$28>>2]|0;
        if ($773) {
         $775 = ($774|0)==(0|0);
         if (!($775)) {
          $776 = $774;
          $777 = (_malloc(8)|0);
          $778 = HEAP32[$317>>2]|0;
          $779 = (($778) + ($770))|0;
          HEAP32[$317>>2] = $779;
          $780 = HEAP32[$318>>2]|0;
          $781 = ((($777)) + 4|0);
          HEAP32[$781>>2] = $780;
          HEAP32[$777>>2] = $776;
          HEAP32[$318>>2] = $777;
         }
         HEAP32[$25>>2] = $769;
         $782 = (_malloc($769)|0);
         HEAP32[$28>>2] = $782;
         HEAP32[$22>>2] = 0;
         $784 = $782;$785 = 0;
        } else {
         $784 = $774;$785 = $770;
        }
        $783 = (($784) + ($785)|0);
        $786 = (($785) + ($769))|0;
        HEAP32[$22>>2] = $786;
        $787 = ($764|0)>(0);
        if ($787) {
         $$02829$i59 = 0;
        } else {
         $$0$i62 = $783;
         break;
        }
        while(1) {
         $788 = (($760) + ($$02829$i59<<2)|0);
         $789 = HEAP32[$788>>2]|0;
         $790 = $789 & 32767;
         $791 = ($790*9363)|0;
         $792 = (($762) + ($$02829$i59<<2)|0);
         $793 = HEAP32[$792>>2]|0;
         $794 = $793 & 32767;
         $795 = ($794*56173)|0;
         $796 = (($791) + 32768)|0;
         $797 = (($796) + ($795))|0;
         $798 = $797 >> 16;
         $799 = (($783) + ($$02829$i59<<2)|0);
         HEAP32[$799>>2] = $798;
         $800 = HEAP32[$788>>2]|0;
         $801 = $800 & 32768;
         $802 = ($801|0)==(0);
         do {
          if (!($802)) {
           $803 = HEAP32[$792>>2]|0;
           $804 = $803 & 32768;
           $805 = ($804|0)==(0);
           if ($805) {
            break;
           }
           $806 = $798 | 32768;
           HEAP32[$799>>2] = $806;
          }
         } while(0);
         $807 = (($$02829$i59) + 1)|0;
         $exitcond$i60 = ($807|0)==($764|0);
         if ($exitcond$i60) {
          $$0$i62 = $783;
          break;
         } else {
          $$02829$i59 = $807;
         }
        }
       } else {
        $$0$i62 = 0;
       }
      } while(0);
      $808 = HEAP32[$347>>2]|0;
      $809 = ((($808)) + 24|0);
      HEAP32[$809>>2] = $$0$i62;
      $810 = HEAP32[$316>>2]|0;
      $811 = HEAP32[$404>>2]|0;
      $812 = (($810) + ($811<<2)|0);
      $813 = HEAP32[$812>>2]|0;
      $814 = HEAP32[$347>>2]|0;
      $815 = ((($814)) + 28|0);
      $816 = HEAP32[$815>>2]|0;
      $817 = ((($814)) + 56|0);
      $818 = HEAP32[$817>>2]|0;
      $819 = ((($813)) + 1284|0);
      $820 = HEAP32[$819>>2]|0;
      $821 = ($816|0)!=(0|0);
      $822 = ($818|0)!=(0|0);
      $or$cond$i65 = $821 & $822;
      do {
       if ($or$cond$i65) {
        $823 = $820 << 2;
        $824 = (($823) + 7)|0;
        $825 = $824 & -8;
        $826 = HEAP32[$22>>2]|0;
        $827 = (($826) + ($825))|0;
        $828 = HEAP32[$25>>2]|0;
        $829 = ($827|0)>($828|0);
        $830 = HEAP32[$28>>2]|0;
        if ($829) {
         $831 = ($830|0)==(0|0);
         if (!($831)) {
          $832 = $830;
          $833 = (_malloc(8)|0);
          $834 = HEAP32[$317>>2]|0;
          $835 = (($834) + ($826))|0;
          HEAP32[$317>>2] = $835;
          $836 = HEAP32[$318>>2]|0;
          $837 = ((($833)) + 4|0);
          HEAP32[$837>>2] = $836;
          HEAP32[$833>>2] = $832;
          HEAP32[$318>>2] = $833;
         }
         HEAP32[$25>>2] = $825;
         $838 = (_malloc($825)|0);
         HEAP32[$28>>2] = $838;
         HEAP32[$22>>2] = 0;
         $840 = $838;$841 = 0;
        } else {
         $840 = $830;$841 = $826;
        }
        $839 = (($840) + ($841)|0);
        $842 = (($841) + ($825))|0;
        HEAP32[$22>>2] = $842;
        $843 = ($820|0)>(0);
        if ($843) {
         $$02829$i67 = 0;
        } else {
         $$0$i70 = $839;
         break;
        }
        while(1) {
         $844 = (($816) + ($$02829$i67<<2)|0);
         $845 = HEAP32[$844>>2]|0;
         $846 = $845 & 32767;
         $847 = ($846*56174)|0;
         $848 = (($818) + ($$02829$i67<<2)|0);
         $849 = HEAP32[$848>>2]|0;
         $850 = $849 & 32767;
         $851 = ($850*9362)|0;
         $852 = (($847) + 32768)|0;
         $853 = (($852) + ($851))|0;
         $854 = $853 >> 16;
         $855 = (($839) + ($$02829$i67<<2)|0);
         HEAP32[$855>>2] = $854;
         $856 = HEAP32[$844>>2]|0;
         $857 = $856 & 32768;
         $858 = ($857|0)==(0);
         do {
          if (!($858)) {
           $859 = HEAP32[$848>>2]|0;
           $860 = $859 & 32768;
           $861 = ($860|0)==(0);
           if ($861) {
            break;
           }
           $862 = $854 | 32768;
           HEAP32[$855>>2] = $862;
          }
         } while(0);
         $863 = (($$02829$i67) + 1)|0;
         $exitcond$i68 = ($863|0)==($820|0);
         if ($exitcond$i68) {
          $$0$i70 = $839;
          break;
         } else {
          $$02829$i67 = $863;
         }
        }
       } else {
        $$0$i70 = 0;
       }
      } while(0);
      $864 = HEAP32[$347>>2]|0;
      $865 = ((($864)) + 32|0);
      HEAP32[$865>>2] = $$0$i70;
      $866 = HEAP32[$316>>2]|0;
      $867 = HEAP32[$404>>2]|0;
      $868 = (($866) + ($867<<2)|0);
      $869 = HEAP32[$868>>2]|0;
      $870 = HEAP32[$347>>2]|0;
      $871 = ((($870)) + 28|0);
      $872 = HEAP32[$871>>2]|0;
      $873 = ((($870)) + 56|0);
      $874 = HEAP32[$873>>2]|0;
      $875 = ((($869)) + 1284|0);
      $876 = HEAP32[$875>>2]|0;
      $877 = ($872|0)!=(0|0);
      $878 = ($874|0)!=(0|0);
      $or$cond$i73 = $877 & $878;
      do {
       if ($or$cond$i73) {
        $879 = $876 << 2;
        $880 = (($879) + 7)|0;
        $881 = $880 & -8;
        $882 = HEAP32[$22>>2]|0;
        $883 = (($882) + ($881))|0;
        $884 = HEAP32[$25>>2]|0;
        $885 = ($883|0)>($884|0);
        $886 = HEAP32[$28>>2]|0;
        if ($885) {
         $887 = ($886|0)==(0|0);
         if (!($887)) {
          $888 = $886;
          $889 = (_malloc(8)|0);
          $890 = HEAP32[$317>>2]|0;
          $891 = (($890) + ($882))|0;
          HEAP32[$317>>2] = $891;
          $892 = HEAP32[$318>>2]|0;
          $893 = ((($889)) + 4|0);
          HEAP32[$893>>2] = $892;
          HEAP32[$889>>2] = $888;
          HEAP32[$318>>2] = $889;
         }
         HEAP32[$25>>2] = $881;
         $894 = (_malloc($881)|0);
         HEAP32[$28>>2] = $894;
         HEAP32[$22>>2] = 0;
         $896 = $894;$897 = 0;
        } else {
         $896 = $886;$897 = $882;
        }
        $895 = (($896) + ($897)|0);
        $898 = (($897) + ($881))|0;
        HEAP32[$22>>2] = $898;
        $899 = ($876|0)>(0);
        if ($899) {
         $$02829$i75 = 0;
        } else {
         $$0$i78 = $895;
         break;
        }
        while(1) {
         $900 = (($872) + ($$02829$i75<<2)|0);
         $901 = HEAP32[$900>>2]|0;
         $902 = $901 & 32767;
         $903 = ($902*46812)|0;
         $904 = (($874) + ($$02829$i75<<2)|0);
         $905 = HEAP32[$904>>2]|0;
         $906 = $905 & 32767;
         $907 = ($906*18724)|0;
         $908 = (($903) + 32768)|0;
         $909 = (($908) + ($907))|0;
         $910 = $909 >> 16;
         $911 = (($895) + ($$02829$i75<<2)|0);
         HEAP32[$911>>2] = $910;
         $912 = HEAP32[$900>>2]|0;
         $913 = $912 & 32768;
         $914 = ($913|0)==(0);
         do {
          if (!($914)) {
           $915 = HEAP32[$904>>2]|0;
           $916 = $915 & 32768;
           $917 = ($916|0)==(0);
           if ($917) {
            break;
           }
           $918 = $910 | 32768;
           HEAP32[$911>>2] = $918;
          }
         } while(0);
         $919 = (($$02829$i75) + 1)|0;
         $exitcond$i76 = ($919|0)==($876|0);
         if ($exitcond$i76) {
          $$0$i78 = $895;
          break;
         } else {
          $$02829$i75 = $919;
         }
        }
       } else {
        $$0$i78 = 0;
       }
      } while(0);
      $920 = HEAP32[$347>>2]|0;
      $921 = ((($920)) + 36|0);
      HEAP32[$921>>2] = $$0$i78;
      $922 = HEAP32[$316>>2]|0;
      $923 = HEAP32[$404>>2]|0;
      $924 = (($922) + ($923<<2)|0);
      $925 = HEAP32[$924>>2]|0;
      $926 = HEAP32[$347>>2]|0;
      $927 = ((($926)) + 28|0);
      $928 = HEAP32[$927>>2]|0;
      $929 = ((($926)) + 56|0);
      $930 = HEAP32[$929>>2]|0;
      $931 = ((($925)) + 1284|0);
      $932 = HEAP32[$931>>2]|0;
      $933 = ($928|0)!=(0|0);
      $934 = ($930|0)!=(0|0);
      $or$cond$i81 = $933 & $934;
      do {
       if ($or$cond$i81) {
        $935 = $932 << 2;
        $936 = (($935) + 7)|0;
        $937 = $936 & -8;
        $938 = HEAP32[$22>>2]|0;
        $939 = (($938) + ($937))|0;
        $940 = HEAP32[$25>>2]|0;
        $941 = ($939|0)>($940|0);
        $942 = HEAP32[$28>>2]|0;
        if ($941) {
         $943 = ($942|0)==(0|0);
         if (!($943)) {
          $944 = $942;
          $945 = (_malloc(8)|0);
          $946 = HEAP32[$317>>2]|0;
          $947 = (($946) + ($938))|0;
          HEAP32[$317>>2] = $947;
          $948 = HEAP32[$318>>2]|0;
          $949 = ((($945)) + 4|0);
          HEAP32[$949>>2] = $948;
          HEAP32[$945>>2] = $944;
          HEAP32[$318>>2] = $945;
         }
         HEAP32[$25>>2] = $937;
         $950 = (_malloc($937)|0);
         HEAP32[$28>>2] = $950;
         HEAP32[$22>>2] = 0;
         $952 = $950;$953 = 0;
        } else {
         $952 = $942;$953 = $938;
        }
        $951 = (($952) + ($953)|0);
        $954 = (($953) + ($937))|0;
        HEAP32[$22>>2] = $954;
        $955 = ($932|0)>(0);
        if ($955) {
         $$02829$i83 = 0;
        } else {
         $$0$i86 = $951;
         break;
        }
        while(1) {
         $956 = (($928) + ($$02829$i83<<2)|0);
         $957 = HEAP32[$956>>2]|0;
         $958 = $957 & 32767;
         $959 = ($958*37450)|0;
         $960 = (($930) + ($$02829$i83<<2)|0);
         $961 = HEAP32[$960>>2]|0;
         $962 = $961 & 32767;
         $963 = ($962*28086)|0;
         $964 = (($959) + 32768)|0;
         $965 = (($964) + ($963))|0;
         $966 = $965 >> 16;
         $967 = (($951) + ($$02829$i83<<2)|0);
         HEAP32[$967>>2] = $966;
         $968 = HEAP32[$956>>2]|0;
         $969 = $968 & 32768;
         $970 = ($969|0)==(0);
         do {
          if (!($970)) {
           $971 = HEAP32[$960>>2]|0;
           $972 = $971 & 32768;
           $973 = ($972|0)==(0);
           if ($973) {
            break;
           }
           $974 = $966 | 32768;
           HEAP32[$967>>2] = $974;
          }
         } while(0);
         $975 = (($$02829$i83) + 1)|0;
         $exitcond$i84 = ($975|0)==($932|0);
         if ($exitcond$i84) {
          $$0$i86 = $951;
          break;
         } else {
          $$02829$i83 = $975;
         }
        }
       } else {
        $$0$i86 = 0;
       }
      } while(0);
      $976 = HEAP32[$347>>2]|0;
      $977 = ((($976)) + 40|0);
      HEAP32[$977>>2] = $$0$i86;
      $978 = HEAP32[$316>>2]|0;
      $979 = HEAP32[$404>>2]|0;
      $980 = (($978) + ($979<<2)|0);
      $981 = HEAP32[$980>>2]|0;
      $982 = HEAP32[$347>>2]|0;
      $983 = ((($982)) + 28|0);
      $984 = HEAP32[$983>>2]|0;
      $985 = ((($982)) + 56|0);
      $986 = HEAP32[$985>>2]|0;
      $987 = ((($981)) + 1284|0);
      $988 = HEAP32[$987>>2]|0;
      $989 = ($984|0)!=(0|0);
      $990 = ($986|0)!=(0|0);
      $or$cond$i89 = $989 & $990;
      do {
       if ($or$cond$i89) {
        $991 = $988 << 2;
        $992 = (($991) + 7)|0;
        $993 = $992 & -8;
        $994 = HEAP32[$22>>2]|0;
        $995 = (($994) + ($993))|0;
        $996 = HEAP32[$25>>2]|0;
        $997 = ($995|0)>($996|0);
        $998 = HEAP32[$28>>2]|0;
        if ($997) {
         $999 = ($998|0)==(0|0);
         if (!($999)) {
          $1000 = $998;
          $1001 = (_malloc(8)|0);
          $1002 = HEAP32[$317>>2]|0;
          $1003 = (($1002) + ($994))|0;
          HEAP32[$317>>2] = $1003;
          $1004 = HEAP32[$318>>2]|0;
          $1005 = ((($1001)) + 4|0);
          HEAP32[$1005>>2] = $1004;
          HEAP32[$1001>>2] = $1000;
          HEAP32[$318>>2] = $1001;
         }
         HEAP32[$25>>2] = $993;
         $1006 = (_malloc($993)|0);
         HEAP32[$28>>2] = $1006;
         HEAP32[$22>>2] = 0;
         $1008 = $1006;$1009 = 0;
        } else {
         $1008 = $998;$1009 = $994;
        }
        $1007 = (($1008) + ($1009)|0);
        $1010 = (($1009) + ($993))|0;
        HEAP32[$22>>2] = $1010;
        $1011 = ($988|0)>(0);
        if ($1011) {
         $$02829$i91 = 0;
        } else {
         $$0$i94 = $1007;
         break;
        }
        while(1) {
         $1012 = (($984) + ($$02829$i91<<2)|0);
         $1013 = HEAP32[$1012>>2]|0;
         $1014 = $1013 & 32767;
         $1015 = ($1014*28087)|0;
         $1016 = (($986) + ($$02829$i91<<2)|0);
         $1017 = HEAP32[$1016>>2]|0;
         $1018 = $1017 & 32767;
         $1019 = ($1018*37449)|0;
         $1020 = (($1015) + 32768)|0;
         $1021 = (($1020) + ($1019))|0;
         $1022 = $1021 >> 16;
         $1023 = (($1007) + ($$02829$i91<<2)|0);
         HEAP32[$1023>>2] = $1022;
         $1024 = HEAP32[$1012>>2]|0;
         $1025 = $1024 & 32768;
         $1026 = ($1025|0)==(0);
         do {
          if (!($1026)) {
           $1027 = HEAP32[$1016>>2]|0;
           $1028 = $1027 & 32768;
           $1029 = ($1028|0)==(0);
           if ($1029) {
            break;
           }
           $1030 = $1022 | 32768;
           HEAP32[$1023>>2] = $1030;
          }
         } while(0);
         $1031 = (($$02829$i91) + 1)|0;
         $exitcond$i92 = ($1031|0)==($988|0);
         if ($exitcond$i92) {
          $$0$i94 = $1007;
          break;
         } else {
          $$02829$i91 = $1031;
         }
        }
       } else {
        $$0$i94 = 0;
       }
      } while(0);
      $1032 = HEAP32[$347>>2]|0;
      $1033 = ((($1032)) + 44|0);
      HEAP32[$1033>>2] = $$0$i94;
      $1034 = HEAP32[$316>>2]|0;
      $1035 = HEAP32[$404>>2]|0;
      $1036 = (($1034) + ($1035<<2)|0);
      $1037 = HEAP32[$1036>>2]|0;
      $1038 = HEAP32[$347>>2]|0;
      $1039 = ((($1038)) + 28|0);
      $1040 = HEAP32[$1039>>2]|0;
      $1041 = ((($1038)) + 56|0);
      $1042 = HEAP32[$1041>>2]|0;
      $1043 = ((($1037)) + 1284|0);
      $1044 = HEAP32[$1043>>2]|0;
      $1045 = ($1040|0)!=(0|0);
      $1046 = ($1042|0)!=(0|0);
      $or$cond$i97 = $1045 & $1046;
      do {
       if ($or$cond$i97) {
        $1047 = $1044 << 2;
        $1048 = (($1047) + 7)|0;
        $1049 = $1048 & -8;
        $1050 = HEAP32[$22>>2]|0;
        $1051 = (($1050) + ($1049))|0;
        $1052 = HEAP32[$25>>2]|0;
        $1053 = ($1051|0)>($1052|0);
        $1054 = HEAP32[$28>>2]|0;
        if ($1053) {
         $1055 = ($1054|0)==(0|0);
         if (!($1055)) {
          $1056 = $1054;
          $1057 = (_malloc(8)|0);
          $1058 = HEAP32[$317>>2]|0;
          $1059 = (($1058) + ($1050))|0;
          HEAP32[$317>>2] = $1059;
          $1060 = HEAP32[$318>>2]|0;
          $1061 = ((($1057)) + 4|0);
          HEAP32[$1061>>2] = $1060;
          HEAP32[$1057>>2] = $1056;
          HEAP32[$318>>2] = $1057;
         }
         HEAP32[$25>>2] = $1049;
         $1062 = (_malloc($1049)|0);
         HEAP32[$28>>2] = $1062;
         HEAP32[$22>>2] = 0;
         $1064 = $1062;$1065 = 0;
        } else {
         $1064 = $1054;$1065 = $1050;
        }
        $1063 = (($1064) + ($1065)|0);
        $1066 = (($1065) + ($1049))|0;
        HEAP32[$22>>2] = $1066;
        $1067 = ($1044|0)>(0);
        if ($1067) {
         $$02829$i99 = 0;
        } else {
         $$0$i102 = $1063;
         break;
        }
        while(1) {
         $1068 = (($1040) + ($$02829$i99<<2)|0);
         $1069 = HEAP32[$1068>>2]|0;
         $1070 = $1069 & 32767;
         $1071 = ($1070*18725)|0;
         $1072 = (($1042) + ($$02829$i99<<2)|0);
         $1073 = HEAP32[$1072>>2]|0;
         $1074 = $1073 & 32767;
         $1075 = ($1074*46811)|0;
         $1076 = (($1071) + 32768)|0;
         $1077 = (($1076) + ($1075))|0;
         $1078 = $1077 >> 16;
         $1079 = (($1063) + ($$02829$i99<<2)|0);
         HEAP32[$1079>>2] = $1078;
         $1080 = HEAP32[$1068>>2]|0;
         $1081 = $1080 & 32768;
         $1082 = ($1081|0)==(0);
         do {
          if (!($1082)) {
           $1083 = HEAP32[$1072>>2]|0;
           $1084 = $1083 & 32768;
           $1085 = ($1084|0)==(0);
           if ($1085) {
            break;
           }
           $1086 = $1078 | 32768;
           HEAP32[$1079>>2] = $1086;
          }
         } while(0);
         $1087 = (($$02829$i99) + 1)|0;
         $exitcond$i100 = ($1087|0)==($1044|0);
         if ($exitcond$i100) {
          $$0$i102 = $1063;
          break;
         } else {
          $$02829$i99 = $1087;
         }
        }
       } else {
        $$0$i102 = 0;
       }
      } while(0);
      $1088 = HEAP32[$347>>2]|0;
      $1089 = ((($1088)) + 48|0);
      HEAP32[$1089>>2] = $$0$i102;
      $1090 = HEAP32[$316>>2]|0;
      $1091 = HEAP32[$404>>2]|0;
      $1092 = (($1090) + ($1091<<2)|0);
      $1093 = HEAP32[$1092>>2]|0;
      $1094 = HEAP32[$347>>2]|0;
      $1095 = ((($1094)) + 28|0);
      $1096 = HEAP32[$1095>>2]|0;
      $1097 = ((($1094)) + 56|0);
      $1098 = HEAP32[$1097>>2]|0;
      $1099 = ((($1093)) + 1284|0);
      $1100 = HEAP32[$1099>>2]|0;
      $1101 = ($1096|0)!=(0|0);
      $1102 = ($1098|0)!=(0|0);
      $or$cond$i105 = $1101 & $1102;
      do {
       if ($or$cond$i105) {
        $1103 = $1100 << 2;
        $1104 = (($1103) + 7)|0;
        $1105 = $1104 & -8;
        $1106 = HEAP32[$22>>2]|0;
        $1107 = (($1106) + ($1105))|0;
        $1108 = HEAP32[$25>>2]|0;
        $1109 = ($1107|0)>($1108|0);
        $1110 = HEAP32[$28>>2]|0;
        if ($1109) {
         $1111 = ($1110|0)==(0|0);
         if (!($1111)) {
          $1112 = $1110;
          $1113 = (_malloc(8)|0);
          $1114 = HEAP32[$317>>2]|0;
          $1115 = (($1114) + ($1106))|0;
          HEAP32[$317>>2] = $1115;
          $1116 = HEAP32[$318>>2]|0;
          $1117 = ((($1113)) + 4|0);
          HEAP32[$1117>>2] = $1116;
          HEAP32[$1113>>2] = $1112;
          HEAP32[$318>>2] = $1113;
         }
         HEAP32[$25>>2] = $1105;
         $1118 = (_malloc($1105)|0);
         HEAP32[$28>>2] = $1118;
         HEAP32[$22>>2] = 0;
         $1120 = $1118;$1121 = 0;
        } else {
         $1120 = $1110;$1121 = $1106;
        }
        $1119 = (($1120) + ($1121)|0);
        $1122 = (($1121) + ($1105))|0;
        HEAP32[$22>>2] = $1122;
        $1123 = ($1100|0)>(0);
        if ($1123) {
         $$02829$i107 = 0;
        } else {
         $$0$i110 = $1119;
         break;
        }
        while(1) {
         $1124 = (($1096) + ($$02829$i107<<2)|0);
         $1125 = HEAP32[$1124>>2]|0;
         $1126 = $1125 & 32767;
         $1127 = ($1126*9363)|0;
         $1128 = (($1098) + ($$02829$i107<<2)|0);
         $1129 = HEAP32[$1128>>2]|0;
         $1130 = $1129 & 32767;
         $1131 = ($1130*56173)|0;
         $1132 = (($1127) + 32768)|0;
         $1133 = (($1132) + ($1131))|0;
         $1134 = $1133 >> 16;
         $1135 = (($1119) + ($$02829$i107<<2)|0);
         HEAP32[$1135>>2] = $1134;
         $1136 = HEAP32[$1124>>2]|0;
         $1137 = $1136 & 32768;
         $1138 = ($1137|0)==(0);
         do {
          if (!($1138)) {
           $1139 = HEAP32[$1128>>2]|0;
           $1140 = $1139 & 32768;
           $1141 = ($1140|0)==(0);
           if ($1141) {
            break;
           }
           $1142 = $1134 | 32768;
           HEAP32[$1135>>2] = $1142;
          }
         } while(0);
         $1143 = (($$02829$i107) + 1)|0;
         $exitcond$i108 = ($1143|0)==($1100|0);
         if ($exitcond$i108) {
          $$0$i110 = $1119;
          break;
         } else {
          $$02829$i107 = $1143;
         }
        }
       } else {
        $$0$i110 = 0;
       }
      } while(0);
      $1144 = HEAP32[$347>>2]|0;
      $1145 = ((($1144)) + 52|0);
      HEAP32[$1145>>2] = $$0$i110;
     }
    }
    $1146 = (($$1376426) + 1)|0;
    $1147 = HEAP32[$16>>2]|0;
    $1148 = ($1146|0)<($1147|0);
    if (!($1148)) {
     $$pre$phi451Z2D = $316;$1150 = $1147;
     break L69;
    }
    $$pre148 = HEAP32[$22>>2]|0;
    $$pre149 = HEAP32[$28>>2]|0;
    $$1376426 = $1146;$331 = $$pre148;$334 = $$pre149;
   }
   STACKTOP = sp;return ($$3|0);
  } else {
   $$pre450 = ((($11)) + 48|0);
   $$pre$phi451Z2D = $$pre450;$1150 = $313;
  }
 } while(0);
 HEAPF32[$86>>2] = $$0390$lcssa;
 $1149 = $1150 << 2;
 $$alloca_mul6 = $1149;
 $1151 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul6)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul6)|0)+15)&-16)|0);;
 $$alloca_mul8 = $1149;
 $1152 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul8)|0)+15)&-16)|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(((((1*$$alloca_mul8)|0)+15)&-16)|0);;
 $1153 = HEAP32[$4>>2]|0;
 $1154 = ((($1153)) + 104|0);
 $1155 = HEAP32[$1154>>2]|0;
 $1156 = ((($1155)) + 80|0);
 $1157 = HEAP32[$1156>>2]|0;
 $not$$i113 = ($1157|0)!=(0);
 $1158 = $not$$i113 ? 0 : 7;
 $1159 = ((($11)) + 44|0);
 $1160 = ((($0)) + 24|0);
 $1161 = ((($0)) + 32|0);
 $1162 = ((($9)) + 2868|0);
 $1163 = ((($11)) + 52|0);
 $1164 = ((($1)) + 4|0);
 $$2389419 = $1158;
 while(1) {
  $1165 = (((($13)) + 12|0) + ($$2389419<<2)|0);
  $1166 = HEAP32[$1165>>2]|0;
  _oggpack_write($1166,0,1);
  $1167 = HEAP32[$1159>>2]|0;
  _oggpack_write($1166,$94,$1167);
  $1168 = HEAP32[$93>>2]|0;
  $1169 = ($1168|0)==(0);
  if (!($1169)) {
   $1170 = HEAP32[$1160>>2]|0;
   _oggpack_write($1166,$1170,1);
   $1171 = HEAP32[$1161>>2]|0;
   _oggpack_write($1166,$1171,1);
  }
  $1172 = HEAP32[$16>>2]|0;
  $1173 = ($1172|0)>(0);
  if ($1173) {
   $$2377402 = 0;
   while(1) {
    $1174 = (((($96)) + 4|0) + ($$2377402<<2)|0);
    $1175 = HEAP32[$1174>>2]|0;
    $1176 = (($61) + ($$2377402<<2)|0);
    $1177 = HEAP32[$1176>>2]|0;
    $1178 = HEAP32[$$pre$phi451Z2D>>2]|0;
    $1179 = (((($96)) + 1028|0) + ($1175<<2)|0);
    $1180 = HEAP32[$1179>>2]|0;
    $1181 = (($1178) + ($1180<<2)|0);
    $1182 = HEAP32[$1181>>2]|0;
    $1183 = (($82) + ($$2377402<<2)|0);
    $1184 = HEAP32[$1183>>2]|0;
    $1185 = (($1184) + ($$2389419<<2)|0);
    $1186 = HEAP32[$1185>>2]|0;
    $1187 = ((($1182)) + 1296|0);
    $1188 = HEAP32[$1187>>2]|0;
    $1189 = ((($1182)) + 1284|0);
    $1190 = HEAP32[$1189>>2]|0;
    $1191 = HEAP32[$4>>2]|0;
    $1192 = ((($1191)) + 4|0);
    $1193 = HEAP32[$1192>>2]|0;
    $1194 = ((($1193)) + 28|0);
    $1195 = HEAP32[$1194>>2]|0;
    $1196 = ((($1195)) + 2848|0);
    $1197 = HEAP32[$1196>>2]|0;
    $1198 = ($1186|0)==(0|0);
    do {
     if ($1198) {
      _oggpack_write($1166,0,1);
      $1449 = HEAP32[$14>>2]|0;
      $1450 = (($1449|0) / 2)&-1;
      $1451 = $1450 << 2;
      _memset(($1177|0),0,($1451|0))|0;
      $$0$i120 = 0;
     } else {
      $1199 = ($1190|0)>(0);
      L303: do {
       if ($1199) {
        $1200 = ((($1188)) + 832|0);
        $$0256316$i = 0;
        while(1) {
         $1201 = (($1186) + ($$0256316$i<<2)|0);
         $1202 = HEAP32[$1201>>2]|0;
         $1203 = $1202 & 32767;
         $1204 = HEAP32[$1200>>2]|0;
         switch ($1204|0) {
         case 1:  {
          $1205 = $1203 >>> 2;
          $$0267$i = $1205;
          break;
         }
         case 2:  {
          $1206 = $1203 >>> 3;
          $$0267$i = $1206;
          break;
         }
         case 3:  {
          $1207 = (($1203>>>0) / 12)&-1;
          $$0267$i = $1207;
          break;
         }
         case 4:  {
          $1208 = $1203 >>> 4;
          $$0267$i = $1208;
          break;
         }
         default: {
          $$0267$i = $1203;
         }
         }
         $1209 = $1202 & 32768;
         $1210 = $1209 | $$0267$i;
         HEAP32[$1201>>2] = $1210;
         $1211 = (($$0256316$i) + 1)|0;
         $exitcond325$i = ($1211|0)==($1190|0);
         if ($exitcond325$i) {
          break L303;
         } else {
          $$0256316$i = $1211;
         }
        }
       }
      } while(0);
      $1212 = HEAP32[$1186>>2]|0;
      HEAP32[$1>>2] = $1212;
      $1213 = ((($1186)) + 4|0);
      $1214 = HEAP32[$1213>>2]|0;
      HEAP32[$1164>>2] = $1214;
      $1215 = ($1190|0)>(2);
      $1216 = ((($1182)) + 1292|0);
      if ($1215) {
       $$1311$i = 2;
       while(1) {
        $1217 = (($$1311$i) + -2)|0;
        $1218 = (((($1182)) + 1032|0) + ($1217<<2)|0);
        $1219 = HEAP32[$1218>>2]|0;
        $1220 = (((($1182)) + 780|0) + ($1217<<2)|0);
        $1221 = HEAP32[$1220>>2]|0;
        $1222 = (((($1188)) + 836|0) + ($1219<<2)|0);
        $1223 = HEAP32[$1222>>2]|0;
        $1224 = (((($1188)) + 836|0) + ($1221<<2)|0);
        $1225 = HEAP32[$1224>>2]|0;
        $1226 = (($1186) + ($1219<<2)|0);
        $1227 = HEAP32[$1226>>2]|0;
        $1228 = (($1186) + ($1221<<2)|0);
        $1229 = HEAP32[$1228>>2]|0;
        $1230 = (((($1188)) + 836|0) + ($$1311$i<<2)|0);
        $1231 = HEAP32[$1230>>2]|0;
        $1232 = $1227 & 32767;
        $1233 = $1229 & 32767;
        $1234 = (($1233) - ($1232))|0;
        $1235 = (($1225) - ($1223))|0;
        $ispos$i$i = ($1234|0)>(-1);
        $neg$i$i = (0 - ($1234))|0;
        $1236 = $ispos$i$i ? $1234 : $neg$i$i;
        $1237 = (($1231) - ($1223))|0;
        $1238 = Math_imul($1236, $1237)|0;
        $1239 = (($1238|0) / ($1235|0))&-1;
        $1240 = ($1234|0)<(0);
        $1241 = (0 - ($1239))|0;
        $$0$p$i$i = $1240 ? $1241 : $1239;
        $$0$i$i = (($$0$p$i$i) + ($1232))|0;
        $1242 = (($1186) + ($$1311$i<<2)|0);
        $1243 = HEAP32[$1242>>2]|0;
        $1244 = $1243 & 32768;
        $1245 = ($1244|0)!=(0);
        $1246 = ($1243|0)==($$0$i$i|0);
        $or$cond$i115 = $1245 | $1246;
        if ($or$cond$i115) {
         $1247 = $$0$i$i | 32768;
         HEAP32[$1242>>2] = $1247;
         $1248 = (($1) + ($$1311$i<<2)|0);
         HEAP32[$1248>>2] = 0;
        } else {
         $1249 = HEAP32[$1216>>2]|0;
         $1250 = (($1249) - ($$0$i$i))|0;
         $1251 = ($1250|0)<($$0$i$i|0);
         $$$i = $1251 ? $1250 : $$0$i$i;
         $1252 = (($1243) - ($$0$i$i))|0;
         $1253 = ($1252|0)<(0);
         do {
          if ($1253) {
           $1254 = (0 - ($$$i))|0;
           $1255 = ($1252|0)<($1254|0);
           if ($1255) {
            $1256 = $1252 ^ -1;
            $1257 = (($$$i) + ($1256))|0;
            $$0268$i = $1257;
            break;
           } else {
            $1258 = $1252 << 1;
            $1259 = $1258 ^ -1;
            $$0268$i = $1259;
            break;
           }
          } else {
           $1260 = ($$$i|0)>($1252|0);
           if ($1260) {
            $1262 = $1252 << 1;
            $$0268$i = $1262;
            break;
           } else {
            $1261 = (($$$i) + ($1252))|0;
            $$0268$i = $1261;
            break;
           }
          }
         } while(0);
         $1263 = (($1) + ($$1311$i<<2)|0);
         HEAP32[$1263>>2] = $$0268$i;
         HEAP32[$1226>>2] = $1232;
         $1264 = HEAP32[$1228>>2]|0;
         $1265 = $1264 & 32767;
         HEAP32[$1228>>2] = $1265;
        }
        $1266 = (($$1311$i) + 1)|0;
        $exitcond324$i = ($1266|0)==($1190|0);
        if ($exitcond324$i) {
         break;
        } else {
         $$1311$i = $1266;
        }
       }
       $$pre$i = HEAP32[$1>>2]|0;
       $$pre326$i = HEAP32[$1164>>2]|0;
       $1285 = $$pre$i;$1292 = $$pre326$i;
      } else {
       $1285 = $1212;$1292 = $1214;
      }
      _oggpack_write($1166,1,1);
      $1267 = ((($1182)) + 1308|0);
      $1268 = HEAP32[$1267>>2]|0;
      $1269 = (($1268) + 1)|0;
      HEAP32[$1267>>2] = $1269;
      $1270 = HEAP32[$1216>>2]|0;
      $1271 = (($1270) + -1)|0;
      $1272 = ($1271|0)==(0);
      if ($1272) {
       $1273 = ((($1182)) + 1304|0);
       $1274 = HEAP32[$1273>>2]|0;
       HEAP32[$1273>>2] = $1274;
       $$0$lcssa$i6$i = 0;$1394 = $1273;
      } else {
       $$056$i$i = $1271;$$07$i$i = 0;
       while(1) {
        $1275 = $$056$i$i >>> 1;
        $1276 = (($$07$i$i) + 1)|0;
        $1277 = ($1275|0)==(0);
        if ($1277) {
         $$0$lcssa$i$i = $1276;
         break;
        } else {
         $$056$i$i = $1275;$$07$i$i = $1276;
        }
       }
       $1278 = $$0$lcssa$i$i << 1;
       $1279 = ((($1182)) + 1304|0);
       $1280 = HEAP32[$1279>>2]|0;
       $1281 = (($1280) + ($1278))|0;
       HEAP32[$1279>>2] = $1281;
       if ($1272) {
        $$0$lcssa$i6$i = 0;$1394 = $1279;
       } else {
        $$056$i3$i = $1271;$$07$i2$i = 0;
        while(1) {
         $1282 = $$056$i3$i >>> 1;
         $1283 = (($$07$i2$i) + 1)|0;
         $1284 = ($1282|0)==(0);
         if ($1284) {
          $$0$lcssa$i6$i = $1283;$1394 = $1279;
          break;
         } else {
          $$056$i3$i = $1282;$$07$i2$i = $1283;
         }
        }
       }
      }
      _oggpack_write($1166,$1285,$$0$lcssa$i6$i);
      $1286 = HEAP32[$1216>>2]|0;
      $1287 = (($1286) + -1)|0;
      $1288 = ($1287|0)==(0);
      if ($1288) {
       $$0$lcssa$i14$i = 0;
      } else {
       $$056$i11$i = $1287;$$07$i10$i = 0;
       while(1) {
        $1289 = $$056$i11$i >>> 1;
        $1290 = (($$07$i10$i) + 1)|0;
        $1291 = ($1289|0)==(0);
        if ($1291) {
         $$0$lcssa$i14$i = $1290;
         break;
        } else {
         $$056$i11$i = $1289;$$07$i10$i = $1290;
        }
       }
      }
      _oggpack_write($1166,$1292,$$0$lcssa$i14$i);
      $1293 = HEAP32[$1188>>2]|0;
      $1294 = ($1293|0)>(0);
      if ($1294) {
       $1295 = ((($1182)) + 1300|0);
       $$0263302$i = 2;$$2307$i = 0;
       while(1) {
        $1296 = (((($1188)) + 4|0) + ($$2307$i<<2)|0);
        $1297 = HEAP32[$1296>>2]|0;
        $1298 = (((($1188)) + 128|0) + ($1297<<2)|0);
        $1299 = HEAP32[$1298>>2]|0;
        $1300 = (((($1188)) + 192|0) + ($1297<<2)|0);
        $1301 = HEAP32[$1300>>2]|0;
        $1302 = 1 << $1301;
        ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
        $1303 = ($1301|0)==(0);
        if (!($1303)) {
         ;HEAP32[$3>>2]=0|0;HEAP32[$3+4>>2]=0|0;HEAP32[$3+8>>2]=0|0;HEAP32[$3+12>>2]=0|0;HEAP32[$3+16>>2]=0|0;HEAP32[$3+20>>2]=0|0;HEAP32[$3+24>>2]=0|0;HEAP32[$3+28>>2]=0|0;
         $1304 = ($1301|0)==(31);
         if (!($1304)) {
          $$0270291$i = 0;
          while(1) {
           $1320 = ((((($1188)) + 320|0) + ($1297<<5)|0) + ($$0270291$i<<2)|0);
           $1321 = HEAP32[$1320>>2]|0;
           $1322 = ($1321|0)<(0);
           if ($1322) {
            $$sink$i = 1;
           } else {
            $1323 = (((($1195)) + 1824|0) + ($1321<<2)|0);
            $1324 = HEAP32[$1323>>2]|0;
            $1325 = ((($1324)) + 4|0);
            $1326 = HEAP32[$1325>>2]|0;
            $$sink$i = $1326;
           }
           $1327 = (($3) + ($$0270291$i<<2)|0);
           HEAP32[$1327>>2] = $$sink$i;
           $1328 = (($$0270291$i) + 1)|0;
           $1329 = ($1328|0)<($1302|0);
           if ($1329) {
            $$0270291$i = $1328;
           } else {
            break;
           }
          }
         }
         $1305 = ($1299|0)>(0);
         if ($1305) {
          if ($1304) {
           $$0273296$i = 0;$$0274295$i = 0;$$1271297$i = 0;
           while(1) {
            $1330 = (($2) + ($$1271297$i<<2)|0);
            $1331 = HEAP32[$1330>>2]|0;
            $1332 = $1331 << $$0273296$i;
            $1333 = $1332 | $$0274295$i;
            $1334 = (($$0273296$i) + 31)|0;
            $1335 = (($$1271297$i) + 1)|0;
            $exitcond322$i = ($1335|0)==($1299|0);
            if ($exitcond322$i) {
             $$0274$lcssa$i = $1333;
             break;
            } else {
             $$0273296$i = $1334;$$0274295$i = $1333;$$1271297$i = $1335;
            }
           }
          } else {
           $$0273296$us$i = 0;$$0274295$us$i = 0;$$1271297$us$i = 0;
           while(1) {
            $1306 = (($$1271297$us$i) + ($$0263302$i))|0;
            $1307 = (($1) + ($1306<<2)|0);
            $1308 = HEAP32[$1307>>2]|0;
            $$0269293$us$i = 0;
            while(1) {
             $1309 = (($3) + ($$0269293$us$i<<2)|0);
             $1310 = HEAP32[$1309>>2]|0;
             $1311 = ($1308|0)<($1310|0);
             if ($1311) {
              label = 236;
              break;
             }
             $1312 = (($$0269293$us$i) + 1)|0;
             $1313 = ($1312|0)<($1302|0);
             if ($1313) {
              $$0269293$us$i = $1312;
             } else {
              label = 237;
              break;
             }
            }
            if ((label|0) == 236) {
             label = 0;
             $1314 = (($2) + ($$1271297$us$i<<2)|0);
             HEAP32[$1314>>2] = $$0269293$us$i;
             $1316 = $$0269293$us$i;
            }
            else if ((label|0) == 237) {
             label = 0;
             $$phi$trans$insert$i = (($2) + ($$1271297$us$i<<2)|0);
             $$pre327$i = HEAP32[$$phi$trans$insert$i>>2]|0;
             $1316 = $$pre327$i;
            }
            $1315 = $1316 << $$0273296$us$i;
            $1317 = $1315 | $$0274295$us$i;
            $1318 = (($$0273296$us$i) + ($1301))|0;
            $1319 = (($$1271297$us$i) + 1)|0;
            $exitcond$i116 = ($1319|0)==($1299|0);
            if ($exitcond$i116) {
             $$0274$lcssa$i = $1317;
             break;
            } else {
             $$0273296$us$i = $1318;$$0274295$us$i = $1317;$$1271297$us$i = $1319;
            }
           }
          }
          $1336 = ($$0274$lcssa$i|0)<(0);
          if ($1336) {
           $$0$i16$i = 0;
          } else {
           $$0274$lcssa$i123 = $$0274$lcssa$i;
           label = 244;
          }
         } else {
          $$0274$lcssa$i123 = 0;
          label = 244;
         }
         do {
          if ((label|0) == 244) {
           label = 0;
           $$in = (((($1188)) + 256|0) + ($1297<<2)|0);
           $1337 = HEAP32[$$in>>2]|0;
           $1338 = (((($1197) + (($1337*56)|0)|0)) + 12|0);
           $1339 = HEAP32[$1338>>2]|0;
           $1340 = ((($1339)) + 4|0);
           $1341 = HEAP32[$1340>>2]|0;
           $1342 = ($1341|0)>($$0274$lcssa$i123|0);
           if (!($1342)) {
            $$0$i16$i = 0;
            break;
           }
           $1343 = (((($1197) + (($1337*56)|0)|0)) + 20|0);
           $1344 = HEAP32[$1343>>2]|0;
           $1345 = (($1344) + ($$0274$lcssa$i123<<2)|0);
           $1346 = HEAP32[$1345>>2]|0;
           $1347 = ((($1339)) + 8|0);
           $1348 = HEAP32[$1347>>2]|0;
           $1349 = (($1348) + ($$0274$lcssa$i123)|0);
           $1350 = HEAP8[$1349>>0]|0;
           $1351 = $1350 << 24 >> 24;
           _oggpack_write($1166,$1346,$1351);
           $1352 = HEAP32[$1338>>2]|0;
           $1353 = ((($1352)) + 8|0);
           $1354 = HEAP32[$1353>>2]|0;
           $1355 = (($1354) + ($$0274$lcssa$i123)|0);
           $1356 = HEAP8[$1355>>0]|0;
           $1357 = $1356 << 24 >> 24;
           $$0$i16$i = $1357;
          }
         } while(0);
         $1358 = HEAP32[$1295>>2]|0;
         $1359 = (($1358) + ($$0$i16$i))|0;
         HEAP32[$1295>>2] = $1359;
        }
        $1360 = ($1299|0)>(0);
        if ($1360) {
         $$2272299$i = 0;
         while(1) {
          $1361 = (($2) + ($$2272299$i<<2)|0);
          $1362 = HEAP32[$1361>>2]|0;
          $1363 = ((((($1188)) + 320|0) + ($1297<<5)|0) + ($1362<<2)|0);
          $1364 = HEAP32[$1363>>2]|0;
          $1365 = ($1364|0)>(-1);
          do {
           if ($1365) {
            $1366 = (($$2272299$i) + ($$0263302$i))|0;
            $1367 = (($1) + ($1366<<2)|0);
            $1368 = HEAP32[$1367>>2]|0;
            $1369 = (((($1197) + (($1364*56)|0)|0)) + 4|0);
            $1370 = HEAP32[$1369>>2]|0;
            $1371 = ($1368|0)<($1370|0);
            if (!($1371)) {
             break;
            }
            $1372 = ($1368|0)<(0);
            do {
             if ($1372) {
              $$0$i8$i = 0;
             } else {
              $1373 = (((($1197) + (($1364*56)|0)|0)) + 12|0);
              $1374 = HEAP32[$1373>>2]|0;
              $1375 = ((($1374)) + 4|0);
              $1376 = HEAP32[$1375>>2]|0;
              $1377 = ($1376|0)>($1368|0);
              if (!($1377)) {
               $$0$i8$i = 0;
               break;
              }
              $1378 = (((($1197) + (($1364*56)|0)|0)) + 20|0);
              $1379 = HEAP32[$1378>>2]|0;
              $1380 = (($1379) + ($1368<<2)|0);
              $1381 = HEAP32[$1380>>2]|0;
              $1382 = ((($1374)) + 8|0);
              $1383 = HEAP32[$1382>>2]|0;
              $1384 = (($1383) + ($1368)|0);
              $1385 = HEAP8[$1384>>0]|0;
              $1386 = $1385 << 24 >> 24;
              _oggpack_write($1166,$1381,$1386);
              $1387 = HEAP32[$1373>>2]|0;
              $1388 = ((($1387)) + 8|0);
              $1389 = HEAP32[$1388>>2]|0;
              $1390 = (($1389) + ($1368)|0);
              $1391 = HEAP8[$1390>>0]|0;
              $1392 = $1391 << 24 >> 24;
              $$0$i8$i = $1392;
             }
            } while(0);
            $1393 = HEAP32[$1394>>2]|0;
            $1395 = (($1393) + ($$0$i8$i))|0;
            HEAP32[$1394>>2] = $1395;
           }
          } while(0);
          $1396 = (($$2272299$i) + 1)|0;
          $exitcond323$i = ($1396|0)==($1299|0);
          if ($exitcond323$i) {
           break;
          } else {
           $$2272299$i = $1396;
          }
         }
        }
        $1397 = (($1299) + ($$0263302$i))|0;
        $1398 = (($$2307$i) + 1)|0;
        $1399 = HEAP32[$1188>>2]|0;
        $1400 = ($1398|0)<($1399|0);
        if ($1400) {
         $$0263302$i = $1397;$$2307$i = $1398;
        } else {
         break;
        }
       }
      }
      $1401 = HEAP32[$1186>>2]|0;
      $1402 = ((($1188)) + 832|0);
      $1403 = HEAP32[$1402>>2]|0;
      $1404 = Math_imul($1403, $1401)|0;
      $1405 = HEAP32[$93>>2]|0;
      $1406 = (($1195) + ($1405<<2)|0);
      $1407 = HEAP32[$1406>>2]|0;
      $1408 = (($1407|0) / 2)&-1;
      $1409 = HEAP32[$1189>>2]|0;
      $1410 = ($1409|0)>(1);
      if ($1410) {
       $$0257288$i = $1404;$$0259287$i = 0;$$0261286$i = 0;$$1264285$i = 1;$1517 = $1409;
       while(1) {
        $1414 = (((($1182)) + 260|0) + ($$1264285$i<<2)|0);
        $1415 = HEAP32[$1414>>2]|0;
        $1416 = (($1186) + ($1415<<2)|0);
        $1417 = HEAP32[$1416>>2]|0;
        $1418 = $1417 & 32767;
        $1419 = ($1418|0)==($1417|0);
        if ($1419) {
         $1420 = HEAP32[$1402>>2]|0;
         $1421 = Math_imul($1420, $1417)|0;
         $1422 = (((($1188)) + 836|0) + ($1415<<2)|0);
         $1423 = HEAP32[$1422>>2]|0;
         $1424 = (($1421) - ($$0257288$i))|0;
         $1425 = (($1423) - ($$0259287$i))|0;
         $ispos$i275$i = ($1424|0)>(-1);
         $neg$i276$i = (0 - ($1424))|0;
         $1426 = $ispos$i275$i ? $1424 : $neg$i276$i;
         $1427 = (($1424|0) / ($1425|0))&-1;
         $1428 = $1424 >> 31;
         $1429 = $1428 | 1;
         $1430 = Math_imul($1427, $1425)|0;
         $ispos58$i$i = ($1430|0)>(-1);
         $neg59$i$i = (0 - ($1430))|0;
         $1431 = $ispos58$i$i ? $1430 : $neg59$i$i;
         $1432 = (($1426) - ($1431))|0;
         $1433 = ($1408|0)>($1423|0);
         $$$i$i = $1433 ? $1423 : $1408;
         $1434 = ($$$i$i|0)>($$0259287$i|0);
         if ($1434) {
          $$0$i277$i = 0;$$052$i$i = $$0257288$i;$$055$i$i = $$0259287$i;
          label = 260;
         } else {
          $$1$i$i = 0;$$153$i$i = $$0257288$i;$$156$i$i = $$0259287$i;
         }
         while(1) {
          if ((label|0) == 260) {
           label = 0;
           $$sink1$i$i = (($1177) + ($$055$i$i<<2)|0);
           HEAP32[$$sink1$i$i>>2] = $$052$i$i;
           $$1$i$i = $$0$i277$i;$$153$i$i = $$052$i$i;$$156$i$i = $$055$i$i;
          }
          $1435 = (($$156$i$i) + 1)|0;
          $1436 = ($1435|0)<($$$i$i|0);
          if (!($1436)) {
           break;
          }
          $1437 = (($$1$i$i) + ($1432))|0;
          $1438 = ($1437|0)<($1425|0);
          $1439 = $1438 ? 0 : $1429;
          $1440 = $1438 ? 0 : $1425;
          $$2$i$i = (($1437) - ($1440))|0;
          $$pn$i$i = (($$153$i$i) + ($1427))|0;
          $$254$i$i = (($$pn$i$i) + ($1439))|0;
          $$0$i277$i = $$2$i$i;$$052$i$i = $$254$i$i;$$055$i$i = $1435;
          label = 260;
         }
         $$pre328$i = HEAP32[$1189>>2]|0;
         $$1258$i = $1421;$$1260$i = $1423;$$1262$i = $1423;$1443 = $$pre328$i;
        } else {
         $$1258$i = $$0257288$i;$$1260$i = $$0259287$i;$$1262$i = $$0261286$i;$1443 = $1517;
        }
        $1441 = (($$1264285$i) + 1)|0;
        $1442 = ($1441|0)<($1443|0);
        if ($1442) {
         $$0257288$i = $$1258$i;$$0259287$i = $$1260$i;$$0261286$i = $$1262$i;$$1264285$i = $1441;$1517 = $1443;
        } else {
         $$0257$lcssa$i = $$1258$i;$$0261$lcssa$i = $$1262$i;
         break;
        }
       }
      } else {
       $$0257$lcssa$i = $1404;$$0261$lcssa$i = 0;
      }
      $1411 = HEAP32[$14>>2]|0;
      $1412 = (($1411|0) / 2)&-1;
      $1413 = ($$0261$lcssa$i|0)<($1412|0);
      if ($1413) {
       $$2265284$i = $$0261$lcssa$i;
      } else {
       $$0$i120 = 1;
       break;
      }
      while(1) {
       $1444 = (($1177) + ($$2265284$i<<2)|0);
       HEAP32[$1444>>2] = $$0257$lcssa$i;
       $1445 = (($$2265284$i) + 1)|0;
       $1446 = HEAP32[$14>>2]|0;
       $1447 = (($1446|0) / 2)&-1;
       $1448 = ($1445|0)<($1447|0);
       if ($1448) {
        $$2265284$i = $1445;
       } else {
        $$0$i120 = 1;
        break;
       }
      }
     }
    } while(0);
    $1452 = (($19) + ($$2377402<<2)|0);
    HEAP32[$1452>>2] = $$0$i120;
    $1453 = (($$2377402) + 1)|0;
    $1454 = HEAP32[$16>>2]|0;
    $1455 = ($1453|0)<($1454|0);
    if ($1455) {
     $$2377402 = $1453;
    } else {
     $$lcssa = $1454;
     break;
    }
   }
  } else {
   $$lcssa = $1172;
  }
  $1456 = HEAP32[$93>>2]|0;
  $1457 = ((((($9)) + 3240|0) + (($1456*60)|0)|0) + ($$2389419<<2)|0);
  $1458 = HEAP32[$1457>>2]|0;
  __vp_couple_quantize_normalize($$2389419,$1162,$102,$96,$40,$61,$19,$1458,$$lcssa);
  $1459 = HEAP32[$96>>2]|0;
  $1460 = ($1459|0)>(0);
  if ($1460) {
   $$3378415 = 0;
   while(1) {
    $1461 = (((($96)) + 1092|0) + ($$3378415<<2)|0);
    $1462 = HEAP32[$1461>>2]|0;
    $1463 = HEAP32[$16>>2]|0;
    $1464 = ($1463|0)>(0);
    if ($1464) {
     $$0379404 = 0;$$2385403 = 0;$1518 = $1463;
     while(1) {
      $1465 = (((($96)) + 4|0) + ($$2385403<<2)|0);
      $1466 = HEAP32[$1465>>2]|0;
      $1467 = ($1466|0)==($$3378415|0);
      if ($1467) {
       $1468 = (($1152) + ($$0379404<<2)|0);
       $1469 = (($19) + ($$2385403<<2)|0);
       $1470 = HEAP32[$1469>>2]|0;
       $not$ = ($1470|0)!=(0);
       $$ = $not$&1;
       HEAP32[$1468>>2] = $$;
       $1471 = (($61) + ($$2385403<<2)|0);
       $1472 = HEAP32[$1471>>2]|0;
       $1473 = (($$0379404) + 1)|0;
       $1474 = (($1151) + ($$0379404<<2)|0);
       HEAP32[$1474>>2] = $1472;
       $$pre = HEAP32[$16>>2]|0;
       $$1380 = $1473;$1477 = $$pre;
      } else {
       $$1380 = $$0379404;$1477 = $1518;
      }
      $1475 = (($$2385403) + 1)|0;
      $1476 = ($1475|0)<($1477|0);
      if ($1476) {
       $$0379404 = $$1380;$$2385403 = $1475;$1518 = $1477;
      } else {
       $$0379$lcssa = $$1380;
       break;
      }
     }
    } else {
     $$0379$lcssa = 0;
    }
    $1478 = (((($9)) + 1312|0) + ($1462<<2)|0);
    $1479 = HEAP32[$1478>>2]|0;
    $1480 = (59548 + ($1479<<2)|0);
    $1481 = HEAP32[$1480>>2]|0;
    $1482 = ((($1481)) + 20|0);
    $1483 = HEAP32[$1482>>2]|0;
    $1484 = HEAP32[$1163>>2]|0;
    $1485 = (($1484) + ($1462<<2)|0);
    $1486 = HEAP32[$1485>>2]|0;
    $1487 = (FUNCTION_TABLE_iiiiii[$1483 & 31]($0,$1486,$1151,$1152,$$0379$lcssa)|0);
    $1488 = HEAP32[$16>>2]|0;
    $1489 = ($1488|0)>(0);
    if ($1489) {
     $$2381410 = 0;$$3386409 = 0;
     while(1) {
      $1490 = (((($96)) + 4|0) + ($$3386409<<2)|0);
      $1491 = HEAP32[$1490>>2]|0;
      $1492 = ($1491|0)==($$3378415|0);
      if ($1492) {
       $1493 = (($1151) + ($$2381410<<2)|0);
       $1494 = (($$2381410) + 1)|0;
       $1495 = (($61) + ($$3386409<<2)|0);
       $1496 = HEAP32[$1495>>2]|0;
       HEAP32[$1493>>2] = $1496;
       $$3382 = $1494;
      } else {
       $$3382 = $$2381410;
      }
      $1497 = (($$3386409) + 1)|0;
      $exitcond = ($1497|0)==($1488|0);
      if ($exitcond) {
       $$2381$lcssa = $$3382;
       break;
      } else {
       $$2381410 = $$3382;$$3386409 = $1497;
      }
     }
    } else {
     $$2381$lcssa = 0;
    }
    $1498 = HEAP32[$1478>>2]|0;
    $1499 = (59548 + ($1498<<2)|0);
    $1500 = HEAP32[$1499>>2]|0;
    $1501 = ((($1500)) + 24|0);
    $1502 = HEAP32[$1501>>2]|0;
    $1503 = HEAP32[$1163>>2]|0;
    $1504 = (($1503) + ($1462<<2)|0);
    $1505 = HEAP32[$1504>>2]|0;
    (FUNCTION_TABLE_iiiiiiiii[$1502 & 31]($1166,$0,$1505,$1151,$1152,$$2381$lcssa,$1487,$$3378415)|0);
    $1506 = (($$3378415) + 1)|0;
    $1507 = HEAP32[$96>>2]|0;
    $1508 = ($1506|0)<($1507|0);
    if ($1508) {
     $$3378415 = $1506;
    } else {
     break;
    }
   }
  }
  $1509 = (($$2389419) + 1)|0;
  $1510 = HEAP32[$4>>2]|0;
  $1511 = ((($1510)) + 104|0);
  $1512 = HEAP32[$1511>>2]|0;
  $1513 = ((($1512)) + 80|0);
  $1514 = HEAP32[$1513>>2]|0;
  $not$$i121 = ($1514|0)!=(0);
  $1515 = $not$$i121 ? 14 : 7;
  $1516 = ($$2389419|0)<($1515|0);
  if ($1516) {
   $$2389419 = $1509;
  } else {
   $$3 = 0;
   break;
  }
 }
 STACKTOP = sp;return ($$3|0);
}
function _vorbis_encode_tonemask_setup($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$068 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0.0, $22 = 0.0, $23 = 0.0, $24 = 0.0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0;
 var $29 = 0.0, $30 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0.0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $47 = 0, $48 = 0;
 var $49 = 0.0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0.0;
 var $68 = 0.0, $69 = 0, $7 = 0.0, $70 = 0, $71 = 0, $72 = 0.0, $73 = 0.0, $74 = 0, $75 = 0, $76 = 0.0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0.0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0;
 var $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0, $92 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (~~(($1)));
 $7 = (+($6|0));
 $8 = $1 - $7;
 $9 = ((($0)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (((($10)) + 2852|0) + ($2<<2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($3) + (($6*20)|0)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (+($14|0));
 $16 = 1.0 - $8;
 $17 = $15 * $16;
 $18 = (($6) + 1)|0;
 $19 = (($3) + (($18*20)|0)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = (+($20|0));
 $22 = $21 * $8;
 $23 = $22 + $17;
 $24 = $23;
 $25 = ((($12)) + 12|0);
 HEAPF32[$25>>2] = $24;
 $26 = (((($3) + (($6*20)|0)|0)) + 4|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = (+($27|0));
 $29 = $28 * $16;
 $30 = (((($3) + (($18*20)|0)|0)) + 4|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (+($31|0));
 $33 = $32 * $8;
 $34 = $33 + $29;
 $35 = $34;
 $36 = ((($12)) + 16|0);
 HEAPF32[$36>>2] = $35;
 $37 = (((($3) + (($6*20)|0)|0)) + 8|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = (+($38|0));
 $40 = $39 * $16;
 $41 = (((($3) + (($18*20)|0)|0)) + 8|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = (+($42|0));
 $44 = $43 * $8;
 $45 = $44 + $40;
 $46 = $45;
 $47 = ((($12)) + 20|0);
 HEAPF32[$47>>2] = $46;
 $48 = (((($3) + (($6*20)|0)|0)) + 12|0);
 $49 = +HEAPF32[$48>>2];
 $50 = $49;
 $51 = $50 * $16;
 $52 = (((($3) + (($18*20)|0)|0)) + 12|0);
 $53 = +HEAPF32[$52>>2];
 $54 = $53;
 $55 = $54 * $8;
 $56 = $55 + $51;
 $57 = $56;
 $58 = ((($12)) + 24|0);
 HEAPF32[$58>>2] = $57;
 $59 = (((($3) + (($6*20)|0)|0)) + 16|0);
 $60 = +HEAPF32[$59>>2];
 $61 = $60;
 $62 = $61 * $16;
 $63 = (((($3) + (($18*20)|0)|0)) + 16|0);
 $64 = +HEAPF32[$63>>2];
 $65 = $64;
 $66 = $65 * $8;
 $67 = $66 + $62;
 $68 = $67;
 $69 = ((($12)) + 28|0);
 HEAPF32[$69>>2] = $68;
 $70 = (($4) + ($6<<2)|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = (+($71|0));
 $73 = $72 * $16;
 $74 = (($4) + ($18<<2)|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = (+($75|0));
 $77 = $76 * $8;
 $78 = $77 + $73;
 $79 = $78;
 $80 = ((($12)) + 496|0);
 HEAPF32[$80>>2] = $79;
 $$068 = 0;
 while(1) {
  $81 = ((($5) + (($6*68)|0)|0) + ($$068<<2)|0);
  $82 = HEAP32[$81>>2]|0;
  $83 = (+($82|0));
  $84 = $83 * $16;
  $85 = ((($5) + (($18*68)|0)|0) + ($$068<<2)|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = (+($86|0));
  $88 = $87 * $8;
  $89 = $88 + $84;
  $90 = $89;
  $91 = (((($12)) + 36|0) + ($$068<<2)|0);
  HEAPF32[$91>>2] = $90;
  $92 = (($$068) + 1)|0;
  $exitcond = ($92|0)==(17);
  if ($exitcond) {
   break;
  } else {
   $$068 = $92;
  }
 }
 return;
}
function _vorbis_encode_noisebias_setup($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = +$6;
 var $$074 = 0, $$074$1 = 0, $$074$2 = 0, $$phi$trans$insert = 0, $$phi$trans$insert$1 = 0, $$phi$trans$insert$10 = 0, $$phi$trans$insert$11 = 0, $$phi$trans$insert$12 = 0, $$phi$trans$insert$13 = 0, $$phi$trans$insert$14 = 0, $$phi$trans$insert$15 = 0, $$phi$trans$insert$2 = 0, $$phi$trans$insert$3 = 0, $$phi$trans$insert$4 = 0, $$phi$trans$insert$5 = 0, $$phi$trans$insert$6 = 0, $$phi$trans$insert$7 = 0, $$phi$trans$insert$8 = 0, $$phi$trans$insert$9 = 0, $$phi$trans$insert85 = 0;
 var $$phi$trans$insert85$1 = 0, $$phi$trans$insert85$10 = 0, $$phi$trans$insert85$11 = 0, $$phi$trans$insert85$12 = 0, $$phi$trans$insert85$13 = 0, $$phi$trans$insert85$14 = 0, $$phi$trans$insert85$15 = 0, $$phi$trans$insert85$2 = 0, $$phi$trans$insert85$3 = 0, $$phi$trans$insert85$4 = 0, $$phi$trans$insert85$5 = 0, $$phi$trans$insert85$6 = 0, $$phi$trans$insert85$7 = 0, $$phi$trans$insert85$8 = 0, $$phi$trans$insert85$9 = 0, $$phi$trans$insert88 = 0, $$phi$trans$insert88$1 = 0, $$phi$trans$insert88$10 = 0, $$phi$trans$insert88$11 = 0, $$phi$trans$insert88$12 = 0;
 var $$phi$trans$insert88$13 = 0, $$phi$trans$insert88$14 = 0, $$phi$trans$insert88$15 = 0, $$phi$trans$insert88$2 = 0, $$phi$trans$insert88$3 = 0, $$phi$trans$insert88$4 = 0, $$phi$trans$insert88$5 = 0, $$phi$trans$insert88$6 = 0, $$phi$trans$insert88$7 = 0, $$phi$trans$insert88$8 = 0, $$phi$trans$insert88$9 = 0, $$pre = 0.0, $$pre$1 = 0.0, $$pre$10 = 0.0, $$pre$11 = 0.0, $$pre$12 = 0.0, $$pre$13 = 0.0, $$pre$14 = 0.0, $$pre$15 = 0.0, $$pre$2 = 0.0;
 var $$pre$3 = 0.0, $$pre$4 = 0.0, $$pre$5 = 0.0, $$pre$6 = 0.0, $$pre$7 = 0.0, $$pre$8 = 0.0, $$pre$9 = 0.0, $$pre86 = 0.0, $$pre86$1 = 0.0, $$pre86$10 = 0.0, $$pre86$11 = 0.0, $$pre86$12 = 0.0, $$pre86$13 = 0.0, $$pre86$14 = 0.0, $$pre86$15 = 0.0, $$pre86$2 = 0.0, $$pre86$3 = 0.0, $$pre86$4 = 0.0, $$pre86$5 = 0.0, $$pre86$6 = 0.0;
 var $$pre86$7 = 0.0, $$pre86$8 = 0.0, $$pre86$9 = 0.0, $$pre89 = 0.0, $$pre89$1 = 0.0, $$pre89$10 = 0.0, $$pre89$11 = 0.0, $$pre89$12 = 0.0, $$pre89$13 = 0.0, $$pre89$14 = 0.0, $$pre89$15 = 0.0, $$pre89$2 = 0.0, $$pre89$3 = 0.0, $$pre89$4 = 0.0, $$pre89$5 = 0.0, $$pre89$6 = 0.0, $$pre89$7 = 0.0, $$pre89$8 = 0.0, $$pre89$9 = 0.0, $10 = 0;
 var $100 = 0.0, $101 = 0.0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0.0, $106 = 0, $107 = 0.0, $108 = 0.0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0.0, $112 = 0.0, $113 = 0.0, $114 = 0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0;
 var $119 = 0.0, $12 = 0, $120 = 0.0, $121 = 0.0, $122 = 0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0.0, $132 = 0.0, $133 = 0.0, $134 = 0, $135 = 0.0, $136 = 0.0;
 var $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0, $143 = 0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0, $154 = 0.0;
 var $155 = 0.0, $156 = 0.0, $157 = 0, $158 = 0.0, $159 = 0.0, $16 = 0.0, $160 = 0.0, $161 = 0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0, $17 = 0.0, $170 = 0.0, $171 = 0.0, $172 = 0.0;
 var $173 = 0, $174 = 0.0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0.0, $179 = 0.0, $18 = 0.0, $180 = 0.0, $181 = 0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0, $19 = 0, $190 = 0.0;
 var $191 = 0.0, $192 = 0.0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0, $198 = 0.0, $199 = 0.0, $20 = 0, $200 = 0.0, $201 = 0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0;
 var $21 = 0, $210 = 0.0, $211 = 0.0, $212 = 0.0, $213 = 0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0.0, $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0, $225 = 0.0, $226 = 0.0, $227 = 0.0;
 var $228 = 0, $229 = 0.0, $23 = 0.0, $230 = 0.0, $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0.0, $240 = 0, $241 = 0.0, $242 = 0.0, $243 = 0.0, $244 = 0, $245 = 0.0;
 var $246 = 0.0, $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0.0, $250 = 0.0, $251 = 0.0, $252 = 0, $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0, $261 = 0.0, $262 = 0.0, $263 = 0.0;
 var $264 = 0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0, $273 = 0.0, $274 = 0.0, $275 = 0.0, $276 = 0, $277 = 0.0, $278 = 0.0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0.0;
 var $282 = 0.0, $283 = 0.0, $284 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0.0, $44 = 0.0, $45 = 0.0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0.0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0.0, $63 = 0.0, $64 = 0, $65 = 0;
 var $66 = 0.0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0.0, $74 = 0.0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0.0, $8 = 0.0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0.0;
 var $84 = 0.0, $85 = 0.0, $86 = 0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0.0, $90 = 0, $91 = 0.0, $92 = 0.0, $93 = 0.0, $94 = 0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0, $99 = 0.0, $exitcond79 = 0, $exitcond79$1 = 0, $exitcond79$2 = 0;
 var $storemerge = 0.0, $storemerge$1 = 0.0, $storemerge$1$1 = 0.0, $storemerge$1$10 = 0.0, $storemerge$1$11 = 0.0, $storemerge$1$12 = 0.0, $storemerge$1$13 = 0.0, $storemerge$1$14 = 0.0, $storemerge$1$15 = 0.0, $storemerge$1$2 = 0.0, $storemerge$1$3 = 0.0, $storemerge$1$4 = 0.0, $storemerge$1$5 = 0.0, $storemerge$1$6 = 0.0, $storemerge$1$7 = 0.0, $storemerge$1$8 = 0.0, $storemerge$1$9 = 0.0, $storemerge$10 = 0.0, $storemerge$11 = 0.0, $storemerge$113 = 0.0;
 var $storemerge$12 = 0.0, $storemerge$13 = 0.0, $storemerge$14 = 0.0, $storemerge$15 = 0.0, $storemerge$191 = 0.0, $storemerge$2 = 0.0, $storemerge$2$1 = 0.0, $storemerge$2$10 = 0.0, $storemerge$2$11 = 0.0, $storemerge$2$12 = 0.0, $storemerge$2$13 = 0.0, $storemerge$2$14 = 0.0, $storemerge$2$15 = 0.0, $storemerge$2$2 = 0.0, $storemerge$2$3 = 0.0, $storemerge$2$4 = 0.0, $storemerge$2$5 = 0.0, $storemerge$2$6 = 0.0, $storemerge$2$7 = 0.0, $storemerge$2$8 = 0.0;
 var $storemerge$2$9 = 0.0, $storemerge$22 = 0.0, $storemerge$290 = 0.0, $storemerge$3 = 0.0, $storemerge$4 = 0.0, $storemerge$5 = 0.0, $storemerge$6 = 0.0, $storemerge$7 = 0.0, $storemerge$8 = 0.0, $storemerge$9 = 0.0, $storemerge92 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (~~(($1)));
 $8 = (+($7|0));
 $9 = $1 - $8;
 $10 = ((($0)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (((($11)) + 2852|0) + ($2<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($3) + ($7<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (+($15|0));
 $17 = 1.0 - $9;
 $18 = $16 * $17;
 $19 = (($7) + 1)|0;
 $20 = (($3) + ($19<<2)|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = (+($21|0));
 $23 = $22 * $9;
 $24 = $23 + $18;
 $25 = $24;
 $26 = ((($13)) + 108|0);
 HEAPF32[$26>>2] = $25;
 $27 = (($5) + (($2*12)|0)|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($13)) + 120|0);
 HEAP32[$29>>2] = $28;
 $30 = (((($5) + (($2*12)|0)|0)) + 4|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($13)) + 124|0);
 HEAP32[$32>>2] = $31;
 $33 = (((($5) + (($2*12)|0)|0)) + 8|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($13)) + 128|0);
 HEAP32[$35>>2] = $34;
 $$074 = 0;
 while(1) {
  $36 = ((($4) + (($7*204)|0)|0) + ($$074<<2)|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = (+($37|0));
  $39 = $38 * $17;
  $40 = ((($4) + (($19*204)|0)|0) + ($$074<<2)|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = (+($41|0));
  $43 = $42 * $9;
  $44 = $43 + $39;
  $45 = $44;
  $46 = (((($13)) + 132|0) + ($$074<<2)|0);
  HEAPF32[$46>>2] = $45;
  $47 = (($$074) + 1)|0;
  $exitcond79 = ($47|0)==(17);
  if ($exitcond79) {
   $$074$1 = 0;
   break;
  } else {
   $$074 = $47;
  }
 }
 while(1) {
  $48 = ((((($4) + (($7*204)|0)|0)) + 68|0) + ($$074$1<<2)|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = (+($49|0));
  $51 = $50 * $17;
  $52 = ((((($4) + (($19*204)|0)|0)) + 68|0) + ($$074$1<<2)|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = (+($53|0));
  $55 = $54 * $9;
  $56 = $55 + $51;
  $57 = $56;
  $58 = (((($13)) + 200|0) + ($$074$1<<2)|0);
  HEAPF32[$58>>2] = $57;
  $59 = (($$074$1) + 1)|0;
  $exitcond79$1 = ($59|0)==(17);
  if ($exitcond79$1) {
   $$074$2 = 0;
   break;
  } else {
   $$074$1 = $59;
  }
 }
 while(1) {
  $60 = ((((($4) + (($7*204)|0)|0)) + 136|0) + ($$074$2<<2)|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = (+($61|0));
  $63 = $62 * $17;
  $64 = ((((($4) + (($19*204)|0)|0)) + 136|0) + ($$074$2<<2)|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = (+($65|0));
  $67 = $66 * $9;
  $68 = $67 + $63;
  $69 = $68;
  $70 = (((($13)) + 268|0) + ($$074$2<<2)|0);
  HEAPF32[$70>>2] = $69;
  $71 = (($$074$2) + 1)|0;
  $exitcond79$2 = ($71|0)==(17);
  if ($exitcond79$2) {
   break;
  } else {
   $$074$2 = $71;
  }
 }
 $72 = ((($13)) + 132|0);
 $73 = +HEAPF32[$72>>2];
 $74 = $73 + 6.0;
 $75 = $73;
 $76 = $75 + $6;
 $77 = $76;
 $78 = $77 < $74;
 $storemerge92 = $78 ? $74 : $77;
 HEAPF32[$72>>2] = $storemerge92;
 $$phi$trans$insert = ((($13)) + 136|0);
 $$pre = +HEAPF32[$$phi$trans$insert>>2];
 $79 = $$pre;
 $80 = $79 + $6;
 $81 = $80;
 $82 = $81 < $74;
 $storemerge = $82 ? $74 : $81;
 HEAPF32[$$phi$trans$insert>>2] = $storemerge;
 $$phi$trans$insert$1 = ((($13)) + 140|0);
 $$pre$1 = +HEAPF32[$$phi$trans$insert$1>>2];
 $83 = $$pre$1;
 $84 = $83 + $6;
 $85 = $84;
 $86 = $85 < $74;
 $storemerge$11 = $86 ? $74 : $85;
 HEAPF32[$$phi$trans$insert$1>>2] = $storemerge$11;
 $$phi$trans$insert$2 = ((($13)) + 144|0);
 $$pre$2 = +HEAPF32[$$phi$trans$insert$2>>2];
 $87 = $$pre$2;
 $88 = $87 + $6;
 $89 = $88;
 $90 = $89 < $74;
 $storemerge$22 = $90 ? $74 : $89;
 HEAPF32[$$phi$trans$insert$2>>2] = $storemerge$22;
 $$phi$trans$insert$3 = ((($13)) + 148|0);
 $$pre$3 = +HEAPF32[$$phi$trans$insert$3>>2];
 $91 = $$pre$3;
 $92 = $91 + $6;
 $93 = $92;
 $94 = $93 < $74;
 $storemerge$3 = $94 ? $74 : $93;
 HEAPF32[$$phi$trans$insert$3>>2] = $storemerge$3;
 $$phi$trans$insert$4 = ((($13)) + 152|0);
 $$pre$4 = +HEAPF32[$$phi$trans$insert$4>>2];
 $95 = $$pre$4;
 $96 = $95 + $6;
 $97 = $96;
 $98 = $97 < $74;
 $storemerge$4 = $98 ? $74 : $97;
 HEAPF32[$$phi$trans$insert$4>>2] = $storemerge$4;
 $$phi$trans$insert$5 = ((($13)) + 156|0);
 $$pre$5 = +HEAPF32[$$phi$trans$insert$5>>2];
 $99 = $$pre$5;
 $100 = $99 + $6;
 $101 = $100;
 $102 = $101 < $74;
 $storemerge$5 = $102 ? $74 : $101;
 HEAPF32[$$phi$trans$insert$5>>2] = $storemerge$5;
 $$phi$trans$insert$6 = ((($13)) + 160|0);
 $$pre$6 = +HEAPF32[$$phi$trans$insert$6>>2];
 $103 = $$pre$6;
 $104 = $103 + $6;
 $105 = $104;
 $106 = $105 < $74;
 $storemerge$6 = $106 ? $74 : $105;
 HEAPF32[$$phi$trans$insert$6>>2] = $storemerge$6;
 $$phi$trans$insert$7 = ((($13)) + 164|0);
 $$pre$7 = +HEAPF32[$$phi$trans$insert$7>>2];
 $107 = $$pre$7;
 $108 = $107 + $6;
 $109 = $108;
 $110 = $109 < $74;
 $storemerge$7 = $110 ? $74 : $109;
 HEAPF32[$$phi$trans$insert$7>>2] = $storemerge$7;
 $$phi$trans$insert$8 = ((($13)) + 168|0);
 $$pre$8 = +HEAPF32[$$phi$trans$insert$8>>2];
 $111 = $$pre$8;
 $112 = $111 + $6;
 $113 = $112;
 $114 = $113 < $74;
 $storemerge$8 = $114 ? $74 : $113;
 HEAPF32[$$phi$trans$insert$8>>2] = $storemerge$8;
 $$phi$trans$insert$9 = ((($13)) + 172|0);
 $$pre$9 = +HEAPF32[$$phi$trans$insert$9>>2];
 $115 = $$pre$9;
 $116 = $115 + $6;
 $117 = $116;
 $118 = $117 < $74;
 $storemerge$9 = $118 ? $74 : $117;
 HEAPF32[$$phi$trans$insert$9>>2] = $storemerge$9;
 $$phi$trans$insert$10 = ((($13)) + 176|0);
 $$pre$10 = +HEAPF32[$$phi$trans$insert$10>>2];
 $119 = $$pre$10;
 $120 = $119 + $6;
 $121 = $120;
 $122 = $121 < $74;
 $storemerge$10 = $122 ? $74 : $121;
 HEAPF32[$$phi$trans$insert$10>>2] = $storemerge$10;
 $$phi$trans$insert$11 = ((($13)) + 180|0);
 $$pre$11 = +HEAPF32[$$phi$trans$insert$11>>2];
 $123 = $$pre$11;
 $124 = $123 + $6;
 $125 = $124;
 $126 = $125 < $74;
 $storemerge$113 = $126 ? $74 : $125;
 HEAPF32[$$phi$trans$insert$11>>2] = $storemerge$113;
 $$phi$trans$insert$12 = ((($13)) + 184|0);
 $$pre$12 = +HEAPF32[$$phi$trans$insert$12>>2];
 $127 = $$pre$12;
 $128 = $127 + $6;
 $129 = $128;
 $130 = $129 < $74;
 $storemerge$12 = $130 ? $74 : $129;
 HEAPF32[$$phi$trans$insert$12>>2] = $storemerge$12;
 $$phi$trans$insert$13 = ((($13)) + 188|0);
 $$pre$13 = +HEAPF32[$$phi$trans$insert$13>>2];
 $131 = $$pre$13;
 $132 = $131 + $6;
 $133 = $132;
 $134 = $133 < $74;
 $storemerge$13 = $134 ? $74 : $133;
 HEAPF32[$$phi$trans$insert$13>>2] = $storemerge$13;
 $$phi$trans$insert$14 = ((($13)) + 192|0);
 $$pre$14 = +HEAPF32[$$phi$trans$insert$14>>2];
 $135 = $$pre$14;
 $136 = $135 + $6;
 $137 = $136;
 $138 = $137 < $74;
 $storemerge$14 = $138 ? $74 : $137;
 HEAPF32[$$phi$trans$insert$14>>2] = $storemerge$14;
 $$phi$trans$insert$15 = ((($13)) + 196|0);
 $$pre$15 = +HEAPF32[$$phi$trans$insert$15>>2];
 $139 = $$pre$15;
 $140 = $139 + $6;
 $141 = $140;
 $142 = $141 < $74;
 $storemerge$15 = $142 ? $74 : $141;
 HEAPF32[$$phi$trans$insert$15>>2] = $storemerge$15;
 $143 = ((($13)) + 200|0);
 $144 = +HEAPF32[$143>>2];
 $145 = $144 + 6.0;
 $146 = $144;
 $147 = $146 + $6;
 $148 = $147;
 $149 = $148 < $145;
 $storemerge$191 = $149 ? $145 : $148;
 HEAPF32[$143>>2] = $storemerge$191;
 $$phi$trans$insert85 = ((($13)) + 204|0);
 $$pre86 = +HEAPF32[$$phi$trans$insert85>>2];
 $150 = $$pre86;
 $151 = $150 + $6;
 $152 = $151;
 $153 = $152 < $145;
 $storemerge$1 = $153 ? $145 : $152;
 HEAPF32[$$phi$trans$insert85>>2] = $storemerge$1;
 $$phi$trans$insert85$1 = ((($13)) + 208|0);
 $$pre86$1 = +HEAPF32[$$phi$trans$insert85$1>>2];
 $154 = $$pre86$1;
 $155 = $154 + $6;
 $156 = $155;
 $157 = $156 < $145;
 $storemerge$1$1 = $157 ? $145 : $156;
 HEAPF32[$$phi$trans$insert85$1>>2] = $storemerge$1$1;
 $$phi$trans$insert85$2 = ((($13)) + 212|0);
 $$pre86$2 = +HEAPF32[$$phi$trans$insert85$2>>2];
 $158 = $$pre86$2;
 $159 = $158 + $6;
 $160 = $159;
 $161 = $160 < $145;
 $storemerge$1$2 = $161 ? $145 : $160;
 HEAPF32[$$phi$trans$insert85$2>>2] = $storemerge$1$2;
 $$phi$trans$insert85$3 = ((($13)) + 216|0);
 $$pre86$3 = +HEAPF32[$$phi$trans$insert85$3>>2];
 $162 = $$pre86$3;
 $163 = $162 + $6;
 $164 = $163;
 $165 = $164 < $145;
 $storemerge$1$3 = $165 ? $145 : $164;
 HEAPF32[$$phi$trans$insert85$3>>2] = $storemerge$1$3;
 $$phi$trans$insert85$4 = ((($13)) + 220|0);
 $$pre86$4 = +HEAPF32[$$phi$trans$insert85$4>>2];
 $166 = $$pre86$4;
 $167 = $166 + $6;
 $168 = $167;
 $169 = $168 < $145;
 $storemerge$1$4 = $169 ? $145 : $168;
 HEAPF32[$$phi$trans$insert85$4>>2] = $storemerge$1$4;
 $$phi$trans$insert85$5 = ((($13)) + 224|0);
 $$pre86$5 = +HEAPF32[$$phi$trans$insert85$5>>2];
 $170 = $$pre86$5;
 $171 = $170 + $6;
 $172 = $171;
 $173 = $172 < $145;
 $storemerge$1$5 = $173 ? $145 : $172;
 HEAPF32[$$phi$trans$insert85$5>>2] = $storemerge$1$5;
 $$phi$trans$insert85$6 = ((($13)) + 228|0);
 $$pre86$6 = +HEAPF32[$$phi$trans$insert85$6>>2];
 $174 = $$pre86$6;
 $175 = $174 + $6;
 $176 = $175;
 $177 = $176 < $145;
 $storemerge$1$6 = $177 ? $145 : $176;
 HEAPF32[$$phi$trans$insert85$6>>2] = $storemerge$1$6;
 $$phi$trans$insert85$7 = ((($13)) + 232|0);
 $$pre86$7 = +HEAPF32[$$phi$trans$insert85$7>>2];
 $178 = $$pre86$7;
 $179 = $178 + $6;
 $180 = $179;
 $181 = $180 < $145;
 $storemerge$1$7 = $181 ? $145 : $180;
 HEAPF32[$$phi$trans$insert85$7>>2] = $storemerge$1$7;
 $$phi$trans$insert85$8 = ((($13)) + 236|0);
 $$pre86$8 = +HEAPF32[$$phi$trans$insert85$8>>2];
 $182 = $$pre86$8;
 $183 = $182 + $6;
 $184 = $183;
 $185 = $184 < $145;
 $storemerge$1$8 = $185 ? $145 : $184;
 HEAPF32[$$phi$trans$insert85$8>>2] = $storemerge$1$8;
 $$phi$trans$insert85$9 = ((($13)) + 240|0);
 $$pre86$9 = +HEAPF32[$$phi$trans$insert85$9>>2];
 $186 = $$pre86$9;
 $187 = $186 + $6;
 $188 = $187;
 $189 = $188 < $145;
 $storemerge$1$9 = $189 ? $145 : $188;
 HEAPF32[$$phi$trans$insert85$9>>2] = $storemerge$1$9;
 $$phi$trans$insert85$10 = ((($13)) + 244|0);
 $$pre86$10 = +HEAPF32[$$phi$trans$insert85$10>>2];
 $190 = $$pre86$10;
 $191 = $190 + $6;
 $192 = $191;
 $193 = $192 < $145;
 $storemerge$1$10 = $193 ? $145 : $192;
 HEAPF32[$$phi$trans$insert85$10>>2] = $storemerge$1$10;
 $$phi$trans$insert85$11 = ((($13)) + 248|0);
 $$pre86$11 = +HEAPF32[$$phi$trans$insert85$11>>2];
 $194 = $$pre86$11;
 $195 = $194 + $6;
 $196 = $195;
 $197 = $196 < $145;
 $storemerge$1$11 = $197 ? $145 : $196;
 HEAPF32[$$phi$trans$insert85$11>>2] = $storemerge$1$11;
 $$phi$trans$insert85$12 = ((($13)) + 252|0);
 $$pre86$12 = +HEAPF32[$$phi$trans$insert85$12>>2];
 $198 = $$pre86$12;
 $199 = $198 + $6;
 $200 = $199;
 $201 = $200 < $145;
 $storemerge$1$12 = $201 ? $145 : $200;
 HEAPF32[$$phi$trans$insert85$12>>2] = $storemerge$1$12;
 $$phi$trans$insert85$13 = ((($13)) + 256|0);
 $$pre86$13 = +HEAPF32[$$phi$trans$insert85$13>>2];
 $202 = $$pre86$13;
 $203 = $202 + $6;
 $204 = $203;
 $205 = $204 < $145;
 $storemerge$1$13 = $205 ? $145 : $204;
 HEAPF32[$$phi$trans$insert85$13>>2] = $storemerge$1$13;
 $$phi$trans$insert85$14 = ((($13)) + 260|0);
 $$pre86$14 = +HEAPF32[$$phi$trans$insert85$14>>2];
 $206 = $$pre86$14;
 $207 = $206 + $6;
 $208 = $207;
 $209 = $208 < $145;
 $storemerge$1$14 = $209 ? $145 : $208;
 HEAPF32[$$phi$trans$insert85$14>>2] = $storemerge$1$14;
 $$phi$trans$insert85$15 = ((($13)) + 264|0);
 $$pre86$15 = +HEAPF32[$$phi$trans$insert85$15>>2];
 $210 = $$pre86$15;
 $211 = $210 + $6;
 $212 = $211;
 $213 = $212 < $145;
 $storemerge$1$15 = $213 ? $145 : $212;
 HEAPF32[$$phi$trans$insert85$15>>2] = $storemerge$1$15;
 $214 = ((($13)) + 268|0);
 $215 = +HEAPF32[$214>>2];
 $216 = $215 + 6.0;
 $217 = $215;
 $218 = $217 + $6;
 $219 = $218;
 $220 = $219 < $216;
 $storemerge$290 = $220 ? $216 : $219;
 HEAPF32[$214>>2] = $storemerge$290;
 $$phi$trans$insert88 = ((($13)) + 272|0);
 $$pre89 = +HEAPF32[$$phi$trans$insert88>>2];
 $221 = $$pre89;
 $222 = $221 + $6;
 $223 = $222;
 $224 = $223 < $216;
 $storemerge$2 = $224 ? $216 : $223;
 HEAPF32[$$phi$trans$insert88>>2] = $storemerge$2;
 $$phi$trans$insert88$1 = ((($13)) + 276|0);
 $$pre89$1 = +HEAPF32[$$phi$trans$insert88$1>>2];
 $225 = $$pre89$1;
 $226 = $225 + $6;
 $227 = $226;
 $228 = $227 < $216;
 $storemerge$2$1 = $228 ? $216 : $227;
 HEAPF32[$$phi$trans$insert88$1>>2] = $storemerge$2$1;
 $$phi$trans$insert88$2 = ((($13)) + 280|0);
 $$pre89$2 = +HEAPF32[$$phi$trans$insert88$2>>2];
 $229 = $$pre89$2;
 $230 = $229 + $6;
 $231 = $230;
 $232 = $231 < $216;
 $storemerge$2$2 = $232 ? $216 : $231;
 HEAPF32[$$phi$trans$insert88$2>>2] = $storemerge$2$2;
 $$phi$trans$insert88$3 = ((($13)) + 284|0);
 $$pre89$3 = +HEAPF32[$$phi$trans$insert88$3>>2];
 $233 = $$pre89$3;
 $234 = $233 + $6;
 $235 = $234;
 $236 = $235 < $216;
 $storemerge$2$3 = $236 ? $216 : $235;
 HEAPF32[$$phi$trans$insert88$3>>2] = $storemerge$2$3;
 $$phi$trans$insert88$4 = ((($13)) + 288|0);
 $$pre89$4 = +HEAPF32[$$phi$trans$insert88$4>>2];
 $237 = $$pre89$4;
 $238 = $237 + $6;
 $239 = $238;
 $240 = $239 < $216;
 $storemerge$2$4 = $240 ? $216 : $239;
 HEAPF32[$$phi$trans$insert88$4>>2] = $storemerge$2$4;
 $$phi$trans$insert88$5 = ((($13)) + 292|0);
 $$pre89$5 = +HEAPF32[$$phi$trans$insert88$5>>2];
 $241 = $$pre89$5;
 $242 = $241 + $6;
 $243 = $242;
 $244 = $243 < $216;
 $storemerge$2$5 = $244 ? $216 : $243;
 HEAPF32[$$phi$trans$insert88$5>>2] = $storemerge$2$5;
 $$phi$trans$insert88$6 = ((($13)) + 296|0);
 $$pre89$6 = +HEAPF32[$$phi$trans$insert88$6>>2];
 $245 = $$pre89$6;
 $246 = $245 + $6;
 $247 = $246;
 $248 = $247 < $216;
 $storemerge$2$6 = $248 ? $216 : $247;
 HEAPF32[$$phi$trans$insert88$6>>2] = $storemerge$2$6;
 $$phi$trans$insert88$7 = ((($13)) + 300|0);
 $$pre89$7 = +HEAPF32[$$phi$trans$insert88$7>>2];
 $249 = $$pre89$7;
 $250 = $249 + $6;
 $251 = $250;
 $252 = $251 < $216;
 $storemerge$2$7 = $252 ? $216 : $251;
 HEAPF32[$$phi$trans$insert88$7>>2] = $storemerge$2$7;
 $$phi$trans$insert88$8 = ((($13)) + 304|0);
 $$pre89$8 = +HEAPF32[$$phi$trans$insert88$8>>2];
 $253 = $$pre89$8;
 $254 = $253 + $6;
 $255 = $254;
 $256 = $255 < $216;
 $storemerge$2$8 = $256 ? $216 : $255;
 HEAPF32[$$phi$trans$insert88$8>>2] = $storemerge$2$8;
 $$phi$trans$insert88$9 = ((($13)) + 308|0);
 $$pre89$9 = +HEAPF32[$$phi$trans$insert88$9>>2];
 $257 = $$pre89$9;
 $258 = $257 + $6;
 $259 = $258;
 $260 = $259 < $216;
 $storemerge$2$9 = $260 ? $216 : $259;
 HEAPF32[$$phi$trans$insert88$9>>2] = $storemerge$2$9;
 $$phi$trans$insert88$10 = ((($13)) + 312|0);
 $$pre89$10 = +HEAPF32[$$phi$trans$insert88$10>>2];
 $261 = $$pre89$10;
 $262 = $261 + $6;
 $263 = $262;
 $264 = $263 < $216;
 $storemerge$2$10 = $264 ? $216 : $263;
 HEAPF32[$$phi$trans$insert88$10>>2] = $storemerge$2$10;
 $$phi$trans$insert88$11 = ((($13)) + 316|0);
 $$pre89$11 = +HEAPF32[$$phi$trans$insert88$11>>2];
 $265 = $$pre89$11;
 $266 = $265 + $6;
 $267 = $266;
 $268 = $267 < $216;
 $storemerge$2$11 = $268 ? $216 : $267;
 HEAPF32[$$phi$trans$insert88$11>>2] = $storemerge$2$11;
 $$phi$trans$insert88$12 = ((($13)) + 320|0);
 $$pre89$12 = +HEAPF32[$$phi$trans$insert88$12>>2];
 $269 = $$pre89$12;
 $270 = $269 + $6;
 $271 = $270;
 $272 = $271 < $216;
 $storemerge$2$12 = $272 ? $216 : $271;
 HEAPF32[$$phi$trans$insert88$12>>2] = $storemerge$2$12;
 $$phi$trans$insert88$13 = ((($13)) + 324|0);
 $$pre89$13 = +HEAPF32[$$phi$trans$insert88$13>>2];
 $273 = $$pre89$13;
 $274 = $273 + $6;
 $275 = $274;
 $276 = $275 < $216;
 $storemerge$2$13 = $276 ? $216 : $275;
 HEAPF32[$$phi$trans$insert88$13>>2] = $storemerge$2$13;
 $$phi$trans$insert88$14 = ((($13)) + 328|0);
 $$pre89$14 = +HEAPF32[$$phi$trans$insert88$14>>2];
 $277 = $$pre89$14;
 $278 = $277 + $6;
 $279 = $278;
 $280 = $279 < $216;
 $storemerge$2$14 = $280 ? $216 : $279;
 HEAPF32[$$phi$trans$insert88$14>>2] = $storemerge$2$14;
 $$phi$trans$insert88$15 = ((($13)) + 332|0);
 $$pre89$15 = +HEAPF32[$$phi$trans$insert88$15>>2];
 $281 = $$pre89$15;
 $282 = $281 + $6;
 $283 = $282;
 $284 = $283 < $216;
 $storemerge$2$15 = $284 ? $216 : $283;
 HEAPF32[$$phi$trans$insert88$15>>2] = $storemerge$2$15;
 return;
}
function _vorbis_encode_init_vbr($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = +$3;
 var $$$0$i$i = 0, $$$073$i$i = 0, $$$2$i$i = 0, $$$2190$i$i$i = 0, $$$i$i = 0, $$$i193$i = 0.0, $$$i205$i = 0.0, $$$i208$i = 0.0, $$$i214$i = 0.0, $$$i220$i = 0.0, $$0 = 0, $$0$i$ph = 0, $$0$i197$i = 0, $$0$i198$i = 0, $$0$i200$i = 0, $$0$i202$i = 0, $$012$i$i$i$i = 0, $$012$i207$1$i$i$i = 0, $$012$i207$2$i$i$i = 0, $$012$i207$3$i$i$i = 0;
 var $$012$i207$i$i$i = 0, $$012$i212$i$i$i = 0, $$012$i217$1$i$i$i = 0, $$012$i217$2$i$i$i = 0, $$012$i217$3$i$i$i = 0, $$012$i217$i$i$i = 0, $$0122$i$i = 0, $$0185257$i = 0, $$0188$lcssa$i$i$i = 0, $$0193236$i$i$i = 0, $$0194238$i$i$i = 0, $$0195257$i$i$i = 0, $$0204$i$i$i = 0.0, $$021$i = 0.0, $$0260$i$i$i = 0, $$042$i$i = 0, $$042$i210$i = 0, $$042$i216$i = 0, $$042$i222$i = 0, $$06074$i$i = 0;
 var $$06272$i = 0, $$065$lcssa$i = 0, $$06569$i = 0, $$07$i$i$i$i = 0, $$07$i210$1$i$i$i = 0, $$07$i210$2$i$i$i = 0, $$07$i210$3$i$i$i = 0, $$07$i210$i$i$i = 0, $$07$i215$i$i$i = 0, $$07$i220$1$i$i$i = 0, $$07$i220$2$i$i$i = 0, $$07$i220$3$i$i$i = 0, $$07$i220$i$i$i = 0, $$07392$i$i = 0, $$075$i$i = 0, $$07591$i$i = 0, $$07881$i$i = 0, $$088$i$i = 0, $$1121$i$i = 0, $$1189$lcssa$i$i$i = 0;
 var $$1205$i$i$i = 0.0, $$1205$in$i$i$i = 0.0, $$1205$in$in$i$i$i = 0, $$1258$i$i$i = 0, $$17686$i$i = 0, $$2$lcssa$i$i = 0, $$2120$i$i = 0, $$2190237$i$i$i = 0, $$2197$1$i$i$i = 0, $$2197$2$i$i$i = 0, $$2197$3$i$i$i = 0, $$2197$i$i$i = 0, $$2206$i$i$i = 0.0, $$2251$i$i$i = 0, $$27780$i256$i = 0, $$282$i$i = 0, $$3198248$i$i$i = 0, $$3249$i$i$i = 0, $$41$i$i = 0, $$41$i209$i = 0;
 var $$41$i215$i = 0, $$41$i221$i = 0, $$4192$i$i$i = 0, $$4241$i$i$i = 0, $$5$1$i$i$i = 0, $$5$2$i$i$i = 0, $$5$3$i$i$i = 0, $$5$i$i$i = 0, $$56$i$i = 0, $$phi$trans$insert$i = 0, $$pre = 0.0, $$pre$i = 0.0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i195$i = 0, $$pre$i2 = 0.0, $$pre$phi273$i$i$iZ2D = 0, $$pre128$i$i = 0, $$pre268$i$i$i = 0, $$pre269$i$i$i = 0;
 var $$pre270$i$i$i = 0, $$pre271$i = 0, $$pre271$i$i$i = 0, $$pre272$i = 0, $$pre272$i$i$i = 0, $$pre83$i = 0, $$pre99$i$i = 0, $$sink$i = 0, $$sink$i$i$i = 0, $$sink226$i = 0.0, $$sink241$i = 0, $$sink3$i = 0, $10 = 0, $100 = 0.0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0;
 var $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0.0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0.0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0;
 var $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0;
 var $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0;
 var $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0;
 var $1079 = 0, $108 = 0.0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0.0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0;
 var $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0.0, $1108 = 0.0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0.0, $1113 = 0.0;
 var $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0.0, $1119 = 0.0, $112 = 0.0, $1120 = 0.0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0.0, $1130 = 0, $1131 = 0;
 var $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0.0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0;
 var $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0.0, $1157 = 0.0, $1158 = 0.0, $1159 = 0.0, $116 = 0, $1160 = 0, $1161 = 0.0, $1162 = 0.0, $1163 = 0.0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0;
 var $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0.0, $1172 = 0.0, $1173 = 0, $1174 = 0.0, $1175 = 0.0, $1176 = 0.0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0;
 var $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0.0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0;
 var $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0;
 var $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0;
 var $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0;
 var $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0;
 var $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0;
 var $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0;
 var $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0.0, $1321 = 0, $1322 = 0.0, $1323 = 0.0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0.0, $133 = 0;
 var $1330 = 0.0, $1331 = 0.0, $1332 = 0, $1333 = 0, $1334 = 0.0, $1335 = 0.0, $1336 = 0.0, $1337 = 0.0, $1338 = 0.0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0.0, $1348 = 0;
 var $1349 = 0, $135 = 0, $1350 = 0.0, $1351 = 0.0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0.0, $1364 = 0, $1365 = 0, $1366 = 0.0;
 var $1367 = 0, $1368 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0.0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0.0, $236 = 0, $237 = 0, $238 = 0, $239 = 0.0, $24 = 0, $240 = 0, $241 = 0, $242 = 0.0, $243 = 0.0;
 var $244 = 0.0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0.0, $252 = 0.0, $253 = 0, $254 = 0, $255 = 0, $256 = 0.0, $257 = 0, $258 = 0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0;
 var $262 = 0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0, $269 = 0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0.0, $273 = 0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0.0, $279 = 0, $28 = 0.0;
 var $280 = 0, $281 = 0.0, $282 = 0.0, $283 = 0.0, $284 = 0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0, $291 = 0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0, $296 = 0.0, $297 = 0.0, $298 = 0.0;
 var $299 = 0.0, $30 = 0, $300 = 0.0, $301 = 0, $302 = 0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0, $307 = 0.0, $308 = 0.0, $309 = 0.0, $31 = 0.0, $310 = 0.0, $311 = 0.0, $312 = 0, $313 = 0, $314 = 0.0, $315 = 0.0, $316 = 0.0;
 var $317 = 0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0, $323 = 0, $324 = 0, $325 = 0.0, $326 = 0.0, $327 = 0.0, $328 = 0, $329 = 0.0, $33 = 0, $330 = 0.0, $331 = 0.0, $332 = 0.0, $333 = 0.0, $334 = 0;
 var $335 = 0, $336 = 0.0, $337 = 0.0, $338 = 0.0, $339 = 0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $343 = 0.0, $344 = 0.0, $345 = 0, $346 = 0, $347 = 0.0, $348 = 0.0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0.0;
 var $353 = 0.0, $354 = 0, $355 = 0.0, $356 = 0.0, $357 = 0.0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0;
 var $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0;
 var $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0.0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0.0, $403 = 0, $404 = 0.0, $405 = 0.0, $406 = 0.0;
 var $407 = 0, $408 = 0.0, $409 = 0.0, $41 = 0.0, $410 = 0.0, $411 = 0.0, $412 = 0.0, $413 = 0.0, $414 = 0.0, $415 = 0.0, $416 = 0, $417 = 0.0, $418 = 0.0, $419 = 0, $42 = 0.0, $420 = 0, $421 = 0, $422 = 0.0, $423 = 0.0, $424 = 0;
 var $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0.0, $43 = 0, $430 = 0.0, $431 = 0.0, $432 = 0, $433 = 0.0, $434 = 0.0, $435 = 0.0, $436 = 0.0, $437 = 0.0, $438 = 0.0, $439 = 0.0, $44 = 0.0, $440 = 0.0, $441 = 0, $442 = 0.0;
 var $443 = 0.0, $444 = 0, $445 = 0, $446 = 0, $447 = 0.0, $448 = 0.0, $449 = 0, $45 = 0.0, $450 = 0, $451 = 0, $452 = 0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0, $458 = 0, $459 = 0.0, $46 = 0, $460 = 0.0;
 var $461 = 0.0, $462 = 0.0, $463 = 0.0, $464 = 0.0, $465 = 0.0, $466 = 0, $467 = 0, $468 = 0.0, $469 = 0.0, $47 = 0, $470 = 0, $471 = 0.0, $472 = 0.0, $473 = 0, $474 = 0, $475 = 0, $476 = 0.0, $477 = 0.0, $478 = 0, $479 = 0;
 var $48 = 0.0, $480 = 0, $481 = 0, $482 = 0, $483 = 0.0, $484 = 0.0, $485 = 0.0, $486 = 0, $487 = 0.0, $488 = 0.0, $489 = 0.0, $49 = 0.0, $490 = 0.0, $491 = 0.0, $492 = 0.0, $493 = 0.0, $494 = 0.0, $495 = 0, $496 = 0.0, $497 = 0.0;
 var $498 = 0, $499 = 0, $5 = 0, $50 = 0.0, $500 = 0, $501 = 0.0, $502 = 0.0, $503 = 0, $504 = 0, $505 = 0, $506 = 0.0, $507 = 0, $508 = 0, $509 = 0, $51 = 0.0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0;
 var $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0.0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0.0, $530 = 0, $531 = 0, $532 = 0;
 var $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0.0, $539 = 0, $54 = 0.0, $540 = 0.0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0.0, $550 = 0;
 var $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0.0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0.0;
 var $57 = 0.0, $570 = 0, $571 = 0.0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0.0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0;
 var $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0.0, $603 = 0, $604 = 0.0;
 var $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0;
 var $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0.0, $634 = 0, $635 = 0.0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0.0, $640 = 0;
 var $641 = 0, $642 = 0.0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0.0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0.0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0.0, $657 = 0, $658 = 0, $659 = 0;
 var $66 = 0, $660 = 0, $661 = 0, $662 = 0.0, $663 = 0.0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0.0, $669 = 0.0, $67 = 0, $670 = 0.0, $671 = 0, $672 = 0, $673 = 0.0, $674 = 0.0, $675 = 0.0, $676 = 0, $677 = 0.0;
 var $678 = 0.0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0.0, $683 = 0, $684 = 0, $685 = 0, $686 = 0.0, $687 = 0.0, $688 = 0, $689 = 0, $69 = 0, $690 = 0.0, $691 = 0.0, $692 = 0.0, $693 = 0.0, $694 = 0, $695 = 0;
 var $696 = 0.0, $697 = 0, $698 = 0.0, $699 = 0.0, $7 = 0.0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0.0, $704 = 0.0, $705 = 0.0, $706 = 0, $707 = 0, $708 = 0.0, $709 = 0.0, $71 = 0, $710 = 0.0, $711 = 0, $712 = 0.0;
 var $713 = 0.0, $714 = 0, $715 = 0, $716 = 0, $717 = 0.0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0.0, $722 = 0.0, $723 = 0, $724 = 0, $725 = 0.0, $726 = 0.0, $727 = 0.0, $728 = 0.0, $729 = 0, $73 = 0, $730 = 0;
 var $731 = 0.0, $732 = 0, $733 = 0, $734 = 0, $735 = 0.0, $736 = 0.0, $737 = 0, $738 = 0, $739 = 0, $74 = 0.0, $740 = 0.0, $741 = 0.0, $742 = 0.0, $743 = 0, $744 = 0, $745 = 0.0, $746 = 0.0, $747 = 0.0, $748 = 0, $749 = 0.0;
 var $75 = 0.0, $750 = 0.0, $751 = 0, $752 = 0, $753 = 0, $754 = 0.0, $755 = 0, $756 = 0, $757 = 0, $758 = 0.0, $759 = 0.0, $76 = 0, $760 = 0, $761 = 0, $762 = 0.0, $763 = 0.0, $764 = 0.0, $765 = 0.0, $766 = 0, $767 = 0;
 var $768 = 0.0, $769 = 0, $77 = 0, $770 = 0.0, $771 = 0.0, $772 = 0, $773 = 0, $774 = 0, $775 = 0.0, $776 = 0.0, $777 = 0.0, $778 = 0, $779 = 0, $78 = 0, $780 = 0.0, $781 = 0.0, $782 = 0.0, $783 = 0, $784 = 0.0, $785 = 0.0;
 var $786 = 0, $787 = 0, $788 = 0, $789 = 0.0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0.0, $794 = 0.0, $795 = 0, $796 = 0, $797 = 0.0, $798 = 0.0, $799 = 0.0, $8 = 0.0, $80 = 0, $800 = 0.0, $801 = 0, $802 = 0;
 var $803 = 0.0, $804 = 0, $805 = 0, $806 = 0, $807 = 0.0, $808 = 0.0, $809 = 0, $81 = 0.0, $810 = 0, $811 = 0.0, $812 = 0.0, $813 = 0.0, $814 = 0, $815 = 0, $816 = 0, $817 = 0.0, $818 = 0.0, $819 = 0.0, $82 = 0, $820 = 0.0;
 var $821 = 0, $822 = 0.0, $823 = 0, $824 = 0.0, $825 = 0.0, $826 = 0, $827 = 0, $828 = 0.0, $829 = 0.0, $83 = 0, $830 = 0.0, $831 = 0, $832 = 0, $833 = 0, $834 = 0.0, $835 = 0.0, $836 = 0.0, $837 = 0.0, $838 = 0, $839 = 0.0;
 var $84 = 0, $840 = 0, $841 = 0.0, $842 = 0.0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0.0, $848 = 0.0, $849 = 0.0, $85 = 0.0, $850 = 0, $851 = 0, $852 = 0, $853 = 0.0, $854 = 0.0, $855 = 0.0, $856 = 0.0, $857 = 0;
 var $858 = 0.0, $859 = 0, $86 = 0.0, $860 = 0.0, $861 = 0.0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0.0, $867 = 0.0, $868 = 0.0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0.0, $873 = 0.0, $874 = 0.0, $875 = 0.0;
 var $876 = 0, $877 = 0.0, $878 = 0, $879 = 0, $88 = 0.0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0.0, $886 = 0.0, $887 = 0, $888 = 0, $889 = 0, $89 = 0.0, $890 = 0, $891 = 0.0, $892 = 0, $893 = 0;
 var $894 = 0, $895 = 0, $896 = 0.0, $897 = 0, $898 = 0, $899 = 0, $9 = 0.0, $90 = 0.0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0.0, $906 = 0.0, $907 = 0, $908 = 0, $909 = 0.0, $91 = 0, $910 = 0.0;
 var $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0.0, $926 = 0.0, $927 = 0, $928 = 0, $929 = 0.0;
 var $93 = 0, $930 = 0.0, $931 = 0, $932 = 0, $933 = 0, $934 = 0.0, $935 = 0.0, $936 = 0, $937 = 0.0, $938 = 0.0, $939 = 0, $94 = 0, $940 = 0.0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0;
 var $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0.0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0;
 var $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0.0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0;
 var $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond$i$i = 0, $exitcond$i191$i = 0, $exitcond$i191255$i = 0;
 var $exitcond$i196$i = 0, $exitcond$i206$i = 0, $exitcond$i211$i = 0, $exitcond$i217$i = 0, $exitcond$i223$i = 0, $exitcond126$i$i = 0, $exitcond127$i$i = 0, $exitcond96$i$i = 0, $exitcond97$i$i = 0, $or$cond$i = 0, $or$cond$i$i = 0, $or$cond$i204$i = 0, $or$cond$i207$i = 0, $or$cond$i213$i = 0, $or$cond$i219$i = 0, $phitmp$i = 0, $storemerge$i$i$i = 0, dest = 0, label = 0, sp = 0;
 var src = 0, stop = 0;
 sp = STACKTOP;
 $4 = ($2|0)<(1);
 do {
  if ($4) {
   $$0$i$ph = -131;
  } else {
   $5 = ((($0)) + 28|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = $3;
   $8 = $7 + 9.9999999999999995E-8;
   $9 = $8;
   $10 = !($9 >= 1.0);
   $$021$i = $10 ? $9 : 0.99989998340606689;
   $11 = ((($6)) + 3416|0);
   HEAPF32[$11>>2] = $$021$i;
   $12 = $$021$i;
   $13 = ((($6)) + 3400|0);
   $$06272$i = 0;$15 = 60784;$66 = 60940;
   while(1) {
    $14 = ((($15)) + 12|0);
    $16 = HEAP32[$14>>2]|0;
    $17 = ($16|0)==(-1);
    $18 = ($16|0)==($1|0);
    $or$cond$i = $17 | $18;
    if ($or$cond$i) {
     $19 = ((($15)) + 16|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)>($2|0);
     if (!($21)) {
      $22 = ((($15)) + 20|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = ($23|0)<($2|0);
      if (!($24)) {
       $25 = HEAP32[$15>>2]|0;
       $26 = ((($15)) + 8|0);
       $27 = HEAP32[$26>>2]|0;
       $28 = +HEAPF64[$27>>3];
       $29 = $28 > $12;
       if (!($29)) {
        $30 = (($27) + ($25<<3)|0);
        $31 = +HEAPF64[$30>>3];
        $32 = $31 < $12;
        if (!($32)) {
         break;
        }
       }
      }
     }
    }
    $59 = (($$06272$i) + 1)|0;
    $60 = (60940 + ($59<<2)|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ($59|0)==(17);
    if ($62) {
     label = 17;
     break;
    } else {
     $$06272$i = $59;$15 = $61;$66 = $60;
    }
   }
   if ((label|0) == 17) {
    $63 = ((($6)) + 3396|0);
    HEAP32[$63>>2] = 0;
    $$0$i$ph = -130;
    break;
   }
   $33 = ($25|0)>(0);
   L14: do {
    if ($33) {
     $$06569$i = 0;$35 = $28;
     while(1) {
      $34 = !($35 <= $12);
      $$pre83$i = (($$06569$i) + 1)|0;
      if (!($34)) {
       $36 = (($27) + ($$pre83$i<<3)|0);
       $37 = +HEAPF64[$36>>3];
       $38 = $37 > $12;
       if ($38) {
        $$065$lcssa$i = $$06569$i;
        break L14;
       }
      }
      $39 = ($$pre83$i|0)<($25|0);
      if (!($39)) {
       $$065$lcssa$i = $$pre83$i;
       break L14;
      }
      $$phi$trans$insert$i = (($27) + ($$pre83$i<<3)|0);
      $$pre$i = +HEAPF64[$$phi$trans$insert$i>>3];
      $$06569$i = $$pre83$i;$35 = $$pre$i;
     }
    } else {
     $$065$lcssa$i = 0;
    }
   } while(0);
   $40 = ($$065$lcssa$i|0)==($25|0);
   if ($40) {
    $41 = (+($25|0));
    $42 = $41 + -0.001;
    $64 = $42;
   } else {
    $43 = (($27) + ($$065$lcssa$i<<3)|0);
    $44 = +HEAPF64[$43>>3];
    $45 = $44;
    $46 = (($$065$lcssa$i) + 1)|0;
    $47 = (($27) + ($46<<3)|0);
    $48 = +HEAPF64[$47>>3];
    $49 = $48;
    $50 = $45;
    $51 = $12 - $50;
    $52 = $49 - $45;
    $53 = $52;
    $54 = $51 / $53;
    $55 = $54;
    $56 = (+($$065$lcssa$i|0));
    $57 = $55 + $56;
    $58 = $57;
    $64 = $58;
   }
   HEAPF64[$13>>3] = $64;
   $65 = HEAP32[$66>>2]|0;
   $67 = ((($6)) + 3396|0);
   HEAP32[$67>>2] = $65;
   $68 = ($65|0)==(0|0);
   if ($68) {
    $$0$i$ph = -130;
   } else {
    HEAP32[$0>>2] = 0;
    $69 = ((($0)) + 4|0);
    HEAP32[$69>>2] = $1;
    $70 = ((($0)) + 8|0);
    HEAP32[$70>>2] = $2;
    $71 = ((($6)) + 3456|0);
    HEAP32[$71>>2] = 1;
    $72 = ((($6)) + 3460|0);
    HEAP32[$72>>2] = 1;
    $73 = (~~(($64)));
    $74 = (+($73|0));
    $75 = $64 - $74;
    $76 = ((($6)) + 3472|0);
    HEAPF64[$76>>3] = $64;
    $77 = ((($6)) + 3488|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = ($78|0)==(0);
    $80 = (($73) + 1)|0;
    $81 = 1.0 - $75;
    if ($79) {
     $82 = ((($65)) + 120|0);
     $83 = HEAP32[$82>>2]|0;
     $84 = (($83) + ($73<<3)|0);
     $85 = +HEAPF64[$84>>3];
     $86 = $85 * $81;
     $87 = (($83) + ($80<<3)|0);
     $88 = +HEAPF64[$87>>3];
     $89 = $88 * $75;
     $90 = $89 + $86;
     $91 = ((($6)) + 3480|0);
     HEAPF64[$91>>3] = $90;
    }
    $92 = ((($65)) + 112|0);
    $93 = HEAP32[$92>>2]|0;
    $94 = (($93) + ($73<<2)|0);
    $95 = HEAP32[$94>>2]|0;
    $96 = (+($95|0));
    $97 = $96 * $81;
    $98 = (($93) + ($80<<2)|0);
    $99 = HEAP32[$98>>2]|0;
    $100 = (+($99|0));
    $101 = $100 * $75;
    $102 = $101 + $97;
    $103 = ((($6)) + 3496|0);
    HEAPF64[$103>>3] = $102;
    $104 = ((($65)) + 116|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = (($105) + ($73<<2)|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (+($107|0));
    $109 = $108 * $81;
    $110 = (($105) + ($80<<2)|0);
    $111 = HEAP32[$110>>2]|0;
    $112 = (+($111|0));
    $113 = $112 * $75;
    $114 = $113 + $109;
    $115 = ((($6)) + 3504|0);
    HEAPF64[$115>>3] = $114;
    $116 = ((($6)) + 3512|0);
    HEAPF64[$116>>3] = -6.0;
    $117 = ((($6)) + 3520|0);
    HEAPF64[$117>>3] = $64;
    $118 = ((($6)) + 3528|0);
    HEAPF64[$118>>3] = $64;
    $119 = ((($6)) + 3536|0);
    HEAPF64[$119>>3] = $64;
    $120 = ((($6)) + 3544|0);
    HEAPF64[$120>>3] = $64;
    $121 = ((($6)) + 3552|0);
    HEAPF64[$121>>3] = $64;
    $122 = ((($6)) + 3560|0);
    HEAPF64[$122>>3] = $64;
    $123 = ((($6)) + 3568|0);
    HEAPF64[$123>>3] = $64;
    $124 = ((($6)) + 3576|0);
    HEAPF64[$124>>3] = $64;
    $125 = ((($6)) + 3584|0);
    HEAPF64[$125>>3] = $64;
    $126 = ((($6)) + 3592|0);
    HEAPF64[$126>>3] = $64;
    $127 = ((($6)) + 3600|0);
    HEAPF64[$127>>3] = $64;
    $128 = ((($6)) + 3608|0);
    HEAPF64[$128>>3] = $64;
    $129 = ((($6)) + 3616|0);
    HEAPF64[$129>>3] = $64;
    $130 = ((($6)) + 3624|0);
    HEAPF64[$130>>3] = $64;
    $131 = ((($6)) + 3632|0);
    HEAPF64[$131>>3] = $64;
    $132 = ((($6)) + 3640|0);
    HEAPF64[$132>>3] = $64;
    $133 = ((($6)) + 3648|0);
    HEAPF64[$133>>3] = $64;
    $134 = ((($6)) + 3420|0);
    HEAP32[$134>>2] = 0;
    $135 = ((($6)) + 3464|0);
    HEAP32[$135>>2] = 1;
    $136 = $102 > -80.0;
    if ($136) {
     $$sink226$i = -80.0;
     label = 24;
    } else {
     $137 = $102 < -200.0;
     if ($137) {
      $$sink226$i = -200.0;
      label = 24;
     }
    }
    if ((label|0) == 24) {
     HEAPF64[$103>>3] = $$sink226$i;
    }
    $138 = ((($6)) + 3392|0);
    HEAP32[$138>>2] = 1;
    $139 = ((($65)) + 24|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ((($65)) + 28|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = (($140) + ($73<<2)|0);
    $144 = HEAP32[$143>>2]|0;
    $145 = (($142) + ($73<<2)|0);
    $146 = HEAP32[$145>>2]|0;
    HEAP32[$6>>2] = $144;
    $147 = ((($6)) + 4|0);
    HEAP32[$147>>2] = $146;
    $148 = ($144|0)==($146|0);
    $149 = ((($65)) + 144|0);
    $150 = HEAP32[$149>>2]|0;
    $151 = ($150|0)>(0);
    if ($151) {
     $152 = ((($65)) + 136|0);
     $153 = ((($65)) + 140|0);
     $154 = ((($65)) + 148|0);
     $$0185257$i = 0;$156 = $64;$177 = $6;
     while(1) {
      $155 = (~~(($156)));
      $157 = HEAP32[$152>>2]|0;
      $158 = HEAP32[$153>>2]|0;
      $159 = HEAP32[$154>>2]|0;
      $160 = (($159) + ($$0185257$i<<2)|0);
      $161 = HEAP32[$160>>2]|0;
      $162 = (_malloc(1120)|0);
      $163 = ($162|0)==(0|0);
      if (!($163)) {
       $164 = ((($162)) + -4|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = $165 & 3;
       $167 = ($166|0)==(0);
       if (!($167)) {
        _memset(($162|0),0,1120)|0;
       }
      }
      $168 = (($161) + ($155<<2)|0);
      $169 = HEAP32[$168>>2]|0;
      $170 = (($158) + (($169*1120)|0)|0);
      _memcpy(($162|0),($170|0),1120)|0;
      $171 = HEAP32[$162>>2]|0;
      $172 = ($171|0)>(0);
      if ($172) {
       $173 = ((($162)) + 4|0);
       $$07392$i$i = -1;$$07591$i$i = 0;
       while(1) {
        $180 = (($173) + ($$07591$i$i<<2)|0);
        $181 = HEAP32[$180>>2]|0;
        $182 = ($181|0)>($$07392$i$i|0);
        $$$073$i$i = $182 ? $181 : $$07392$i$i;
        $183 = (($$07591$i$i) + 1)|0;
        $exitcond97$i$i = ($183|0)==($171|0);
        if ($exitcond97$i$i) {
         break;
        } else {
         $$07392$i$i = $$$073$i$i;$$07591$i$i = $183;
        }
       }
       $174 = ($$$073$i$i|0)<(0);
       if (!($174)) {
        $175 = ((($162)) + 256|0);
        $176 = ((($177)) + 24|0);
        $178 = ((($162)) + 192|0);
        $179 = ((($162)) + 320|0);
        $$088$i$i = -1;$$17686$i$i = 0;
        while(1) {
         $191 = (($175) + ($$17686$i$i<<2)|0);
         $192 = HEAP32[$191>>2]|0;
         $193 = ($192|0)>($$088$i$i|0);
         $$$0$i$i = $193 ? $192 : $$088$i$i;
         $194 = HEAP32[$176>>2]|0;
         $195 = (($194) + ($192))|0;
         HEAP32[$191>>2] = $195;
         $196 = (($178) + ($$17686$i$i<<2)|0);
         $197 = HEAP32[$196>>2]|0;
         $198 = ($197|0)==(31);
         if ($198) {
          $$2$lcssa$i$i = $$$0$i$i;
         } else {
          $$07881$i$i = 0;$$282$i$i = $$$0$i$i;$1368 = $197;
          while(1) {
           $199 = ((($179) + ($$17686$i$i<<5)|0) + ($$07881$i$i<<2)|0);
           $200 = HEAP32[$199>>2]|0;
           $201 = ($200|0)>($$282$i$i|0);
           $$$2$i$i = $201 ? $200 : $$282$i$i;
           $202 = ($200|0)>(-1);
           if ($202) {
            $203 = HEAP32[$176>>2]|0;
            $204 = (($203) + ($200))|0;
            HEAP32[$199>>2] = $204;
            $$pre$i$i = HEAP32[$196>>2]|0;
            $207 = $$pre$i$i;
           } else {
            $207 = $1368;
           }
           $205 = (($$07881$i$i) + 1)|0;
           $206 = 1 << $207;
           $208 = ($205|0)<($206|0);
           if ($208) {
            $$07881$i$i = $205;$$282$i$i = $$$2$i$i;$1368 = $207;
           } else {
            $$2$lcssa$i$i = $$$2$i$i;
            break;
           }
          }
         }
         $209 = (($$17686$i$i) + 1)|0;
         $exitcond96$i$i = ($$17686$i$i|0)==($$$073$i$i|0);
         if ($exitcond96$i$i) {
          break;
         } else {
          $$088$i$i = $$2$lcssa$i$i;$$17686$i$i = $209;
         }
        }
        $184 = ($$2$lcssa$i$i|0)<(0);
        if (!($184)) {
         $185 = (($157) + ($169<<2)|0);
         $186 = HEAP32[$185>>2]|0;
         $187 = HEAP32[$186>>2]|0;
         $188 = HEAP32[$176>>2]|0;
         $189 = (($188) + 1)|0;
         HEAP32[$176>>2] = $189;
         $190 = (((($177)) + 1824|0) + ($188<<2)|0);
         HEAP32[$190>>2] = $187;
         $exitcond$i191255$i = ($$2$lcssa$i$i|0)==(0);
         if (!($exitcond$i191255$i)) {
          $$27780$i256$i = 0;
          while(1) {
           $210 = (($$27780$i256$i) + 1)|0;
           $$pre99$i$i = HEAP32[$168>>2]|0;
           $211 = (($157) + ($$pre99$i$i<<2)|0);
           $212 = HEAP32[$211>>2]|0;
           $213 = (($212) + ($210<<2)|0);
           $214 = HEAP32[$213>>2]|0;
           $215 = HEAP32[$176>>2]|0;
           $216 = (($215) + 1)|0;
           HEAP32[$176>>2] = $216;
           $217 = (((($177)) + 1824|0) + ($215<<2)|0);
           HEAP32[$217>>2] = $214;
           $exitcond$i191$i = ($210|0)==($$2$lcssa$i$i|0);
           if ($exitcond$i191$i) {
            break;
           } else {
            $$27780$i256$i = $210;
           }
          }
         }
        }
       }
      }
      $218 = ((($177)) + 16|0);
      $219 = HEAP32[$218>>2]|0;
      $220 = (((($177)) + 800|0) + ($219<<2)|0);
      HEAP32[$220>>2] = 1;
      $221 = HEAP32[$218>>2]|0;
      $222 = (((($177)) + 1056|0) + ($221<<2)|0);
      HEAP32[$222>>2] = $162;
      $223 = HEAP32[$218>>2]|0;
      $224 = (($223) + 1)|0;
      HEAP32[$218>>2] = $224;
      $225 = (($$0185257$i) + 1)|0;
      $226 = HEAP32[$149>>2]|0;
      $227 = ($225|0)<($226|0);
      if (!($227)) {
       break;
      }
      $$pre$i2 = +HEAPF64[$13>>3];
      $$pre271$i = HEAP32[$5>>2]|0;
      $$0185257$i = $225;$156 = $$pre$i2;$177 = $$pre271$i;
     }
     $$pre272$i = HEAP32[$5>>2]|0;
     $$pre = +HEAPF64[$117>>3];
     $233 = $$pre;$237 = $$pre272$i;
    } else {
     $233 = $64;$237 = $6;
    }
    $228 = ((($65)) + 124|0);
    $229 = HEAP32[$228>>2]|0;
    $230 = ((($65)) + 128|0);
    $231 = HEAP32[$230>>2]|0;
    $232 = (~~(($233)));
    $234 = (+($232|0));
    $235 = $233 - $234;
    $236 = ((($237)) + 2868|0);
    $238 = (($231) + ($232<<3)|0);
    $239 = +HEAPF64[$238>>3];
    $240 = (~~(($239)));
    $241 = (($229) + (($240*492)|0)|0);
    _memcpy(($236|0),($241|0),492)|0;
    $242 = +HEAPF64[$238>>3];
    $243 = 1.0 - $235;
    $244 = $242 * $243;
    $245 = (($232) + 1)|0;
    $246 = (($231) + ($245<<3)|0);
    $247 = +HEAPF64[$246>>3];
    $248 = $247 * $235;
    $249 = $248 + $244;
    $250 = (~~(($249)));
    $251 = (+($250|0));
    $252 = $249 - $251;
    $253 = $252 == 0.0;
    $254 = ($250|0)>(0);
    $or$cond$i$i = $254 & $253;
    $$$i193$i = $or$cond$i$i ? 1.0 : $252;
    $255 = $or$cond$i$i << 31 >> 31;
    $$56$i$i = (($255) + ($250))|0;
    $256 = 1.0 - $$$i193$i;
    $257 = (($$56$i$i) + 1)|0;
    $258 = (((($229) + (($$56$i$i*492)|0)|0)) + 4|0);
    $259 = +HEAPF32[$258>>2];
    $260 = $259;
    $261 = $256 * $260;
    $262 = (((($229) + (($257*492)|0)|0)) + 4|0);
    $263 = +HEAPF32[$262>>2];
    $264 = $263;
    $265 = $$$i193$i * $264;
    $266 = $261 + $265;
    $267 = $266;
    $268 = ((($237)) + 2872|0);
    HEAPF32[$268>>2] = $267;
    $269 = (((($229) + (($$56$i$i*492)|0)|0)) + 32|0);
    $270 = +HEAPF32[$269>>2];
    $271 = $270;
    $272 = $256 * $271;
    $273 = (((($229) + (($257*492)|0)|0)) + 32|0);
    $274 = +HEAPF32[$273>>2];
    $275 = $274;
    $276 = $$$i193$i * $275;
    $277 = $272 + $276;
    $278 = $277;
    $279 = ((($237)) + 2900|0);
    HEAPF32[$279>>2] = $278;
    $280 = (((($229) + (($$56$i$i*492)|0)|0)) + 8|0);
    $281 = +HEAPF32[$280>>2];
    $282 = $281;
    $283 = $256 * $282;
    $284 = (((($229) + (($257*492)|0)|0)) + 8|0);
    $285 = +HEAPF32[$284>>2];
    $286 = $285;
    $287 = $286 * $$$i193$i;
    $288 = $287 + $283;
    $289 = $288;
    $290 = ((($237)) + 2876|0);
    HEAPF32[$290>>2] = $289;
    $291 = (((($229) + (($$56$i$i*492)|0)|0)) + 36|0);
    $292 = +HEAPF32[$291>>2];
    $293 = $292;
    $294 = $293 * $256;
    $295 = (((($229) + (($257*492)|0)|0)) + 36|0);
    $296 = +HEAPF32[$295>>2];
    $297 = $296;
    $298 = $297 * $$$i193$i;
    $299 = $298 + $294;
    $300 = $299;
    $301 = ((($237)) + 2904|0);
    HEAPF32[$301>>2] = $300;
    $302 = (((($229) + (($$56$i$i*492)|0)|0)) + 12|0);
    $303 = +HEAPF32[$302>>2];
    $304 = $303;
    $305 = $304 * $256;
    $306 = (((($229) + (($257*492)|0)|0)) + 12|0);
    $307 = +HEAPF32[$306>>2];
    $308 = $307;
    $309 = $308 * $$$i193$i;
    $310 = $309 + $305;
    $311 = $310;
    $312 = ((($237)) + 2880|0);
    HEAPF32[$312>>2] = $311;
    $313 = (((($229) + (($$56$i$i*492)|0)|0)) + 40|0);
    $314 = +HEAPF32[$313>>2];
    $315 = $314;
    $316 = $315 * $256;
    $317 = (((($229) + (($257*492)|0)|0)) + 40|0);
    $318 = +HEAPF32[$317>>2];
    $319 = $318;
    $320 = $319 * $$$i193$i;
    $321 = $320 + $316;
    $322 = $321;
    $323 = ((($237)) + 2908|0);
    HEAPF32[$323>>2] = $322;
    $324 = (((($229) + (($$56$i$i*492)|0)|0)) + 16|0);
    $325 = +HEAPF32[$324>>2];
    $326 = $325;
    $327 = $326 * $256;
    $328 = (((($229) + (($257*492)|0)|0)) + 16|0);
    $329 = +HEAPF32[$328>>2];
    $330 = $329;
    $331 = $330 * $$$i193$i;
    $332 = $331 + $327;
    $333 = $332;
    $334 = ((($237)) + 2884|0);
    HEAPF32[$334>>2] = $333;
    $335 = (((($229) + (($$56$i$i*492)|0)|0)) + 44|0);
    $336 = +HEAPF32[$335>>2];
    $337 = $336;
    $338 = $337 * $256;
    $339 = (((($229) + (($257*492)|0)|0)) + 44|0);
    $340 = +HEAPF32[$339>>2];
    $341 = $340;
    $342 = $341 * $$$i193$i;
    $343 = $342 + $338;
    $344 = $343;
    $345 = ((($237)) + 2912|0);
    HEAPF32[$345>>2] = $344;
    $346 = ((($237)) + 3512|0);
    $347 = +HEAPF64[$346>>3];
    $348 = $347;
    $349 = ((($237)) + 2936|0);
    HEAPF32[$349>>2] = $348;
    $350 = ((($65)) + 132|0);
    $351 = HEAP32[$350>>2]|0;
    $352 = +HEAPF64[$76>>3];
    $353 = $352;
    $354 = (~~(($353)));
    $355 = (+($354|0));
    $356 = $353 - $355;
    $357 = $356;
    $358 = HEAP32[$5>>2]|0;
    $359 = ($351|0)==(0|0);
    L66: do {
     if ($359) {
      $360 = ((($358)) + 4|0);
      $361 = HEAP32[$358>>2]|0;
      $362 = ((($358)) + 3240|0);
      HEAP32[$362>>2] = $361;
      $363 = HEAP32[$360>>2]|0;
      $364 = ((($358)) + 3300|0);
      HEAP32[$364>>2] = $363;
      $365 = ((($358)) + 3244|0);
      HEAP32[$365>>2] = $361;
      $366 = ((($358)) + 3304|0);
      HEAP32[$366>>2] = $363;
      $367 = ((($358)) + 3248|0);
      HEAP32[$367>>2] = $361;
      $368 = ((($358)) + 3308|0);
      HEAP32[$368>>2] = $363;
      $369 = ((($358)) + 3252|0);
      HEAP32[$369>>2] = $361;
      $370 = ((($358)) + 3312|0);
      HEAP32[$370>>2] = $363;
      $371 = ((($358)) + 3256|0);
      HEAP32[$371>>2] = $361;
      $372 = ((($358)) + 3316|0);
      HEAP32[$372>>2] = $363;
      $373 = ((($358)) + 3260|0);
      HEAP32[$373>>2] = $361;
      $374 = ((($358)) + 3320|0);
      HEAP32[$374>>2] = $363;
      $375 = ((($358)) + 3264|0);
      HEAP32[$375>>2] = $361;
      $376 = ((($358)) + 3324|0);
      HEAP32[$376>>2] = $363;
      $377 = ((($358)) + 3268|0);
      HEAP32[$377>>2] = $361;
      $378 = ((($358)) + 3328|0);
      HEAP32[$378>>2] = $363;
      $379 = ((($358)) + 3272|0);
      HEAP32[$379>>2] = $361;
      $380 = ((($358)) + 3332|0);
      HEAP32[$380>>2] = $363;
      $381 = ((($358)) + 3276|0);
      HEAP32[$381>>2] = $361;
      $382 = ((($358)) + 3336|0);
      HEAP32[$382>>2] = $363;
      $383 = ((($358)) + 3280|0);
      HEAP32[$383>>2] = $361;
      $384 = ((($358)) + 3340|0);
      HEAP32[$384>>2] = $363;
      $385 = ((($358)) + 3284|0);
      HEAP32[$385>>2] = $361;
      $386 = ((($358)) + 3344|0);
      HEAP32[$386>>2] = $363;
      $387 = ((($358)) + 3288|0);
      HEAP32[$387>>2] = $361;
      $388 = ((($358)) + 3348|0);
      HEAP32[$388>>2] = $363;
      $389 = ((($358)) + 3292|0);
      HEAP32[$389>>2] = $361;
      $390 = ((($358)) + 3352|0);
      HEAP32[$390>>2] = $363;
      $391 = ((($358)) + 3296|0);
      HEAP32[$391>>2] = $361;
      $392 = ((($358)) + 3356|0);
      HEAP32[$392>>2] = $363;
     } else {
      $393 = ((($358)) + 3120|0);
      $394 = (($351) + (($354*240)|0)|0);
      dest=$393; src=$394; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      $395 = ((($358)) + 3180|0);
      $396 = (((($351) + (($354*240)|0)|0)) + 60|0);
      dest=$395; src=$396; stop=dest+60|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
      $397 = HEAP32[$134>>2]|0;
      $398 = ($397|0)==(0);
      if (!($398)) {
       $399 = 1.0 - $357;
       $400 = (($354) + 1)|0;
       $401 = ((($358)) + 4|0);
       $$pre$i195$i = HEAP32[$70>>2]|0;
       $402 = (+($$pre$i195$i|0));
       $$0122$i$i = 0;
       while(1) {
        $403 = ((((($351) + (($354*240)|0)|0)) + 120|0) + ($$0122$i$i<<2)|0);
        $404 = +HEAPF32[$403>>2];
        $405 = $404;
        $406 = $405 * $399;
        $407 = ((((($351) + (($400*240)|0)|0)) + 120|0) + ($$0122$i$i<<2)|0);
        $408 = +HEAPF32[$407>>2];
        $409 = $408;
        $410 = $409 * $357;
        $411 = $410 + $406;
        $412 = $411;
        $413 = $412;
        $414 = $413 * 1000.0;
        $415 = $414 / $402;
        $416 = HEAP32[$358>>2]|0;
        $417 = (+($416|0));
        $418 = $415 * $417;
        $419 = (~~(($418)));
        $420 = (((($358)) + 3000|0) + ($$0122$i$i<<2)|0);
        HEAP32[$420>>2] = $419;
        $421 = HEAP32[$401>>2]|0;
        $422 = (+($421|0));
        $423 = $415 * $422;
        $424 = (~~(($423)));
        $425 = (((($358)) + 3060|0) + ($$0122$i$i<<2)|0);
        HEAP32[$425>>2] = $424;
        $426 = (~~(($412)));
        $427 = (((($358)) + 2940|0) + ($$0122$i$i<<2)|0);
        HEAP32[$427>>2] = $426;
        $428 = ((((($351) + (($354*240)|0)|0)) + 180|0) + ($$0122$i$i<<2)|0);
        $429 = +HEAPF32[$428>>2];
        $430 = $429;
        $431 = $430 * $399;
        $432 = ((((($351) + (($400*240)|0)|0)) + 180|0) + ($$0122$i$i<<2)|0);
        $433 = +HEAPF32[$432>>2];
        $434 = $433;
        $435 = $434 * $357;
        $436 = $435 + $431;
        $437 = $436;
        $438 = $437;
        $439 = $438 * 1000.0;
        $440 = $439 / $402;
        $441 = HEAP32[$358>>2]|0;
        $442 = (+($441|0));
        $443 = $440 * $442;
        $444 = (~~(($443)));
        $445 = (((($358)) + 3240|0) + ($$0122$i$i<<2)|0);
        HEAP32[$445>>2] = $444;
        $446 = HEAP32[$401>>2]|0;
        $447 = (+($446|0));
        $448 = $440 * $447;
        $449 = (~~(($448)));
        $450 = (((($358)) + 3300|0) + ($$0122$i$i<<2)|0);
        HEAP32[$450>>2] = $449;
        $451 = (($$0122$i$i) + 1)|0;
        $exitcond127$i$i = ($451|0)==(15);
        if ($exitcond127$i$i) {
         break L66;
        } else {
         $$0122$i$i = $451;
        }
       }
      }
      $452 = (((($351) + (($354*240)|0)|0)) + 148|0);
      $453 = +HEAPF32[$452>>2];
      $454 = $453;
      $455 = 1.0 - $357;
      $456 = $454 * $455;
      $457 = (($354) + 1)|0;
      $458 = (((($351) + (($457*240)|0)|0)) + 148|0);
      $459 = +HEAPF32[$458>>2];
      $460 = $459;
      $461 = $460 * $357;
      $462 = $461 + $456;
      $463 = $462;
      $464 = $463;
      $465 = $464 * 1000.0;
      $466 = ((($358)) + 4|0);
      $467 = (~~(($463)));
      $$pre128$i$i = HEAP32[$70>>2]|0;
      $468 = (+($$pre128$i$i|0));
      $469 = $465 / $468;
      $$1121$i$i = 0;
      while(1) {
       $470 = HEAP32[$358>>2]|0;
       $471 = (+($470|0));
       $472 = $471 * $469;
       $473 = (~~(($472)));
       $474 = (((($358)) + 3000|0) + ($$1121$i$i<<2)|0);
       HEAP32[$474>>2] = $473;
       $475 = HEAP32[$466>>2]|0;
       $476 = (+($475|0));
       $477 = $476 * $469;
       $478 = (~~(($477)));
       $479 = (((($358)) + 3060|0) + ($$1121$i$i<<2)|0);
       HEAP32[$479>>2] = $478;
       $480 = (((($358)) + 2940|0) + ($$1121$i$i<<2)|0);
       HEAP32[$480>>2] = $467;
       $481 = (($$1121$i$i) + 1)|0;
       $exitcond126$i$i = ($481|0)==(15);
       if ($exitcond126$i$i) {
        break;
       } else {
        $$1121$i$i = $481;
       }
      }
      $482 = (((($351) + (($354*240)|0)|0)) + 208|0);
      $483 = +HEAPF32[$482>>2];
      $484 = $483;
      $485 = $484 * $455;
      $486 = (((($351) + (($457*240)|0)|0)) + 208|0);
      $487 = +HEAPF32[$486>>2];
      $488 = $487;
      $489 = $488 * $357;
      $490 = $489 + $485;
      $491 = $490;
      $492 = $491;
      $493 = $492 * 1000.0;
      $494 = $493 / $468;
      $$2120$i$i = 0;
      while(1) {
       $495 = HEAP32[$358>>2]|0;
       $496 = (+($495|0));
       $497 = $496 * $494;
       $498 = (~~(($497)));
       $499 = (((($358)) + 3240|0) + ($$2120$i$i<<2)|0);
       HEAP32[$499>>2] = $498;
       $500 = HEAP32[$466>>2]|0;
       $501 = (+($500|0));
       $502 = $501 * $494;
       $503 = (~~(($502)));
       $504 = (((($358)) + 3300|0) + ($$2120$i$i<<2)|0);
       HEAP32[$504>>2] = $503;
       $505 = (($$2120$i$i) + 1)|0;
       $exitcond$i196$i = ($505|0)==(15);
       if ($exitcond$i196$i) {
        break;
       } else {
        $$2120$i$i = $505;
       }
      }
     }
    } while(0);
    $506 = +HEAPF64[$13>>3];
    $507 = ((($65)) + 92|0);
    $508 = HEAP32[$507>>2]|0;
    $509 = ((($65)) + 100|0);
    $510 = HEAP32[$509>>2]|0;
    $511 = ((($65)) + 108|0);
    $512 = HEAP32[$511>>2]|0;
    $513 = HEAP32[$5>>2]|0;
    $514 = ((($513)) + 2852|0);
    $515 = HEAP32[$514>>2]|0;
    $516 = (~~(($506)));
    $517 = ((($513)) + 28|0);
    $518 = HEAP32[$517>>2]|0;
    $519 = ($518|0)>(0);
    if (!($519)) {
     HEAP32[$517>>2] = 1;
    }
    $520 = ($515|0)==(0|0);
    if ($520) {
     $521 = (_malloc(520)|0);
     $522 = ($521|0)==(0|0);
     if (!($522)) {
      $523 = ((($521)) + -4|0);
      $524 = HEAP32[$523>>2]|0;
      $525 = $524 & 3;
      $526 = ($525|0)==(0);
      if (!($526)) {
       _memset(($521|0),0,520)|0;
      }
     }
     HEAP32[$514>>2] = $521;
     $$0$i197$i = $521;
    } else {
     $$0$i197$i = $515;
    }
    _memcpy(($$0$i197$i|0),(152|0),520)|0;
    HEAP32[$$0$i197$i>>2] = 0;
    $527 = ((($513)) + 3460|0);
    $528 = HEAP32[$527>>2]|0;
    $529 = ($528|0)==(0);
    if (!($529)) {
     $530 = ((($$0$i197$i)) + 500|0);
     HEAP32[$530>>2] = 1;
     $531 = (($508) + ($516<<2)|0);
     $532 = HEAP32[$531>>2]|0;
     $533 = ((($$0$i197$i)) + 504|0);
     HEAP32[$533>>2] = $532;
     $534 = (($510) + ($516<<2)|0);
     $535 = HEAP32[$534>>2]|0;
     $536 = ((($$0$i197$i)) + 508|0);
     HEAP32[$536>>2] = $535;
     $537 = (($512) + ($516<<3)|0);
     $538 = +HEAPF64[$537>>3];
     $539 = ((($$0$i197$i)) + 512|0);
     HEAPF64[$539>>3] = $538;
    }
    $540 = +HEAPF64[$13>>3];
    $541 = HEAP32[$507>>2]|0;
    $542 = HEAP32[$509>>2]|0;
    $543 = HEAP32[$511>>2]|0;
    $544 = HEAP32[$5>>2]|0;
    $545 = ((($544)) + 2856|0);
    $546 = HEAP32[$545>>2]|0;
    $547 = (~~(($540)));
    $548 = ((($544)) + 28|0);
    $549 = HEAP32[$548>>2]|0;
    $550 = ($549|0)>(1);
    if (!($550)) {
     HEAP32[$548>>2] = 2;
    }
    $551 = ($546|0)==(0|0);
    if ($551) {
     $552 = (_malloc(520)|0);
     $553 = ($552|0)==(0|0);
     if (!($553)) {
      $554 = ((($552)) + -4|0);
      $555 = HEAP32[$554>>2]|0;
      $556 = $555 & 3;
      $557 = ($556|0)==(0);
      if (!($557)) {
       _memset(($552|0),0,520)|0;
      }
     }
     HEAP32[$545>>2] = $552;
     $$0$i198$i = $552;
    } else {
     $$0$i198$i = $546;
    }
    _memcpy(($$0$i198$i|0),(152|0),520)|0;
    HEAP32[$$0$i198$i>>2] = 0;
    $558 = ((($544)) + 3460|0);
    $559 = HEAP32[$558>>2]|0;
    $560 = ($559|0)==(0);
    if (!($560)) {
     $561 = ((($$0$i198$i)) + 500|0);
     HEAP32[$561>>2] = 1;
     $562 = (($541) + ($547<<2)|0);
     $563 = HEAP32[$562>>2]|0;
     $564 = ((($$0$i198$i)) + 504|0);
     HEAP32[$564>>2] = $563;
     $565 = (($542) + ($547<<2)|0);
     $566 = HEAP32[$565>>2]|0;
     $567 = ((($$0$i198$i)) + 508|0);
     HEAP32[$567>>2] = $566;
     $568 = (($543) + ($547<<3)|0);
     $569 = +HEAPF64[$568>>3];
     $570 = ((($$0$i198$i)) + 512|0);
     HEAPF64[$570>>3] = $569;
    }
    do {
     if (!($148)) {
      $571 = +HEAPF64[$13>>3];
      $572 = ((($65)) + 96|0);
      $573 = HEAP32[$572>>2]|0;
      $574 = ((($65)) + 104|0);
      $575 = HEAP32[$574>>2]|0;
      $576 = HEAP32[$511>>2]|0;
      $577 = HEAP32[$5>>2]|0;
      $578 = ((($577)) + 2860|0);
      $579 = HEAP32[$578>>2]|0;
      $580 = (~~(($571)));
      $581 = ((($577)) + 28|0);
      $582 = HEAP32[$581>>2]|0;
      $583 = ($582|0)>(2);
      if (!($583)) {
       HEAP32[$581>>2] = 3;
      }
      $584 = ($579|0)==(0|0);
      if ($584) {
       $585 = (_malloc(520)|0);
       $586 = ($585|0)==(0|0);
       do {
        if (!($586)) {
         $587 = ((($585)) + -4|0);
         $588 = HEAP32[$587>>2]|0;
         $589 = $588 & 3;
         $590 = ($589|0)==(0);
         if ($590) {
          break;
         }
         _memset(($585|0),0,520)|0;
        }
       } while(0);
       HEAP32[$578>>2] = $585;
       $$0$i200$i = $585;
      } else {
       $$0$i200$i = $579;
      }
      _memcpy(($$0$i200$i|0),(152|0),520)|0;
      HEAP32[$$0$i200$i>>2] = 1;
      $591 = ((($577)) + 3460|0);
      $592 = HEAP32[$591>>2]|0;
      $593 = ($592|0)==(0);
      if (!($593)) {
       $594 = ((($$0$i200$i)) + 500|0);
       HEAP32[$594>>2] = 1;
       $595 = (($573) + ($580<<2)|0);
       $596 = HEAP32[$595>>2]|0;
       $597 = ((($$0$i200$i)) + 504|0);
       HEAP32[$597>>2] = $596;
       $598 = (($575) + ($580<<2)|0);
       $599 = HEAP32[$598>>2]|0;
       $600 = ((($$0$i200$i)) + 508|0);
       HEAP32[$600>>2] = $599;
       $601 = (($576) + ($580<<3)|0);
       $602 = +HEAPF64[$601>>3];
       $603 = ((($$0$i200$i)) + 512|0);
       HEAPF64[$603>>3] = $602;
      }
      $604 = +HEAPF64[$13>>3];
      $605 = HEAP32[$572>>2]|0;
      $606 = HEAP32[$574>>2]|0;
      $607 = HEAP32[$511>>2]|0;
      $608 = HEAP32[$5>>2]|0;
      $609 = ((($608)) + 2864|0);
      $610 = HEAP32[$609>>2]|0;
      $611 = (~~(($604)));
      $612 = ((($608)) + 28|0);
      $613 = HEAP32[$612>>2]|0;
      $614 = ($613|0)>(3);
      if (!($614)) {
       HEAP32[$612>>2] = 4;
      }
      $615 = ($610|0)==(0|0);
      if ($615) {
       $616 = (_malloc(520)|0);
       $617 = ($616|0)==(0|0);
       do {
        if (!($617)) {
         $618 = ((($616)) + -4|0);
         $619 = HEAP32[$618>>2]|0;
         $620 = $619 & 3;
         $621 = ($620|0)==(0);
         if ($621) {
          break;
         }
         _memset(($616|0),0,520)|0;
        }
       } while(0);
       HEAP32[$609>>2] = $616;
       $$0$i202$i = $616;
      } else {
       $$0$i202$i = $610;
      }
      _memcpy(($$0$i202$i|0),(152|0),520)|0;
      HEAP32[$$0$i202$i>>2] = 1;
      $622 = ((($608)) + 3460|0);
      $623 = HEAP32[$622>>2]|0;
      $624 = ($623|0)==(0);
      if ($624) {
       break;
      }
      $625 = ((($$0$i202$i)) + 500|0);
      HEAP32[$625>>2] = 1;
      $626 = (($605) + ($611<<2)|0);
      $627 = HEAP32[$626>>2]|0;
      $628 = ((($$0$i202$i)) + 504|0);
      HEAP32[$628>>2] = $627;
      $629 = (($606) + ($611<<2)|0);
      $630 = HEAP32[$629>>2]|0;
      $631 = ((($$0$i202$i)) + 508|0);
      HEAP32[$631>>2] = $630;
      $632 = (($607) + ($611<<3)|0);
      $633 = +HEAPF64[$632>>3];
      $634 = ((($$0$i202$i)) + 512|0);
      HEAPF64[$634>>3] = $633;
     }
    } while(0);
    $635 = +HEAPF64[$118>>3];
    $636 = ((($65)) + 32|0);
    $637 = HEAP32[$636>>2]|0;
    $638 = ((($65)) + 36|0);
    $639 = HEAP32[$638>>2]|0;
    $640 = ((($65)) + 44|0);
    $641 = HEAP32[$640>>2]|0;
    _vorbis_encode_tonemask_setup($0,$635,0,$637,$639,$641);
    $642 = +HEAPF64[$122>>3];
    $643 = HEAP32[$636>>2]|0;
    $644 = HEAP32[$638>>2]|0;
    $645 = ((($65)) + 52|0);
    $646 = HEAP32[$645>>2]|0;
    _vorbis_encode_tonemask_setup($0,$642,1,$643,$644,$646);
    if (!($148)) {
     $647 = +HEAPF64[$126>>3];
     $648 = HEAP32[$636>>2]|0;
     $649 = HEAP32[$638>>2]|0;
     $650 = HEAP32[$645>>2]|0;
     _vorbis_encode_tonemask_setup($0,$647,2,$648,$649,$650);
     $651 = +HEAPF64[$130>>3];
     $652 = HEAP32[$636>>2]|0;
     $653 = HEAP32[$638>>2]|0;
     $654 = ((($65)) + 48|0);
     $655 = HEAP32[$654>>2]|0;
     _vorbis_encode_tonemask_setup($0,$651,3,$652,$653,$655);
    }
    $656 = +HEAPF64[$121>>3];
    $657 = ((($65)) + 80|0);
    $658 = HEAP32[$657>>2]|0;
    $659 = ((($65)) + 84|0);
    $660 = HEAP32[$659>>2]|0;
    $661 = (~~(($656)));
    $662 = (+($661|0));
    $663 = $656 - $662;
    $664 = HEAP32[$5>>2]|0;
    $665 = ((($664)) + 2852|0);
    $666 = HEAP32[$665>>2]|0;
    $667 = (($660) + ($661<<3)|0);
    $668 = +HEAPF64[$667>>3];
    $669 = 1.0 - $663;
    $670 = $668 * $669;
    $671 = (($661) + 1)|0;
    $672 = (($660) + ($671<<3)|0);
    $673 = +HEAPF64[$672>>3];
    $674 = $673 * $663;
    $675 = $674 + $670;
    $676 = (~~(($675)));
    $677 = (+($676|0));
    $678 = $675 - $677;
    $679 = $678 == 0.0;
    $680 = ($676|0)>(0);
    $or$cond$i204$i = $680 & $679;
    $$$i205$i = $or$cond$i204$i ? 1.0 : $678;
    $681 = $or$cond$i204$i << 31 >> 31;
    $$41$i$i = (($681) + ($676))|0;
    $682 = 1.0 - $$$i205$i;
    $683 = (($$41$i$i) + 1)|0;
    $$042$i$i = 0;
    while(1) {
     $684 = ((($658) + (($$41$i$i*160)|0)|0) + ($$042$i$i<<2)|0);
     $685 = HEAP32[$684>>2]|0;
     $686 = (+($685|0));
     $687 = $686 * $682;
     $688 = ((($658) + (($683*160)|0)|0) + ($$042$i$i<<2)|0);
     $689 = HEAP32[$688>>2]|0;
     $690 = (+($689|0));
     $691 = $690 * $$$i205$i;
     $692 = $691 + $687;
     $693 = $692;
     $694 = (((($666)) + 336|0) + ($$042$i$i<<2)|0);
     HEAPF32[$694>>2] = $693;
     $695 = (($$042$i$i) + 1)|0;
     $exitcond$i206$i = ($695|0)==(40);
     if ($exitcond$i206$i) {
      break;
     } else {
      $$042$i$i = $695;
     }
    }
    $696 = +HEAPF64[$125>>3];
    $697 = (~~(($696)));
    $698 = (+($697|0));
    $699 = $696 - $698;
    $700 = ((($664)) + 2856|0);
    $701 = HEAP32[$700>>2]|0;
    $702 = (($660) + ($697<<3)|0);
    $703 = +HEAPF64[$702>>3];
    $704 = 1.0 - $699;
    $705 = $703 * $704;
    $706 = (($697) + 1)|0;
    $707 = (($660) + ($706<<3)|0);
    $708 = +HEAPF64[$707>>3];
    $709 = $708 * $699;
    $710 = $709 + $705;
    $711 = (~~(($710)));
    $712 = (+($711|0));
    $713 = $710 - $712;
    $714 = $713 == 0.0;
    $715 = ($711|0)>(0);
    $or$cond$i207$i = $715 & $714;
    $$$i208$i = $or$cond$i207$i ? 1.0 : $713;
    $716 = $or$cond$i207$i << 31 >> 31;
    $$41$i209$i = (($716) + ($711))|0;
    $717 = 1.0 - $$$i208$i;
    $718 = (($$41$i209$i) + 1)|0;
    $$042$i210$i = 0;
    while(1) {
     $719 = ((($658) + (($$41$i209$i*160)|0)|0) + ($$042$i210$i<<2)|0);
     $720 = HEAP32[$719>>2]|0;
     $721 = (+($720|0));
     $722 = $721 * $717;
     $723 = ((($658) + (($718*160)|0)|0) + ($$042$i210$i<<2)|0);
     $724 = HEAP32[$723>>2]|0;
     $725 = (+($724|0));
     $726 = $725 * $$$i208$i;
     $727 = $726 + $722;
     $728 = $727;
     $729 = (((($701)) + 336|0) + ($$042$i210$i<<2)|0);
     HEAPF32[$729>>2] = $728;
     $730 = (($$042$i210$i) + 1)|0;
     $exitcond$i211$i = ($730|0)==(40);
     if ($exitcond$i211$i) {
      break;
     } else {
      $$042$i210$i = $730;
     }
    }
    if (!($148)) {
     $731 = +HEAPF64[$129>>3];
     $732 = ((($65)) + 88|0);
     $733 = HEAP32[$732>>2]|0;
     $734 = (~~(($731)));
     $735 = (+($734|0));
     $736 = $731 - $735;
     $737 = ((($664)) + 2860|0);
     $738 = HEAP32[$737>>2]|0;
     $739 = (($733) + ($734<<3)|0);
     $740 = +HEAPF64[$739>>3];
     $741 = 1.0 - $736;
     $742 = $740 * $741;
     $743 = (($734) + 1)|0;
     $744 = (($733) + ($743<<3)|0);
     $745 = +HEAPF64[$744>>3];
     $746 = $745 * $736;
     $747 = $746 + $742;
     $748 = (~~(($747)));
     $749 = (+($748|0));
     $750 = $747 - $749;
     $751 = $750 == 0.0;
     $752 = ($748|0)>(0);
     $or$cond$i213$i = $752 & $751;
     $$$i214$i = $or$cond$i213$i ? 1.0 : $750;
     $753 = $or$cond$i213$i << 31 >> 31;
     $$41$i215$i = (($753) + ($748))|0;
     $754 = 1.0 - $$$i214$i;
     $755 = (($$41$i215$i) + 1)|0;
     $$042$i216$i = 0;
     while(1) {
      $756 = ((($658) + (($$41$i215$i*160)|0)|0) + ($$042$i216$i<<2)|0);
      $757 = HEAP32[$756>>2]|0;
      $758 = (+($757|0));
      $759 = $758 * $754;
      $760 = ((($658) + (($755*160)|0)|0) + ($$042$i216$i<<2)|0);
      $761 = HEAP32[$760>>2]|0;
      $762 = (+($761|0));
      $763 = $762 * $$$i214$i;
      $764 = $763 + $759;
      $765 = $764;
      $766 = (((($738)) + 336|0) + ($$042$i216$i<<2)|0);
      HEAPF32[$766>>2] = $765;
      $767 = (($$042$i216$i) + 1)|0;
      $exitcond$i217$i = ($767|0)==(40);
      if ($exitcond$i217$i) {
       break;
      } else {
       $$042$i216$i = $767;
      }
     }
     $768 = +HEAPF64[$133>>3];
     $769 = (~~(($768)));
     $770 = (+($769|0));
     $771 = $768 - $770;
     $772 = ((($664)) + 2864|0);
     $773 = HEAP32[$772>>2]|0;
     $774 = (($733) + ($769<<3)|0);
     $775 = +HEAPF64[$774>>3];
     $776 = 1.0 - $771;
     $777 = $775 * $776;
     $778 = (($769) + 1)|0;
     $779 = (($733) + ($778<<3)|0);
     $780 = +HEAPF64[$779>>3];
     $781 = $780 * $771;
     $782 = $781 + $777;
     $783 = (~~(($782)));
     $784 = (+($783|0));
     $785 = $782 - $784;
     $786 = $785 == 0.0;
     $787 = ($783|0)>(0);
     $or$cond$i219$i = $787 & $786;
     $$$i220$i = $or$cond$i219$i ? 1.0 : $785;
     $788 = $or$cond$i219$i << 31 >> 31;
     $$41$i221$i = (($788) + ($783))|0;
     $789 = 1.0 - $$$i220$i;
     $790 = (($$41$i221$i) + 1)|0;
     $$042$i222$i = 0;
     while(1) {
      $791 = ((($658) + (($$41$i221$i*160)|0)|0) + ($$042$i222$i<<2)|0);
      $792 = HEAP32[$791>>2]|0;
      $793 = (+($792|0));
      $794 = $793 * $789;
      $795 = ((($658) + (($790*160)|0)|0) + ($$042$i222$i<<2)|0);
      $796 = HEAP32[$795>>2]|0;
      $797 = (+($796|0));
      $798 = $797 * $$$i220$i;
      $799 = $798 + $794;
      $800 = $799;
      $801 = (((($773)) + 336|0) + ($$042$i222$i<<2)|0);
      HEAPF32[$801>>2] = $800;
      $802 = (($$042$i222$i) + 1)|0;
      $exitcond$i223$i = ($802|0)==(40);
      if ($exitcond$i223$i) {
       break;
      } else {
       $$042$i222$i = $802;
      }
     }
    }
    $803 = +HEAPF64[$119>>3];
    $804 = ((($65)) + 40|0);
    $805 = HEAP32[$804>>2]|0;
    $806 = (~~(($803)));
    $807 = (+($806|0));
    $808 = $803 - $807;
    $809 = (($805) + ($806<<2)|0);
    $810 = HEAP32[$809>>2]|0;
    $811 = (+($810|0));
    $812 = 1.0 - $808;
    $813 = $811 * $812;
    $814 = (($806) + 1)|0;
    $815 = (($805) + ($814<<2)|0);
    $816 = HEAP32[$815>>2]|0;
    $817 = (+($816|0));
    $818 = $817 * $808;
    $819 = $818 + $813;
    $820 = $819;
    $821 = ((($666)) + 32|0);
    HEAPF32[$821>>2] = $820;
    $822 = +HEAPF64[$123>>3];
    $823 = (~~(($822)));
    $824 = (+($823|0));
    $825 = $822 - $824;
    $826 = (($805) + ($823<<2)|0);
    $827 = HEAP32[$826>>2]|0;
    $828 = (+($827|0));
    $829 = 1.0 - $825;
    $830 = $828 * $829;
    $831 = (($823) + 1)|0;
    $832 = (($805) + ($831<<2)|0);
    $833 = HEAP32[$832>>2]|0;
    $834 = (+($833|0));
    $835 = $834 * $825;
    $836 = $835 + $830;
    $837 = $836;
    $838 = ((($701)) + 32|0);
    HEAPF32[$838>>2] = $837;
    if (!($148)) {
     $839 = +HEAPF64[$127>>3];
     $840 = (~~(($839)));
     $841 = (+($840|0));
     $842 = $839 - $841;
     $843 = ((($664)) + 2860|0);
     $844 = HEAP32[$843>>2]|0;
     $845 = (($805) + ($840<<2)|0);
     $846 = HEAP32[$845>>2]|0;
     $847 = (+($846|0));
     $848 = 1.0 - $842;
     $849 = $847 * $848;
     $850 = (($840) + 1)|0;
     $851 = (($805) + ($850<<2)|0);
     $852 = HEAP32[$851>>2]|0;
     $853 = (+($852|0));
     $854 = $853 * $842;
     $855 = $854 + $849;
     $856 = $855;
     $857 = ((($844)) + 32|0);
     HEAPF32[$857>>2] = $856;
     $858 = +HEAPF64[$131>>3];
     $859 = (~~(($858)));
     $860 = (+($859|0));
     $861 = $858 - $860;
     $862 = ((($664)) + 2864|0);
     $863 = HEAP32[$862>>2]|0;
     $864 = (($805) + ($859<<2)|0);
     $865 = HEAP32[$864>>2]|0;
     $866 = (+($865|0));
     $867 = 1.0 - $861;
     $868 = $866 * $867;
     $869 = (($859) + 1)|0;
     $870 = (($805) + ($869<<2)|0);
     $871 = HEAP32[$870>>2]|0;
     $872 = (+($871|0));
     $873 = $872 * $861;
     $874 = $873 + $868;
     $875 = $874;
     $876 = ((($863)) + 32|0);
     HEAPF32[$876>>2] = $875;
    }
    $877 = +HEAPF64[$120>>3];
    $878 = ((($65)) + 76|0);
    $879 = HEAP32[$878>>2]|0;
    $880 = ((($65)) + 60|0);
    $881 = HEAP32[$880>>2]|0;
    $882 = ((($65)) + 56|0);
    $883 = HEAP32[$882>>2]|0;
    $884 = ((($6)) + 3408|0);
    $885 = +HEAPF64[$884>>3];
    _vorbis_encode_noisebias_setup($0,$877,0,$879,$881,$883,$885);
    $886 = +HEAPF64[$124>>3];
    $887 = HEAP32[$878>>2]|0;
    $888 = ((($65)) + 64|0);
    $889 = HEAP32[$888>>2]|0;
    $890 = HEAP32[$882>>2]|0;
    _vorbis_encode_noisebias_setup($0,$886,1,$887,$889,$890,0.0);
    if ($148) {
     $921 = HEAP32[$5>>2]|0;
     $922 = ((($921)) + 2852|0);
     $923 = HEAP32[$922>>2]|0;
     $924 = ((($921)) + 3496|0);
     $925 = +HEAPF64[$924>>3];
     $926 = $925;
     $927 = ((($923)) + 4|0);
     HEAPF32[$927>>2] = $926;
     $928 = ((($921)) + 3504|0);
     $929 = +HEAPF64[$928>>3];
     $930 = $929;
     $931 = ((($923)) + 8|0);
     HEAPF32[$931>>2] = $930;
     $932 = ((($921)) + 2856|0);
     $$sink241$i = $932;$935 = $925;$938 = $929;$949 = $921;
    } else {
     $891 = +HEAPF64[$128>>3];
     $892 = HEAP32[$878>>2]|0;
     $893 = ((($65)) + 68|0);
     $894 = HEAP32[$893>>2]|0;
     $895 = HEAP32[$882>>2]|0;
     _vorbis_encode_noisebias_setup($0,$891,2,$892,$894,$895,0.0);
     $896 = +HEAPF64[$132>>3];
     $897 = HEAP32[$878>>2]|0;
     $898 = ((($65)) + 72|0);
     $899 = HEAP32[$898>>2]|0;
     $900 = HEAP32[$882>>2]|0;
     _vorbis_encode_noisebias_setup($0,$896,3,$897,$899,$900,0.0);
     $901 = HEAP32[$5>>2]|0;
     $902 = ((($901)) + 2852|0);
     $903 = HEAP32[$902>>2]|0;
     $904 = ((($901)) + 3496|0);
     $905 = +HEAPF64[$904>>3];
     $906 = $905;
     $907 = ((($903)) + 4|0);
     HEAPF32[$907>>2] = $906;
     $908 = ((($901)) + 3504|0);
     $909 = +HEAPF64[$908>>3];
     $910 = $909;
     $911 = ((($903)) + 8|0);
     HEAPF32[$911>>2] = $910;
     $912 = ((($901)) + 2856|0);
     $913 = HEAP32[$912>>2]|0;
     $914 = ((($913)) + 4|0);
     HEAPF32[$914>>2] = $906;
     $915 = ((($913)) + 8|0);
     HEAPF32[$915>>2] = $910;
     $916 = ((($901)) + 2860|0);
     $917 = HEAP32[$916>>2]|0;
     $918 = ((($917)) + 4|0);
     HEAPF32[$918>>2] = $906;
     $919 = ((($917)) + 8|0);
     HEAPF32[$919>>2] = $910;
     $920 = ((($901)) + 2864|0);
     $$sink241$i = $920;$935 = $905;$938 = $909;$949 = $901;
    }
    $933 = HEAP32[$$sink241$i>>2]|0;
    $934 = $935;
    $936 = ((($933)) + 4|0);
    HEAPF32[$936>>2] = $934;
    $937 = $938;
    $939 = ((($933)) + 8|0);
    HEAPF32[$939>>2] = $937;
    $940 = +HEAPF64[$13>>3];
    $941 = ((($65)) + 152|0);
    $942 = HEAP32[$941>>2]|0;
    $943 = (~~(($940)));
    $944 = (($942) + ($943<<3)|0);
    $945 = HEAP32[$944>>2]|0;
    $946 = (((($942) + ($943<<3)|0)) + 4|0);
    $947 = HEAP32[$946>>2]|0;
    $948 = HEAP32[$949>>2]|0;
    $950 = ((($949)) + 4|0);
    $951 = HEAP32[$950>>2]|0;
    $952 = ($948|0)==($951|0);
    $$$i$i = $952 ? 1 : 2;
    $953 = ((($949)) + 8|0);
    $954 = ((($949)) + 12|0);
    $$075$i$i = 0;
    while(1) {
     $955 = (_malloc(3208)|0);
     $956 = ($955|0)==(0|0);
     do {
      if (!($956)) {
       $957 = ((($955)) + -4|0);
       $958 = HEAP32[$957>>2]|0;
       $959 = $958 & 3;
       $960 = ($959|0)==(0);
       if ($960) {
        break;
       }
       _memset(($955|0),0,3208)|0;
      }
     } while(0);
     $961 = (((($949)) + 544|0) + ($$075$i$i<<2)|0);
     HEAP32[$961>>2] = $955;
     $962 = (_malloc(16)|0);
     $963 = ($962|0)==(0|0);
     do {
      if (!($963)) {
       $964 = ((($962)) + -4|0);
       $965 = HEAP32[$964>>2]|0;
       $966 = $965 & 3;
       $967 = ($966|0)==(0);
       if ($967) {
        break;
       }
       dest=$962; stop=dest+16|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      }
     } while(0);
     $968 = (((($949)) + 32|0) + ($$075$i$i<<2)|0);
     HEAP32[$968>>2] = $962;
     $969 = (60752 + ($$075$i$i<<4)|0);
     ;HEAP32[$962>>2]=HEAP32[$969>>2]|0;HEAP32[$962+4>>2]=HEAP32[$969+4>>2]|0;HEAP32[$962+8>>2]=HEAP32[$969+8>>2]|0;HEAP32[$962+12>>2]=HEAP32[$969+12>>2]|0;
     $970 = HEAP32[$953>>2]|0;
     $971 = ($$075$i$i|0)<($970|0);
     if (!($971)) {
      $972 = (($$075$i$i) + 1)|0;
      HEAP32[$953>>2] = $972;
     }
     $973 = (((($949)) + 288|0) + ($$075$i$i<<2)|0);
     HEAP32[$973>>2] = 0;
     $974 = HEAP32[$961>>2]|0;
     $975 = (($945) + (($$075$i$i*3208)|0)|0);
     _memcpy(($974|0),($975|0),3208)|0;
     $976 = HEAP32[$954>>2]|0;
     $977 = ($$075$i$i|0)<($976|0);
     if (!($977)) {
      $978 = (($$075$i$i) + 1)|0;
      HEAP32[$954>>2] = $978;
     }
     $979 = HEAP32[$975>>2]|0;
     $980 = ($979|0)>(0);
     L173: do {
      if ($980) {
       $$06074$i$i = 0;
       while(1) {
        $981 = ((((($945) + (($$075$i$i*3208)|0)|0)) + 1092|0) + ($$06074$i$i<<2)|0);
        $982 = HEAP32[$981>>2]|0;
        $983 = HEAP32[$5>>2]|0;
        $984 = (_malloc(2840)|0);
        $985 = (((($983)) + 1568|0) + ($982<<2)|0);
        HEAP32[$985>>2] = $984;
        $986 = (((($947) + ($982<<5)|0)) + 12|0);
        $987 = HEAP32[$986>>2]|0;
        _memcpy(($984|0),($987|0),2840)|0;
        $988 = ((($983)) + 20|0);
        $989 = HEAP32[$988>>2]|0;
        $990 = ($989|0)>($982|0);
        if (!($990)) {
         $991 = (($982) + 1)|0;
         HEAP32[$988>>2] = $991;
        }
        $992 = (((($947) + ($982<<5)|0)) + 8|0);
        $993 = HEAP32[$992>>2]|0;
        $994 = ((($984)) + 8|0);
        HEAP32[$994>>2] = $993;
        $995 = (($947) + ($982<<5)|0);
        $996 = HEAP32[$995>>2]|0;
        $997 = (((($983)) + 1312|0) + ($982<<2)|0);
        HEAP32[$997>>2] = $996;
        $998 = ((($983)) + 3420|0);
        $999 = HEAP32[$998>>2]|0;
        $1000 = ($999|0)==(0);
        $1001 = ((($984)) + 12|0);
        $1002 = HEAP32[$1001>>2]|0;
        $1003 = ($1002|0)>(0);
        do {
         if ($1000) {
          if ($1003) {
           $1007 = (((($947) + ($982<<5)|0)) + 24|0);
           $1008 = HEAP32[$1007>>2]|0;
           $1009 = ((($984)) + 24|0);
           $$2251$i$i$i = 0;
           while(1) {
            $1058 = (($1009) + ($$2251$i$i$i<<2)|0);
            $1059 = (($1008) + ($$2251$i$i$i<<4)|0);
            $1060 = HEAP32[$1059>>2]|0;
            $1061 = ($1060|0)==(0|0);
            if (!($1061)) {
             $1062 = HEAP32[$1058>>2]|0;
             $1063 = $1062 | 1;
             HEAP32[$1058>>2] = $1063;
            }
            $1064 = (((($1008) + ($$2251$i$i$i<<4)|0)) + 4|0);
            $1065 = HEAP32[$1064>>2]|0;
            $1066 = ($1065|0)==(0|0);
            if (!($1066)) {
             $1232 = HEAP32[$1058>>2]|0;
             $1233 = $1232 | 2;
             HEAP32[$1058>>2] = $1233;
            }
            $1234 = (((($1008) + ($$2251$i$i$i<<4)|0)) + 8|0);
            $1235 = HEAP32[$1234>>2]|0;
            $1236 = ($1235|0)==(0|0);
            if (!($1236)) {
             $1237 = HEAP32[$1058>>2]|0;
             $1238 = $1237 | 4;
             HEAP32[$1058>>2] = $1238;
            }
            $1239 = (((($1008) + ($$2251$i$i$i<<4)|0)) + 12|0);
            $1240 = HEAP32[$1239>>2]|0;
            $1241 = ($1240|0)==(0|0);
            if (!($1241)) {
             $1242 = HEAP32[$1058>>2]|0;
             $1243 = $1242 | 8;
             HEAP32[$1058>>2] = $1243;
            }
            $1244 = (($$2251$i$i$i) + 1)|0;
            $1245 = HEAP32[$1001>>2]|0;
            $1246 = ($1244|0)<($1245|0);
            if ($1246) {
             $$2251$i$i$i = $1244;
            } else {
             $1081 = $1245;
             break;
            }
           }
          } else {
           $1081 = $1002;
          }
          $1067 = (((($947) + ($982<<5)|0)) + 16|0);
          $1068 = HEAP32[$1067>>2]|0;
          $1069 = ((($983)) + 24|0);
          $1070 = HEAP32[$1069>>2]|0;
          $1071 = ($1070|0)>(0);
          $1072 = $1068;
          L198: do {
           if ($1071) {
            $$012$i212$i$i$i = 0;
            while(1) {
             $1073 = (((($983)) + 1824|0) + ($$012$i212$i$i$i<<2)|0);
             $1074 = HEAP32[$1073>>2]|0;
             $1075 = ($1074|0)==($1068|0);
             if ($1075) {
              $$07$i215$i$i$i = $$012$i212$i$i$i;
              break L198;
             }
             $1076 = (($$012$i212$i$i$i) + 1)|0;
             $1077 = ($1076|0)<($1070|0);
             if ($1077) {
              $$012$i212$i$i$i = $1076;
             } else {
              label = 149;
              break;
             }
            }
           } else {
            label = 149;
           }
          } while(0);
          if ((label|0) == 149) {
           label = 0;
           $1078 = (($1070) + 1)|0;
           HEAP32[$1069>>2] = $1078;
           $$07$i215$i$i$i = $1070;
          }
          $1079 = ((($984)) + 20|0);
          HEAP32[$1079>>2] = $$07$i215$i$i$i;
          $1080 = (((($983)) + 1824|0) + ($$07$i215$i$i$i<<2)|0);
          HEAP32[$1080>>2] = $1072;
          $1082 = ($1081|0)>(0);
          if (!($1082)) {
           break;
          }
          $1083 = (((($947) + ($982<<5)|0)) + 24|0);
          $1084 = ((($984)) + 280|0);
          $$3198248$i$i$i = 0;$$3249$i$i$i = 0;
          while(1) {
           $1085 = HEAP32[$1083>>2]|0;
           $1086 = (($1085) + ($$3249$i$i$i<<4)|0);
           $1087 = HEAP32[$1086>>2]|0;
           $1088 = ($1087|0)==(0|0);
           $1089 = $1087;
           if ($1088) {
            $$5$i$i$i = $$3198248$i$i$i;$1102 = $1085;
           } else {
            $1090 = HEAP32[$1069>>2]|0;
            $1091 = ($1090|0)>(0);
            L210: do {
             if ($1091) {
              $$012$i207$i$i$i = 0;
              while(1) {
               $1092 = (((($983)) + 1824|0) + ($$012$i207$i$i$i<<2)|0);
               $1093 = HEAP32[$1092>>2]|0;
               $1094 = ($1093|0)==($1087|0);
               if ($1094) {
                $$07$i210$i$i$i = $$012$i207$i$i$i;
                break L210;
               }
               $1095 = (($$012$i207$i$i$i) + 1)|0;
               $1096 = ($1095|0)<($1090|0);
               if ($1096) {
                $$012$i207$i$i$i = $1095;
               } else {
                label = 156;
                break;
               }
              }
             } else {
              label = 156;
             }
            } while(0);
            if ((label|0) == 156) {
             label = 0;
             $1097 = (($1090) + 1)|0;
             HEAP32[$1069>>2] = $1097;
             $$07$i210$i$i$i = $1090;
            }
            $1098 = (($$3198248$i$i$i) + 1)|0;
            $1099 = (($1084) + ($$3198248$i$i$i<<2)|0);
            HEAP32[$1099>>2] = $$07$i210$i$i$i;
            $1100 = (((($983)) + 1824|0) + ($$07$i210$i$i$i<<2)|0);
            HEAP32[$1100>>2] = $1089;
            $$pre270$i$i$i = HEAP32[$1083>>2]|0;
            $$5$i$i$i = $1098;$1102 = $$pre270$i$i$i;
           }
           $1101 = (((($1102) + ($$3249$i$i$i<<4)|0)) + 4|0);
           $1103 = HEAP32[$1101>>2]|0;
           $1104 = ($1103|0)==(0|0);
           $1105 = $1103;
           if ($1104) {
            $$5$1$i$i$i = $$5$i$i$i;$1198 = $1102;
           } else {
            $1186 = HEAP32[$1069>>2]|0;
            $1187 = ($1186|0)>(0);
            L220: do {
             if ($1187) {
              $$012$i207$1$i$i$i = 0;
              while(1) {
               $1188 = (((($983)) + 1824|0) + ($$012$i207$1$i$i$i<<2)|0);
               $1189 = HEAP32[$1188>>2]|0;
               $1190 = ($1189|0)==($1103|0);
               if ($1190) {
                $$07$i210$1$i$i$i = $$012$i207$1$i$i$i;
                break L220;
               }
               $1191 = (($$012$i207$1$i$i$i) + 1)|0;
               $1192 = ($1191|0)<($1186|0);
               if ($1192) {
                $$012$i207$1$i$i$i = $1191;
               } else {
                label = 181;
                break;
               }
              }
             } else {
              label = 181;
             }
            } while(0);
            if ((label|0) == 181) {
             label = 0;
             $1193 = (($1186) + 1)|0;
             HEAP32[$1069>>2] = $1193;
             $$07$i210$1$i$i$i = $1186;
            }
            $1194 = (($$5$i$i$i) + 1)|0;
            $1195 = (($1084) + ($$5$i$i$i<<2)|0);
            HEAP32[$1195>>2] = $$07$i210$1$i$i$i;
            $1196 = (((($983)) + 1824|0) + ($$07$i210$1$i$i$i<<2)|0);
            HEAP32[$1196>>2] = $1105;
            $$pre271$i$i$i = HEAP32[$1083>>2]|0;
            $$5$1$i$i$i = $1194;$1198 = $$pre271$i$i$i;
           }
           $1197 = (((($1198) + ($$3249$i$i$i<<4)|0)) + 8|0);
           $1199 = HEAP32[$1197>>2]|0;
           $1200 = ($1199|0)==(0|0);
           $1201 = $1199;
           if ($1200) {
            $$5$2$i$i$i = $$5$1$i$i$i;$1214 = $1198;
           } else {
            $1202 = HEAP32[$1069>>2]|0;
            $1203 = ($1202|0)>(0);
            L230: do {
             if ($1203) {
              $$012$i207$2$i$i$i = 0;
              while(1) {
               $1204 = (((($983)) + 1824|0) + ($$012$i207$2$i$i$i<<2)|0);
               $1205 = HEAP32[$1204>>2]|0;
               $1206 = ($1205|0)==($1199|0);
               if ($1206) {
                $$07$i210$2$i$i$i = $$012$i207$2$i$i$i;
                break L230;
               }
               $1207 = (($$012$i207$2$i$i$i) + 1)|0;
               $1208 = ($1207|0)<($1202|0);
               if ($1208) {
                $$012$i207$2$i$i$i = $1207;
               } else {
                label = 187;
                break;
               }
              }
             } else {
              label = 187;
             }
            } while(0);
            if ((label|0) == 187) {
             label = 0;
             $1209 = (($1202) + 1)|0;
             HEAP32[$1069>>2] = $1209;
             $$07$i210$2$i$i$i = $1202;
            }
            $1210 = (($$5$1$i$i$i) + 1)|0;
            $1211 = (($1084) + ($$5$1$i$i$i<<2)|0);
            HEAP32[$1211>>2] = $$07$i210$2$i$i$i;
            $1212 = (((($983)) + 1824|0) + ($$07$i210$2$i$i$i<<2)|0);
            HEAP32[$1212>>2] = $1201;
            $$pre272$i$i$i = HEAP32[$1083>>2]|0;
            $$5$2$i$i$i = $1210;$1214 = $$pre272$i$i$i;
           }
           $1213 = (((($1214) + ($$3249$i$i$i<<4)|0)) + 12|0);
           $1215 = HEAP32[$1213>>2]|0;
           $1216 = ($1215|0)==(0|0);
           $1217 = $1215;
           if ($1216) {
            $$5$3$i$i$i = $$5$2$i$i$i;
           } else {
            $1218 = HEAP32[$1069>>2]|0;
            $1219 = ($1218|0)>(0);
            L240: do {
             if ($1219) {
              $$012$i207$3$i$i$i = 0;
              while(1) {
               $1220 = (((($983)) + 1824|0) + ($$012$i207$3$i$i$i<<2)|0);
               $1221 = HEAP32[$1220>>2]|0;
               $1222 = ($1221|0)==($1215|0);
               if ($1222) {
                $$07$i210$3$i$i$i = $$012$i207$3$i$i$i;
                break L240;
               }
               $1223 = (($$012$i207$3$i$i$i) + 1)|0;
               $1224 = ($1223|0)<($1218|0);
               if ($1224) {
                $$012$i207$3$i$i$i = $1223;
               } else {
                label = 193;
                break;
               }
              }
             } else {
              label = 193;
             }
            } while(0);
            if ((label|0) == 193) {
             label = 0;
             $1225 = (($1218) + 1)|0;
             HEAP32[$1069>>2] = $1225;
             $$07$i210$3$i$i$i = $1218;
            }
            $1226 = (($$5$2$i$i$i) + 1)|0;
            $1227 = (($1084) + ($$5$2$i$i$i<<2)|0);
            HEAP32[$1227>>2] = $$07$i210$3$i$i$i;
            $1228 = (((($983)) + 1824|0) + ($$07$i210$3$i$i$i<<2)|0);
            HEAP32[$1228>>2] = $1217;
            $$5$3$i$i$i = $1226;
           }
           $1229 = (($$3249$i$i$i) + 1)|0;
           $1230 = HEAP32[$1001>>2]|0;
           $1231 = ($1229|0)<($1230|0);
           if ($1231) {
            $$3198248$i$i$i = $$5$3$i$i$i;$$3249$i$i$i = $1229;
           } else {
            break;
           }
          }
         } else {
          if ($1003) {
           $1004 = (((($947) + ($982<<5)|0)) + 28|0);
           $1005 = HEAP32[$1004>>2]|0;
           $1006 = ((($984)) + 24|0);
           $$0260$i$i$i = 0;
           while(1) {
            $1010 = (($1006) + ($$0260$i$i$i<<2)|0);
            $1011 = (($1005) + ($$0260$i$i$i<<4)|0);
            $1012 = HEAP32[$1011>>2]|0;
            $1013 = ($1012|0)==(0|0);
            if (!($1013)) {
             $1014 = HEAP32[$1010>>2]|0;
             $1015 = $1014 | 1;
             HEAP32[$1010>>2] = $1015;
            }
            $1016 = (((($1005) + ($$0260$i$i$i<<4)|0)) + 4|0);
            $1017 = HEAP32[$1016>>2]|0;
            $1018 = ($1017|0)==(0|0);
            if (!($1018)) {
             $1293 = HEAP32[$1010>>2]|0;
             $1294 = $1293 | 2;
             HEAP32[$1010>>2] = $1294;
            }
            $1295 = (((($1005) + ($$0260$i$i$i<<4)|0)) + 8|0);
            $1296 = HEAP32[$1295>>2]|0;
            $1297 = ($1296|0)==(0|0);
            if (!($1297)) {
             $1298 = HEAP32[$1010>>2]|0;
             $1299 = $1298 | 4;
             HEAP32[$1010>>2] = $1299;
            }
            $1300 = (((($1005) + ($$0260$i$i$i<<4)|0)) + 12|0);
            $1301 = HEAP32[$1300>>2]|0;
            $1302 = ($1301|0)==(0|0);
            if (!($1302)) {
             $1303 = HEAP32[$1010>>2]|0;
             $1304 = $1303 | 8;
             HEAP32[$1010>>2] = $1304;
            }
            $1305 = (($$0260$i$i$i) + 1)|0;
            $1306 = HEAP32[$1001>>2]|0;
            $1307 = ($1305|0)<($1306|0);
            if ($1307) {
             $$0260$i$i$i = $1305;
            } else {
             $1033 = $1306;
             break;
            }
           }
          } else {
           $1033 = $1002;
          }
          $1019 = (((($947) + ($982<<5)|0)) + 20|0);
          $1020 = HEAP32[$1019>>2]|0;
          $1021 = ((($983)) + 24|0);
          $1022 = HEAP32[$1021>>2]|0;
          $1023 = ($1022|0)>(0);
          $1024 = $1020;
          L266: do {
           if ($1023) {
            $$012$i$i$i$i = 0;
            while(1) {
             $1025 = (((($983)) + 1824|0) + ($$012$i$i$i$i<<2)|0);
             $1026 = HEAP32[$1025>>2]|0;
             $1027 = ($1026|0)==($1020|0);
             if ($1027) {
              $$07$i$i$i$i = $$012$i$i$i$i;
              break L266;
             }
             $1028 = (($$012$i$i$i$i) + 1)|0;
             $1029 = ($1028|0)<($1022|0);
             if ($1029) {
              $$012$i$i$i$i = $1028;
             } else {
              label = 133;
              break;
             }
            }
           } else {
            label = 133;
           }
          } while(0);
          if ((label|0) == 133) {
           label = 0;
           $1030 = (($1022) + 1)|0;
           HEAP32[$1021>>2] = $1030;
           $$07$i$i$i$i = $1022;
          }
          $1031 = ((($984)) + 20|0);
          HEAP32[$1031>>2] = $$07$i$i$i$i;
          $1032 = (((($983)) + 1824|0) + ($$07$i$i$i$i<<2)|0);
          HEAP32[$1032>>2] = $1024;
          $1034 = ($1033|0)>(0);
          if (!($1034)) {
           break;
          }
          $1035 = (((($947) + ($982<<5)|0)) + 28|0);
          $1036 = ((($984)) + 280|0);
          $$0195257$i$i$i = 0;$$1258$i$i$i = 0;
          while(1) {
           $1037 = HEAP32[$1035>>2]|0;
           $1038 = (($1037) + ($$1258$i$i$i<<4)|0);
           $1039 = HEAP32[$1038>>2]|0;
           $1040 = ($1039|0)==(0|0);
           $1041 = $1039;
           if ($1040) {
            $$2197$i$i$i = $$0195257$i$i$i;$1054 = $1037;
           } else {
            $1042 = HEAP32[$1021>>2]|0;
            $1043 = ($1042|0)>(0);
            L278: do {
             if ($1043) {
              $$012$i217$i$i$i = 0;
              while(1) {
               $1044 = (((($983)) + 1824|0) + ($$012$i217$i$i$i<<2)|0);
               $1045 = HEAP32[$1044>>2]|0;
               $1046 = ($1045|0)==($1039|0);
               if ($1046) {
                $$07$i220$i$i$i = $$012$i217$i$i$i;
                break L278;
               }
               $1047 = (($$012$i217$i$i$i) + 1)|0;
               $1048 = ($1047|0)<($1042|0);
               if ($1048) {
                $$012$i217$i$i$i = $1047;
               } else {
                label = 140;
                break;
               }
              }
             } else {
              label = 140;
             }
            } while(0);
            if ((label|0) == 140) {
             label = 0;
             $1049 = (($1042) + 1)|0;
             HEAP32[$1021>>2] = $1049;
             $$07$i220$i$i$i = $1042;
            }
            $1050 = (($$0195257$i$i$i) + 1)|0;
            $1051 = (($1036) + ($$0195257$i$i$i<<2)|0);
            HEAP32[$1051>>2] = $$07$i220$i$i$i;
            $1052 = (((($983)) + 1824|0) + ($$07$i220$i$i$i<<2)|0);
            HEAP32[$1052>>2] = $1041;
            $$pre$i$i$i = HEAP32[$1035>>2]|0;
            $$2197$i$i$i = $1050;$1054 = $$pre$i$i$i;
           }
           $1053 = (((($1054) + ($$1258$i$i$i<<4)|0)) + 4|0);
           $1055 = HEAP32[$1053>>2]|0;
           $1056 = ($1055|0)==(0|0);
           $1057 = $1055;
           if ($1056) {
            $$2197$1$i$i$i = $$2197$i$i$i;$1259 = $1054;
           } else {
            $1247 = HEAP32[$1021>>2]|0;
            $1248 = ($1247|0)>(0);
            L288: do {
             if ($1248) {
              $$012$i217$1$i$i$i = 0;
              while(1) {
               $1249 = (((($983)) + 1824|0) + ($$012$i217$1$i$i$i<<2)|0);
               $1250 = HEAP32[$1249>>2]|0;
               $1251 = ($1250|0)==($1055|0);
               if ($1251) {
                $$07$i220$1$i$i$i = $$012$i217$1$i$i$i;
                break L288;
               }
               $1252 = (($$012$i217$1$i$i$i) + 1)|0;
               $1253 = ($1252|0)<($1247|0);
               if ($1253) {
                $$012$i217$1$i$i$i = $1252;
               } else {
                label = 205;
                break;
               }
              }
             } else {
              label = 205;
             }
            } while(0);
            if ((label|0) == 205) {
             label = 0;
             $1254 = (($1247) + 1)|0;
             HEAP32[$1021>>2] = $1254;
             $$07$i220$1$i$i$i = $1247;
            }
            $1255 = (($$2197$i$i$i) + 1)|0;
            $1256 = (($1036) + ($$2197$i$i$i<<2)|0);
            HEAP32[$1256>>2] = $$07$i220$1$i$i$i;
            $1257 = (((($983)) + 1824|0) + ($$07$i220$1$i$i$i<<2)|0);
            HEAP32[$1257>>2] = $1057;
            $$pre268$i$i$i = HEAP32[$1035>>2]|0;
            $$2197$1$i$i$i = $1255;$1259 = $$pre268$i$i$i;
           }
           $1258 = (((($1259) + ($$1258$i$i$i<<4)|0)) + 8|0);
           $1260 = HEAP32[$1258>>2]|0;
           $1261 = ($1260|0)==(0|0);
           $1262 = $1260;
           if ($1261) {
            $$2197$2$i$i$i = $$2197$1$i$i$i;$1275 = $1259;
           } else {
            $1263 = HEAP32[$1021>>2]|0;
            $1264 = ($1263|0)>(0);
            L298: do {
             if ($1264) {
              $$012$i217$2$i$i$i = 0;
              while(1) {
               $1265 = (((($983)) + 1824|0) + ($$012$i217$2$i$i$i<<2)|0);
               $1266 = HEAP32[$1265>>2]|0;
               $1267 = ($1266|0)==($1260|0);
               if ($1267) {
                $$07$i220$2$i$i$i = $$012$i217$2$i$i$i;
                break L298;
               }
               $1268 = (($$012$i217$2$i$i$i) + 1)|0;
               $1269 = ($1268|0)<($1263|0);
               if ($1269) {
                $$012$i217$2$i$i$i = $1268;
               } else {
                label = 211;
                break;
               }
              }
             } else {
              label = 211;
             }
            } while(0);
            if ((label|0) == 211) {
             label = 0;
             $1270 = (($1263) + 1)|0;
             HEAP32[$1021>>2] = $1270;
             $$07$i220$2$i$i$i = $1263;
            }
            $1271 = (($$2197$1$i$i$i) + 1)|0;
            $1272 = (($1036) + ($$2197$1$i$i$i<<2)|0);
            HEAP32[$1272>>2] = $$07$i220$2$i$i$i;
            $1273 = (((($983)) + 1824|0) + ($$07$i220$2$i$i$i<<2)|0);
            HEAP32[$1273>>2] = $1262;
            $$pre269$i$i$i = HEAP32[$1035>>2]|0;
            $$2197$2$i$i$i = $1271;$1275 = $$pre269$i$i$i;
           }
           $1274 = (((($1275) + ($$1258$i$i$i<<4)|0)) + 12|0);
           $1276 = HEAP32[$1274>>2]|0;
           $1277 = ($1276|0)==(0|0);
           $1278 = $1276;
           if ($1277) {
            $$2197$3$i$i$i = $$2197$2$i$i$i;
           } else {
            $1279 = HEAP32[$1021>>2]|0;
            $1280 = ($1279|0)>(0);
            L308: do {
             if ($1280) {
              $$012$i217$3$i$i$i = 0;
              while(1) {
               $1281 = (((($983)) + 1824|0) + ($$012$i217$3$i$i$i<<2)|0);
               $1282 = HEAP32[$1281>>2]|0;
               $1283 = ($1282|0)==($1276|0);
               if ($1283) {
                $$07$i220$3$i$i$i = $$012$i217$3$i$i$i;
                break L308;
               }
               $1284 = (($$012$i217$3$i$i$i) + 1)|0;
               $1285 = ($1284|0)<($1279|0);
               if ($1285) {
                $$012$i217$3$i$i$i = $1284;
               } else {
                label = 217;
                break;
               }
              }
             } else {
              label = 217;
             }
            } while(0);
            if ((label|0) == 217) {
             label = 0;
             $1286 = (($1279) + 1)|0;
             HEAP32[$1021>>2] = $1286;
             $$07$i220$3$i$i$i = $1279;
            }
            $1287 = (($$2197$2$i$i$i) + 1)|0;
            $1288 = (($1036) + ($$2197$2$i$i$i<<2)|0);
            HEAP32[$1288>>2] = $$07$i220$3$i$i$i;
            $1289 = (((($983)) + 1824|0) + ($$07$i220$3$i$i$i<<2)|0);
            HEAP32[$1289>>2] = $1278;
            $$2197$3$i$i$i = $1287;
           }
           $1290 = (($$1258$i$i$i) + 1)|0;
           $1291 = HEAP32[$1001>>2]|0;
           $1292 = ($1290|0)<($1291|0);
           if ($1292) {
            $$0195257$i$i$i = $$2197$3$i$i$i;$$1258$i$i$i = $1290;
           } else {
            break;
           }
          }
         }
        } while(0);
        $1106 = ((($983)) + 3480|0);
        $1107 = +HEAPF64[$1106>>3];
        $1108 = $1107 * 1000.0;
        $1109 = (((($983)) + 1056|0) + ($$075$i$i<<2)|0);
        $1110 = HEAP32[$1109>>2]|0;
        $1111 = HEAP32[$70>>2]|0;
        $1112 = (+($1111|0));
        $1113 = $1112 * 0.5;
        $1114 = (($983) + ($$075$i$i<<2)|0);
        $1115 = HEAP32[$1114>>2]|0;
        $1116 = $1115 >> 1;
        $1117 = $1108 > $1113;
        $$0204$i$i$i = $1117 ? $1113 : $1108;
        $1118 = $$0204$i$i$i / $1113;
        $1119 = (+($1116|0));
        $1120 = $1118 * $1119;
        $1121 = (~~(($1120)));
        $1122 = ((($1110)) + 1116|0);
        HEAP32[$1122>>2] = $1121;
        $1123 = (((($947) + ($982<<5)|0)) + 4|0);
        $1124 = HEAP32[$1123>>2]|0;
        L317: do {
         switch ($1124|0) {
         case 1:  {
          $1125 = HEAP32[$998>>2]|0;
          $1126 = ($1125|0)==(0);
          $$sink$i$i$i = $1126 ? 7 : 14;
          $1127 = (((($983)) + 2940|0) + ($$sink$i$i$i<<2)|0);
          $$1205$in$in$i$i$i = HEAP32[$1127>>2]|0;
          $$1205$in$i$i$i = (+($$1205$in$in$i$i$i|0));
          $$1205$i$i$i = $$1205$in$i$i$i * 1000.0;
          $1128 = $$1205$i$i$i > $1113;
          if (!($1128)) {
           $$2206$i$i$i = $$1205$i$i$i;
           break L317;
          }
          $$2206$i$i$i = $1113;
          break;
         }
         case 2:  {
          $$2206$i$i$i = 250.0;
          break;
         }
         default: {
          $$2206$i$i$i = $$0204$i$i$i;
         }
         }
        } while(0);
        $1129 = HEAP32[$997>>2]|0;
        $1130 = ($1129|0)==(2);
        do {
         if ($1130) {
          $1131 = ((($983)) + 12|0);
          $1132 = HEAP32[$1131>>2]|0;
          $1133 = ($1132|0)>(0);
          if ($1133) {
           $$4241$i$i$i = 0;
           while(1) {
            $1134 = (((($983)) + 544|0) + ($$4241$i$i$i<<2)|0);
            $1135 = HEAP32[$1134>>2]|0;
            $1136 = HEAP32[$1135>>2]|0;
            $1137 = ($1136|0)>(0);
            if ($1137) {
             $$0194238$i$i$i = 0;
             while(1) {
              $1138 = (((($1135)) + 1092|0) + ($$0194238$i$i$i<<2)|0);
              $1139 = HEAP32[$1138>>2]|0;
              $1140 = ($1139|0)==($982|0);
              do {
               if ($1140) {
                $1141 = HEAP32[$69>>2]|0;
                $1142 = ($1141|0)>(0);
                if ($1142) {
                 $$0193236$i$i$i = 0;$$2190237$i$i$i = 0;
                } else {
                 $$4192$i$i$i = 0;
                 break;
                }
                while(1) {
                 $1143 = (((($1135)) + 4|0) + ($$0193236$i$i$i<<2)|0);
                 $1144 = HEAP32[$1143>>2]|0;
                 $1145 = ($1144|0)==($$0194238$i$i$i|0);
                 $1146 = $1145&1;
                 $$$2190$i$i$i = (($1146) + ($$2190237$i$i$i))|0;
                 $1147 = (($$0193236$i$i$i) + 1)|0;
                 $exitcond$i$i = ($1147|0)==($1141|0);
                 if ($exitcond$i$i) {
                  $$4192$i$i$i = $$$2190$i$i$i;
                  break;
                 } else {
                  $$0193236$i$i$i = $1147;$$2190237$i$i$i = $$$2190$i$i$i;
                 }
                }
               } else {
                $$4192$i$i$i = 0;
               }
              } while(0);
              $1148 = (($$0194238$i$i$i) + 1)|0;
              $1149 = ($1148|0)<($1136|0);
              $1150 = ($$4192$i$i$i|0)==(0);
              $1151 = $1149 & $1150;
              if ($1151) {
               $$0194238$i$i$i = $1148;
              } else {
               $$1189$lcssa$i$i$i = $$4192$i$i$i;
               break;
              }
             }
            } else {
             $$1189$lcssa$i$i$i = 0;
            }
            $1152 = (($$4241$i$i$i) + 1)|0;
            $1153 = ($1152|0)<($1132|0);
            $1154 = ($$1189$lcssa$i$i$i|0)==(0);
            $1155 = $1153 & $1154;
            if ($1155) {
             $$4241$i$i$i = $1152;
            } else {
             $$0188$lcssa$i$i$i = $$1189$lcssa$i$i$i;
             break;
            }
           }
          } else {
           $$0188$lcssa$i$i$i = 0;
          }
          $1156 = $$2206$i$i$i / $1113;
          $1157 = $1156 * $1119;
          $1158 = (+($$0188$lcssa$i$i$i|0));
          $1159 = $1157 * $1158;
          $1160 = HEAP32[$994>>2]|0;
          $1161 = (+($1160|0));
          $1162 = $1159 / $1161;
          $1163 = $1162 + 0.90000000000000002;
          $1164 = (~~(($1163)));
          $1165 = Math_imul($1164, $1160)|0;
          $1166 = ((($984)) + 4|0);
          $1167 = Math_imul($$0188$lcssa$i$i$i, $1116)|0;
          $1168 = ($1165|0)>($1167|0);
          if ($1168) {
           $1169 = (($1167|0) % ($1160|0))&-1;
           $1170 = (($1167) - ($1169))|0;
           $storemerge$i$i$i = $1170;
          } else {
           $storemerge$i$i$i = $1165;
          }
          HEAP32[$1166>>2] = $storemerge$i$i$i;
          $$pre$phi273$i$i$iZ2D = $1166;$1183 = $storemerge$i$i$i;$1185 = $1160;
         } else {
          $1171 = $$2206$i$i$i / $1113;
          $1172 = $1171 * $1119;
          $1173 = HEAP32[$994>>2]|0;
          $1174 = (+($1173|0));
          $1175 = $1172 / $1174;
          $1176 = $1175 + 0.90000000000000002;
          $1177 = (~~(($1176)));
          $1178 = Math_imul($1177, $1173)|0;
          $1179 = ((($984)) + 4|0);
          HEAP32[$1179>>2] = $1178;
          $1180 = ($1178|0)>($1116|0);
          if (!($1180)) {
           $$pre$phi273$i$i$iZ2D = $1179;$1183 = $1178;$1185 = $1173;
           break;
          }
          $1181 = (($1116|0) % ($1173|0))&-1;
          $1182 = (($1116) - ($1181))|0;
          HEAP32[$1179>>2] = $1182;
          $$pre$phi273$i$i$iZ2D = $1179;$1183 = $1182;$1185 = $1173;
         }
        } while(0);
        $1184 = ($1183|0)==(0);
        if ($1184) {
         HEAP32[$$pre$phi273$i$i$iZ2D>>2] = $1185;
        }
        $1308 = (($$06074$i$i) + 1)|0;
        $1309 = HEAP32[$975>>2]|0;
        $1310 = ($1308|0)<($1309|0);
        if ($1310) {
         $$06074$i$i = $1308;
        } else {
         break L173;
        }
       }
      }
     } while(0);
     $1311 = (($$075$i$i) + 1)|0;
     $1312 = ($1311|0)<($$$i$i|0);
     if ($1312) {
      $$075$i$i = $1311;
     } else {
      break;
     }
    }
    $1313 = ((($6)) + 3428|0);
    $1314 = HEAP32[$1313>>2]|0;
    $1315 = ($1314|0)>(0);
    do {
     if ($1315) {
      $$sink$i = $1314;
     } else {
      $1316 = HEAP32[$5>>2]|0;
      $1317 = ((($1316)) + 3396|0);
      $1318 = HEAP32[$1317>>2]|0;
      $1319 = ((($1316)) + 3400|0);
      $1320 = +HEAPF64[$1319>>3];
      $1321 = (~~(($1320)));
      $1322 = (+($1321|0));
      $1323 = $1320 - $1322;
      $1324 = ((($1318)) + 4|0);
      $1325 = HEAP32[$1324>>2]|0;
      $1326 = ($1325|0)==(0|0);
      if ($1326) {
       $$sink$i = -1;
       break;
      }
      $1327 = HEAP32[$69>>2]|0;
      $1328 = (($1325) + ($1321<<3)|0);
      $1329 = +HEAPF64[$1328>>3];
      $1330 = 1.0 - $1323;
      $1331 = $1329 * $1330;
      $1332 = (($1321) + 1)|0;
      $1333 = (($1325) + ($1332<<3)|0);
      $1334 = +HEAPF64[$1333>>3];
      $1335 = $1334 * $1323;
      $1336 = $1335 + $1331;
      $1337 = (+($1327|0));
      $1338 = $1336 * $1337;
      $phitmp$i = (~~(($1338)));
      $$sink$i = $phitmp$i;
     }
    } while(0);
    $1339 = ((($0)) + 16|0);
    HEAP32[$1339>>2] = $$sink$i;
    $1340 = ((($6)) + 3424|0);
    $1341 = HEAP32[$1340>>2]|0;
    $1342 = ((($0)) + 20|0);
    HEAP32[$1342>>2] = $1341;
    $1343 = ((($6)) + 3440|0);
    $1344 = HEAP32[$1343>>2]|0;
    $1345 = ((($0)) + 12|0);
    HEAP32[$1345>>2] = $1344;
    $1346 = ($1314|0)==(0);
    if ($1346) {
     $$sink3$i = 0;
    } else {
     $1347 = (+($1314|0));
     $1348 = ((($6)) + 3444|0);
     $1349 = HEAP32[$1348>>2]|0;
     $1350 = (+($1349|0));
     $1351 = $1350 / $1347;
     $1352 = (~~(($1351)));
     $$sink3$i = $1352;
    }
    $1353 = ((($0)) + 24|0);
    HEAP32[$1353>>2] = $$sink3$i;
    $1354 = HEAP32[$134>>2]|0;
    $1355 = ($1354|0)==(0);
    if ($1355) {
     $$0 = 0;
     return ($$0|0);
    }
    $1356 = ((($6)) + 3360|0);
    HEAP32[$1356>>2] = $1314;
    $1357 = ((($6)) + 3364|0);
    HEAP32[$1357>>2] = $1341;
    $1358 = ((($6)) + 3368|0);
    HEAP32[$1358>>2] = $1344;
    $1359 = ((($6)) + 3444|0);
    $1360 = HEAP32[$1359>>2]|0;
    $1361 = ((($6)) + 3372|0);
    HEAP32[$1361>>2] = $1360;
    $1362 = ((($6)) + 3448|0);
    $1363 = +HEAPF64[$1362>>3];
    $1364 = ((($6)) + 3376|0);
    HEAPF64[$1364>>3] = $1363;
    $1365 = ((($6)) + 3432|0);
    $1366 = +HEAPF64[$1365>>3];
    $1367 = ((($6)) + 3384|0);
    HEAPF64[$1367>>3] = $1366;
    $$0 = 0;
    return ($$0|0);
   }
  }
 } while(0);
 _vorbis_info_clear($0);
 $$0 = $$0$i$ph;
 return ($$0|0);
}
function _encoder_create_vbr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = +$2;
 var $$$i$i$i = 0, $$$i$i4$i = 0, $$$i2$i$i = 0, $$$i20$i$i = 0, $$$i23$i$i = 0, $$$i29$i$i = 0, $$$i32$i$i = 0, $$$i35$i$i = 0, $$0 = 0, $$0$i$i$i = 0, $$0$i$i5$i = 0, $$0$i21$i$i = 0, $$0$i24$i$i = 0, $$0$i26$i$i = 0, $$0$i3$i$i = 0, $$0$i30$i$i = 0, $$0$i33$i$i = 0, $$0$i36$i$i = 0, $$0$lcssa$i$i$i = 0, $$0$lcssa$i10$i$i = 0;
 var $$0$lcssa$i17$i$i = 0, $$0$ph$i$i$i = 0, $$0$ph$ph$i$i$i = 0, $$0195$ph$ph$i$i$i = 0, $$0200$i$i$i = 0.0, $$0202230$i$i$i = 0, $$0204229$i$i$i = 0, $$0206237$i$i$i = 0.0, $$021$i = 0, $$056$i$i$i = 0, $$056$i14$i$i = 0, $$056$i7$i$i = 0, $$07$i$i$i = 0, $$07$i13$i$i = 0, $$07$i6$i$i = 0, $$07982$i$i = 0, $$081$i$i = 0, $$1152$i$i = 0, $$1196238$i$i$i = 0, $$1201$i$i$i = 0.0;
 var $$1203$lcssa$i$i$i = 0, $$1203219$i$i$i = 0, $$1205$lcssa$i$i$i = 0, $$1205225$i$i$i = 0, $$1231$i$i$i = 0, $$180$i$i = 0, $$2216$i$i$i = 0, $$3142$i$i = 0, $$3198233$i$i$i = 0, $$4140$i$i = 0, $$4214$i$i$i = 0, $$inv$i$i$i = 0, $$not = 0, $$phi$trans$insert$i$i = 0, $$phi$trans$insert$i$i$i = 0, $$phi$trans$insert254$i$i$i = 0, $$phi$trans$insert85$i$i = 0, $$pn$in$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0;
 var $$pre$i3$i = 0, $$pre$phi$i$i$iZ2D = 0.0, $$pre$phi$i$iZ2D = 0, $$pre160$i$i = 0, $$pre161$i$i = 0, $$pre253$i$i$i = 0, $$pre255$i$i$i = 0, $$pre256$i$i$i = 0.0, $$pre86$i$i = 0.0, $$promoted$i$i = 0.0, $$sink$i$i$i = 0.0, $$sink$i$in = 0, $$sink1$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0.0, $159 = 0.0, $16 = 0;
 var $160 = 0.0, $161 = 0.0, $162 = 0.0, $163 = 0.0, $164 = 0.0, $165 = 0, $166 = 0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $175 = 0.0, $176 = 0, $177 = 0, $178 = 0.0;
 var $179 = 0.0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $193 = 0.0, $194 = 0.0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0.0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0.0, $221 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $226 = 0.0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0.0, $231 = 0, $232 = 0.0;
 var $233 = 0.0, $234 = 0, $235 = 0.0, $236 = 0.0, $237 = 0.0, $238 = 0, $239 = 0.0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0.0, $254 = 0, $255 = 0, $256 = 0, $257 = 0.0, $258 = 0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0, $262 = 0.0, $263 = 0.0, $264 = 0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0;
 var $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0.0, $273 = 0.0, $274 = 0.0, $275 = 0, $276 = 0, $277 = 0.0, $278 = 0.0, $279 = 0.0, $28 = 0, $280 = 0, $281 = 0.0, $282 = 0.0, $283 = 0.0, $284 = 0.0, $285 = 0.0, $286 = 0, $287 = 0.0;
 var $288 = 0.0, $289 = 0.0, $29 = 0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0.0, $306 = 0.0, $307 = 0.0, $308 = 0.0, $309 = 0.0, $31 = 0, $310 = 0, $311 = 0.0, $312 = 0.0, $313 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0.0, $318 = 0.0, $319 = 0.0, $32 = 0, $320 = 0.0, $321 = 0.0, $322 = 0.0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0.0, $332 = 0.0, $333 = 0.0, $334 = 0.0, $335 = 0.0, $336 = 0.0, $337 = 0.0, $338 = 0.0, $339 = 0.0, $34 = 0, $340 = 0.0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0.0, $346 = 0.0, $347 = 0, $348 = 0.0, $349 = 0, $35 = 0, $350 = 0.0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0.0, $363 = 0.0, $364 = 0.0, $365 = 0.0, $366 = 0.0, $367 = 0.0, $368 = 0.0, $369 = 0.0, $37 = 0, $370 = 0, $371 = 0, $372 = 0.0, $373 = 0.0, $374 = 0.0, $375 = 0.0, $376 = 0, $377 = 0;
 var $378 = 0.0, $379 = 0.0, $38 = 0, $380 = 0.0, $381 = 0, $382 = 0.0, $383 = 0.0, $384 = 0.0, $385 = 0.0, $386 = 0.0, $387 = 0, $388 = 0, $389 = 0.0, $39 = 0, $390 = 0.0, $391 = 0.0, $392 = 0, $393 = 0.0, $394 = 0.0, $395 = 0.0;
 var $396 = 0.0, $397 = 0.0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0.0, $401 = 0.0, $402 = 0.0, $403 = 0, $404 = 0.0, $405 = 0.0, $406 = 0.0, $407 = 0.0, $408 = 0.0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0.0, $556 = 0.0, $557 = 0.0;
 var $558 = 0.0, $559 = 0, $56 = 0, $560 = 0.0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0.0, $582 = 0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0.0, $587 = 0.0, $588 = 0.0, $589 = 0, $59 = 0, $590 = 0.0, $591 = 0.0, $592 = 0, $593 = 0.0;
 var $594 = 0.0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0.0, $638 = 0.0, $639 = 0.0, $64 = 0, $640 = 0.0, $641 = 0.0, $642 = 0.0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0.0;
 var $648 = 0.0, $649 = 0.0, $65 = 0, $650 = 0.0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0.0, $656 = 0.0, $657 = 0.0, $658 = 0.0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0.0, $663 = 0, $664 = 0.0, $665 = 0.0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond$i$i$i = 0;
 var $exitcond249$i$i$i = 0, $exitcond250$i$i$i = 0, $exitcond251$i$i$i = 0, $exitcond83$i$i = 0, $exitcond84$i$i = 0, $load_initial$i$i$i = 0, $or$cond$i$i$i = 0, $scevgep$i$i$i = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $3 = (_malloc(680)|0);
 $4 = ((($3)) + 672|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($3)) + 676|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($3)) + 392|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;HEAP32[$6+16>>2]=0|0;HEAP32[$6+20>>2]=0|0;HEAP32[$6+24>>2]=0|0;
 $7 = (_malloc(3664)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $9 = ((($7)) + -4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 3;
  $12 = ($11|0)==(0);
  if (!($12)) {
   _memset(($7|0),0,3664)|0;
  }
 }
 $13 = ((($3)) + 420|0);
 HEAP32[$13>>2] = $7;
 $14 = (_vorbis_encode_init_vbr($6,$0,$1,$2)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  _free($3);
  $$0 = 0;
  return ($$0|0);
 }
 $16 = ((($3)) + 424|0);
 ;HEAP32[$16>>2]=0|0;HEAP32[$16+4>>2]=0|0;HEAP32[$16+8>>2]=0|0;HEAP32[$16+12>>2]=0|0;
 _vorbis_comment_add_tag($16,546155,546163);
 $17 = ((($3)) + 440|0);
 $18 = HEAP32[$13>>2]|0;
 $19 = ($18|0)==(0|0);
 if (!($19)) {
  $20 = ((($18)) + 8|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($21|0)<(1);
  if (!($22)) {
   $23 = HEAP32[$18>>2]|0;
   $24 = ($23|0)<(64);
   if (!($24)) {
    $25 = ((($18)) + 4|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ($26|0)<($23|0);
    if (!($27)) {
     $28 = ((($18)) + 3656|0);
     $29 = HEAP32[$28>>2]|0;
     dest=$17; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
     $30 = (_malloc(136)|0);
     $31 = ($30|0)==(0|0);
     if (!($31)) {
      $32 = ((($30)) + -4|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = $33 & 3;
      $35 = ($34|0)==(0);
      if (!($35)) {
       _memset(($30|0),0,136)|0;
      }
     }
     $36 = ((($3)) + 544|0);
     HEAP32[$36>>2] = $30;
     $37 = ((($3)) + 444|0);
     HEAP32[$37>>2] = $6;
     $38 = HEAP32[$20>>2]|0;
     $39 = (($38) + -1)|0;
     $40 = ($39|0)==(0);
     if ($40) {
      $$0$lcssa$i$i$i = 0;
     } else {
      $$056$i$i$i = $39;$$07$i$i$i = 0;
      while(1) {
       $41 = $$056$i$i$i >>> 1;
       $42 = (($$07$i$i$i) + 1)|0;
       $43 = ($41|0)==(0);
       if ($43) {
        $$0$lcssa$i$i$i = $42;
        break;
       } else {
        $$056$i$i$i = $41;$$07$i$i$i = $42;
       }
      }
     }
     $44 = ((($30)) + 44|0);
     HEAP32[$44>>2] = $$0$lcssa$i$i$i;
     $45 = (_malloc(4)|0);
     $46 = ($45|0)==(0|0);
     if (!($46)) {
      $47 = ((($45)) + -4|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = $48 & 3;
      $50 = ($49|0)==(0);
      if (!($50)) {
       HEAP8[$45>>0]=0&255;HEAP8[$45+1>>0]=(0>>8)&255;HEAP8[$45+2>>0]=(0>>16)&255;HEAP8[$45+3>>0]=0>>24;
      }
     }
     $51 = ((($30)) + 12|0);
     HEAP32[$51>>2] = $45;
     $52 = (_malloc(4)|0);
     $53 = ($52|0)==(0|0);
     if (!($53)) {
      $54 = ((($52)) + -4|0);
      $55 = HEAP32[$54>>2]|0;
      $56 = $55 & 3;
      $57 = ($56|0)==(0);
      if (!($57)) {
       HEAP8[$52>>0]=0&255;HEAP8[$52+1>>0]=(0>>8)&255;HEAP8[$52+2>>0]=(0>>16)&255;HEAP8[$52+3>>0]=0>>24;
      }
     }
     $58 = ((($30)) + 16|0);
     HEAP32[$58>>2] = $52;
     $59 = (_malloc(20)|0);
     $60 = ($59|0)==(0|0);
     if (!($60)) {
      $61 = ((($59)) + -4|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = $62 & 3;
      $64 = ($63|0)==(0);
      if (!($64)) {
       dest=$59; stop=dest+20|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      }
     }
     HEAP32[$45>>2] = $59;
     $65 = (_malloc(20)|0);
     $66 = ($65|0)==(0|0);
     if (!($66)) {
      $67 = ((($65)) + -4|0);
      $68 = HEAP32[$67>>2]|0;
      $69 = $68 & 3;
      $70 = ($69|0)==(0);
      if (!($70)) {
       dest=$65; stop=dest+20|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      }
     }
     HEAP32[$52>>2] = $65;
     $71 = HEAP32[$51>>2]|0;
     $72 = HEAP32[$71>>2]|0;
     $73 = HEAP32[$18>>2]|0;
     $74 = $73 >> $29;
     _mdct_init($72,$74);
     $75 = HEAP32[$58>>2]|0;
     $76 = HEAP32[$75>>2]|0;
     $77 = HEAP32[$25>>2]|0;
     $78 = $77 >> $29;
     _mdct_init($76,$78);
     $79 = HEAP32[$18>>2]|0;
     $80 = ($79|0)==(0);
     if ($80) {
      $$0$lcssa$i10$i$i = 0;
     } else {
      $$056$i7$i$i = $79;$$07$i6$i$i = 0;
      while(1) {
       $81 = $$056$i7$i$i >>> 1;
       $82 = (($$07$i6$i$i) + 1)|0;
       $83 = ($81|0)==(0);
       if ($83) {
        $$0$lcssa$i10$i$i = $82;
        break;
       } else {
        $$056$i7$i$i = $81;$$07$i6$i$i = $82;
       }
      }
     }
     $84 = (($$0$lcssa$i10$i$i) + -7)|0;
     $85 = ((($30)) + 4|0);
     HEAP32[$85>>2] = $84;
     $86 = HEAP32[$25>>2]|0;
     $87 = ($86|0)==(0);
     if ($87) {
      $$0$lcssa$i17$i$i = 0;
     } else {
      $$056$i14$i$i = $86;$$07$i13$i$i = 0;
      while(1) {
       $88 = $$056$i14$i$i >>> 1;
       $89 = (($$07$i13$i$i) + 1)|0;
       $90 = ($88|0)==(0);
       if ($90) {
        $$0$lcssa$i17$i$i = $89;
        break;
       } else {
        $$056$i14$i$i = $88;$$07$i13$i$i = $89;
       }
      }
     }
     $91 = (($$0$lcssa$i17$i$i) + -7)|0;
     $92 = ((($30)) + 8|0);
     HEAP32[$92>>2] = $91;
     $93 = ((($30)) + 20|0);
     _drft_init($93,$79);
     $94 = ((($30)) + 32|0);
     $95 = HEAP32[$25>>2]|0;
     _drft_init($94,$95);
     $96 = ((($18)) + 2848|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = ($97|0)==(0|0);
     do {
      if ($98) {
       $99 = ((($18)) + 24|0);
       $100 = HEAP32[$99>>2]|0;
       $101 = ($100|0)==(0);
       if ($101) {
        $$0$i21$i$i = 0;
       } else {
        $102 = ($100*56)|0;
        $103 = ($100>>>0)>(65535);
        if ($103) {
         $104 = (($102>>>0) / ($100>>>0))&-1;
         $105 = ($104|0)==(56);
         $$$i20$i$i = $105 ? $102 : -1;
         $$0$i21$i$i = $$$i20$i$i;
        } else {
         $$0$i21$i$i = $102;
        }
       }
       $106 = (_malloc($$0$i21$i$i)|0);
       $107 = ($106|0)==(0|0);
       do {
        if (!($107)) {
         $108 = ((($106)) + -4|0);
         $109 = HEAP32[$108>>2]|0;
         $110 = $109 & 3;
         $111 = ($110|0)==(0);
         if ($111) {
          break;
         }
         _memset(($106|0),0,($$0$i21$i$i|0))|0;
        }
       } while(0);
       HEAP32[$96>>2] = $106;
       $112 = HEAP32[$99>>2]|0;
       $113 = ($112|0)>(0);
       if ($113) {
        $114 = ((($18)) + 1824|0);
        $115 = HEAP32[$114>>2]|0;
        _vorbis_book_init_encode($106,$115);
        $116 = HEAP32[$99>>2]|0;
        $117 = ($116|0)>(1);
        if ($117) {
         $119 = 1;
        } else {
         break;
        }
        while(1) {
         $$pre$i$i = HEAP32[$96>>2]|0;
         $118 = (($$pre$i$i) + (($119*56)|0)|0);
         $120 = (((($18)) + 1824|0) + ($119<<2)|0);
         $121 = HEAP32[$120>>2]|0;
         _vorbis_book_init_encode($118,$121);
         $122 = (($119) + 1)|0;
         $123 = HEAP32[$99>>2]|0;
         $124 = ($122|0)<($123|0);
         if ($124) {
          $119 = $122;
         } else {
          break;
         }
        }
       }
      }
     } while(0);
     $125 = ((($18)) + 28|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = ($126|0)==(0);
     if ($127) {
      $$0$i24$i$i = 0;
     } else {
      $128 = ($126*52)|0;
      $129 = ($126>>>0)>(65535);
      if ($129) {
       $130 = (($128>>>0) / ($126>>>0))&-1;
       $131 = ($130|0)==(52);
       $$$i23$i$i = $131 ? $128 : -1;
       $$0$i24$i$i = $$$i23$i$i;
      } else {
       $$0$i24$i$i = $128;
      }
     }
     $132 = (_malloc($$0$i24$i$i)|0);
     $133 = ($132|0)==(0|0);
     if (!($133)) {
      $134 = ((($132)) + -4|0);
      $135 = HEAP32[$134>>2]|0;
      $136 = $135 & 3;
      $137 = ($136|0)==(0);
      if (!($137)) {
       _memset(($132|0),0,($$0$i24$i$i|0))|0;
      }
     }
     $138 = ((($30)) + 56|0);
     HEAP32[$138>>2] = $132;
     $139 = HEAP32[$125>>2]|0;
     $140 = ($139|0)>(0);
     L68: do {
      if ($140) {
       $141 = ((($3)) + 400|0);
       $142 = ((($18)) + 2868|0);
       $$1152$i$i = 0;$151 = $132;
       while(1) {
        $143 = (((($18)) + 2852|0) + ($$1152$i$i<<2)|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = HEAP32[$144>>2]|0;
        $146 = (($18) + ($145<<2)|0);
        $147 = HEAP32[$146>>2]|0;
        $148 = (($147|0) / 2)&-1;
        $149 = HEAP32[$141>>2]|0;
        $150 = (((($151) + (($$1152$i$i*52)|0)|0)) + 8|0);
        $152 = $150;
        $153 = $152;
        HEAP32[$153>>2] = 0;
        $154 = (($152) + 4)|0;
        $155 = $154;
        HEAP32[$155>>2] = 0;
        $156 = HEAP32[$142>>2]|0;
        $157 = (((($151) + (($$1152$i$i*52)|0)|0)) + 36|0);
        HEAP32[$157>>2] = $156;
        $158 = (+($156|0));
        $159 = $158 * 8.0;
        $160 = $159;
        $161 = (+Math_log((+$160)));
        $162 = $161 * 1.4426950408889634;
        $163 = (+_rint($162));
        $164 = $163 + -1.0;
        $165 = (~~(($164)));
        $166 = (((($151) + (($$1152$i$i*52)|0)|0)) + 32|0);
        HEAP32[$166>>2] = $165;
        $167 = (+($149|0));
        $168 = $167 * 0.25;
        $169 = $168;
        $170 = $169 * 0.5;
        $171 = (+($148|0));
        $172 = $170 / $171;
        $173 = (+Math_log((+$172)));
        $174 = $173 * 1.4426950216293335;
        $175 = $174 + -5.9657840728759766;
        $176 = (($165) + 1)|0;
        $177 = 1 << $176;
        $178 = (+($177|0));
        $179 = $178 * $175;
        $180 = (+($156|0));
        $181 = $179 - $180;
        $182 = (~~(($181)));
        $183 = (((($151) + (($$1152$i$i*52)|0)|0)) + 28|0);
        HEAP32[$183>>2] = $182;
        $184 = (+($148|0));
        $185 = $184 + 0.25;
        $186 = $185 * $167;
        $187 = $186;
        $188 = $187 * 0.5;
        $189 = $188 / $171;
        $190 = (+Math_log((+$189)));
        $191 = $190 * 1.4426950216293335;
        $192 = $191 + -5.9657840728759766;
        $193 = $178 * $192;
        $194 = $193 + 0.5;
        $195 = (~~(($194)));
        $196 = (1 - ($182))|0;
        $197 = (($196) + ($195))|0;
        $198 = (((($151) + (($$1152$i$i*52)|0)|0)) + 40|0);
        HEAP32[$198>>2] = $197;
        $199 = $148 << 2;
        $200 = (_malloc($199)|0);
        $201 = (((($151) + (($$1152$i$i*52)|0)|0)) + 16|0);
        HEAP32[$201>>2] = $200;
        $202 = (_malloc($199)|0);
        $203 = (((($151) + (($$1152$i$i*52)|0)|0)) + 20|0);
        HEAP32[$203>>2] = $202;
        $204 = (_malloc($199)|0);
        $205 = (((($151) + (($$1152$i$i*52)|0)|0)) + 24|0);
        HEAP32[$205>>2] = $204;
        $206 = (((($151) + (($$1152$i$i*52)|0)|0)) + 4|0);
        HEAP32[$206>>2] = $144;
        $207 = (($151) + (($$1152$i$i*52)|0)|0);
        HEAP32[$207>>2] = $148;
        $208 = (((($151) + (($$1152$i$i*52)|0)|0)) + 44|0);
        HEAP32[$208>>2] = $149;
        $209 = (((($151) + (($$1152$i$i*52)|0)|0)) + 48|0);
        HEAPF32[$209>>2] = 1.0;
        $210 = ($149|0)<(26000);
        do {
         if ($210) {
          $$sink$i$i$i = 0.0;
          label = 52;
         } else {
          $211 = ($149|0)<(38000);
          if ($211) {
           $$sink$i$i$i = 0.93999999761581421;
           label = 52;
           break;
          }
          $212 = ($149|0)>(46000);
          if ($212) {
           $$sink$i$i$i = 1.2749999761581421;
           label = 52;
          }
         }
        } while(0);
        if ((label|0) == 52) {
         label = 0;
         HEAPF32[$209>>2] = $$sink$i$i$i;
        }
        $213 = $171 * 2.0;
        $214 = (+($149|0));
        $$0$ph$ph$i$i$i = 0;$$0195$ph$ph$i$i$i = 0;
        L78: while(1) {
         $215 = ($$0195$ph$ph$i$i$i|0)<($148|0);
         $$0$ph$i$i$i = $$0$ph$ph$i$i$i;
         while(1) {
          $$0$i26$i$i = $$0$ph$i$i$i;
          while(1) {
           $216 = ($$0$i26$i$i|0)<(87);
           if (!($216)) {
            break L78;
           }
           $219 = (($$0$i26$i$i) + 1)|0;
           $220 = (+($219|0));
           $221 = $220 * 0.08664337545633316;
           $222 = $221 + 2.7488713472395148;
           $223 = (+Math_exp((+$222)));
           $224 = $213 * $223;
           $225 = $224 / $214;
           $226 = (+_rint($225));
           $227 = (~~(($226)));
           $228 = ($227|0)>($$0195$ph$ph$i$i$i|0);
           if ($228) {
            break;
           } else {
            $$0$i26$i$i = $219;
           }
          }
          if ($215) {
           break;
          } else {
           $$0$ph$i$i$i = $219;
          }
         }
         $229 = (36340 + ($$0$i26$i$i<<2)|0);
         $230 = +HEAPF32[$229>>2];
         $231 = (36340 + ($219<<2)|0);
         $232 = +HEAPF32[$231>>2];
         $233 = $232 - $230;
         $234 = (($227) - ($$0195$ph$ph$i$i$i))|0;
         $235 = (+($234|0));
         $236 = $233 / $235;
         $$0206237$i$i$i = $230;$$1196238$i$i$i = $$0195$ph$ph$i$i$i;
         while(1) {
          $237 = $$0206237$i$i$i + 100.0;
          $238 = (($200) + ($$1196238$i$i$i<<2)|0);
          HEAPF32[$238>>2] = $237;
          $239 = $$0206237$i$i$i + $236;
          $240 = (($$1196238$i$i$i) + 1)|0;
          $241 = ($240|0)<($227|0);
          $242 = ($240|0)<($148|0);
          $or$cond$i$i$i = $241 & $242;
          if ($or$cond$i$i$i) {
           $$0206237$i$i$i = $239;$$1196238$i$i$i = $240;
          } else {
           $$0$ph$ph$i$i$i = $219;$$0195$ph$ph$i$i$i = $240;
           continue L78;
          }
         }
        }
        if ($215) {
         $217 = $$0195$ph$ph$i$i$i << 2;
         $218 = (($217) + -4)|0;
         $scevgep$i$i$i = (($200) + ($218)|0);
         $load_initial$i$i$i = HEAP32[$scevgep$i$i$i>>2]|0;
         $$3198233$i$i$i = $$0195$ph$ph$i$i$i;
         while(1) {
          $251 = (($200) + ($$3198233$i$i$i<<2)|0);
          HEAP32[$251>>2] = $load_initial$i$i$i;
          $252 = (($$3198233$i$i$i) + 1)|0;
          $exitcond251$i$i$i = ($252|0)==($148|0);
          if ($exitcond251$i$i$i) {
           break;
          } else {
           $$3198233$i$i$i = $252;
          }
         }
        }
        $243 = ($147|0)>(1);
        if ($243) {
         $244 = $148 << 1;
         $245 = (($149|0) / ($244|0))&-1;
         $246 = ((($144)) + 120|0);
         $247 = HEAP32[$246>>2]|0;
         $248 = ((($144)) + 124|0);
         $249 = ((($144)) + 116|0);
         $250 = ((($144)) + 112|0);
         $$0202230$i$i$i = -99;$$0204229$i$i$i = 1;$$1231$i$i$i = 0;
         while(1) {
          $258 = Math_imul($245, $$1231$i$i$i)|0;
          $259 = (+($258|0));
          $260 = $259 * 7.3999998858198524E-4;
          $261 = $260;
          $262 = (+Math_atan((+$261)));
          $263 = $262 * 13.100000381469727;
          $264 = Math_imul($258, $258)|0;
          $265 = (+($264|0));
          $266 = $265 * 1.8499999754340024E-8;
          $267 = $266;
          $268 = (+Math_atan((+$267)));
          $269 = $268 * 2.2400000095367432;
          $270 = $269 + $263;
          $271 = $259 * 9.9999997473787516E-5;
          $272 = $271;
          $273 = $270 + $272;
          $274 = $273;
          $275 = (($247) + ($$0202230$i$i$i))|0;
          $276 = ($275|0)<($$1231$i$i$i|0);
          L99: do {
           if ($276) {
            $277 = +HEAPF32[$250>>2];
            $278 = $274 - $277;
            $279 = $278;
            $$1203219$i$i$i = $$0202230$i$i$i;
            while(1) {
             $280 = Math_imul($$1203219$i$i$i, $245)|0;
             $281 = (+($280|0));
             $282 = $281 * 7.3999998858198524E-4;
             $283 = $282;
             $284 = (+Math_atan((+$283)));
             $285 = $284 * 13.100000381469727;
             $286 = Math_imul($280, $280)|0;
             $287 = (+($286|0));
             $288 = $287 * 1.8499999754340024E-8;
             $289 = $288;
             $290 = (+Math_atan((+$289)));
             $291 = $290 * 2.2400000095367432;
             $292 = $281 * 9.9999997473787516E-5;
             $293 = $292;
             $294 = $285 + $293;
             $295 = $294 + $291;
             $296 = $295 < $279;
             if (!($296)) {
              $$1203$lcssa$i$i$i = $$1203219$i$i$i;
              break L99;
             }
             $300 = (($$1203219$i$i$i) + 1)|0;
             $301 = (($247) + ($300))|0;
             $302 = ($301|0)<($$1231$i$i$i|0);
             if ($302) {
              $$1203219$i$i$i = $300;
             } else {
              $$1203$lcssa$i$i$i = $300;
              break;
             }
            }
           } else {
            $$1203$lcssa$i$i$i = $$0202230$i$i$i;
           }
          } while(0);
          $297 = ($$0204229$i$i$i|0)>($148|0);
          L105: do {
           if ($297) {
            $$1205$lcssa$i$i$i = $$0204229$i$i$i;
           } else {
            $298 = HEAP32[$248>>2]|0;
            $299 = (($298) + ($$1231$i$i$i))|0;
            $$1205225$i$i$i = $$0204229$i$i$i;
            while(1) {
             $303 = ($$1205225$i$i$i|0)<($299|0);
             if (!($303)) {
              $304 = Math_imul($$1205225$i$i$i, $245)|0;
              $305 = (+($304|0));
              $306 = $305 * 7.3999998858198524E-4;
              $307 = $306;
              $308 = (+Math_atan((+$307)));
              $309 = $308 * 13.100000381469727;
              $310 = Math_imul($304, $304)|0;
              $311 = (+($310|0));
              $312 = $311 * 1.8499999754340024E-8;
              $313 = $312;
              $314 = (+Math_atan((+$313)));
              $315 = $314 * 2.2400000095367432;
              $316 = $305 * 9.9999997473787516E-5;
              $317 = $316;
              $318 = $309 + $317;
              $319 = $318 + $315;
              $320 = +HEAPF32[$249>>2];
              $321 = $320 + $274;
              $322 = $321;
              $323 = $319 < $322;
              if (!($323)) {
               $$1205$lcssa$i$i$i = $$1205225$i$i$i;
               break L105;
              }
             }
             $324 = (($$1205225$i$i$i) + 1)|0;
             $325 = ($$1205225$i$i$i|0)<($148|0);
             if ($325) {
              $$1205225$i$i$i = $324;
             } else {
              $$1205$lcssa$i$i$i = $324;
              break;
             }
            }
           }
          } while(0);
          $326 = $$1203$lcssa$i$i$i << 16;
          $327 = (($326) + -65537)|0;
          $328 = (($327) + ($$1205$lcssa$i$i$i))|0;
          $329 = (($204) + ($$1231$i$i$i<<2)|0);
          HEAP32[$329>>2] = $328;
          $330 = (($$1231$i$i$i) + 1)|0;
          $exitcond250$i$i$i = ($330|0)==($148|0);
          if ($exitcond250$i$i$i) {
           break;
          } else {
           $$0202230$i$i$i = $$1203$lcssa$i$i$i;$$0204229$i$i$i = $$1205$lcssa$i$i$i;$$1231$i$i$i = $330;
          }
         }
         $253 = $214 * 0.5;
         $254 = HEAP32[$166>>2]|0;
         $255 = (($254) + 1)|0;
         $256 = 1 << $255;
         $257 = (+($256|0));
         $$2216$i$i$i = 0;
         while(1) {
          $331 = (+($$2216$i$i$i|0));
          $332 = $331 + 0.25;
          $333 = $332;
          $334 = $253 * $333;
          $335 = $334 / $171;
          $336 = (+Math_log((+$335)));
          $337 = $336 * 1.4426950216293335;
          $338 = $337 + -5.9657840728759766;
          $339 = $257 * $338;
          $340 = $339 + 0.5;
          $341 = (~~(($340)));
          $342 = (($202) + ($$2216$i$i$i<<2)|0);
          HEAP32[$342>>2] = $341;
          $343 = (($$2216$i$i$i) + 1)|0;
          $exitcond249$i$i$i = ($343|0)==($148|0);
          if ($exitcond249$i$i$i) {
           $$pre$phi$i$i$iZ2D = $253;
           break;
          } else {
           $$2216$i$i$i = $343;
          }
         }
        } else {
         $$pre256$i$i$i = $214 * 0.5;
         $$pre$phi$i$i$iZ2D = $$pre256$i$i$i;
        }
        $344 = ((($144)) + 36|0);
        $345 = $$pre$phi$i$i$iZ2D / $171;
        $346 = $345;
        $347 = ((($144)) + 24|0);
        $348 = +HEAPF32[$347>>2];
        $349 = ((($144)) + 28|0);
        $350 = +HEAPF32[$349>>2];
        $351 = (_setup_tone_curves($344,$346,$148,$348,$350)|0);
        HEAP32[$150>>2] = $351;
        $352 = (_malloc(12)|0);
        $353 = (((($151) + (($$1152$i$i*52)|0)|0)) + 12|0);
        HEAP32[$353>>2] = $352;
        $354 = (_malloc($199)|0);
        HEAP32[$352>>2] = $354;
        $355 = (_malloc($199)|0);
        $356 = ((($352)) + 4|0);
        HEAP32[$356>>2] = $355;
        $357 = (_malloc($199)|0);
        $358 = HEAP32[$353>>2]|0;
        $359 = ((($358)) + 8|0);
        HEAP32[$359>>2] = $357;
        if ($243) {
         $360 = HEAP32[$206>>2]|0;
         $361 = HEAP32[$353>>2]|0;
         $$pre$i$i$i = HEAP32[$361>>2]|0;
         $$phi$trans$insert$i$i$i = ((($361)) + 4|0);
         $$pre253$i$i$i = HEAP32[$$phi$trans$insert$i$i$i>>2]|0;
         $$phi$trans$insert254$i$i$i = ((($361)) + 8|0);
         $$pre255$i$i$i = HEAP32[$$phi$trans$insert254$i$i$i>>2]|0;
         $$4214$i$i$i = 0;
         while(1) {
          $362 = (+($$4214$i$i$i|0));
          $363 = $362 + 0.5;
          $364 = $363 * $214;
          $365 = $364 / $213;
          $366 = (+Math_log((+$365)));
          $367 = $366 * 2.885390043258667;
          $368 = $367 + -11.931568145751953;
          $369 = $368;
          $370 = $369 < 0.0;
          $$0200$i$i$i = $370 ? 0.0 : $369;
          $$inv$i$i$i = $$0200$i$i$i >= 16.0;
          $$1201$i$i$i = $$inv$i$i$i ? 16.0 : $$0200$i$i$i;
          $371 = (~~(($$1201$i$i$i)));
          $372 = (+($371|0));
          $373 = $$1201$i$i$i - $372;
          $374 = $373;
          $375 = 1.0 - $374;
          $376 = (($371) + 1)|0;
          $377 = (((($360)) + 132|0) + ($371<<2)|0);
          $378 = +HEAPF32[$377>>2];
          $379 = $378;
          $380 = $379 * $375;
          $381 = (((($360)) + 132|0) + ($376<<2)|0);
          $382 = +HEAPF32[$381>>2];
          $383 = $382 * $373;
          $384 = $383;
          $385 = $384 + $380;
          $386 = $385;
          $387 = (($$pre$i$i$i) + ($$4214$i$i$i<<2)|0);
          HEAPF32[$387>>2] = $386;
          $388 = (((($360)) + 200|0) + ($371<<2)|0);
          $389 = +HEAPF32[$388>>2];
          $390 = $389;
          $391 = $390 * $375;
          $392 = (((($360)) + 200|0) + ($376<<2)|0);
          $393 = +HEAPF32[$392>>2];
          $394 = $393 * $373;
          $395 = $394;
          $396 = $395 + $391;
          $397 = $396;
          $398 = (($$pre253$i$i$i) + ($$4214$i$i$i<<2)|0);
          HEAPF32[$398>>2] = $397;
          $399 = (((($360)) + 268|0) + ($371<<2)|0);
          $400 = +HEAPF32[$399>>2];
          $401 = $400;
          $402 = $401 * $375;
          $403 = (((($360)) + 268|0) + ($376<<2)|0);
          $404 = +HEAPF32[$403>>2];
          $405 = $404 * $373;
          $406 = $405;
          $407 = $406 + $402;
          $408 = $407;
          $409 = (($$pre255$i$i$i) + ($$4214$i$i$i<<2)|0);
          HEAPF32[$409>>2] = $408;
          $410 = (($$4214$i$i$i) + 1)|0;
          $exitcond$i$i$i = ($410|0)==($148|0);
          if ($exitcond$i$i$i) {
           break;
          } else {
           $$4214$i$i$i = $410;
          }
         }
        }
        $411 = (($$1152$i$i) + 1)|0;
        $412 = HEAP32[$125>>2]|0;
        $413 = ($411|0)<($412|0);
        if (!($413)) {
         break L68;
        }
        $$pre160$i$i = HEAP32[$138>>2]|0;
        $$1152$i$i = $411;$151 = $$pre160$i$i;
       }
      }
     } while(0);
     HEAP32[$17>>2] = 1;
     $414 = HEAP32[$25>>2]|0;
     $415 = ((($3)) + 456|0);
     HEAP32[$415>>2] = $414;
     $416 = ((($3)) + 396|0);
     $417 = HEAP32[$416>>2]|0;
     $418 = $417 << 2;
     $419 = (_malloc($418)|0);
     $420 = ((($3)) + 448|0);
     HEAP32[$420>>2] = $419;
     $421 = (_malloc($418)|0);
     $422 = ((($3)) + 452|0);
     HEAP32[$422>>2] = $421;
     $423 = ($417|0)>(0);
     do {
      if ($423) {
       $424 = ($414|0)==(0);
       do {
        if ($424) {
         $$0$i30$i$i = 0;
        } else {
         $425 = $414 << 2;
         $426 = ($414>>>0)>(65535);
         if (!($426)) {
          $$0$i30$i$i = $425;
          break;
         }
         $427 = (($425>>>0) / ($414>>>0))&-1;
         $428 = ($427|0)==(4);
         $$$i29$i$i = $428 ? $425 : -1;
         $$0$i30$i$i = $$$i29$i$i;
        }
       } while(0);
       $429 = (_malloc($$0$i30$i$i)|0);
       $430 = ($429|0)==(0|0);
       do {
        if (!($430)) {
         $431 = ((($429)) + -4|0);
         $432 = HEAP32[$431>>2]|0;
         $433 = $432 & 3;
         $434 = ($433|0)==(0);
         if ($434) {
          break;
         }
         _memset(($429|0),0,($$0$i30$i$i|0))|0;
        }
       } while(0);
       HEAP32[$419>>2] = $429;
       $435 = ($417|0)==(1);
       if ($435) {
        break;
       }
       $436 = $414 << 2;
       $446 = 1;
       while(1) {
        $$pre161$i$i = HEAP32[$420>>2]|0;
        $$not = ($414>>>0)<(65536);
        if ($$not) {
         $$0$i33$i$i = $436;
        } else {
         $437 = (($436>>>0) / ($414>>>0))&-1;
         $438 = ($437|0)==(4);
         $$$i32$i$i = $438 ? $436 : -1;
         $$0$i33$i$i = $$$i32$i$i;
        }
        $439 = (_malloc($$0$i33$i$i)|0);
        $440 = ($439|0)==(0|0);
        do {
         if (!($440)) {
          $441 = ((($439)) + -4|0);
          $442 = HEAP32[$441>>2]|0;
          $443 = $442 & 3;
          $444 = ($443|0)==(0);
          if ($444) {
           break;
          }
          _memset(($439|0),0,($$0$i33$i$i|0))|0;
         }
        } while(0);
        $445 = (($$pre161$i$i) + ($446<<2)|0);
        HEAP32[$445>>2] = $439;
        $447 = (($446) + 1)|0;
        $448 = ($447|0)<($417|0);
        if ($448) {
         $446 = $447;
        } else {
         break;
        }
       }
      }
     } while(0);
     $449 = ((($3)) + 476|0);
     HEAP32[$449>>2] = 0;
     $450 = ((($3)) + 480|0);
     HEAP32[$450>>2] = 0;
     $451 = HEAP32[$25>>2]|0;
     $452 = (($451|0) / 2)&-1;
     $453 = ((($3)) + 488|0);
     HEAP32[$453>>2] = $452;
     $454 = ((($3)) + 460|0);
     HEAP32[$454>>2] = $452;
     $455 = ((($18)) + 16|0);
     $456 = HEAP32[$455>>2]|0;
     $457 = ($456|0)==(0);
     do {
      if ($457) {
       $$0$i36$i$i = 0;
      } else {
       $458 = $456 << 2;
       $459 = ($456>>>0)>(65535);
       if (!($459)) {
        $$0$i36$i$i = $458;
        break;
       }
       $460 = (($458>>>0) / ($456>>>0))&-1;
       $461 = ($460|0)==(4);
       $$$i35$i$i = $461 ? $458 : -1;
       $$0$i36$i$i = $$$i35$i$i;
      }
     } while(0);
     $462 = (_malloc($$0$i36$i$i)|0);
     $463 = ($462|0)==(0|0);
     do {
      if (!($463)) {
       $464 = ((($462)) + -4|0);
       $465 = HEAP32[$464>>2]|0;
       $466 = $465 & 3;
       $467 = ($466|0)==(0);
       if ($467) {
        break;
       }
       _memset(($462|0),0,($$0$i36$i$i|0))|0;
      }
     } while(0);
     $468 = ((($30)) + 48|0);
     HEAP32[$468>>2] = $462;
     $469 = ((($18)) + 20|0);
     $470 = HEAP32[$469>>2]|0;
     $471 = ($470|0)==(0);
     do {
      if ($471) {
       $$0$i$i$i = 0;
      } else {
       $472 = $470 << 2;
       $473 = ($470>>>0)>(65535);
       if (!($473)) {
        $$0$i$i$i = $472;
        break;
       }
       $474 = (($472>>>0) / ($470>>>0))&-1;
       $475 = ($474|0)==(4);
       $$$i$i$i = $475 ? $472 : -1;
       $$0$i$i$i = $$$i$i$i;
      }
     } while(0);
     $476 = (_malloc($$0$i$i$i)|0);
     $477 = ($476|0)==(0|0);
     do {
      if (!($477)) {
       $478 = ((($476)) + -4|0);
       $479 = HEAP32[$478>>2]|0;
       $480 = $479 & 3;
       $481 = ($480|0)==(0);
       if ($481) {
        break;
       }
       _memset(($476|0),0,($$0$i$i$i|0))|0;
      }
     } while(0);
     $482 = ((($30)) + 52|0);
     HEAP32[$482>>2] = $476;
     $483 = HEAP32[$455>>2]|0;
     $484 = ($483|0)>(0);
     if ($484) {
      $$3142$i$i = 0;
      while(1) {
       $487 = (((($18)) + 800|0) + ($$3142$i$i<<2)|0);
       $488 = HEAP32[$487>>2]|0;
       $489 = (59540 + ($488<<2)|0);
       $490 = HEAP32[$489>>2]|0;
       $491 = ((($490)) + 8|0);
       $492 = HEAP32[$491>>2]|0;
       $493 = (((($18)) + 1056|0) + ($$3142$i$i<<2)|0);
       $494 = HEAP32[$493>>2]|0;
       $495 = (FUNCTION_TABLE_iii[$492 & 31]($17,$494)|0);
       $496 = HEAP32[$468>>2]|0;
       $497 = (($496) + ($$3142$i$i<<2)|0);
       HEAP32[$497>>2] = $495;
       $498 = (($$3142$i$i) + 1)|0;
       $499 = HEAP32[$455>>2]|0;
       $500 = ($498|0)<($499|0);
       if ($500) {
        $$3142$i$i = $498;
       } else {
        break;
       }
      }
     }
     $485 = HEAP32[$469>>2]|0;
     $486 = ($485|0)>(0);
     if ($486) {
      $$4140$i$i = 0;
      while(1) {
       $501 = (((($18)) + 1312|0) + ($$4140$i$i<<2)|0);
       $502 = HEAP32[$501>>2]|0;
       $503 = (59548 + ($502<<2)|0);
       $504 = HEAP32[$503>>2]|0;
       $505 = ((($504)) + 8|0);
       $506 = HEAP32[$505>>2]|0;
       $507 = (((($18)) + 1568|0) + ($$4140$i$i<<2)|0);
       $508 = HEAP32[$507>>2]|0;
       $509 = (FUNCTION_TABLE_iii[$506 & 31]($17,$508)|0);
       $510 = HEAP32[$482>>2]|0;
       $511 = (($510) + ($$4140$i$i<<2)|0);
       HEAP32[$511>>2] = $509;
       $512 = (($$4140$i$i) + 1)|0;
       $513 = HEAP32[$469>>2]|0;
       $514 = ($512|0)<($513|0);
       if ($514) {
        $$4140$i$i = $512;
       } else {
        break;
       }
      }
     }
     $515 = HEAP32[$36>>2]|0;
     $516 = HEAP32[$13>>2]|0;
     $517 = ((($516)) + 2868|0);
     $518 = (_malloc(36)|0);
     $519 = ($518|0)==(0|0);
     do {
      if (!($519)) {
       $520 = ((($518)) + -4|0);
       $521 = HEAP32[$520>>2]|0;
       $522 = $521 & 3;
       $523 = ($522|0)==(0);
       if ($523) {
        break;
       }
       dest=$518; stop=dest+36|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      }
     } while(0);
     $524 = HEAP32[$416>>2]|0;
     $525 = ((($518)) + 4|0);
     HEAP32[$525>>2] = $524;
     HEAPF32[$518>>2] = -9999.0;
     $526 = ((($518)) + 8|0);
     HEAP32[$526>>2] = $517;
     $527 = ((($515)) + 60|0);
     HEAP32[$527>>2] = $518;
     $528 = (_malloc(180)|0);
     $529 = ($528|0)==(0|0);
     do {
      if (!($529)) {
       $530 = ((($528)) + -4|0);
       $531 = HEAP32[$530>>2]|0;
       $532 = $531 & 3;
       $533 = ($532|0)==(0);
       if ($533) {
        break;
       }
       _memset(($528|0),0,180)|0;
      }
     } while(0);
     HEAP32[$515>>2] = $528;
     $534 = HEAP32[$13>>2]|0;
     $535 = HEAP32[$416>>2]|0;
     $536 = ((($528)) + 4|0);
     HEAP32[$536>>2] = 128;
     $537 = ((($528)) + 8|0);
     HEAP32[$537>>2] = 64;
     $538 = ((($534)) + 2932|0);
     $539 = HEAP32[$538>>2]|0;
     $540 = ((($528)) + 12|0);
     HEAP32[$540>>2] = $539;
     HEAP32[$528>>2] = $535;
     $541 = ((($528)) + 164|0);
     HEAP32[$541>>2] = 128;
     $542 = ((($534)) + 4|0);
     $543 = HEAP32[$542>>2]|0;
     $544 = (($543|0) / 2)&-1;
     $545 = ((($528)) + 176|0);
     HEAP32[$545>>2] = $544;
     $546 = (_malloc(512)|0);
     $547 = ($546|0)==(0|0);
     do {
      if (!($547)) {
       $548 = ((($546)) + -4|0);
       $549 = HEAP32[$548>>2]|0;
       $550 = $549 & 3;
       $551 = ($550|0)==(0);
       if ($551) {
        break;
       }
       _memset(($546|0),0,512)|0;
      }
     } while(0);
     $552 = ((($528)) + 36|0);
     HEAP32[$552>>2] = $546;
     $553 = ((($528)) + 16|0);
     _mdct_init($553,128);
     $554 = HEAP32[$552>>2]|0;
     $$07982$i$i = 0;
     while(1) {
      $555 = (+($$07982$i$i|0));
      $556 = $555 * 0.024736950028266088;
      $557 = (+Math_sin((+$556)));
      $558 = $557;
      $559 = (($554) + ($$07982$i$i<<2)|0);
      $560 = $558 * $558;
      HEAPF32[$559>>2] = $560;
      $561 = (($$07982$i$i) + 1)|0;
      $exitcond84$i$i = ($561|0)==(128);
      if ($exitcond84$i$i) {
       break;
      } else {
       $$07982$i$i = $561;
      }
     }
     $562 = ((($528)) + 40|0);
     HEAP32[$562>>2] = 2;
     $563 = ((($528)) + 44|0);
     HEAP32[$563>>2] = 4;
     $564 = ((($528)) + 56|0);
     HEAP32[$564>>2] = 4;
     $565 = ((($528)) + 60|0);
     HEAP32[$565>>2] = 5;
     $566 = ((($528)) + 72|0);
     HEAP32[$566>>2] = 6;
     $567 = ((($528)) + 76|0);
     HEAP32[$567>>2] = 6;
     $568 = ((($528)) + 88|0);
     HEAP32[$568>>2] = 9;
     $569 = ((($528)) + 92|0);
     HEAP32[$569>>2] = 8;
     $570 = ((($528)) + 104|0);
     HEAP32[$570>>2] = 13;
     $571 = ((($528)) + 108|0);
     HEAP32[$571>>2] = 8;
     $572 = ((($528)) + 120|0);
     HEAP32[$572>>2] = 17;
     $573 = ((($528)) + 124|0);
     HEAP32[$573>>2] = 8;
     $574 = ((($528)) + 136|0);
     HEAP32[$574>>2] = 22;
     $575 = ((($528)) + 140|0);
     HEAP32[$575>>2] = 8;
     $$081$i$i = 0;$577 = 4;
     while(1) {
      $576 = $577 << 2;
      $578 = (_malloc($576)|0);
      $579 = (((((($528)) + 40|0) + ($$081$i$i<<4)|0)) + 8|0);
      HEAP32[$579>>2] = $578;
      $580 = ($577|0)>(0);
      if ($580) {
       $581 = (+($577|0));
       $582 = (((((($528)) + 40|0) + ($$081$i$i<<4)|0)) + 12|0);
       $$promoted$i$i = +HEAPF32[$582>>2];
       $$180$i$i = 0;$591 = $$promoted$i$i;
       while(1) {
        $583 = (+($$180$i$i|0));
        $584 = $583 + 0.5;
        $585 = $584 / $581;
        $586 = $585 * 3.1415926535897931;
        $587 = (+Math_sin((+$586)));
        $588 = $587;
        $589 = (($578) + ($$180$i$i<<2)|0);
        HEAPF32[$589>>2] = $588;
        $590 = $591 + $588;
        $592 = (($$180$i$i) + 1)|0;
        $exitcond$i$i = ($592|0)==($577|0);
        if ($exitcond$i$i) {
         break;
        } else {
         $$180$i$i = $592;$591 = $590;
        }
       }
       HEAPF32[$582>>2] = $590;
       $$pre$phi$i$iZ2D = $582;$594 = $590;
      } else {
       $$phi$trans$insert85$i$i = (((((($528)) + 40|0) + ($$081$i$i<<4)|0)) + 12|0);
       $$pre86$i$i = +HEAPF32[$$phi$trans$insert85$i$i>>2];
       $$pre$phi$i$iZ2D = $$phi$trans$insert85$i$i;$594 = $$pre86$i$i;
      }
      $593 = 1.0 / $594;
      HEAPF32[$$pre$phi$i$iZ2D>>2] = $593;
      $595 = (($$081$i$i) + 1)|0;
      $exitcond83$i$i = ($595|0)==(7);
      if ($exitcond83$i$i) {
       break;
      }
      $$phi$trans$insert$i$i = (((((($528)) + 40|0) + ($595<<4)|0)) + 4|0);
      $$pre$i3$i = HEAP32[$$phi$trans$insert$i$i>>2]|0;
      $$081$i$i = $595;$577 = $$pre$i3$i;
     }
     $596 = ($535*7)|0;
     $597 = ($535|0)==(0);
     do {
      if ($597) {
       $$0$i$i5$i = 0;
      } else {
       $598 = ($535*1008)|0;
       $599 = ($596>>>0)>(65535);
       if (!($599)) {
        $$0$i$i5$i = $598;
        break;
       }
       $600 = (($598>>>0) / ($596>>>0))&-1;
       $601 = ($600|0)==(144);
       $$$i$i4$i = $601 ? $598 : -1;
       $$0$i$i5$i = $$$i$i4$i;
      }
     } while(0);
     $602 = (_malloc($$0$i$i5$i)|0);
     $603 = ($602|0)==(0|0);
     do {
      if (!($603)) {
       $604 = ((($602)) + -4|0);
       $605 = HEAP32[$604>>2]|0;
       $606 = $605 & 3;
       $607 = ($606|0)==(0);
       if ($607) {
        break;
       }
       _memset(($602|0),0,($$0$i$i5$i|0))|0;
      }
     } while(0);
     $608 = ((($528)) + 152|0);
     HEAP32[$608>>2] = $602;
     $609 = HEAP32[$541>>2]|0;
     $610 = ($609|0)==(0);
     do {
      if ($610) {
       $$0$i3$i$i = 0;
      } else {
       $611 = $609 << 2;
       $612 = ($609>>>0)>(65535);
       if (!($612)) {
        $$0$i3$i$i = $611;
        break;
       }
       $613 = (($611>>>0) / ($609>>>0))&-1;
       $614 = ($613|0)==(4);
       $$$i2$i$i = $614 ? $611 : -1;
       $$0$i3$i$i = $$$i2$i$i;
      }
     } while(0);
     $615 = (_malloc($$0$i3$i$i)|0);
     $616 = ($615|0)==(0|0);
     do {
      if (!($616)) {
       $617 = ((($615)) + -4|0);
       $618 = HEAP32[$617>>2]|0;
       $619 = $618 & 3;
       $620 = ($619|0)==(0);
       if ($620) {
        break;
       }
       _memset(($615|0),0,($$0$i3$i$i|0))|0;
      }
     } while(0);
     $621 = ((($528)) + 160|0);
     HEAP32[$621>>2] = $615;
     $622 = ((($515)) + 80|0);
     $623 = HEAP32[$13>>2]|0;
     dest=$622; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
     $624 = ((($623)) + 3372|0);
     $625 = HEAP32[$624>>2]|0;
     $626 = ($625|0)>(0);
     if ($626) {
      $627 = ((($3)) + 400|0);
      $628 = HEAP32[$627>>2]|0;
      $629 = HEAP32[$623>>2]|0;
      $630 = $629 >> 1;
      $631 = ((($623)) + 4|0);
      $632 = HEAP32[$631>>2]|0;
      $633 = (($632|0) / ($629|0))&-1;
      $634 = ((($515)) + 104|0);
      HEAP32[$634>>2] = $633;
      HEAP32[$622>>2] = 1;
      $635 = ((($623)) + 3360|0);
      $636 = HEAP32[$635>>2]|0;
      $637 = (+($636|0));
      $638 = (+($630|0));
      $639 = $637 * $638;
      $640 = (+($628|0));
      $641 = $639 / $640;
      $642 = (+_rint($641));
      $643 = (~~(($642)));
      $644 = ((($515)) + 92|0);
      HEAP32[$644>>2] = $643;
      $645 = ((($623)) + 3364|0);
      $646 = HEAP32[$645>>2]|0;
      $647 = (+($646|0));
      $648 = $647 * $638;
      $649 = $648 / $640;
      $650 = (+_rint($649));
      $651 = (~~(($650)));
      $652 = ((($515)) + 96|0);
      HEAP32[$652>>2] = $651;
      $653 = ((($623)) + 3368|0);
      $654 = HEAP32[$653>>2]|0;
      $655 = (+($654|0));
      $656 = $655 * $638;
      $657 = $656 / $640;
      $658 = (+_rint($657));
      $659 = (~~(($658)));
      $660 = ((($515)) + 100|0);
      HEAP32[$660>>2] = $659;
      $661 = ((($515)) + 112|0);
      HEAPF64[$661>>3] = 7.0;
      $662 = (+($625|0));
      $663 = ((($623)) + 3376|0);
      $664 = +HEAPF64[$663>>3];
      $665 = $664 * $662;
      $666 = (~~(($665)));
      $667 = ((($515)) + 88|0);
      HEAP32[$667>>2] = $666;
      $668 = ((($515)) + 84|0);
      HEAP32[$668>>2] = $666;
     }
     $669 = ((($3)) + 504|0);
     $670 = $669;
     $671 = $670;
     HEAP32[$671>>2] = 3;
     $672 = (($670) + 4)|0;
     $673 = $672;
     HEAP32[$673>>2] = 0;
    }
   }
  }
 }
 $674 = ((($3)) + 552|0);
 dest=$674; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $675 = ((($3)) + 616|0);
 HEAP32[$675>>2] = $17;
 $676 = ((($3)) + 628|0);
 HEAP32[$676>>2] = 0;
 $677 = ((($3)) + 620|0);
 HEAP32[$677>>2] = 0;
 $678 = HEAP32[$17>>2]|0;
 $679 = ($678|0)==(0);
 if (!($679)) {
  $680 = (_malloc(72)|0);
  $681 = ($680|0)==(0|0);
  if (!($681)) {
   $682 = ((($680)) + -4|0);
   $683 = HEAP32[$682>>2]|0;
   $684 = $683 & 3;
   $685 = ($684|0)==(0);
   if (!($685)) {
    dest=$680; stop=dest+72|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
   }
  }
  $686 = ((($3)) + 656|0);
  HEAP32[$686>>2] = $680;
  $687 = ((($680)) + 4|0);
  HEAPF32[$687>>2] = -9999.0;
  $688 = ((($3)) + 556|0);
  $$pn$in$i = ((($680)) + 12|0);
  $$021$i = 0;
  while(1) {
   $689 = ($$021$i|0)==(7);
   if ($689) {
    $$sink$i$in = $688;
   } else {
    $690 = (_malloc(20)|0);
    $691 = ($690|0)==(0|0);
    if ($691) {
     $$sink$i$in = 0;
    } else {
     $692 = ((($690)) + -4|0);
     $693 = HEAP32[$692>>2]|0;
     $694 = $693 & 3;
     $695 = ($694|0)==(0);
     if ($695) {
      $$sink$i$in = $690;
     } else {
      dest=$690; stop=dest+20|0; do { HEAP8[dest>>0]=0|0; dest=dest+1|0; } while ((dest|0) < (stop|0));
      $$sink$i$in = $690;
     }
    }
   }
   $$sink1$i = (($$pn$in$i) + ($$021$i<<2)|0);
   HEAP32[$$sink1$i>>2] = $$sink$i$in;
   $696 = $$sink$i$in;
   $697 = $696;
   HEAP32[$697>>2] = 0;
   $698 = (($696) + 4)|0;
   $699 = $698;
   HEAP32[$699>>2] = 0;
   $700 = (_malloc(256)|0);
   $701 = ((($$sink$i$in)) + 8|0);
   HEAP32[$701>>2] = $700;
   $702 = ((($$sink$i$in)) + 12|0);
   HEAP32[$702>>2] = $700;
   HEAP8[$700>>0] = 0;
   $703 = ((($$sink$i$in)) + 16|0);
   HEAP32[$703>>2] = 256;
   $704 = (($$021$i) + 1)|0;
   $exitcond$i = ($704|0)==(15);
   if ($exitcond$i) {
    break;
   } else {
    $$021$i = $704;
   }
  }
 }
 $705 = (_time((0|0))|0);
 _srand($705);
 $706 = (_rand()|0);
 (_ogg_stream_init($3,$706)|0);
 $$0 = $3;
 return ($$0|0);
}
function _encoder_destroy($0) {
 $0 = $0|0;
 var $$015$i = 0, $$383$i = 0, $$in2021$i$i = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i1 = 0, $$pre100$i = 0, $$pre4 = 0, $$pre5 = 0, $$pre6 = 0, $$pre90$i = 0, $$pre91$i = 0, $$pre93$i = 0, $$pre94$i = 0, $$pre96$i = 0, $$pre97$i = 0, $$pre98$i = 0, $1 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0;
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP32[$0>>2]|0;
  $3 = ($2|0)==(0|0);
  if (!($3)) {
   _free($2);
  }
  $4 = ((($0)) + 16|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0|0);
  if (!($6)) {
   _free($5);
  }
  $7 = ((($0)) + 20|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   _free($8);
  }
  _memset(($0|0),0,360)|0;
 }
 $10 = ((($0)) + 552|0);
 $11 = ((($0)) + 656|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 636|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  $$in2021$i$i = $14;
  while(1) {
   $16 = ((($$in2021$i$i)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = HEAP32[$$in2021$i$i>>2]|0;
   _free($18);
   _free($$in2021$i$i);
   $19 = ($17|0)==(0|0);
   if ($19) {
    break;
   } else {
    $$in2021$i$i = $17;
   }
  }
 }
 $20 = ((($0)) + 632|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0);
 $$phi$trans$insert$i = ((($0)) + 620|0);
 $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
 if ($22) {
  $31 = $$pre$i;
 } else {
  $23 = ((($0)) + 628|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = (($24) + ($21))|0;
  $26 = (_realloc($$pre$i,$25)|0);
  HEAP32[$$phi$trans$insert$i>>2] = $26;
  $27 = HEAP32[$20>>2]|0;
  $28 = HEAP32[$23>>2]|0;
  $29 = (($28) + ($27))|0;
  HEAP32[$23>>2] = $29;
  HEAP32[$20>>2] = 0;
  $31 = $26;
 }
 $30 = ((($0)) + 624|0);
 HEAP32[$30>>2] = 0;
 HEAP32[$13>>2] = 0;
 $32 = ($31|0)==(0|0);
 if (!($32)) {
  _free($31);
 }
 $33 = ($12|0)==(0|0);
 if (!($33)) {
  $34 = ((($12)) + 12|0);
  $$015$i = 0;
  while(1) {
   $35 = (($34) + ($$015$i<<2)|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ((($36)) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = ($38|0)==(0|0);
   if (!($39)) {
    _free($38);
   }
   ;HEAP32[$36>>2]=0|0;HEAP32[$36+4>>2]=0|0;HEAP32[$36+8>>2]=0|0;HEAP32[$36+12>>2]=0|0;HEAP32[$36+16>>2]=0|0;
   $40 = ($$015$i|0)==(7);
   if ($40) {
    $$015$i = 8;
    continue;
   }
   $41 = HEAP32[$35>>2]|0;
   _free($41);
   $42 = (($$015$i) + 1)|0;
   $exitcond$i = ($42|0)==(15);
   if ($exitcond$i) {
    break;
   } else {
    $$015$i = $42;
   }
  }
  _free($12);
 }
 dest=$10; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $43 = ((($0)) + 440|0);
 $44 = ((($0)) + 444|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)!=(0|0);
 if ($46) {
  $47 = ((($45)) + 28|0);
  $48 = HEAP32[$47>>2]|0;
  $111 = $48;
 } else {
  $111 = 0;
 }
 $49 = ((($0)) + 544|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ($50|0)!=(0|0);
 if ($51) {
  $52 = HEAP32[$50>>2]|0;
  $53 = ($52|0)==(0|0);
  if (!($53)) {
   $54 = ((($52)) + 16|0);
   $55 = ((($52)) + 24|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($56|0)==(0|0);
   if (!($57)) {
    _free($56);
   }
   $58 = ((($52)) + 28|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ($59|0)==(0|0);
   if (!($60)) {
    _free($59);
   }
   ;HEAP32[$54>>2]=0|0;HEAP32[$54+4>>2]=0|0;HEAP32[$54+8>>2]=0|0;HEAP32[$54+12>>2]=0|0;HEAP32[$54+16>>2]=0|0;
   $61 = ((($52)) + 48|0);
   $62 = HEAP32[$61>>2]|0;
   _free($62);
   $63 = ((($52)) + 64|0);
   $64 = HEAP32[$63>>2]|0;
   _free($64);
   $65 = ((($52)) + 80|0);
   $66 = HEAP32[$65>>2]|0;
   _free($66);
   $67 = ((($52)) + 96|0);
   $68 = HEAP32[$67>>2]|0;
   _free($68);
   $69 = ((($52)) + 112|0);
   $70 = HEAP32[$69>>2]|0;
   _free($70);
   $71 = ((($52)) + 128|0);
   $72 = HEAP32[$71>>2]|0;
   _free($72);
   $73 = ((($52)) + 144|0);
   $74 = HEAP32[$73>>2]|0;
   _free($74);
   $75 = ((($52)) + 36|0);
   $76 = HEAP32[$75>>2]|0;
   _free($76);
   $77 = ((($52)) + 152|0);
   $78 = HEAP32[$77>>2]|0;
   _free($78);
   $79 = ((($52)) + 160|0);
   $80 = HEAP32[$79>>2]|0;
   _free($80);
   _memset(($52|0),0,180)|0;
   $81 = HEAP32[$50>>2]|0;
   _free($81);
  }
  $82 = ((($50)) + 12|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($83|0)==(0|0);
  if (!($84)) {
   $85 = HEAP32[$83>>2]|0;
   $86 = ($85|0)==(0|0);
   if ($86) {
    $93 = $85;
   } else {
    $87 = ((($85)) + 8|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = ($88|0)==(0|0);
    if (!($89)) {
     _free($88);
    }
    $90 = ((($85)) + 12|0);
    $91 = HEAP32[$90>>2]|0;
    $92 = ($91|0)==(0|0);
    if (!($92)) {
     _free($91);
    }
    ;HEAP32[$85>>2]=0|0;HEAP32[$85+4>>2]=0|0;HEAP32[$85+8>>2]=0|0;HEAP32[$85+12>>2]=0|0;HEAP32[$85+16>>2]=0|0;
    $$pre = HEAP32[$82>>2]|0;
    $$pre4 = HEAP32[$$pre>>2]|0;
    $93 = $$pre4;
   }
   _free($93);
   $94 = HEAP32[$82>>2]|0;
   _free($94);
  }
  $95 = ((($50)) + 16|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = ($96|0)==(0|0);
  if (!($97)) {
   $98 = HEAP32[$96>>2]|0;
   $99 = ($98|0)==(0|0);
   if ($99) {
    $106 = $98;
   } else {
    $100 = ((($98)) + 8|0);
    $101 = HEAP32[$100>>2]|0;
    $102 = ($101|0)==(0|0);
    if (!($102)) {
     _free($101);
    }
    $103 = ((($98)) + 12|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = ($104|0)==(0|0);
    if (!($105)) {
     _free($104);
    }
    ;HEAP32[$98>>2]=0|0;HEAP32[$98+4>>2]=0|0;HEAP32[$98+8>>2]=0|0;HEAP32[$98+12>>2]=0|0;HEAP32[$98+16>>2]=0|0;
    $$pre5 = HEAP32[$95>>2]|0;
    $$pre6 = HEAP32[$$pre5>>2]|0;
    $106 = $$pre6;
   }
   _free($106);
   $107 = HEAP32[$95>>2]|0;
   _free($107);
  }
  $108 = ((($50)) + 48|0);
  $109 = HEAP32[$108>>2]|0;
  $110 = ($109|0)==(0|0);
  if (!($110)) {
   $112 = ($111|0)==(0|0);
   if ($112) {
    $137 = $109;
   } else {
    $113 = ((($111)) + 16|0);
    $114 = HEAP32[$113>>2]|0;
    $115 = ($114|0)>(0);
    if ($115) {
     $116 = ((($111)) + 800|0);
     $117 = HEAP32[$116>>2]|0;
     $118 = (59540 + ($117<<2)|0);
     $119 = HEAP32[$118>>2]|0;
     $120 = ((($119)) + 16|0);
     $121 = HEAP32[$120>>2]|0;
     $122 = HEAP32[$109>>2]|0;
     FUNCTION_TABLE_vi[$121 & 31]($122);
     $123 = HEAP32[$113>>2]|0;
     $124 = ($123|0)>(1);
     if ($124) {
      $126 = 1;
      while(1) {
       $$pre$i1 = HEAP32[$108>>2]|0;
       $125 = (((($111)) + 800|0) + ($126<<2)|0);
       $127 = HEAP32[$125>>2]|0;
       $128 = (59540 + ($127<<2)|0);
       $129 = HEAP32[$128>>2]|0;
       $130 = ((($129)) + 16|0);
       $131 = HEAP32[$130>>2]|0;
       $132 = (($$pre$i1) + ($126<<2)|0);
       $133 = HEAP32[$132>>2]|0;
       FUNCTION_TABLE_vi[$131 & 31]($133);
       $134 = (($126) + 1)|0;
       $135 = HEAP32[$113>>2]|0;
       $136 = ($134|0)<($135|0);
       if ($136) {
        $126 = $134;
       } else {
        break;
       }
      }
     }
     $$pre90$i = HEAP32[$108>>2]|0;
     $137 = $$pre90$i;
    } else {
     $137 = $109;
    }
   }
   _free($137);
  }
  $138 = ((($50)) + 52|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = ($139|0)==(0|0);
  if (!($140)) {
   $141 = ($111|0)==(0|0);
   if ($141) {
    $166 = $139;
   } else {
    $142 = ((($111)) + 20|0);
    $143 = HEAP32[$142>>2]|0;
    $144 = ($143|0)>(0);
    if ($144) {
     $145 = ((($111)) + 1312|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = (59548 + ($146<<2)|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ((($148)) + 16|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = HEAP32[$139>>2]|0;
     FUNCTION_TABLE_vi[$150 & 31]($151);
     $152 = HEAP32[$142>>2]|0;
     $153 = ($152|0)>(1);
     if ($153) {
      $155 = 1;
      while(1) {
       $$pre91$i = HEAP32[$138>>2]|0;
       $154 = (((($111)) + 1312|0) + ($155<<2)|0);
       $156 = HEAP32[$154>>2]|0;
       $157 = (59548 + ($156<<2)|0);
       $158 = HEAP32[$157>>2]|0;
       $159 = ((($158)) + 16|0);
       $160 = HEAP32[$159>>2]|0;
       $161 = (($$pre91$i) + ($155<<2)|0);
       $162 = HEAP32[$161>>2]|0;
       FUNCTION_TABLE_vi[$160 & 31]($162);
       $163 = (($155) + 1)|0;
       $164 = HEAP32[$142>>2]|0;
       $165 = ($163|0)<($164|0);
       if ($165) {
        $155 = $163;
       } else {
        break;
       }
      }
     }
     $$pre93$i = HEAP32[$138>>2]|0;
     $166 = $$pre93$i;
    } else {
     $166 = $139;
    }
   }
   _free($166);
  }
  $167 = ((($50)) + 56|0);
  $168 = HEAP32[$167>>2]|0;
  $169 = ($168|0)==(0|0);
  if (!($169)) {
   $170 = ($111|0)==(0|0);
   if ($170) {
    $181 = $168;
   } else {
    $171 = ((($111)) + 28|0);
    $172 = HEAP32[$171>>2]|0;
    $173 = ($172|0)>(0);
    if ($173) {
     __vp_psy_clear($168);
     $174 = HEAP32[$171>>2]|0;
     $175 = ($174|0)>(1);
     if ($175) {
      $177 = 1;
      while(1) {
       $$pre94$i = HEAP32[$167>>2]|0;
       $176 = (($$pre94$i) + (($177*52)|0)|0);
       __vp_psy_clear($176);
       $178 = (($177) + 1)|0;
       $179 = HEAP32[$171>>2]|0;
       $180 = ($178|0)<($179|0);
       if ($180) {
        $177 = $178;
       } else {
        break;
       }
      }
     }
     $$pre96$i = HEAP32[$167>>2]|0;
     $181 = $$pre96$i;
    } else {
     $181 = $168;
    }
   }
   _free($181);
  }
  $182 = ((($50)) + 60|0);
  $183 = HEAP32[$182>>2]|0;
  $184 = ($183|0)==(0|0);
  if (!($184)) {
   _free($183);
  }
  $185 = ((($50)) + 80|0);
  dest=$185; stop=dest+48|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $186 = ((($50)) + 20|0);
  $187 = ((($50)) + 24|0);
  $188 = HEAP32[$187>>2]|0;
  $189 = ($188|0)==(0|0);
  if (!($189)) {
   _free($188);
  }
  $190 = ((($50)) + 28|0);
  $191 = HEAP32[$190>>2]|0;
  $192 = ($191|0)==(0|0);
  if (!($192)) {
   _free($191);
  }
  ;HEAP32[$186>>2]=0|0;HEAP32[$186+4>>2]=0|0;HEAP32[$186+8>>2]=0|0;
  $193 = ((($50)) + 32|0);
  $194 = ((($50)) + 36|0);
  $195 = HEAP32[$194>>2]|0;
  $196 = ($195|0)==(0|0);
  if (!($196)) {
   _free($195);
  }
  $197 = ((($50)) + 40|0);
  $198 = HEAP32[$197>>2]|0;
  $199 = ($198|0)==(0|0);
  if (!($199)) {
   _free($198);
  }
  ;HEAP32[$193>>2]=0|0;HEAP32[$193+4>>2]=0|0;HEAP32[$193+8>>2]=0|0;
 }
 $200 = ((($0)) + 448|0);
 $201 = HEAP32[$200>>2]|0;
 $202 = ($201|0)==(0|0);
 if (!($202)) {
  if ($46) {
   $203 = ((($45)) + 4|0);
   $204 = HEAP32[$203>>2]|0;
   $205 = ($204|0)>(0);
   if ($205) {
    $$383$i = 0;$207 = $201;$230 = $204;
    while(1) {
     $206 = (($207) + ($$383$i<<2)|0);
     $208 = HEAP32[$206>>2]|0;
     $209 = ($208|0)==(0|0);
     if ($209) {
      $212 = $230;
     } else {
      _free($208);
      $$pre98$i = HEAP32[$203>>2]|0;
      $212 = $$pre98$i;
     }
     $210 = (($$383$i) + 1)|0;
     $211 = ($210|0)<($212|0);
     if (!($211)) {
      break;
     }
     $$pre97$i = HEAP32[$200>>2]|0;
     $$383$i = $210;$207 = $$pre97$i;$230 = $212;
    }
    $$pre100$i = HEAP32[$200>>2]|0;
    $213 = $$pre100$i;
   } else {
    $213 = $201;
   }
  } else {
   $213 = $201;
  }
  _free($213);
  $214 = ((($0)) + 452|0);
  $215 = HEAP32[$214>>2]|0;
  $216 = ($215|0)==(0|0);
  if (!($216)) {
   _free($215);
  }
 }
 if (!($51)) {
  dest=$43; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  $226 = ((($0)) + 424|0);
  _vorbis_comment_clear($226);
  $227 = ((($0)) + 392|0);
  _vorbis_info_clear($227);
  $228 = ((($0)) + 672|0);
  $229 = HEAP32[$228>>2]|0;
  _free($229);
  _free($0);
  return;
 }
 $217 = ((($50)) + 64|0);
 $218 = HEAP32[$217>>2]|0;
 $219 = ($218|0)==(0|0);
 if (!($219)) {
  _free($218);
 }
 $220 = ((($50)) + 68|0);
 $221 = HEAP32[$220>>2]|0;
 $222 = ($221|0)==(0|0);
 if (!($222)) {
  _free($221);
 }
 $223 = ((($50)) + 72|0);
 $224 = HEAP32[$223>>2]|0;
 $225 = ($224|0)==(0|0);
 if (!($225)) {
  _free($224);
 }
 _free($50);
 dest=$43; stop=dest+112|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $226 = ((($0)) + 424|0);
 _vorbis_comment_clear($226);
 $227 = ((($0)) + 392|0);
 _vorbis_info_clear($227);
 $228 = ((($0)) + 672|0);
 $229 = HEAP32[$228>>2]|0;
 _free($229);
 _free($0);
 return;
}
function _encoder_write_headers($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $1 = sp + 64|0;
 $2 = sp + 32|0;
 $3 = sp;
 $4 = sp + 96|0;
 $5 = ((($0)) + 440|0);
 $6 = ((($0)) + 424|0);
 (_vorbis_analysis_headerout($5,$6,$1,$2,$3)|0);
 (_ogg_stream_packetin($0,$1)|0);
 (_ogg_stream_packetin($0,$2)|0);
 (_ogg_stream_packetin($0,$3)|0);
 $7 = (_ogg_stream_flush_i($0,$4,1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  STACKTOP = sp;return;
 }
 $9 = ((($0)) + 676|0);
 $10 = ((($4)) + 4|0);
 $11 = ((($4)) + 12|0);
 $12 = ((($0)) + 672|0);
 $13 = ((($4)) + 8|0);
 while(1) {
  $14 = HEAP32[$9>>2]|0;
  $15 = HEAP32[$10>>2]|0;
  $16 = (($15) + ($14))|0;
  $17 = HEAP32[$11>>2]|0;
  $18 = (($16) + ($17))|0;
  $19 = ($18|0)==(0);
  if (!($19)) {
   $22 = HEAP32[$12>>2]|0;
   $23 = (_realloc($22,$18)|0);
   HEAP32[$12>>2] = $23;
   $24 = HEAP32[$9>>2]|0;
   $25 = (($23) + ($24)|0);
   $26 = HEAP32[$4>>2]|0;
   $27 = HEAP32[$10>>2]|0;
   _memcpy(($25|0),($26|0),($27|0))|0;
   $28 = (($27) + ($24))|0;
   HEAP32[$9>>2] = $28;
   $29 = (($23) + ($28)|0);
   $30 = HEAP32[$13>>2]|0;
   $31 = HEAP32[$11>>2]|0;
   _memcpy(($29|0),($30|0),($31|0))|0;
   $32 = (($31) + ($28))|0;
   HEAP32[$9>>2] = $32;
  }
  $20 = (_ogg_stream_flush_i($0,$4,1)|0);
  $21 = ($20|0)==(0);
  if ($21) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _encoder_prepare_analysis_buffers($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 440|0);
 $3 = (_vorbis_analysis_buffer($2,$1)|0);
 $4 = ((($0)) + 664|0);
 HEAP32[$4>>2] = $3;
 $5 = ((($0)) + 668|0);
 HEAP32[$5>>2] = $1;
 return;
}
function _encoder_encode($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 440|0);
 $2 = ((($0)) + 668|0);
 $3 = HEAP32[$2>>2]|0;
 _vorbis_analysis_wrote($1,$3);
 _encoder_encode_work($0);
 return;
}
function _encoder_encode_work($0) {
 $0 = $0|0;
 var $$$7$i = 0, $$0$i5 = 0, $$0$i9 = 0, $$0209239$i = 0, $$0210258284$i = 0, $$0220$i = 0.0, $$031$i = 0, $$031$i2 = 0, $$1221$i = 0.0, $$2$i = 0, $$2213$i = 0, $$3$i = 0, $$3214248$i = 0, $$4215$i = 0, $$4249$i = 0, $$5$i = 0, $$5216240$i = 0, $$6217$i = 0, $$6241$i = 0, $$7$i = 0;
 var $$8219$i = 0, $$not$i = 0, $$not$i7 = 0, $$pre = 0, $$pre19 = 0, $$sink = 0, $$sink226$i = 0, $$sink32 = 0, $$sink47 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $134 = 0, $135 = 0.0, $136 = 0.0, $137 = 0.0, $138 = 0, $139 = 0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0;
 var $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0;
 var $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0;
 var $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0;
 var $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0;
 var $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0;
 var $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0;
 var $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0.0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0.0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0.0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge$i = 0, $brmerge$i8 = 0, $not$$i$i = 0, $not$$i$i1 = 0, $or$cond$i = 0, $or$cond222$i = 0, $or$cond222263$i = 0, $or$cond223$i = 0, $or$cond224$i = 0;
 var $or$cond227$i = 0, $or$cond228$i = 0, $or$cond256$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ((($0)) + 440|0);
 $3 = ((($0)) + 552|0);
 $4 = (_vorbis_analysis_blockout($2,$3)|0);
 $5 = ($4|0)==(1);
 if (!($5)) {
  STACKTOP = sp;return;
 }
 $6 = ((($0)) + 360|0);
 $7 = ((($0)) + 676|0);
 $8 = ((($1)) + 4|0);
 $9 = ((($1)) + 12|0);
 $10 = ((($0)) + 672|0);
 $11 = ((($1)) + 8|0);
 $12 = ((($0)) + 656|0);
 $13 = ((($0)) + 616|0);
 $14 = ((($0)) + 580|0);
 $15 = ((($0)) + 544|0);
 $16 = ((($0)) + 364|0);
 $17 = ((($0)) + 368|0);
 $18 = ((($0)) + 372|0);
 $19 = ((($0)) + 376|0);
 $20 = ((($0)) + 384|0);
 $21 = ((($0)) + 328|0);
 $22 = ((($0)) + 28|0);
 $23 = ((($0)) + 332|0);
 while(1) {
  (_vorbis_analysis($3,0)|0);
  $26 = HEAP32[$12>>2]|0;
  $27 = HEAP32[$13>>2]|0;
  $28 = ((($27)) + 104|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($27)) + 4|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 28|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($29)) + 112|0);
  $35 = +HEAPF64[$34>>3];
  $36 = (+_rint($35));
  $37 = (~~(($36)));
  $38 = (((($26)) + 12|0) + ($37<<2)|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($39)) + 4|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + 7)|0;
  $44 = (($43|0) / 8)&-1;
  $45 = (($44) + ($40))|0;
  $46 = $45 << 3;
  $47 = HEAP32[$14>>2]|0;
  $48 = ($47|0)==(0);
  $49 = ((($29)) + 96|0);
  $50 = HEAP32[$49>>2]|0;
  if ($48) {
   $51 = ((($29)) + 100|0);
   $52 = HEAP32[$51>>2]|0;
   $156 = $50;$176 = $52;$179 = $52;$250 = $51;$382 = 0;$60 = 0;
  } else {
   $53 = ((($29)) + 104|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($29)) + 100|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = Math_imul($54, $50)|0;
   $58 = Math_imul($54, $56)|0;
   $156 = $57;$176 = $56;$179 = $58;$250 = $55;$382 = 1;$60 = $47;
  }
  $59 = (($33) + ($60<<2)|0);
  $61 = HEAP32[$59>>2]|0;
  $62 = $61 >> 1;
  $63 = ((($33)) + 3372|0);
  $64 = HEAP32[$63>>2]|0;
  $65 = (+($64|0));
  $66 = ((($33)) + 3376|0);
  $67 = +HEAPF64[$66>>3];
  $68 = $65 * $67;
  $69 = (~~(($68)));
  $70 = ((($29)) + 80|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ($71|0)==(0);
  $73 = ((($29)) + 120|0);
  if ($72) {
   $74 = HEAP32[$73>>2]|0;
   $75 = ($74|0)==(0|0);
   if ($75) {
    HEAP32[$73>>2] = $3;
   }
  } else {
   HEAP32[$73>>2] = $3;
   $76 = ((($29)) + 92|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ($77|0)>(0);
   if ($78) {
    if ($382) {
     $79 = ((($29)) + 104|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = Math_imul($80, $77)|0;
     $88 = $81;
    } else {
     $88 = $77;
    }
    $82 = ((($33)) + 3384|0);
    $83 = +HEAPF64[$82>>3];
    $84 = 15.0 / $83;
    $85 = ((($29)) + 84|0);
    $86 = HEAP32[$85>>2]|0;
    $87 = (($46) - ($88))|0;
    $89 = (($86) + ($87))|0;
    $90 = ($89|0)>($69|0);
    L19: do {
     if ($90) {
      $91 = ($37|0)>(0);
      $92 = ($46|0)>($88|0);
      $or$cond256$i = $92 & $91;
      if ($or$cond256$i) {
       $$0210258284$i = $37;
       while(1) {
        $93 = (($$0210258284$i) + -1)|0;
        $94 = (((($26)) + 12|0) + ($93<<2)|0);
        $95 = HEAP32[$94>>2]|0;
        $96 = HEAP32[$95>>2]|0;
        $97 = ((($95)) + 4|0);
        $98 = HEAP32[$97>>2]|0;
        $99 = (($98) + 7)|0;
        $100 = (($99|0) / 8)&-1;
        $101 = (($100) + ($96))|0;
        $102 = $101 << 3;
        $103 = ($$0210258284$i|0)>(1);
        $104 = ($102|0)>($88|0);
        $or$cond$i = $104 & $103;
        if (!($or$cond$i)) {
         $$2$i = $93;
         break L19;
        }
        $105 = (($102) - ($88))|0;
        $106 = (($105) + ($86))|0;
        $107 = ($106|0)>($69|0);
        if ($107) {
         $$0210258284$i = $93;
        } else {
         $$2$i = $93;
         break;
        }
       }
      } else {
       $$2$i = $37;
      }
     } else {
      $108 = ($89|0)<($69|0);
      if ($108) {
       $109 = (($37) + 1)|0;
       $110 = ($109|0)<(15);
       $111 = ($46|0)<($88|0);
       $or$cond222263$i = $111 & $110;
       if ($or$cond222263$i) {
        $113 = $109;
        while(1) {
         $112 = (((($26)) + 12|0) + ($113<<2)|0);
         $114 = HEAP32[$112>>2]|0;
         $115 = HEAP32[$114>>2]|0;
         $116 = ((($114)) + 4|0);
         $117 = HEAP32[$116>>2]|0;
         $118 = (($117) + 7)|0;
         $119 = (($118|0) / 8)&-1;
         $120 = (($119) + ($115))|0;
         $121 = $120 << 3;
         $122 = (($113) + 1)|0;
         $123 = ($122|0)<(15);
         $124 = ($121|0)<($88|0);
         $or$cond222$i = $124 & $123;
         if (!($or$cond222$i)) {
          $$2$i = $113;
          break L19;
         }
         $125 = (($121) - ($88))|0;
         $126 = (($125) + ($86))|0;
         $127 = ($126|0)<($69|0);
         if ($127) {
          $113 = $122;
         } else {
          $$2$i = $113;
          break;
         }
        }
       } else {
        $$2$i = $37;
       }
      } else {
       $$2$i = $37;
      }
     }
    } while(0);
    $128 = (+($$2$i|0));
    $129 = $128 - $35;
    $130 = (+_rint($129));
    $131 = (+($62|0));
    $132 = $130 / $131;
    $133 = ((($31)) + 8|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = (+($134|0));
    $136 = $135 * $132;
    $137 = -$84;
    $138 = $136 < $137;
    $$0220$i = $138 ? $137 : $136;
    $139 = $$0220$i > $84;
    $$1221$i = $139 ? $84 : $$0220$i;
    $140 = $$1221$i / $135;
    $141 = $140 * $131;
    $142 = $141 + $35;
    HEAPF64[$34>>3] = $142;
    $143 = (+_rint($142));
    $144 = (~~(($143)));
    $145 = (((($26)) + 12|0) + ($144<<2)|0);
    $146 = HEAP32[$145>>2]|0;
    $147 = HEAP32[$146>>2]|0;
    $148 = ((($146)) + 4|0);
    $149 = HEAP32[$148>>2]|0;
    $150 = (($149) + 7)|0;
    $151 = (($150|0) / 8)&-1;
    $152 = (($151) + ($147))|0;
    $153 = $152 << 3;
    $$2213$i = $153;$$3$i = $144;
   } else {
    $$2213$i = $46;$$3$i = $37;
   }
   $154 = ($50|0)>(0);
   $155 = ($$2213$i|0)<($156|0);
   $or$cond223$i = $155 & $154;
   L31: do {
    if ($or$cond223$i) {
     $157 = ((($29)) + 88|0);
     $158 = HEAP32[$157>>2]|0;
     $159 = (($$2213$i) - ($156))|0;
     $160 = (($159) + ($158))|0;
     $161 = ($160|0)<(0);
     if ($161) {
      $$3214248$i = $$2213$i;$$4249$i = $$3$i;
      while(1) {
       $162 = (($$4249$i) + 1)|0;
       $163 = ($$4249$i|0)>(13);
       if ($163) {
        $$4215$i = $$3214248$i;$$5$i = $162;
        break L31;
       }
       $164 = (((($26)) + 12|0) + ($162<<2)|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = HEAP32[$165>>2]|0;
       $167 = ((($165)) + 4|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = (($168) + 7)|0;
       $170 = (($169|0) / 8)&-1;
       $171 = (($170) + ($166))|0;
       $172 = $171 << 3;
       $173 = (($172) - ($156))|0;
       $174 = (($173) + ($158))|0;
       $175 = ($174|0)<(0);
       if ($175) {
        $$3214248$i = $172;$$4249$i = $162;
       } else {
        $$4215$i = $172;$$5$i = $162;
        break;
       }
      }
     } else {
      $$4215$i = $$2213$i;$$5$i = $$3$i;
     }
    } else {
     $$4215$i = $$2213$i;$$5$i = $$3$i;
    }
   } while(0);
   $177 = ($176|0)>(0);
   $178 = ($$4215$i|0)>($179|0);
   $or$cond224$i = $178 & $177;
   L37: do {
    if ($or$cond224$i) {
     $180 = ((($29)) + 88|0);
     $181 = HEAP32[$180>>2]|0;
     $182 = (($$4215$i) - ($179))|0;
     $183 = (($182) + ($181))|0;
     $184 = ($183|0)>($64|0);
     if ($184) {
      $$5216240$i = $$4215$i;$$6241$i = $$5$i;
      while(1) {
       $185 = (($$6241$i) + -1)|0;
       $186 = ($$6241$i|0)<(1);
       if ($186) {
        $$6217$i = $$5216240$i;$$7$i = $185;
        break L37;
       }
       $187 = (((($26)) + 12|0) + ($185<<2)|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = HEAP32[$188>>2]|0;
       $190 = ((($188)) + 4|0);
       $191 = HEAP32[$190>>2]|0;
       $192 = (($191) + 7)|0;
       $193 = (($192|0) / 8)&-1;
       $194 = (($193) + ($189))|0;
       $195 = $194 << 3;
       $196 = (($195) - ($179))|0;
       $197 = (($196) + ($181))|0;
       $198 = ($197|0)>($64|0);
       if ($198) {
        $$5216240$i = $195;$$6241$i = $185;
       } else {
        $$6217$i = $195;$$7$i = $185;
        break;
       }
      }
     } else {
      $$6217$i = $$4215$i;$$7$i = $$5$i;
     }
    } else {
     $$6217$i = $$4215$i;$$7$i = $$5$i;
    }
   } while(0);
   $199 = ($$7$i|0)<(0);
   $200 = ((($29)) + 88|0);
   $201 = HEAP32[$200>>2]|0;
   if ($199) {
    $202 = (($64) + ($179))|0;
    $203 = (($202) - ($201))|0;
    $204 = (($203|0) / 8)&-1;
    $205 = ((($29)) + 124|0);
    HEAP32[$205>>2] = 0;
    $206 = ((($26)) + 12|0);
    $207 = HEAP32[$206>>2]|0;
    $208 = HEAP32[$207>>2]|0;
    $209 = ((($207)) + 4|0);
    $210 = HEAP32[$209>>2]|0;
    $211 = (($210) + 7)|0;
    $212 = (($211|0) / 8)&-1;
    $213 = (($212) + ($208))|0;
    $214 = ($213|0)>($204|0);
    if ($214) {
     $215 = ((($207)) + 12|0);
     $216 = HEAP32[$215>>2]|0;
     $217 = ($216|0)==(0|0);
     if ($217) {
      $$sink226$i = $207;
      label = 36;
     } else {
      $218 = ((($207)) + 8|0);
      $219 = HEAP32[$218>>2]|0;
      $220 = (($219) + ($204)|0);
      HEAP32[$215>>2] = $220;
      HEAP32[$209>>2] = 0;
      HEAP32[$207>>2] = $204;
      HEAP8[$220>>0] = 0;
      $$pre = HEAP32[$206>>2]|0;
      $$sink226$i = $$pre;
      label = 36;
     }
    } else {
     $$8219$i = $$6217$i;$247 = $50;
    }
   } else {
    $221 = (($156) + 7)|0;
    $222 = (($221) - ($201))|0;
    $223 = (($222|0) / 8)&-1;
    $224 = ($$7$i|0)<(14);
    $$$7$i = $224 ? $$7$i : 14;
    $225 = ((($29)) + 124|0);
    HEAP32[$225>>2] = $$$7$i;
    $226 = (((($26)) + 12|0) + ($$$7$i<<2)|0);
    $227 = HEAP32[$226>>2]|0;
    $228 = HEAP32[$227>>2]|0;
    $229 = ((($227)) + 4|0);
    $230 = HEAP32[$229>>2]|0;
    $231 = (($230) + 7)|0;
    $232 = (($231|0) / 8)&-1;
    $233 = (($232) + ($228))|0;
    $234 = (($223) - ($233))|0;
    $235 = ($234|0)>(0);
    if ($235) {
     $$0209239$i = $234;$237 = $227;
     while(1) {
      $236 = (($$0209239$i) + -1)|0;
      _oggpack_write($237,0,8);
      $238 = ($$0209239$i|0)>(1);
      $239 = HEAP32[$226>>2]|0;
      if ($238) {
       $$0209239$i = $236;$237 = $239;
      } else {
       $$sink226$i = $239;
       label = 36;
       break;
      }
     }
    } else {
     $$sink226$i = $227;
     label = 36;
    }
   }
   if ((label|0) == 36) {
    label = 0;
    $240 = HEAP32[$$sink226$i>>2]|0;
    $241 = ((($$sink226$i)) + 4|0);
    $242 = HEAP32[$241>>2]|0;
    $243 = (($242) + 7)|0;
    $244 = (($243|0) / 8)&-1;
    $245 = (($244) + ($240))|0;
    $246 = $245 << 3;
    $$pre19 = HEAP32[$49>>2]|0;
    $$8219$i = $246;$247 = $$pre19;
   }
   $248 = ($247|0)>(0);
   if ($248) {
    label = 39;
   } else {
    $249 = HEAP32[$250>>2]|0;
    $251 = ($249|0)>(0);
    if ($251) {
     label = 39;
    }
   }
   do {
    if ((label|0) == 39) {
     label = 0;
     $252 = ($179|0)>(0);
     $253 = ((($29)) + 88|0);
     $254 = HEAP32[$253>>2]|0;
     $255 = ($$8219$i|0)>($179|0);
     $or$cond227$i = $252 & $255;
     if ($or$cond227$i) {
      $256 = (($$8219$i) - ($179))|0;
      $257 = (($256) + ($254))|0;
      HEAP32[$253>>2] = $257;
      break;
     }
     $258 = ($156|0)>(0);
     $259 = ($$8219$i|0)<($156|0);
     $or$cond228$i = $258 & $259;
     if ($or$cond228$i) {
      $260 = (($$8219$i) - ($156))|0;
      $261 = (($260) + ($254))|0;
      HEAP32[$253>>2] = $261;
      break;
     }
     $262 = ($254|0)>($69|0);
     if ($262) {
      if ($252) {
       $263 = (($$8219$i) - ($179))|0;
       $264 = (($254) + ($263))|0;
       HEAP32[$253>>2] = $264;
       $265 = ($264|0)<($69|0);
       if (!($265)) {
        break;
       }
      }
      HEAP32[$253>>2] = $69;
      break;
     } else {
      if ($258) {
       $266 = (($$8219$i) - ($156))|0;
       $267 = (($254) + ($266))|0;
       HEAP32[$253>>2] = $267;
       $268 = ($267|0)>($69|0);
       if (!($268)) {
        break;
       }
      }
      HEAP32[$253>>2] = $69;
      break;
     }
    }
   } while(0);
   $269 = HEAP32[$76>>2]|0;
   $270 = ($269|0)>(0);
   if ($270) {
    $271 = HEAP32[$14>>2]|0;
    $272 = ($271|0)==(0);
    if ($272) {
     $277 = $269;
    } else {
     $273 = ((($29)) + 104|0);
     $274 = HEAP32[$273>>2]|0;
     $275 = Math_imul($274, $269)|0;
     $277 = $275;
    }
    $276 = (($$8219$i) - ($277))|0;
    $278 = ((($29)) + 84|0);
    $279 = HEAP32[$278>>2]|0;
    $280 = (($276) + ($279))|0;
    HEAP32[$278>>2] = $280;
   }
  }
  $281 = HEAP32[$15>>2]|0;
  $282 = ((($281)) + 120|0);
  $283 = HEAP32[$282>>2]|0;
  $284 = ($283|0)==(0|0);
  L78: do {
   if (!($284)) {
    $285 = ((($283)) + 104|0);
    $286 = HEAP32[$285>>2]|0;
    $287 = ((($283)) + 64|0);
    $288 = HEAP32[$287>>2]|0;
    $289 = ((($288)) + 104|0);
    $290 = HEAP32[$289>>2]|0;
    $291 = ((($290)) + 80|0);
    $292 = HEAP32[$291>>2]|0;
    $not$$i$i = ($292|0)==(0);
    if ($not$$i$i) {
     $$031$i = 7;
    } else {
     $293 = ((($281)) + 124|0);
     $294 = HEAP32[$293>>2]|0;
     $$031$i = $294;
    }
    $295 = (((($286)) + 12|0) + ($$031$i<<2)|0);
    $$sink = $282;$$sink32 = $283;$$sink47 = $295;
    while(1) {
     $311 = HEAP32[$$sink47>>2]|0;
     $312 = ((($311)) + 8|0);
     $313 = HEAP32[$312>>2]|0;
     HEAP32[$6>>2] = $313;
     $314 = HEAP32[$$sink47>>2]|0;
     $315 = HEAP32[$314>>2]|0;
     $316 = ((($314)) + 4|0);
     $317 = HEAP32[$316>>2]|0;
     $318 = (($317) + 7)|0;
     $319 = (($318|0) / 8)&-1;
     $320 = (($319) + ($315))|0;
     HEAP32[$16>>2] = $320;
     HEAP32[$17>>2] = 0;
     $321 = ((($$sink32)) + 44|0);
     $322 = HEAP32[$321>>2]|0;
     HEAP32[$18>>2] = $322;
     $323 = ((($$sink32)) + 48|0);
     $324 = $323;
     $325 = $324;
     $326 = HEAP32[$325>>2]|0;
     $327 = (($324) + 4)|0;
     $328 = $327;
     $329 = HEAP32[$328>>2]|0;
     $330 = $19;
     $331 = $330;
     HEAP32[$331>>2] = $326;
     $332 = (($330) + 4)|0;
     $333 = $332;
     HEAP32[$333>>2] = $329;
     $334 = ((($$sink32)) + 56|0);
     $335 = $334;
     $336 = $335;
     $337 = HEAP32[$336>>2]|0;
     $338 = (($335) + 4)|0;
     $339 = $338;
     $340 = HEAP32[$339>>2]|0;
     $341 = $20;
     $342 = $341;
     HEAP32[$342>>2] = $337;
     $343 = (($341) + 4)|0;
     $344 = $343;
     HEAP32[$344>>2] = $340;
     HEAP32[$$sink>>2] = 0;
     (_ogg_stream_packetin($0,$6)|0);
     $345 = HEAP32[$0>>2]|0;
     $346 = ($345|0)==(0|0);
     L85: do {
      if (!($346)) {
       $347 = HEAP32[$21>>2]|0;
       $348 = ($347|0)==(0);
       $349 = HEAP32[$22>>2]|0;
       $350 = ($349|0)!=(0);
       $$not$i = $350 ^ 1;
       $brmerge$i = $348 | $$not$i;
       if ($brmerge$i) {
        if ($350) {
         $351 = HEAP32[$23>>2]|0;
         $352 = ($351|0)==(0);
         if ($352) {
          label = 66;
         } else {
          $$0$i5 = 0;
         }
        } else {
         $$0$i5 = 0;
        }
       } else {
        label = 66;
       }
       if ((label|0) == 66) {
        label = 0;
        $$0$i5 = 1;
       }
       $353 = (_ogg_stream_flush_i($0,$1,$$0$i5)|0);
       $354 = ($353|0)==(0);
       if (!($354)) {
        while(1) {
         $355 = HEAP32[$7>>2]|0;
         $356 = HEAP32[$8>>2]|0;
         $357 = (($356) + ($355))|0;
         $358 = HEAP32[$9>>2]|0;
         $359 = (($357) + ($358))|0;
         $360 = ($359|0)==(0);
         if (!($360)) {
          $371 = HEAP32[$10>>2]|0;
          $372 = (_realloc($371,$359)|0);
          HEAP32[$10>>2] = $372;
          $373 = HEAP32[$7>>2]|0;
          $374 = (($372) + ($373)|0);
          $375 = HEAP32[$1>>2]|0;
          $376 = HEAP32[$8>>2]|0;
          _memcpy(($374|0),($375|0),($376|0))|0;
          $377 = (($376) + ($373))|0;
          HEAP32[$7>>2] = $377;
          $378 = (($372) + ($377)|0);
          $379 = HEAP32[$11>>2]|0;
          $380 = HEAP32[$9>>2]|0;
          _memcpy(($378|0),($379|0),($380|0))|0;
          $381 = (($380) + ($377))|0;
          HEAP32[$7>>2] = $381;
         }
         $361 = HEAP32[$0>>2]|0;
         $362 = ($361|0)==(0|0);
         if ($362) {
          break L85;
         }
         $363 = HEAP32[$21>>2]|0;
         $364 = ($363|0)==(0);
         $365 = HEAP32[$22>>2]|0;
         $366 = ($365|0)!=(0);
         $$not$i7 = $366 ^ 1;
         $brmerge$i8 = $364 | $$not$i7;
         if ($brmerge$i8) {
          if ($366) {
           $367 = HEAP32[$23>>2]|0;
           $368 = ($367|0)==(0);
           if ($368) {
            label = 73;
           } else {
            $$0$i9 = 0;
           }
          } else {
           $$0$i9 = 0;
          }
         } else {
          label = 73;
         }
         if ((label|0) == 73) {
          label = 0;
          $$0$i9 = 1;
         }
         $369 = (_ogg_stream_flush_i($0,$1,$$0$i9)|0);
         $370 = ($369|0)==(0);
         if ($370) {
          break;
         }
        }
       }
      }
     } while(0);
     $296 = HEAP32[$15>>2]|0;
     $297 = ((($296)) + 120|0);
     $298 = HEAP32[$297>>2]|0;
     $299 = ($298|0)==(0|0);
     if ($299) {
      break L78;
     }
     $300 = ((($298)) + 104|0);
     $301 = HEAP32[$300>>2]|0;
     $302 = ((($298)) + 64|0);
     $303 = HEAP32[$302>>2]|0;
     $304 = ((($303)) + 104|0);
     $305 = HEAP32[$304>>2]|0;
     $306 = ((($305)) + 80|0);
     $307 = HEAP32[$306>>2]|0;
     $not$$i$i1 = ($307|0)==(0);
     if ($not$$i$i1) {
      $$031$i2 = 7;
     } else {
      $308 = ((($296)) + 124|0);
      $309 = HEAP32[$308>>2]|0;
      $$031$i2 = $309;
     }
     $310 = (((($301)) + 12|0) + ($$031$i2<<2)|0);
     $$sink = $297;$$sink32 = $298;$$sink47 = $310;
    }
   }
  } while(0);
  $24 = (_vorbis_analysis_blockout($2,$3)|0);
  $25 = ($24|0)==(1);
  if (!($25)) {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _encoder_finish($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 440|0);
 _vorbis_analysis_wrote($1,0);
 _encoder_encode_work($0);
 return;
}
function _encoder_get_data($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 672|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _encoder_get_data_len($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 676|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _encoder_clear_data($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 676|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _encoder_get_analysis_buffer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 664|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + ($1<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 return ($5|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0172$i = 0, $$$0173$i = 0, $$$4236$i = 0, $$$4329$i = 0, $$$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$01$i$i = 0, $$0172$lcssa$i = 0, $$01726$i = 0, $$0173$lcssa$i = 0, $$01735$i = 0, $$0192 = 0, $$0194 = 0, $$0201$i$i = 0, $$0202$i$i = 0, $$0206$i$i = 0;
 var $$0207$i$i = 0, $$024370$i = 0, $$0260$i$i = 0, $$0261$i$i = 0, $$0262$i$i = 0, $$0268$i$i = 0, $$0269$i$i = 0, $$0320$i = 0, $$0322$i = 0, $$0323$i = 0, $$0325$i = 0, $$0331$i = 0, $$0336$i = 0, $$0337$$i = 0, $$0337$i = 0, $$0339$i = 0, $$0340$i = 0, $$0345$i = 0, $$1176$i = 0, $$1178$i = 0;
 var $$124469$i = 0, $$1264$i$i = 0, $$1266$i$i = 0, $$1321$i = 0, $$1326$i = 0, $$1341$i = 0, $$1347$i = 0, $$1351$i = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2333$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i200 = 0, $$3328$i = 0, $$3349$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$411$i = 0;
 var $$4236$i = 0, $$4329$lcssa$i = 0, $$432910$i = 0, $$4335$$4$i = 0, $$4335$ph$i = 0, $$43359$i = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i17$i = 0, $$pre$i195 = 0, $$pre$i210 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i18$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink1$i = 0;
 var $$sink1$i$i = 0, $$sink14$i = 0, $$sink2$i = 0, $$sink2$i204 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0;
 var $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0;
 var $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0;
 var $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0;
 var $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0;
 var $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0;
 var $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0;
 var $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0;
 var $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0;
 var $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0;
 var $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0;
 var $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0;
 var $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0;
 var $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0;
 var $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0;
 var $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0;
 var $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0;
 var $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0;
 var $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0;
 var $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0;
 var $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0;
 var $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0;
 var $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0;
 var $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0;
 var $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0;
 var $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0;
 var $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0;
 var $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0;
 var $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0;
 var $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0;
 var $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0;
 var $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0;
 var $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i208 = 0, $exitcond$i$i = 0, $not$$i = 0, $not$$i$i = 0;
 var $not$$i197 = 0, $not$$i209 = 0, $not$1$i = 0, $not$1$i203 = 0, $not$3$i = 0, $not$5$i = 0, $or$cond$i = 0, $or$cond$i201 = 0, $or$cond1$i = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond2$i199 = 0, $or$cond49$i = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond7$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[136547]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (546228 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[136547] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(546196)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (546228 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($65|0)==($69|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[136547] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($79) + ($76)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(546208)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (546228 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[136547] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(546196)>>2] = $76;
     HEAP32[(546208)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(546192)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (546492 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $129 = ((($124)) + 16|0);
     $130 = HEAP32[$129>>2]|0;
     $not$3$i = ($130|0)==(0|0);
     $$sink14$i = $not$3$i&1;
     $131 = (((($124)) + 16|0) + ($$sink14$i<<2)|0);
     $132 = HEAP32[$131>>2]|0;
     $133 = ($132|0)==(0|0);
     if ($133) {
      $$0172$lcssa$i = $124;$$0173$lcssa$i = $128;
     } else {
      $$01726$i = $124;$$01735$i = $128;$135 = $132;
      while(1) {
       $134 = ((($135)) + 4|0);
       $136 = HEAP32[$134>>2]|0;
       $137 = $136 & -8;
       $138 = (($137) - ($6))|0;
       $139 = ($138>>>0)<($$01735$i>>>0);
       $$$0173$i = $139 ? $138 : $$01735$i;
       $$$0172$i = $139 ? $135 : $$01726$i;
       $140 = ((($135)) + 16|0);
       $141 = HEAP32[$140>>2]|0;
       $not$$i = ($141|0)==(0|0);
       $$sink1$i = $not$$i&1;
       $142 = (((($135)) + 16|0) + ($$sink1$i<<2)|0);
       $143 = HEAP32[$142>>2]|0;
       $144 = ($143|0)==(0|0);
       if ($144) {
        $$0172$lcssa$i = $$$0172$i;$$0173$lcssa$i = $$$0173$i;
        break;
       } else {
        $$01726$i = $$$0172$i;$$01735$i = $$$0173$i;$135 = $143;
       }
      }
     }
     $145 = (($$0172$lcssa$i) + ($6)|0);
     $146 = ($$0172$lcssa$i>>>0)<($145>>>0);
     if ($146) {
      $147 = ((($$0172$lcssa$i)) + 24|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ((($$0172$lcssa$i)) + 12|0);
      $150 = HEAP32[$149>>2]|0;
      $151 = ($150|0)==($$0172$lcssa$i|0);
      do {
       if ($151) {
        $156 = ((($$0172$lcssa$i)) + 20|0);
        $157 = HEAP32[$156>>2]|0;
        $158 = ($157|0)==(0|0);
        if ($158) {
         $159 = ((($$0172$lcssa$i)) + 16|0);
         $160 = HEAP32[$159>>2]|0;
         $161 = ($160|0)==(0|0);
         if ($161) {
          $$3$i = 0;
          break;
         } else {
          $$1176$i = $160;$$1178$i = $159;
         }
        } else {
         $$1176$i = $157;$$1178$i = $156;
        }
        while(1) {
         $162 = ((($$1176$i)) + 20|0);
         $163 = HEAP32[$162>>2]|0;
         $164 = ($163|0)==(0|0);
         if (!($164)) {
          $$1176$i = $163;$$1178$i = $162;
          continue;
         }
         $165 = ((($$1176$i)) + 16|0);
         $166 = HEAP32[$165>>2]|0;
         $167 = ($166|0)==(0|0);
         if ($167) {
          break;
         } else {
          $$1176$i = $166;$$1178$i = $165;
         }
        }
        HEAP32[$$1178$i>>2] = 0;
        $$3$i = $$1176$i;
       } else {
        $152 = ((($$0172$lcssa$i)) + 8|0);
        $153 = HEAP32[$152>>2]|0;
        $154 = ((($153)) + 12|0);
        HEAP32[$154>>2] = $150;
        $155 = ((($150)) + 8|0);
        HEAP32[$155>>2] = $153;
        $$3$i = $150;
       }
      } while(0);
      $168 = ($148|0)==(0|0);
      do {
       if (!($168)) {
        $169 = ((($$0172$lcssa$i)) + 28|0);
        $170 = HEAP32[$169>>2]|0;
        $171 = (546492 + ($170<<2)|0);
        $172 = HEAP32[$171>>2]|0;
        $173 = ($$0172$lcssa$i|0)==($172|0);
        if ($173) {
         HEAP32[$171>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $174 = 1 << $170;
          $175 = $174 ^ -1;
          $176 = $98 & $175;
          HEAP32[(546192)>>2] = $176;
          break;
         }
        } else {
         $177 = ((($148)) + 16|0);
         $178 = HEAP32[$177>>2]|0;
         $not$1$i = ($178|0)!=($$0172$lcssa$i|0);
         $$sink2$i = $not$1$i&1;
         $179 = (((($148)) + 16|0) + ($$sink2$i<<2)|0);
         HEAP32[$179>>2] = $$3$i;
         $180 = ($$3$i|0)==(0|0);
         if ($180) {
          break;
         }
        }
        $181 = ((($$3$i)) + 24|0);
        HEAP32[$181>>2] = $148;
        $182 = ((($$0172$lcssa$i)) + 16|0);
        $183 = HEAP32[$182>>2]|0;
        $184 = ($183|0)==(0|0);
        if (!($184)) {
         $185 = ((($$3$i)) + 16|0);
         HEAP32[$185>>2] = $183;
         $186 = ((($183)) + 24|0);
         HEAP32[$186>>2] = $$3$i;
        }
        $187 = ((($$0172$lcssa$i)) + 20|0);
        $188 = HEAP32[$187>>2]|0;
        $189 = ($188|0)==(0|0);
        if (!($189)) {
         $190 = ((($$3$i)) + 20|0);
         HEAP32[$190>>2] = $188;
         $191 = ((($188)) + 24|0);
         HEAP32[$191>>2] = $$3$i;
        }
       }
      } while(0);
      $192 = ($$0173$lcssa$i>>>0)<(16);
      if ($192) {
       $193 = (($$0173$lcssa$i) + ($6))|0;
       $194 = $193 | 3;
       $195 = ((($$0172$lcssa$i)) + 4|0);
       HEAP32[$195>>2] = $194;
       $196 = (($$0172$lcssa$i) + ($193)|0);
       $197 = ((($196)) + 4|0);
       $198 = HEAP32[$197>>2]|0;
       $199 = $198 | 1;
       HEAP32[$197>>2] = $199;
      } else {
       $200 = $6 | 3;
       $201 = ((($$0172$lcssa$i)) + 4|0);
       HEAP32[$201>>2] = $200;
       $202 = $$0173$lcssa$i | 1;
       $203 = ((($145)) + 4|0);
       HEAP32[$203>>2] = $202;
       $204 = (($145) + ($$0173$lcssa$i)|0);
       HEAP32[$204>>2] = $$0173$lcssa$i;
       $205 = ($33|0)==(0);
       if (!($205)) {
        $206 = HEAP32[(546208)>>2]|0;
        $207 = $33 >>> 3;
        $208 = $207 << 1;
        $209 = (546228 + ($208<<2)|0);
        $210 = 1 << $207;
        $211 = $8 & $210;
        $212 = ($211|0)==(0);
        if ($212) {
         $213 = $8 | $210;
         HEAP32[136547] = $213;
         $$pre$i = ((($209)) + 8|0);
         $$0$i = $209;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $214 = ((($209)) + 8|0);
         $215 = HEAP32[$214>>2]|0;
         $$0$i = $215;$$pre$phi$iZ2D = $214;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $206;
        $216 = ((($$0$i)) + 12|0);
        HEAP32[$216>>2] = $206;
        $217 = ((($206)) + 8|0);
        HEAP32[$217>>2] = $$0$i;
        $218 = ((($206)) + 12|0);
        HEAP32[$218>>2] = $209;
       }
       HEAP32[(546196)>>2] = $$0173$lcssa$i;
       HEAP32[(546208)>>2] = $145;
      }
      $219 = ((($$0172$lcssa$i)) + 8|0);
      $$0 = $219;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $220 = ($0>>>0)>(4294967231);
   if ($220) {
    $$0192 = -1;
   } else {
    $221 = (($0) + 11)|0;
    $222 = $221 & -8;
    $223 = HEAP32[(546192)>>2]|0;
    $224 = ($223|0)==(0);
    if ($224) {
     $$0192 = $222;
    } else {
     $225 = (0 - ($222))|0;
     $226 = $221 >>> 8;
     $227 = ($226|0)==(0);
     if ($227) {
      $$0336$i = 0;
     } else {
      $228 = ($222>>>0)>(16777215);
      if ($228) {
       $$0336$i = 31;
      } else {
       $229 = (($226) + 1048320)|0;
       $230 = $229 >>> 16;
       $231 = $230 & 8;
       $232 = $226 << $231;
       $233 = (($232) + 520192)|0;
       $234 = $233 >>> 16;
       $235 = $234 & 4;
       $236 = $235 | $231;
       $237 = $232 << $235;
       $238 = (($237) + 245760)|0;
       $239 = $238 >>> 16;
       $240 = $239 & 2;
       $241 = $236 | $240;
       $242 = (14 - ($241))|0;
       $243 = $237 << $240;
       $244 = $243 >>> 15;
       $245 = (($242) + ($244))|0;
       $246 = $245 << 1;
       $247 = (($245) + 7)|0;
       $248 = $222 >>> $247;
       $249 = $248 & 1;
       $250 = $249 | $246;
       $$0336$i = $250;
      }
     }
     $251 = (546492 + ($$0336$i<<2)|0);
     $252 = HEAP32[$251>>2]|0;
     $253 = ($252|0)==(0|0);
     L74: do {
      if ($253) {
       $$2333$i = 0;$$3$i200 = 0;$$3328$i = $225;
       label = 57;
      } else {
       $254 = ($$0336$i|0)==(31);
       $255 = $$0336$i >>> 1;
       $256 = (25 - ($255))|0;
       $257 = $254 ? 0 : $256;
       $258 = $222 << $257;
       $$0320$i = 0;$$0325$i = $225;$$0331$i = $252;$$0337$i = $258;$$0340$i = 0;
       while(1) {
        $259 = ((($$0331$i)) + 4|0);
        $260 = HEAP32[$259>>2]|0;
        $261 = $260 & -8;
        $262 = (($261) - ($222))|0;
        $263 = ($262>>>0)<($$0325$i>>>0);
        if ($263) {
         $264 = ($262|0)==(0);
         if ($264) {
          $$411$i = $$0331$i;$$432910$i = 0;$$43359$i = $$0331$i;
          label = 61;
          break L74;
         } else {
          $$1321$i = $$0331$i;$$1326$i = $262;
         }
        } else {
         $$1321$i = $$0320$i;$$1326$i = $$0325$i;
        }
        $265 = ((($$0331$i)) + 20|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = $$0337$i >>> 31;
        $268 = (((($$0331$i)) + 16|0) + ($267<<2)|0);
        $269 = HEAP32[$268>>2]|0;
        $270 = ($266|0)==(0|0);
        $271 = ($266|0)==($269|0);
        $or$cond2$i199 = $270 | $271;
        $$1341$i = $or$cond2$i199 ? $$0340$i : $266;
        $272 = ($269|0)==(0|0);
        $not$5$i = $272 ^ 1;
        $273 = $not$5$i&1;
        $$0337$$i = $$0337$i << $273;
        if ($272) {
         $$2333$i = $$1341$i;$$3$i200 = $$1321$i;$$3328$i = $$1326$i;
         label = 57;
         break;
        } else {
         $$0320$i = $$1321$i;$$0325$i = $$1326$i;$$0331$i = $269;$$0337$i = $$0337$$i;$$0340$i = $$1341$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 57) {
      $274 = ($$2333$i|0)==(0|0);
      $275 = ($$3$i200|0)==(0|0);
      $or$cond$i201 = $274 & $275;
      if ($or$cond$i201) {
       $276 = 2 << $$0336$i;
       $277 = (0 - ($276))|0;
       $278 = $276 | $277;
       $279 = $223 & $278;
       $280 = ($279|0)==(0);
       if ($280) {
        $$0192 = $222;
        break;
       }
       $281 = (0 - ($279))|0;
       $282 = $279 & $281;
       $283 = (($282) + -1)|0;
       $284 = $283 >>> 12;
       $285 = $284 & 16;
       $286 = $283 >>> $285;
       $287 = $286 >>> 5;
       $288 = $287 & 8;
       $289 = $288 | $285;
       $290 = $286 >>> $288;
       $291 = $290 >>> 2;
       $292 = $291 & 4;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 2;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = $298 >>> 1;
       $300 = $299 & 1;
       $301 = $297 | $300;
       $302 = $298 >>> $300;
       $303 = (($301) + ($302))|0;
       $304 = (546492 + ($303<<2)|0);
       $305 = HEAP32[$304>>2]|0;
       $$4$ph$i = 0;$$4335$ph$i = $305;
      } else {
       $$4$ph$i = $$3$i200;$$4335$ph$i = $$2333$i;
      }
      $306 = ($$4335$ph$i|0)==(0|0);
      if ($306) {
       $$4$lcssa$i = $$4$ph$i;$$4329$lcssa$i = $$3328$i;
      } else {
       $$411$i = $$4$ph$i;$$432910$i = $$3328$i;$$43359$i = $$4335$ph$i;
       label = 61;
      }
     }
     if ((label|0) == 61) {
      while(1) {
       label = 0;
       $307 = ((($$43359$i)) + 4|0);
       $308 = HEAP32[$307>>2]|0;
       $309 = $308 & -8;
       $310 = (($309) - ($222))|0;
       $311 = ($310>>>0)<($$432910$i>>>0);
       $$$4329$i = $311 ? $310 : $$432910$i;
       $$4335$$4$i = $311 ? $$43359$i : $$411$i;
       $312 = ((($$43359$i)) + 16|0);
       $313 = HEAP32[$312>>2]|0;
       $not$1$i203 = ($313|0)==(0|0);
       $$sink2$i204 = $not$1$i203&1;
       $314 = (((($$43359$i)) + 16|0) + ($$sink2$i204<<2)|0);
       $315 = HEAP32[$314>>2]|0;
       $316 = ($315|0)==(0|0);
       if ($316) {
        $$4$lcssa$i = $$4335$$4$i;$$4329$lcssa$i = $$$4329$i;
        break;
       } else {
        $$411$i = $$4335$$4$i;$$432910$i = $$$4329$i;$$43359$i = $315;
        label = 61;
       }
      }
     }
     $317 = ($$4$lcssa$i|0)==(0|0);
     if ($317) {
      $$0192 = $222;
     } else {
      $318 = HEAP32[(546196)>>2]|0;
      $319 = (($318) - ($222))|0;
      $320 = ($$4329$lcssa$i>>>0)<($319>>>0);
      if ($320) {
       $321 = (($$4$lcssa$i) + ($222)|0);
       $322 = ($$4$lcssa$i>>>0)<($321>>>0);
       if (!($322)) {
        $$0 = 0;
        STACKTOP = sp;return ($$0|0);
       }
       $323 = ((($$4$lcssa$i)) + 24|0);
       $324 = HEAP32[$323>>2]|0;
       $325 = ((($$4$lcssa$i)) + 12|0);
       $326 = HEAP32[$325>>2]|0;
       $327 = ($326|0)==($$4$lcssa$i|0);
       do {
        if ($327) {
         $332 = ((($$4$lcssa$i)) + 20|0);
         $333 = HEAP32[$332>>2]|0;
         $334 = ($333|0)==(0|0);
         if ($334) {
          $335 = ((($$4$lcssa$i)) + 16|0);
          $336 = HEAP32[$335>>2]|0;
          $337 = ($336|0)==(0|0);
          if ($337) {
           $$3349$i = 0;
           break;
          } else {
           $$1347$i = $336;$$1351$i = $335;
          }
         } else {
          $$1347$i = $333;$$1351$i = $332;
         }
         while(1) {
          $338 = ((($$1347$i)) + 20|0);
          $339 = HEAP32[$338>>2]|0;
          $340 = ($339|0)==(0|0);
          if (!($340)) {
           $$1347$i = $339;$$1351$i = $338;
           continue;
          }
          $341 = ((($$1347$i)) + 16|0);
          $342 = HEAP32[$341>>2]|0;
          $343 = ($342|0)==(0|0);
          if ($343) {
           break;
          } else {
           $$1347$i = $342;$$1351$i = $341;
          }
         }
         HEAP32[$$1351$i>>2] = 0;
         $$3349$i = $$1347$i;
        } else {
         $328 = ((($$4$lcssa$i)) + 8|0);
         $329 = HEAP32[$328>>2]|0;
         $330 = ((($329)) + 12|0);
         HEAP32[$330>>2] = $326;
         $331 = ((($326)) + 8|0);
         HEAP32[$331>>2] = $329;
         $$3349$i = $326;
        }
       } while(0);
       $344 = ($324|0)==(0|0);
       do {
        if ($344) {
         $426 = $223;
        } else {
         $345 = ((($$4$lcssa$i)) + 28|0);
         $346 = HEAP32[$345>>2]|0;
         $347 = (546492 + ($346<<2)|0);
         $348 = HEAP32[$347>>2]|0;
         $349 = ($$4$lcssa$i|0)==($348|0);
         if ($349) {
          HEAP32[$347>>2] = $$3349$i;
          $cond$i208 = ($$3349$i|0)==(0|0);
          if ($cond$i208) {
           $350 = 1 << $346;
           $351 = $350 ^ -1;
           $352 = $223 & $351;
           HEAP32[(546192)>>2] = $352;
           $426 = $352;
           break;
          }
         } else {
          $353 = ((($324)) + 16|0);
          $354 = HEAP32[$353>>2]|0;
          $not$$i209 = ($354|0)!=($$4$lcssa$i|0);
          $$sink3$i = $not$$i209&1;
          $355 = (((($324)) + 16|0) + ($$sink3$i<<2)|0);
          HEAP32[$355>>2] = $$3349$i;
          $356 = ($$3349$i|0)==(0|0);
          if ($356) {
           $426 = $223;
           break;
          }
         }
         $357 = ((($$3349$i)) + 24|0);
         HEAP32[$357>>2] = $324;
         $358 = ((($$4$lcssa$i)) + 16|0);
         $359 = HEAP32[$358>>2]|0;
         $360 = ($359|0)==(0|0);
         if (!($360)) {
          $361 = ((($$3349$i)) + 16|0);
          HEAP32[$361>>2] = $359;
          $362 = ((($359)) + 24|0);
          HEAP32[$362>>2] = $$3349$i;
         }
         $363 = ((($$4$lcssa$i)) + 20|0);
         $364 = HEAP32[$363>>2]|0;
         $365 = ($364|0)==(0|0);
         if ($365) {
          $426 = $223;
         } else {
          $366 = ((($$3349$i)) + 20|0);
          HEAP32[$366>>2] = $364;
          $367 = ((($364)) + 24|0);
          HEAP32[$367>>2] = $$3349$i;
          $426 = $223;
         }
        }
       } while(0);
       $368 = ($$4329$lcssa$i>>>0)<(16);
       do {
        if ($368) {
         $369 = (($$4329$lcssa$i) + ($222))|0;
         $370 = $369 | 3;
         $371 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$371>>2] = $370;
         $372 = (($$4$lcssa$i) + ($369)|0);
         $373 = ((($372)) + 4|0);
         $374 = HEAP32[$373>>2]|0;
         $375 = $374 | 1;
         HEAP32[$373>>2] = $375;
        } else {
         $376 = $222 | 3;
         $377 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$377>>2] = $376;
         $378 = $$4329$lcssa$i | 1;
         $379 = ((($321)) + 4|0);
         HEAP32[$379>>2] = $378;
         $380 = (($321) + ($$4329$lcssa$i)|0);
         HEAP32[$380>>2] = $$4329$lcssa$i;
         $381 = $$4329$lcssa$i >>> 3;
         $382 = ($$4329$lcssa$i>>>0)<(256);
         if ($382) {
          $383 = $381 << 1;
          $384 = (546228 + ($383<<2)|0);
          $385 = HEAP32[136547]|0;
          $386 = 1 << $381;
          $387 = $385 & $386;
          $388 = ($387|0)==(0);
          if ($388) {
           $389 = $385 | $386;
           HEAP32[136547] = $389;
           $$pre$i210 = ((($384)) + 8|0);
           $$0345$i = $384;$$pre$phi$i211Z2D = $$pre$i210;
          } else {
           $390 = ((($384)) + 8|0);
           $391 = HEAP32[$390>>2]|0;
           $$0345$i = $391;$$pre$phi$i211Z2D = $390;
          }
          HEAP32[$$pre$phi$i211Z2D>>2] = $321;
          $392 = ((($$0345$i)) + 12|0);
          HEAP32[$392>>2] = $321;
          $393 = ((($321)) + 8|0);
          HEAP32[$393>>2] = $$0345$i;
          $394 = ((($321)) + 12|0);
          HEAP32[$394>>2] = $384;
          break;
         }
         $395 = $$4329$lcssa$i >>> 8;
         $396 = ($395|0)==(0);
         if ($396) {
          $$0339$i = 0;
         } else {
          $397 = ($$4329$lcssa$i>>>0)>(16777215);
          if ($397) {
           $$0339$i = 31;
          } else {
           $398 = (($395) + 1048320)|0;
           $399 = $398 >>> 16;
           $400 = $399 & 8;
           $401 = $395 << $400;
           $402 = (($401) + 520192)|0;
           $403 = $402 >>> 16;
           $404 = $403 & 4;
           $405 = $404 | $400;
           $406 = $401 << $404;
           $407 = (($406) + 245760)|0;
           $408 = $407 >>> 16;
           $409 = $408 & 2;
           $410 = $405 | $409;
           $411 = (14 - ($410))|0;
           $412 = $406 << $409;
           $413 = $412 >>> 15;
           $414 = (($411) + ($413))|0;
           $415 = $414 << 1;
           $416 = (($414) + 7)|0;
           $417 = $$4329$lcssa$i >>> $416;
           $418 = $417 & 1;
           $419 = $418 | $415;
           $$0339$i = $419;
          }
         }
         $420 = (546492 + ($$0339$i<<2)|0);
         $421 = ((($321)) + 28|0);
         HEAP32[$421>>2] = $$0339$i;
         $422 = ((($321)) + 16|0);
         $423 = ((($422)) + 4|0);
         HEAP32[$423>>2] = 0;
         HEAP32[$422>>2] = 0;
         $424 = 1 << $$0339$i;
         $425 = $426 & $424;
         $427 = ($425|0)==(0);
         if ($427) {
          $428 = $426 | $424;
          HEAP32[(546192)>>2] = $428;
          HEAP32[$420>>2] = $321;
          $429 = ((($321)) + 24|0);
          HEAP32[$429>>2] = $420;
          $430 = ((($321)) + 12|0);
          HEAP32[$430>>2] = $321;
          $431 = ((($321)) + 8|0);
          HEAP32[$431>>2] = $321;
          break;
         }
         $432 = HEAP32[$420>>2]|0;
         $433 = ($$0339$i|0)==(31);
         $434 = $$0339$i >>> 1;
         $435 = (25 - ($434))|0;
         $436 = $433 ? 0 : $435;
         $437 = $$4329$lcssa$i << $436;
         $$0322$i = $437;$$0323$i = $432;
         while(1) {
          $438 = ((($$0323$i)) + 4|0);
          $439 = HEAP32[$438>>2]|0;
          $440 = $439 & -8;
          $441 = ($440|0)==($$4329$lcssa$i|0);
          if ($441) {
           label = 97;
           break;
          }
          $442 = $$0322$i >>> 31;
          $443 = (((($$0323$i)) + 16|0) + ($442<<2)|0);
          $444 = $$0322$i << 1;
          $445 = HEAP32[$443>>2]|0;
          $446 = ($445|0)==(0|0);
          if ($446) {
           label = 96;
           break;
          } else {
           $$0322$i = $444;$$0323$i = $445;
          }
         }
         if ((label|0) == 96) {
          HEAP32[$443>>2] = $321;
          $447 = ((($321)) + 24|0);
          HEAP32[$447>>2] = $$0323$i;
          $448 = ((($321)) + 12|0);
          HEAP32[$448>>2] = $321;
          $449 = ((($321)) + 8|0);
          HEAP32[$449>>2] = $321;
          break;
         }
         else if ((label|0) == 97) {
          $450 = ((($$0323$i)) + 8|0);
          $451 = HEAP32[$450>>2]|0;
          $452 = ((($451)) + 12|0);
          HEAP32[$452>>2] = $321;
          HEAP32[$450>>2] = $321;
          $453 = ((($321)) + 8|0);
          HEAP32[$453>>2] = $451;
          $454 = ((($321)) + 12|0);
          HEAP32[$454>>2] = $$0323$i;
          $455 = ((($321)) + 24|0);
          HEAP32[$455>>2] = 0;
          break;
         }
        }
       } while(0);
       $456 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $456;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0192 = $222;
      }
     }
    }
   }
  }
 } while(0);
 $457 = HEAP32[(546196)>>2]|0;
 $458 = ($457>>>0)<($$0192>>>0);
 if (!($458)) {
  $459 = (($457) - ($$0192))|0;
  $460 = HEAP32[(546208)>>2]|0;
  $461 = ($459>>>0)>(15);
  if ($461) {
   $462 = (($460) + ($$0192)|0);
   HEAP32[(546208)>>2] = $462;
   HEAP32[(546196)>>2] = $459;
   $463 = $459 | 1;
   $464 = ((($462)) + 4|0);
   HEAP32[$464>>2] = $463;
   $465 = (($462) + ($459)|0);
   HEAP32[$465>>2] = $459;
   $466 = $$0192 | 3;
   $467 = ((($460)) + 4|0);
   HEAP32[$467>>2] = $466;
  } else {
   HEAP32[(546196)>>2] = 0;
   HEAP32[(546208)>>2] = 0;
   $468 = $457 | 3;
   $469 = ((($460)) + 4|0);
   HEAP32[$469>>2] = $468;
   $470 = (($460) + ($457)|0);
   $471 = ((($470)) + 4|0);
   $472 = HEAP32[$471>>2]|0;
   $473 = $472 | 1;
   HEAP32[$471>>2] = $473;
  }
  $474 = ((($460)) + 8|0);
  $$0 = $474;
  STACKTOP = sp;return ($$0|0);
 }
 $475 = HEAP32[(546200)>>2]|0;
 $476 = ($475>>>0)>($$0192>>>0);
 if ($476) {
  $477 = (($475) - ($$0192))|0;
  HEAP32[(546200)>>2] = $477;
  $478 = HEAP32[(546212)>>2]|0;
  $479 = (($478) + ($$0192)|0);
  HEAP32[(546212)>>2] = $479;
  $480 = $477 | 1;
  $481 = ((($479)) + 4|0);
  HEAP32[$481>>2] = $480;
  $482 = $$0192 | 3;
  $483 = ((($478)) + 4|0);
  HEAP32[$483>>2] = $482;
  $484 = ((($478)) + 8|0);
  $$0 = $484;
  STACKTOP = sp;return ($$0|0);
 }
 $485 = HEAP32[136665]|0;
 $486 = ($485|0)==(0);
 if ($486) {
  HEAP32[(546668)>>2] = 4096;
  HEAP32[(546664)>>2] = 4096;
  HEAP32[(546672)>>2] = -1;
  HEAP32[(546676)>>2] = -1;
  HEAP32[(546680)>>2] = 0;
  HEAP32[(546632)>>2] = 0;
  $487 = $1;
  $488 = $487 & -16;
  $489 = $488 ^ 1431655768;
  HEAP32[$1>>2] = $489;
  HEAP32[136665] = $489;
  $493 = 4096;
 } else {
  $$pre$i195 = HEAP32[(546668)>>2]|0;
  $493 = $$pre$i195;
 }
 $490 = (($$0192) + 48)|0;
 $491 = (($$0192) + 47)|0;
 $492 = (($493) + ($491))|0;
 $494 = (0 - ($493))|0;
 $495 = $492 & $494;
 $496 = ($495>>>0)>($$0192>>>0);
 if (!($496)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $497 = HEAP32[(546628)>>2]|0;
 $498 = ($497|0)==(0);
 if (!($498)) {
  $499 = HEAP32[(546620)>>2]|0;
  $500 = (($499) + ($495))|0;
  $501 = ($500>>>0)<=($499>>>0);
  $502 = ($500>>>0)>($497>>>0);
  $or$cond1$i = $501 | $502;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $503 = HEAP32[(546632)>>2]|0;
 $504 = $503 & 4;
 $505 = ($504|0)==(0);
 L167: do {
  if ($505) {
   $506 = HEAP32[(546212)>>2]|0;
   $507 = ($506|0)==(0|0);
   L169: do {
    if ($507) {
     label = 118;
    } else {
     $$0$i20$i = (546636);
     while(1) {
      $508 = HEAP32[$$0$i20$i>>2]|0;
      $509 = ($508>>>0)>($506>>>0);
      if (!($509)) {
       $510 = ((($$0$i20$i)) + 4|0);
       $511 = HEAP32[$510>>2]|0;
       $512 = (($508) + ($511)|0);
       $513 = ($512>>>0)>($506>>>0);
       if ($513) {
        break;
       }
      }
      $514 = ((($$0$i20$i)) + 8|0);
      $515 = HEAP32[$514>>2]|0;
      $516 = ($515|0)==(0|0);
      if ($516) {
       label = 118;
       break L169;
      } else {
       $$0$i20$i = $515;
      }
     }
     $539 = (($492) - ($475))|0;
     $540 = $539 & $494;
     $541 = ($540>>>0)<(2147483647);
     if ($541) {
      $542 = (_sbrk(($540|0))|0);
      $543 = HEAP32[$$0$i20$i>>2]|0;
      $544 = HEAP32[$510>>2]|0;
      $545 = (($543) + ($544)|0);
      $546 = ($542|0)==($545|0);
      if ($546) {
       $547 = ($542|0)==((-1)|0);
       if ($547) {
        $$2234243136$i = $540;
       } else {
        $$723947$i = $540;$$748$i = $542;
        label = 135;
        break L167;
       }
      } else {
       $$2247$ph$i = $542;$$2253$ph$i = $540;
       label = 126;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 118) {
     $517 = (_sbrk(0)|0);
     $518 = ($517|0)==((-1)|0);
     if ($518) {
      $$2234243136$i = 0;
     } else {
      $519 = $517;
      $520 = HEAP32[(546664)>>2]|0;
      $521 = (($520) + -1)|0;
      $522 = $521 & $519;
      $523 = ($522|0)==(0);
      $524 = (($521) + ($519))|0;
      $525 = (0 - ($520))|0;
      $526 = $524 & $525;
      $527 = (($526) - ($519))|0;
      $528 = $523 ? 0 : $527;
      $$$i = (($528) + ($495))|0;
      $529 = HEAP32[(546620)>>2]|0;
      $530 = (($$$i) + ($529))|0;
      $531 = ($$$i>>>0)>($$0192>>>0);
      $532 = ($$$i>>>0)<(2147483647);
      $or$cond$i = $531 & $532;
      if ($or$cond$i) {
       $533 = HEAP32[(546628)>>2]|0;
       $534 = ($533|0)==(0);
       if (!($534)) {
        $535 = ($530>>>0)<=($529>>>0);
        $536 = ($530>>>0)>($533>>>0);
        $or$cond2$i = $535 | $536;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $537 = (_sbrk(($$$i|0))|0);
       $538 = ($537|0)==($517|0);
       if ($538) {
        $$723947$i = $$$i;$$748$i = $517;
        label = 135;
        break L167;
       } else {
        $$2247$ph$i = $537;$$2253$ph$i = $$$i;
        label = 126;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 126) {
     $548 = (0 - ($$2253$ph$i))|0;
     $549 = ($$2247$ph$i|0)!=((-1)|0);
     $550 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $550 & $549;
     $551 = ($490>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $551 & $or$cond7$i;
     if (!($or$cond10$i)) {
      $561 = ($$2247$ph$i|0)==((-1)|0);
      if ($561) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 135;
       break L167;
      }
     }
     $552 = HEAP32[(546668)>>2]|0;
     $553 = (($491) - ($$2253$ph$i))|0;
     $554 = (($553) + ($552))|0;
     $555 = (0 - ($552))|0;
     $556 = $554 & $555;
     $557 = ($556>>>0)<(2147483647);
     if (!($557)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 135;
      break L167;
     }
     $558 = (_sbrk(($556|0))|0);
     $559 = ($558|0)==((-1)|0);
     if ($559) {
      (_sbrk(($548|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $560 = (($556) + ($$2253$ph$i))|0;
      $$723947$i = $560;$$748$i = $$2247$ph$i;
      label = 135;
      break L167;
     }
    }
   } while(0);
   $562 = HEAP32[(546632)>>2]|0;
   $563 = $562 | 4;
   HEAP32[(546632)>>2] = $563;
   $$4236$i = $$2234243136$i;
   label = 133;
  } else {
   $$4236$i = 0;
   label = 133;
  }
 } while(0);
 if ((label|0) == 133) {
  $564 = ($495>>>0)<(2147483647);
  if ($564) {
   $565 = (_sbrk(($495|0))|0);
   $566 = (_sbrk(0)|0);
   $567 = ($565|0)!=((-1)|0);
   $568 = ($566|0)!=((-1)|0);
   $or$cond5$i = $567 & $568;
   $569 = ($565>>>0)<($566>>>0);
   $or$cond11$i = $569 & $or$cond5$i;
   $570 = $566;
   $571 = $565;
   $572 = (($570) - ($571))|0;
   $573 = (($$0192) + 40)|0;
   $574 = ($572>>>0)>($573>>>0);
   $$$4236$i = $574 ? $572 : $$4236$i;
   $or$cond11$not$i = $or$cond11$i ^ 1;
   $575 = ($565|0)==((-1)|0);
   $not$$i197 = $574 ^ 1;
   $576 = $575 | $not$$i197;
   $or$cond49$i = $576 | $or$cond11$not$i;
   if (!($or$cond49$i)) {
    $$723947$i = $$$4236$i;$$748$i = $565;
    label = 135;
   }
  }
 }
 if ((label|0) == 135) {
  $577 = HEAP32[(546620)>>2]|0;
  $578 = (($577) + ($$723947$i))|0;
  HEAP32[(546620)>>2] = $578;
  $579 = HEAP32[(546624)>>2]|0;
  $580 = ($578>>>0)>($579>>>0);
  if ($580) {
   HEAP32[(546624)>>2] = $578;
  }
  $581 = HEAP32[(546212)>>2]|0;
  $582 = ($581|0)==(0|0);
  do {
   if ($582) {
    $583 = HEAP32[(546204)>>2]|0;
    $584 = ($583|0)==(0|0);
    $585 = ($$748$i>>>0)<($583>>>0);
    $or$cond12$i = $584 | $585;
    if ($or$cond12$i) {
     HEAP32[(546204)>>2] = $$748$i;
    }
    HEAP32[(546636)>>2] = $$748$i;
    HEAP32[(546640)>>2] = $$723947$i;
    HEAP32[(546648)>>2] = 0;
    $586 = HEAP32[136665]|0;
    HEAP32[(546224)>>2] = $586;
    HEAP32[(546220)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $587 = $$01$i$i << 1;
     $588 = (546228 + ($587<<2)|0);
     $589 = ((($588)) + 12|0);
     HEAP32[$589>>2] = $588;
     $590 = ((($588)) + 8|0);
     HEAP32[$590>>2] = $588;
     $591 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($591|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $591;
     }
    }
    $592 = (($$723947$i) + -40)|0;
    $593 = ((($$748$i)) + 8|0);
    $594 = $593;
    $595 = $594 & 7;
    $596 = ($595|0)==(0);
    $597 = (0 - ($594))|0;
    $598 = $597 & 7;
    $599 = $596 ? 0 : $598;
    $600 = (($$748$i) + ($599)|0);
    $601 = (($592) - ($599))|0;
    HEAP32[(546212)>>2] = $600;
    HEAP32[(546200)>>2] = $601;
    $602 = $601 | 1;
    $603 = ((($600)) + 4|0);
    HEAP32[$603>>2] = $602;
    $604 = (($600) + ($601)|0);
    $605 = ((($604)) + 4|0);
    HEAP32[$605>>2] = 40;
    $606 = HEAP32[(546676)>>2]|0;
    HEAP32[(546216)>>2] = $606;
   } else {
    $$024370$i = (546636);
    while(1) {
     $607 = HEAP32[$$024370$i>>2]|0;
     $608 = ((($$024370$i)) + 4|0);
     $609 = HEAP32[$608>>2]|0;
     $610 = (($607) + ($609)|0);
     $611 = ($$748$i|0)==($610|0);
     if ($611) {
      label = 145;
      break;
     }
     $612 = ((($$024370$i)) + 8|0);
     $613 = HEAP32[$612>>2]|0;
     $614 = ($613|0)==(0|0);
     if ($614) {
      break;
     } else {
      $$024370$i = $613;
     }
    }
    if ((label|0) == 145) {
     $615 = ((($$024370$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($581>>>0)>=($607>>>0);
      $620 = ($581>>>0)<($$748$i>>>0);
      $or$cond50$i = $620 & $619;
      if ($or$cond50$i) {
       $621 = (($609) + ($$723947$i))|0;
       HEAP32[$608>>2] = $621;
       $622 = HEAP32[(546200)>>2]|0;
       $623 = ((($581)) + 8|0);
       $624 = $623;
       $625 = $624 & 7;
       $626 = ($625|0)==(0);
       $627 = (0 - ($624))|0;
       $628 = $627 & 7;
       $629 = $626 ? 0 : $628;
       $630 = (($581) + ($629)|0);
       $631 = (($$723947$i) - ($629))|0;
       $632 = (($622) + ($631))|0;
       HEAP32[(546212)>>2] = $630;
       HEAP32[(546200)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($630)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($630) + ($632)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(546676)>>2]|0;
       HEAP32[(546216)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(546204)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(546204)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124469$i = (546636);
    while(1) {
     $641 = HEAP32[$$124469$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 153;
      break;
     }
     $643 = ((($$124469$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124469$i = $644;
     }
    }
    if ((label|0) == 153) {
     $646 = ((($$124469$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124469$i>>2] = $$748$i;
      $650 = ((($$124469$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($668|0)==($581|0);
      do {
       if ($676) {
        $677 = HEAP32[(546200)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(546200)>>2] = $678;
        HEAP32[(546212)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(546208)>>2]|0;
        $682 = ($668|0)==($681|0);
        if ($682) {
         $683 = HEAP32[(546196)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(546196)>>2] = $684;
         HEAP32[(546208)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L237: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[136547]|0;
            $703 = $702 & $701;
            HEAP32[136547] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1264$i$i = $719;$$1266$i$i = $715;
              }
             } else {
              $$1264$i$i = $717;$$1266$i$i = $716;
             }
             while(1) {
              $721 = ((($$1264$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if (!($723)) {
               $$1264$i$i = $722;$$1266$i$i = $721;
               continue;
              }
              $724 = ((($$1264$i$i)) + 16|0);
              $725 = HEAP32[$724>>2]|0;
              $726 = ($725|0)==(0|0);
              if ($726) {
               break;
              } else {
               $$1264$i$i = $725;$$1266$i$i = $724;
              }
             }
             HEAP32[$$1266$i$i>>2] = 0;
             $$3$i$i = $$1264$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (546492 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($668|0)==($731|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(546192)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(546192)>>2] = $736;
             break L237;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $not$$i$i = ($738|0)!=($668|0);
             $$sink1$i$i = $not$$i$i&1;
             $739 = (((($707)) + 16|0) + ($$sink1$i$i<<2)|0);
             HEAP32[$739>>2] = $$3$i$i;
             $740 = ($$3$i$i|0)==(0|0);
             if ($740) {
              break L237;
             }
            }
           } while(0);
           $741 = ((($$3$i$i)) + 24|0);
           HEAP32[$741>>2] = $707;
           $742 = ((($668)) + 16|0);
           $743 = HEAP32[$742>>2]|0;
           $744 = ($743|0)==(0|0);
           if (!($744)) {
            $745 = ((($$3$i$i)) + 16|0);
            HEAP32[$745>>2] = $743;
            $746 = ((($743)) + 24|0);
            HEAP32[$746>>2] = $$3$i$i;
           }
           $747 = ((($742)) + 4|0);
           $748 = HEAP32[$747>>2]|0;
           $749 = ($748|0)==(0|0);
           if ($749) {
            break;
           }
           $750 = ((($$3$i$i)) + 20|0);
           HEAP32[$750>>2] = $748;
           $751 = ((($748)) + 24|0);
           HEAP32[$751>>2] = $$3$i$i;
          }
         } while(0);
         $752 = (($668) + ($692)|0);
         $753 = (($692) + ($673))|0;
         $$0$i$i = $752;$$0260$i$i = $753;
        } else {
         $$0$i$i = $668;$$0260$i$i = $673;
        }
        $754 = ((($$0$i$i)) + 4|0);
        $755 = HEAP32[$754>>2]|0;
        $756 = $755 & -2;
        HEAP32[$754>>2] = $756;
        $757 = $$0260$i$i | 1;
        $758 = ((($672)) + 4|0);
        HEAP32[$758>>2] = $757;
        $759 = (($672) + ($$0260$i$i)|0);
        HEAP32[$759>>2] = $$0260$i$i;
        $760 = $$0260$i$i >>> 3;
        $761 = ($$0260$i$i>>>0)<(256);
        if ($761) {
         $762 = $760 << 1;
         $763 = (546228 + ($762<<2)|0);
         $764 = HEAP32[136547]|0;
         $765 = 1 << $760;
         $766 = $764 & $765;
         $767 = ($766|0)==(0);
         if ($767) {
          $768 = $764 | $765;
          HEAP32[136547] = $768;
          $$pre$i17$i = ((($763)) + 8|0);
          $$0268$i$i = $763;$$pre$phi$i18$iZ2D = $$pre$i17$i;
         } else {
          $769 = ((($763)) + 8|0);
          $770 = HEAP32[$769>>2]|0;
          $$0268$i$i = $770;$$pre$phi$i18$iZ2D = $769;
         }
         HEAP32[$$pre$phi$i18$iZ2D>>2] = $672;
         $771 = ((($$0268$i$i)) + 12|0);
         HEAP32[$771>>2] = $672;
         $772 = ((($672)) + 8|0);
         HEAP32[$772>>2] = $$0268$i$i;
         $773 = ((($672)) + 12|0);
         HEAP32[$773>>2] = $763;
         break;
        }
        $774 = $$0260$i$i >>> 8;
        $775 = ($774|0)==(0);
        do {
         if ($775) {
          $$0269$i$i = 0;
         } else {
          $776 = ($$0260$i$i>>>0)>(16777215);
          if ($776) {
           $$0269$i$i = 31;
           break;
          }
          $777 = (($774) + 1048320)|0;
          $778 = $777 >>> 16;
          $779 = $778 & 8;
          $780 = $774 << $779;
          $781 = (($780) + 520192)|0;
          $782 = $781 >>> 16;
          $783 = $782 & 4;
          $784 = $783 | $779;
          $785 = $780 << $783;
          $786 = (($785) + 245760)|0;
          $787 = $786 >>> 16;
          $788 = $787 & 2;
          $789 = $784 | $788;
          $790 = (14 - ($789))|0;
          $791 = $785 << $788;
          $792 = $791 >>> 15;
          $793 = (($790) + ($792))|0;
          $794 = $793 << 1;
          $795 = (($793) + 7)|0;
          $796 = $$0260$i$i >>> $795;
          $797 = $796 & 1;
          $798 = $797 | $794;
          $$0269$i$i = $798;
         }
        } while(0);
        $799 = (546492 + ($$0269$i$i<<2)|0);
        $800 = ((($672)) + 28|0);
        HEAP32[$800>>2] = $$0269$i$i;
        $801 = ((($672)) + 16|0);
        $802 = ((($801)) + 4|0);
        HEAP32[$802>>2] = 0;
        HEAP32[$801>>2] = 0;
        $803 = HEAP32[(546192)>>2]|0;
        $804 = 1 << $$0269$i$i;
        $805 = $803 & $804;
        $806 = ($805|0)==(0);
        if ($806) {
         $807 = $803 | $804;
         HEAP32[(546192)>>2] = $807;
         HEAP32[$799>>2] = $672;
         $808 = ((($672)) + 24|0);
         HEAP32[$808>>2] = $799;
         $809 = ((($672)) + 12|0);
         HEAP32[$809>>2] = $672;
         $810 = ((($672)) + 8|0);
         HEAP32[$810>>2] = $672;
         break;
        }
        $811 = HEAP32[$799>>2]|0;
        $812 = ($$0269$i$i|0)==(31);
        $813 = $$0269$i$i >>> 1;
        $814 = (25 - ($813))|0;
        $815 = $812 ? 0 : $814;
        $816 = $$0260$i$i << $815;
        $$0261$i$i = $816;$$0262$i$i = $811;
        while(1) {
         $817 = ((($$0262$i$i)) + 4|0);
         $818 = HEAP32[$817>>2]|0;
         $819 = $818 & -8;
         $820 = ($819|0)==($$0260$i$i|0);
         if ($820) {
          label = 194;
          break;
         }
         $821 = $$0261$i$i >>> 31;
         $822 = (((($$0262$i$i)) + 16|0) + ($821<<2)|0);
         $823 = $$0261$i$i << 1;
         $824 = HEAP32[$822>>2]|0;
         $825 = ($824|0)==(0|0);
         if ($825) {
          label = 193;
          break;
         } else {
          $$0261$i$i = $823;$$0262$i$i = $824;
         }
        }
        if ((label|0) == 193) {
         HEAP32[$822>>2] = $672;
         $826 = ((($672)) + 24|0);
         HEAP32[$826>>2] = $$0262$i$i;
         $827 = ((($672)) + 12|0);
         HEAP32[$827>>2] = $672;
         $828 = ((($672)) + 8|0);
         HEAP32[$828>>2] = $672;
         break;
        }
        else if ((label|0) == 194) {
         $829 = ((($$0262$i$i)) + 8|0);
         $830 = HEAP32[$829>>2]|0;
         $831 = ((($830)) + 12|0);
         HEAP32[$831>>2] = $672;
         HEAP32[$829>>2] = $672;
         $832 = ((($672)) + 8|0);
         HEAP32[$832>>2] = $830;
         $833 = ((($672)) + 12|0);
         HEAP32[$833>>2] = $$0262$i$i;
         $834 = ((($672)) + 24|0);
         HEAP32[$834>>2] = 0;
         break;
        }
       }
      } while(0);
      $959 = ((($660)) + 8|0);
      $$0 = $959;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (546636);
    while(1) {
     $835 = HEAP32[$$0$i$i$i>>2]|0;
     $836 = ($835>>>0)>($581>>>0);
     if (!($836)) {
      $837 = ((($$0$i$i$i)) + 4|0);
      $838 = HEAP32[$837>>2]|0;
      $839 = (($835) + ($838)|0);
      $840 = ($839>>>0)>($581>>>0);
      if ($840) {
       break;
      }
     }
     $841 = ((($$0$i$i$i)) + 8|0);
     $842 = HEAP32[$841>>2]|0;
     $$0$i$i$i = $842;
    }
    $843 = ((($839)) + -47|0);
    $844 = ((($843)) + 8|0);
    $845 = $844;
    $846 = $845 & 7;
    $847 = ($846|0)==(0);
    $848 = (0 - ($845))|0;
    $849 = $848 & 7;
    $850 = $847 ? 0 : $849;
    $851 = (($843) + ($850)|0);
    $852 = ((($581)) + 16|0);
    $853 = ($851>>>0)<($852>>>0);
    $854 = $853 ? $581 : $851;
    $855 = ((($854)) + 8|0);
    $856 = ((($854)) + 24|0);
    $857 = (($$723947$i) + -40)|0;
    $858 = ((($$748$i)) + 8|0);
    $859 = $858;
    $860 = $859 & 7;
    $861 = ($860|0)==(0);
    $862 = (0 - ($859))|0;
    $863 = $862 & 7;
    $864 = $861 ? 0 : $863;
    $865 = (($$748$i) + ($864)|0);
    $866 = (($857) - ($864))|0;
    HEAP32[(546212)>>2] = $865;
    HEAP32[(546200)>>2] = $866;
    $867 = $866 | 1;
    $868 = ((($865)) + 4|0);
    HEAP32[$868>>2] = $867;
    $869 = (($865) + ($866)|0);
    $870 = ((($869)) + 4|0);
    HEAP32[$870>>2] = 40;
    $871 = HEAP32[(546676)>>2]|0;
    HEAP32[(546216)>>2] = $871;
    $872 = ((($854)) + 4|0);
    HEAP32[$872>>2] = 27;
    ;HEAP32[$855>>2]=HEAP32[(546636)>>2]|0;HEAP32[$855+4>>2]=HEAP32[(546636)+4>>2]|0;HEAP32[$855+8>>2]=HEAP32[(546636)+8>>2]|0;HEAP32[$855+12>>2]=HEAP32[(546636)+12>>2]|0;
    HEAP32[(546636)>>2] = $$748$i;
    HEAP32[(546640)>>2] = $$723947$i;
    HEAP32[(546648)>>2] = 0;
    HEAP32[(546644)>>2] = $855;
    $874 = $856;
    while(1) {
     $873 = ((($874)) + 4|0);
     HEAP32[$873>>2] = 7;
     $875 = ((($874)) + 8|0);
     $876 = ($875>>>0)<($839>>>0);
     if ($876) {
      $874 = $873;
     } else {
      break;
     }
    }
    $877 = ($854|0)==($581|0);
    if (!($877)) {
     $878 = $854;
     $879 = $581;
     $880 = (($878) - ($879))|0;
     $881 = HEAP32[$872>>2]|0;
     $882 = $881 & -2;
     HEAP32[$872>>2] = $882;
     $883 = $880 | 1;
     $884 = ((($581)) + 4|0);
     HEAP32[$884>>2] = $883;
     HEAP32[$854>>2] = $880;
     $885 = $880 >>> 3;
     $886 = ($880>>>0)<(256);
     if ($886) {
      $887 = $885 << 1;
      $888 = (546228 + ($887<<2)|0);
      $889 = HEAP32[136547]|0;
      $890 = 1 << $885;
      $891 = $889 & $890;
      $892 = ($891|0)==(0);
      if ($892) {
       $893 = $889 | $890;
       HEAP32[136547] = $893;
       $$pre$i$i = ((($888)) + 8|0);
       $$0206$i$i = $888;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $894 = ((($888)) + 8|0);
       $895 = HEAP32[$894>>2]|0;
       $$0206$i$i = $895;$$pre$phi$i$iZ2D = $894;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $581;
      $896 = ((($$0206$i$i)) + 12|0);
      HEAP32[$896>>2] = $581;
      $897 = ((($581)) + 8|0);
      HEAP32[$897>>2] = $$0206$i$i;
      $898 = ((($581)) + 12|0);
      HEAP32[$898>>2] = $888;
      break;
     }
     $899 = $880 >>> 8;
     $900 = ($899|0)==(0);
     if ($900) {
      $$0207$i$i = 0;
     } else {
      $901 = ($880>>>0)>(16777215);
      if ($901) {
       $$0207$i$i = 31;
      } else {
       $902 = (($899) + 1048320)|0;
       $903 = $902 >>> 16;
       $904 = $903 & 8;
       $905 = $899 << $904;
       $906 = (($905) + 520192)|0;
       $907 = $906 >>> 16;
       $908 = $907 & 4;
       $909 = $908 | $904;
       $910 = $905 << $908;
       $911 = (($910) + 245760)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 2;
       $914 = $909 | $913;
       $915 = (14 - ($914))|0;
       $916 = $910 << $913;
       $917 = $916 >>> 15;
       $918 = (($915) + ($917))|0;
       $919 = $918 << 1;
       $920 = (($918) + 7)|0;
       $921 = $880 >>> $920;
       $922 = $921 & 1;
       $923 = $922 | $919;
       $$0207$i$i = $923;
      }
     }
     $924 = (546492 + ($$0207$i$i<<2)|0);
     $925 = ((($581)) + 28|0);
     HEAP32[$925>>2] = $$0207$i$i;
     $926 = ((($581)) + 20|0);
     HEAP32[$926>>2] = 0;
     HEAP32[$852>>2] = 0;
     $927 = HEAP32[(546192)>>2]|0;
     $928 = 1 << $$0207$i$i;
     $929 = $927 & $928;
     $930 = ($929|0)==(0);
     if ($930) {
      $931 = $927 | $928;
      HEAP32[(546192)>>2] = $931;
      HEAP32[$924>>2] = $581;
      $932 = ((($581)) + 24|0);
      HEAP32[$932>>2] = $924;
      $933 = ((($581)) + 12|0);
      HEAP32[$933>>2] = $581;
      $934 = ((($581)) + 8|0);
      HEAP32[$934>>2] = $581;
      break;
     }
     $935 = HEAP32[$924>>2]|0;
     $936 = ($$0207$i$i|0)==(31);
     $937 = $$0207$i$i >>> 1;
     $938 = (25 - ($937))|0;
     $939 = $936 ? 0 : $938;
     $940 = $880 << $939;
     $$0201$i$i = $940;$$0202$i$i = $935;
     while(1) {
      $941 = ((($$0202$i$i)) + 4|0);
      $942 = HEAP32[$941>>2]|0;
      $943 = $942 & -8;
      $944 = ($943|0)==($880|0);
      if ($944) {
       label = 216;
       break;
      }
      $945 = $$0201$i$i >>> 31;
      $946 = (((($$0202$i$i)) + 16|0) + ($945<<2)|0);
      $947 = $$0201$i$i << 1;
      $948 = HEAP32[$946>>2]|0;
      $949 = ($948|0)==(0|0);
      if ($949) {
       label = 215;
       break;
      } else {
       $$0201$i$i = $947;$$0202$i$i = $948;
      }
     }
     if ((label|0) == 215) {
      HEAP32[$946>>2] = $581;
      $950 = ((($581)) + 24|0);
      HEAP32[$950>>2] = $$0202$i$i;
      $951 = ((($581)) + 12|0);
      HEAP32[$951>>2] = $581;
      $952 = ((($581)) + 8|0);
      HEAP32[$952>>2] = $581;
      break;
     }
     else if ((label|0) == 216) {
      $953 = ((($$0202$i$i)) + 8|0);
      $954 = HEAP32[$953>>2]|0;
      $955 = ((($954)) + 12|0);
      HEAP32[$955>>2] = $581;
      HEAP32[$953>>2] = $581;
      $956 = ((($581)) + 8|0);
      HEAP32[$956>>2] = $954;
      $957 = ((($581)) + 12|0);
      HEAP32[$957>>2] = $$0202$i$i;
      $958 = ((($581)) + 24|0);
      HEAP32[$958>>2] = 0;
      break;
     }
    }
   }
  } while(0);
  $960 = HEAP32[(546200)>>2]|0;
  $961 = ($960>>>0)>($$0192>>>0);
  if ($961) {
   $962 = (($960) - ($$0192))|0;
   HEAP32[(546200)>>2] = $962;
   $963 = HEAP32[(546212)>>2]|0;
   $964 = (($963) + ($$0192)|0);
   HEAP32[(546212)>>2] = $964;
   $965 = $962 | 1;
   $966 = ((($964)) + 4|0);
   HEAP32[$966>>2] = $965;
   $967 = $$0192 | 3;
   $968 = ((($963)) + 4|0);
   HEAP32[$968>>2] = $967;
   $969 = ((($963)) + 8|0);
   $$0 = $969;
   STACKTOP = sp;return ($$0|0);
  }
 }
 HEAP32[(224616)>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0195$i = 0, $$0195$in$i = 0, $$0348 = 0, $$0349 = 0, $$0361 = 0, $$0368 = 0, $$1 = 0, $$1347 = 0, $$1352 = 0, $$1355 = 0, $$1363 = 0, $$1367 = 0, $$2 = 0, $$3 = 0, $$3365 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond374 = 0, $cond375 = 0, $not$ = 0, $not$370 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(546204)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(546208)>>2]|0;
   $18 = ($14|0)==($17|0);
   if ($18) {
    $78 = ((($7)) + 4|0);
    $79 = HEAP32[$78>>2]|0;
    $80 = $79 & 3;
    $81 = ($80|0)==(3);
    if (!($81)) {
     $$1 = $14;$$1347 = $15;$86 = $14;
     break;
    }
    $82 = (($14) + ($15)|0);
    $83 = ((($14)) + 4|0);
    $84 = $15 | 1;
    $85 = $79 & -2;
    HEAP32[(546196)>>2] = $15;
    HEAP32[$78>>2] = $85;
    HEAP32[$83>>2] = $84;
    HEAP32[$82>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[136547]|0;
     $29 = $28 & $27;
     HEAP32[136547] = $29;
     $$1 = $14;$$1347 = $15;$86 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1347 = $15;$86 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1352 = $45;$$1355 = $41;
      }
     } else {
      $$1352 = $43;$$1355 = $42;
     }
     while(1) {
      $47 = ((($$1352)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if (!($49)) {
       $$1352 = $48;$$1355 = $47;
       continue;
      }
      $50 = ((($$1352)) + 16|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = ($51|0)==(0|0);
      if ($52) {
       break;
      } else {
       $$1352 = $51;$$1355 = $50;
      }
     }
     HEAP32[$$1355>>2] = 0;
     $$3 = $$1352;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1347 = $15;$86 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (546492 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($14|0)==($57|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond374 = ($$3|0)==(0|0);
     if ($cond374) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(546192)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(546192)>>2] = $62;
      $$1 = $14;$$1347 = $15;$86 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $not$370 = ($64|0)!=($14|0);
     $$sink3 = $not$370&1;
     $65 = (((($33)) + 16|0) + ($$sink3<<2)|0);
     HEAP32[$65>>2] = $$3;
     $66 = ($$3|0)==(0|0);
     if ($66) {
      $$1 = $14;$$1347 = $15;$86 = $14;
      break;
     }
    }
    $67 = ((($$3)) + 24|0);
    HEAP32[$67>>2] = $33;
    $68 = ((($14)) + 16|0);
    $69 = HEAP32[$68>>2]|0;
    $70 = ($69|0)==(0|0);
    if (!($70)) {
     $71 = ((($$3)) + 16|0);
     HEAP32[$71>>2] = $69;
     $72 = ((($69)) + 24|0);
     HEAP32[$72>>2] = $$3;
    }
    $73 = ((($68)) + 4|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = ($74|0)==(0|0);
    if ($75) {
     $$1 = $14;$$1347 = $15;$86 = $14;
    } else {
     $76 = ((($$3)) + 20|0);
     HEAP32[$76>>2] = $74;
     $77 = ((($74)) + 24|0);
     HEAP32[$77>>2] = $$3;
     $$1 = $14;$$1347 = $15;$86 = $14;
    }
   }
  } else {
   $$1 = $2;$$1347 = $6;$86 = $2;
  }
 } while(0);
 $87 = ($86>>>0)<($7>>>0);
 if (!($87)) {
  return;
 }
 $88 = ((($7)) + 4|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = $89 & 1;
 $91 = ($90|0)==(0);
 if ($91) {
  return;
 }
 $92 = $89 & 2;
 $93 = ($92|0)==(0);
 if ($93) {
  $94 = HEAP32[(546212)>>2]|0;
  $95 = ($7|0)==($94|0);
  $96 = HEAP32[(546208)>>2]|0;
  if ($95) {
   $97 = HEAP32[(546200)>>2]|0;
   $98 = (($97) + ($$1347))|0;
   HEAP32[(546200)>>2] = $98;
   HEAP32[(546212)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = ($$1|0)==($96|0);
   if (!($101)) {
    return;
   }
   HEAP32[(546208)>>2] = 0;
   HEAP32[(546196)>>2] = 0;
   return;
  }
  $102 = ($7|0)==($96|0);
  if ($102) {
   $103 = HEAP32[(546196)>>2]|0;
   $104 = (($103) + ($$1347))|0;
   HEAP32[(546196)>>2] = $104;
   HEAP32[(546208)>>2] = $86;
   $105 = $104 | 1;
   $106 = ((($$1)) + 4|0);
   HEAP32[$106>>2] = $105;
   $107 = (($86) + ($104)|0);
   HEAP32[$107>>2] = $104;
   return;
  }
  $108 = $89 & -8;
  $109 = (($108) + ($$1347))|0;
  $110 = $89 >>> 3;
  $111 = ($89>>>0)<(256);
  do {
   if ($111) {
    $112 = ((($7)) + 8|0);
    $113 = HEAP32[$112>>2]|0;
    $114 = ((($7)) + 12|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ($115|0)==($113|0);
    if ($116) {
     $117 = 1 << $110;
     $118 = $117 ^ -1;
     $119 = HEAP32[136547]|0;
     $120 = $119 & $118;
     HEAP32[136547] = $120;
     break;
    } else {
     $121 = ((($113)) + 12|0);
     HEAP32[$121>>2] = $115;
     $122 = ((($115)) + 8|0);
     HEAP32[$122>>2] = $113;
     break;
    }
   } else {
    $123 = ((($7)) + 24|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((($7)) + 12|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($126|0)==($7|0);
    do {
     if ($127) {
      $132 = ((($7)) + 16|0);
      $133 = ((($132)) + 4|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = ($134|0)==(0|0);
      if ($135) {
       $136 = HEAP32[$132>>2]|0;
       $137 = ($136|0)==(0|0);
       if ($137) {
        $$3365 = 0;
        break;
       } else {
        $$1363 = $136;$$1367 = $132;
       }
      } else {
       $$1363 = $134;$$1367 = $133;
      }
      while(1) {
       $138 = ((($$1363)) + 20|0);
       $139 = HEAP32[$138>>2]|0;
       $140 = ($139|0)==(0|0);
       if (!($140)) {
        $$1363 = $139;$$1367 = $138;
        continue;
       }
       $141 = ((($$1363)) + 16|0);
       $142 = HEAP32[$141>>2]|0;
       $143 = ($142|0)==(0|0);
       if ($143) {
        break;
       } else {
        $$1363 = $142;$$1367 = $141;
       }
      }
      HEAP32[$$1367>>2] = 0;
      $$3365 = $$1363;
     } else {
      $128 = ((($7)) + 8|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = ((($129)) + 12|0);
      HEAP32[$130>>2] = $126;
      $131 = ((($126)) + 8|0);
      HEAP32[$131>>2] = $129;
      $$3365 = $126;
     }
    } while(0);
    $144 = ($124|0)==(0|0);
    if (!($144)) {
     $145 = ((($7)) + 28|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = (546492 + ($146<<2)|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($7|0)==($148|0);
     if ($149) {
      HEAP32[$147>>2] = $$3365;
      $cond375 = ($$3365|0)==(0|0);
      if ($cond375) {
       $150 = 1 << $146;
       $151 = $150 ^ -1;
       $152 = HEAP32[(546192)>>2]|0;
       $153 = $152 & $151;
       HEAP32[(546192)>>2] = $153;
       break;
      }
     } else {
      $154 = ((($124)) + 16|0);
      $155 = HEAP32[$154>>2]|0;
      $not$ = ($155|0)!=($7|0);
      $$sink5 = $not$&1;
      $156 = (((($124)) + 16|0) + ($$sink5<<2)|0);
      HEAP32[$156>>2] = $$3365;
      $157 = ($$3365|0)==(0|0);
      if ($157) {
       break;
      }
     }
     $158 = ((($$3365)) + 24|0);
     HEAP32[$158>>2] = $124;
     $159 = ((($7)) + 16|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ($160|0)==(0|0);
     if (!($161)) {
      $162 = ((($$3365)) + 16|0);
      HEAP32[$162>>2] = $160;
      $163 = ((($160)) + 24|0);
      HEAP32[$163>>2] = $$3365;
     }
     $164 = ((($159)) + 4|0);
     $165 = HEAP32[$164>>2]|0;
     $166 = ($165|0)==(0|0);
     if (!($166)) {
      $167 = ((($$3365)) + 20|0);
      HEAP32[$167>>2] = $165;
      $168 = ((($165)) + 24|0);
      HEAP32[$168>>2] = $$3365;
     }
    }
   }
  } while(0);
  $169 = $109 | 1;
  $170 = ((($$1)) + 4|0);
  HEAP32[$170>>2] = $169;
  $171 = (($86) + ($109)|0);
  HEAP32[$171>>2] = $109;
  $172 = HEAP32[(546208)>>2]|0;
  $173 = ($$1|0)==($172|0);
  if ($173) {
   HEAP32[(546196)>>2] = $109;
   return;
  } else {
   $$2 = $109;
  }
 } else {
  $174 = $89 & -2;
  HEAP32[$88>>2] = $174;
  $175 = $$1347 | 1;
  $176 = ((($$1)) + 4|0);
  HEAP32[$176>>2] = $175;
  $177 = (($86) + ($$1347)|0);
  HEAP32[$177>>2] = $$1347;
  $$2 = $$1347;
 }
 $178 = $$2 >>> 3;
 $179 = ($$2>>>0)<(256);
 if ($179) {
  $180 = $178 << 1;
  $181 = (546228 + ($180<<2)|0);
  $182 = HEAP32[136547]|0;
  $183 = 1 << $178;
  $184 = $182 & $183;
  $185 = ($184|0)==(0);
  if ($185) {
   $186 = $182 | $183;
   HEAP32[136547] = $186;
   $$pre = ((($181)) + 8|0);
   $$0368 = $181;$$pre$phiZ2D = $$pre;
  } else {
   $187 = ((($181)) + 8|0);
   $188 = HEAP32[$187>>2]|0;
   $$0368 = $188;$$pre$phiZ2D = $187;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $189 = ((($$0368)) + 12|0);
  HEAP32[$189>>2] = $$1;
  $190 = ((($$1)) + 8|0);
  HEAP32[$190>>2] = $$0368;
  $191 = ((($$1)) + 12|0);
  HEAP32[$191>>2] = $181;
  return;
 }
 $192 = $$2 >>> 8;
 $193 = ($192|0)==(0);
 if ($193) {
  $$0361 = 0;
 } else {
  $194 = ($$2>>>0)>(16777215);
  if ($194) {
   $$0361 = 31;
  } else {
   $195 = (($192) + 1048320)|0;
   $196 = $195 >>> 16;
   $197 = $196 & 8;
   $198 = $192 << $197;
   $199 = (($198) + 520192)|0;
   $200 = $199 >>> 16;
   $201 = $200 & 4;
   $202 = $201 | $197;
   $203 = $198 << $201;
   $204 = (($203) + 245760)|0;
   $205 = $204 >>> 16;
   $206 = $205 & 2;
   $207 = $202 | $206;
   $208 = (14 - ($207))|0;
   $209 = $203 << $206;
   $210 = $209 >>> 15;
   $211 = (($208) + ($210))|0;
   $212 = $211 << 1;
   $213 = (($211) + 7)|0;
   $214 = $$2 >>> $213;
   $215 = $214 & 1;
   $216 = $215 | $212;
   $$0361 = $216;
  }
 }
 $217 = (546492 + ($$0361<<2)|0);
 $218 = ((($$1)) + 28|0);
 HEAP32[$218>>2] = $$0361;
 $219 = ((($$1)) + 16|0);
 $220 = ((($$1)) + 20|0);
 HEAP32[$220>>2] = 0;
 HEAP32[$219>>2] = 0;
 $221 = HEAP32[(546192)>>2]|0;
 $222 = 1 << $$0361;
 $223 = $221 & $222;
 $224 = ($223|0)==(0);
 do {
  if ($224) {
   $225 = $221 | $222;
   HEAP32[(546192)>>2] = $225;
   HEAP32[$217>>2] = $$1;
   $226 = ((($$1)) + 24|0);
   HEAP32[$226>>2] = $217;
   $227 = ((($$1)) + 12|0);
   HEAP32[$227>>2] = $$1;
   $228 = ((($$1)) + 8|0);
   HEAP32[$228>>2] = $$1;
  } else {
   $229 = HEAP32[$217>>2]|0;
   $230 = ($$0361|0)==(31);
   $231 = $$0361 >>> 1;
   $232 = (25 - ($231))|0;
   $233 = $230 ? 0 : $232;
   $234 = $$2 << $233;
   $$0348 = $234;$$0349 = $229;
   while(1) {
    $235 = ((($$0349)) + 4|0);
    $236 = HEAP32[$235>>2]|0;
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     label = 73;
     break;
    }
    $239 = $$0348 >>> 31;
    $240 = (((($$0349)) + 16|0) + ($239<<2)|0);
    $241 = $$0348 << 1;
    $242 = HEAP32[$240>>2]|0;
    $243 = ($242|0)==(0|0);
    if ($243) {
     label = 72;
     break;
    } else {
     $$0348 = $241;$$0349 = $242;
    }
   }
   if ((label|0) == 72) {
    HEAP32[$240>>2] = $$1;
    $244 = ((($$1)) + 24|0);
    HEAP32[$244>>2] = $$0349;
    $245 = ((($$1)) + 12|0);
    HEAP32[$245>>2] = $$1;
    $246 = ((($$1)) + 8|0);
    HEAP32[$246>>2] = $$1;
    break;
   }
   else if ((label|0) == 73) {
    $247 = ((($$0349)) + 8|0);
    $248 = HEAP32[$247>>2]|0;
    $249 = ((($248)) + 12|0);
    HEAP32[$249>>2] = $$1;
    HEAP32[$247>>2] = $$1;
    $250 = ((($$1)) + 8|0);
    HEAP32[$250>>2] = $248;
    $251 = ((($$1)) + 12|0);
    HEAP32[$251>>2] = $$0349;
    $252 = ((($$1)) + 24|0);
    HEAP32[$252>>2] = 0;
    break;
   }
  }
 } while(0);
 $253 = HEAP32[(546220)>>2]|0;
 $254 = (($253) + -1)|0;
 HEAP32[(546220)>>2] = $254;
 $255 = ($254|0)==(0);
 if ($255) {
  $$0195$in$i = (546644);
 } else {
  return;
 }
 while(1) {
  $$0195$i = HEAP32[$$0195$in$i>>2]|0;
  $256 = ($$0195$i|0)==(0|0);
  $257 = ((($$0195$i)) + 8|0);
  if ($256) {
   break;
  } else {
   $$0195$in$i = $257;
  }
 }
 HEAP32[(546220)>>2] = -1;
 return;
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$1246$i = 0, $$1249$i = 0, $$3$i = 0, $$sink1$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond$i = 0, $not$$i = 0, $or$cond = 0, $storemerge$i = 0, $storemerge1$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  HEAP32[(224616)>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $5 = ($1>>>0)<(11);
 $6 = (($1) + 11)|0;
 $7 = $6 & -8;
 $8 = $5 ? 16 : $7;
 $9 = ((($0)) + -8|0);
 $10 = ((($0)) + -4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & -8;
 $13 = (($9) + ($12)|0);
 $14 = $11 & 3;
 $15 = ($14|0)==(0);
 do {
  if ($15) {
   $16 = ($8>>>0)<(256);
   $17 = $8 | 4;
   $18 = ($12>>>0)<($17>>>0);
   $or$cond = $16 | $18;
   if (!($or$cond)) {
    $19 = (($12) - ($8))|0;
    $20 = HEAP32[(546668)>>2]|0;
    $21 = $20 << 1;
    $22 = ($19>>>0)>($21>>>0);
    if (!($22)) {
     $$1 = $0;
     return ($$1|0);
    }
   }
  } else {
   $23 = ($12>>>0)<($8>>>0);
   if (!($23)) {
    $24 = (($12) - ($8))|0;
    $25 = ($24>>>0)>(15);
    if (!($25)) {
     $$1 = $0;
     return ($$1|0);
    }
    $26 = (($9) + ($8)|0);
    $27 = $11 & 1;
    $28 = $27 | $8;
    $29 = $28 | 2;
    HEAP32[$10>>2] = $29;
    $30 = ((($26)) + 4|0);
    $31 = $24 | 3;
    HEAP32[$30>>2] = $31;
    $32 = (($26) + ($24)|0);
    $33 = ((($32)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $34 | 1;
    HEAP32[$33>>2] = $35;
    _dispose_chunk($26,$24);
    $$1 = $0;
    return ($$1|0);
   }
   $36 = HEAP32[(546212)>>2]|0;
   $37 = ($13|0)==($36|0);
   if ($37) {
    $38 = HEAP32[(546200)>>2]|0;
    $39 = (($38) + ($12))|0;
    $40 = ($39>>>0)>($8>>>0);
    $41 = (($39) - ($8))|0;
    $42 = (($9) + ($8)|0);
    if (!($40)) {
     break;
    }
    $43 = $41 | 1;
    $44 = ((($42)) + 4|0);
    $45 = $11 & 1;
    $46 = $45 | $8;
    $47 = $46 | 2;
    HEAP32[$10>>2] = $47;
    HEAP32[$44>>2] = $43;
    HEAP32[(546212)>>2] = $42;
    HEAP32[(546200)>>2] = $41;
    $$1 = $0;
    return ($$1|0);
   }
   $48 = HEAP32[(546208)>>2]|0;
   $49 = ($13|0)==($48|0);
   if ($49) {
    $50 = HEAP32[(546196)>>2]|0;
    $51 = (($50) + ($12))|0;
    $52 = ($51>>>0)<($8>>>0);
    if ($52) {
     break;
    }
    $53 = (($51) - ($8))|0;
    $54 = ($53>>>0)>(15);
    $55 = $11 & 1;
    if ($54) {
     $56 = (($9) + ($8)|0);
     $57 = (($56) + ($53)|0);
     $58 = $55 | $8;
     $59 = $58 | 2;
     HEAP32[$10>>2] = $59;
     $60 = ((($56)) + 4|0);
     $61 = $53 | 1;
     HEAP32[$60>>2] = $61;
     HEAP32[$57>>2] = $53;
     $62 = ((($57)) + 4|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = $63 & -2;
     HEAP32[$62>>2] = $64;
     $storemerge$i = $56;$storemerge1$i = $53;
    } else {
     $65 = $55 | $51;
     $66 = $65 | 2;
     HEAP32[$10>>2] = $66;
     $67 = (($9) + ($51)|0);
     $68 = ((($67)) + 4|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = $69 | 1;
     HEAP32[$68>>2] = $70;
     $storemerge$i = 0;$storemerge1$i = 0;
    }
    HEAP32[(546196)>>2] = $storemerge1$i;
    HEAP32[(546208)>>2] = $storemerge$i;
    $$1 = $0;
    return ($$1|0);
   }
   $71 = ((($13)) + 4|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = $72 & 2;
   $74 = ($73|0)==(0);
   if ($74) {
    $75 = $72 & -8;
    $76 = (($75) + ($12))|0;
    $77 = ($76>>>0)<($8>>>0);
    if (!($77)) {
     $78 = (($76) - ($8))|0;
     $79 = $72 >>> 3;
     $80 = ($72>>>0)<(256);
     do {
      if ($80) {
       $81 = ((($13)) + 8|0);
       $82 = HEAP32[$81>>2]|0;
       $83 = ((($13)) + 12|0);
       $84 = HEAP32[$83>>2]|0;
       $85 = ($84|0)==($82|0);
       if ($85) {
        $86 = 1 << $79;
        $87 = $86 ^ -1;
        $88 = HEAP32[136547]|0;
        $89 = $88 & $87;
        HEAP32[136547] = $89;
        break;
       } else {
        $90 = ((($82)) + 12|0);
        HEAP32[$90>>2] = $84;
        $91 = ((($84)) + 8|0);
        HEAP32[$91>>2] = $82;
        break;
       }
      } else {
       $92 = ((($13)) + 24|0);
       $93 = HEAP32[$92>>2]|0;
       $94 = ((($13)) + 12|0);
       $95 = HEAP32[$94>>2]|0;
       $96 = ($95|0)==($13|0);
       do {
        if ($96) {
         $101 = ((($13)) + 16|0);
         $102 = ((($101)) + 4|0);
         $103 = HEAP32[$102>>2]|0;
         $104 = ($103|0)==(0|0);
         if ($104) {
          $105 = HEAP32[$101>>2]|0;
          $106 = ($105|0)==(0|0);
          if ($106) {
           $$3$i = 0;
           break;
          } else {
           $$1246$i = $105;$$1249$i = $101;
          }
         } else {
          $$1246$i = $103;$$1249$i = $102;
         }
         while(1) {
          $107 = ((($$1246$i)) + 20|0);
          $108 = HEAP32[$107>>2]|0;
          $109 = ($108|0)==(0|0);
          if (!($109)) {
           $$1246$i = $108;$$1249$i = $107;
           continue;
          }
          $110 = ((($$1246$i)) + 16|0);
          $111 = HEAP32[$110>>2]|0;
          $112 = ($111|0)==(0|0);
          if ($112) {
           break;
          } else {
           $$1246$i = $111;$$1249$i = $110;
          }
         }
         HEAP32[$$1249$i>>2] = 0;
         $$3$i = $$1246$i;
        } else {
         $97 = ((($13)) + 8|0);
         $98 = HEAP32[$97>>2]|0;
         $99 = ((($98)) + 12|0);
         HEAP32[$99>>2] = $95;
         $100 = ((($95)) + 8|0);
         HEAP32[$100>>2] = $98;
         $$3$i = $95;
        }
       } while(0);
       $113 = ($93|0)==(0|0);
       if (!($113)) {
        $114 = ((($13)) + 28|0);
        $115 = HEAP32[$114>>2]|0;
        $116 = (546492 + ($115<<2)|0);
        $117 = HEAP32[$116>>2]|0;
        $118 = ($13|0)==($117|0);
        if ($118) {
         HEAP32[$116>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $119 = 1 << $115;
          $120 = $119 ^ -1;
          $121 = HEAP32[(546192)>>2]|0;
          $122 = $121 & $120;
          HEAP32[(546192)>>2] = $122;
          break;
         }
        } else {
         $123 = ((($93)) + 16|0);
         $124 = HEAP32[$123>>2]|0;
         $not$$i = ($124|0)!=($13|0);
         $$sink1$i = $not$$i&1;
         $125 = (((($93)) + 16|0) + ($$sink1$i<<2)|0);
         HEAP32[$125>>2] = $$3$i;
         $126 = ($$3$i|0)==(0|0);
         if ($126) {
          break;
         }
        }
        $127 = ((($$3$i)) + 24|0);
        HEAP32[$127>>2] = $93;
        $128 = ((($13)) + 16|0);
        $129 = HEAP32[$128>>2]|0;
        $130 = ($129|0)==(0|0);
        if (!($130)) {
         $131 = ((($$3$i)) + 16|0);
         HEAP32[$131>>2] = $129;
         $132 = ((($129)) + 24|0);
         HEAP32[$132>>2] = $$3$i;
        }
        $133 = ((($128)) + 4|0);
        $134 = HEAP32[$133>>2]|0;
        $135 = ($134|0)==(0|0);
        if (!($135)) {
         $136 = ((($$3$i)) + 20|0);
         HEAP32[$136>>2] = $134;
         $137 = ((($134)) + 24|0);
         HEAP32[$137>>2] = $$3$i;
        }
       }
      }
     } while(0);
     $138 = ($78>>>0)<(16);
     $139 = $11 & 1;
     if ($138) {
      $140 = $76 | $139;
      $141 = $140 | 2;
      HEAP32[$10>>2] = $141;
      $142 = (($9) + ($76)|0);
      $143 = ((($142)) + 4|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = $144 | 1;
      HEAP32[$143>>2] = $145;
      $$1 = $0;
      return ($$1|0);
     } else {
      $146 = (($9) + ($8)|0);
      $147 = $139 | $8;
      $148 = $147 | 2;
      HEAP32[$10>>2] = $148;
      $149 = ((($146)) + 4|0);
      $150 = $78 | 3;
      HEAP32[$149>>2] = $150;
      $151 = (($146) + ($78)|0);
      $152 = ((($151)) + 4|0);
      $153 = HEAP32[$152>>2]|0;
      $154 = $153 | 1;
      HEAP32[$152>>2] = $154;
      _dispose_chunk($146,$78);
      $$1 = $0;
      return ($$1|0);
     }
    }
   }
  }
 } while(0);
 $155 = (_malloc($1)|0);
 $156 = ($155|0)==(0|0);
 if ($156) {
  $$1 = 0;
  return ($$1|0);
 }
 $157 = HEAP32[$10>>2]|0;
 $158 = $157 & -8;
 $159 = $157 & 3;
 $160 = ($159|0)==(0);
 $161 = $160 ? 8 : 4;
 $162 = (($158) - ($161))|0;
 $163 = ($162>>>0)<($1>>>0);
 $164 = $163 ? $162 : $1;
 _memcpy(($155|0),($0|0),($164|0))|0;
 _free($0);
 $$1 = $155;
 return ($$1|0);
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0366 = 0, $$0367 = 0, $$0378 = 0, $$0385 = 0, $$1 = 0, $$1365 = 0, $$1373 = 0, $$1376 = 0, $$1380 = 0, $$1384 = 0, $$2 = 0, $$3 = 0, $$3382 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink2 = 0, $$sink4 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $cond = 0, $cond5 = 0, $not$ = 0, $not$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(546208)>>2]|0;
   $14 = ($11|0)==($13|0);
   if ($14) {
    $74 = ((($2)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = $75 & 3;
    $77 = ($76|0)==(3);
    if (!($77)) {
     $$1 = $11;$$1365 = $12;
     break;
    }
    $78 = (($11) + ($12)|0);
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $75 & -2;
    HEAP32[(546196)>>2] = $12;
    HEAP32[$74>>2] = $81;
    HEAP32[$79>>2] = $80;
    HEAP32[$78>>2] = $12;
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($11)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = HEAP32[136547]|0;
     $25 = $24 & $23;
     HEAP32[136547] = $25;
     $$1 = $11;$$1365 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     HEAP32[$26>>2] = $20;
     $27 = ((($20)) + 8|0);
     HEAP32[$27>>2] = $18;
     $$1 = $11;$$1365 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($11)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = HEAP32[$37>>2]|0;
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1373 = $41;$$1376 = $37;
      }
     } else {
      $$1373 = $39;$$1376 = $38;
     }
     while(1) {
      $43 = ((($$1373)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ($44|0)==(0|0);
      if (!($45)) {
       $$1373 = $44;$$1376 = $43;
       continue;
      }
      $46 = ((($$1373)) + 16|0);
      $47 = HEAP32[$46>>2]|0;
      $48 = ($47|0)==(0|0);
      if ($48) {
       break;
      } else {
       $$1373 = $47;$$1376 = $46;
      }
     }
     HEAP32[$$1376>>2] = 0;
     $$3 = $$1373;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 12|0);
     HEAP32[$35>>2] = $31;
     $36 = ((($31)) + 8|0);
     HEAP32[$36>>2] = $34;
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1365 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (546492 + ($51<<2)|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($11|0)==($53|0);
    if ($54) {
     HEAP32[$52>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = HEAP32[(546192)>>2]|0;
      $58 = $57 & $56;
      HEAP32[(546192)>>2] = $58;
      $$1 = $11;$$1365 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = HEAP32[$59>>2]|0;
     $not$1 = ($60|0)!=($11|0);
     $$sink2 = $not$1&1;
     $61 = (((($29)) + 16|0) + ($$sink2<<2)|0);
     HEAP32[$61>>2] = $$3;
     $62 = ($$3|0)==(0|0);
     if ($62) {
      $$1 = $11;$$1365 = $12;
      break;
     }
    }
    $63 = ((($$3)) + 24|0);
    HEAP32[$63>>2] = $29;
    $64 = ((($11)) + 16|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = ($65|0)==(0|0);
    if (!($66)) {
     $67 = ((($$3)) + 16|0);
     HEAP32[$67>>2] = $65;
     $68 = ((($65)) + 24|0);
     HEAP32[$68>>2] = $$3;
    }
    $69 = ((($64)) + 4|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if ($71) {
     $$1 = $11;$$1365 = $12;
    } else {
     $72 = ((($$3)) + 20|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
     $$1 = $11;$$1365 = $12;
    }
   }
  } else {
   $$1 = $0;$$1365 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = HEAP32[(546212)>>2]|0;
  $87 = ($2|0)==($86|0);
  $88 = HEAP32[(546208)>>2]|0;
  if ($87) {
   $89 = HEAP32[(546200)>>2]|0;
   $90 = (($89) + ($$1365))|0;
   HEAP32[(546200)>>2] = $90;
   HEAP32[(546212)>>2] = $$1;
   $91 = $90 | 1;
   $92 = ((($$1)) + 4|0);
   HEAP32[$92>>2] = $91;
   $93 = ($$1|0)==($88|0);
   if (!($93)) {
    return;
   }
   HEAP32[(546208)>>2] = 0;
   HEAP32[(546196)>>2] = 0;
   return;
  }
  $94 = ($2|0)==($88|0);
  if ($94) {
   $95 = HEAP32[(546196)>>2]|0;
   $96 = (($95) + ($$1365))|0;
   HEAP32[(546196)>>2] = $96;
   HEAP32[(546208)>>2] = $$1;
   $97 = $96 | 1;
   $98 = ((($$1)) + 4|0);
   HEAP32[$98>>2] = $97;
   $99 = (($$1) + ($96)|0);
   HEAP32[$99>>2] = $96;
   return;
  }
  $100 = $83 & -8;
  $101 = (($100) + ($$1365))|0;
  $102 = $83 >>> 3;
  $103 = ($83>>>0)<(256);
  do {
   if ($103) {
    $104 = ((($2)) + 8|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = ((($2)) + 12|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = ($107|0)==($105|0);
    if ($108) {
     $109 = 1 << $102;
     $110 = $109 ^ -1;
     $111 = HEAP32[136547]|0;
     $112 = $111 & $110;
     HEAP32[136547] = $112;
     break;
    } else {
     $113 = ((($105)) + 12|0);
     HEAP32[$113>>2] = $107;
     $114 = ((($107)) + 8|0);
     HEAP32[$114>>2] = $105;
     break;
    }
   } else {
    $115 = ((($2)) + 24|0);
    $116 = HEAP32[$115>>2]|0;
    $117 = ((($2)) + 12|0);
    $118 = HEAP32[$117>>2]|0;
    $119 = ($118|0)==($2|0);
    do {
     if ($119) {
      $124 = ((($2)) + 16|0);
      $125 = ((($124)) + 4|0);
      $126 = HEAP32[$125>>2]|0;
      $127 = ($126|0)==(0|0);
      if ($127) {
       $128 = HEAP32[$124>>2]|0;
       $129 = ($128|0)==(0|0);
       if ($129) {
        $$3382 = 0;
        break;
       } else {
        $$1380 = $128;$$1384 = $124;
       }
      } else {
       $$1380 = $126;$$1384 = $125;
      }
      while(1) {
       $130 = ((($$1380)) + 20|0);
       $131 = HEAP32[$130>>2]|0;
       $132 = ($131|0)==(0|0);
       if (!($132)) {
        $$1380 = $131;$$1384 = $130;
        continue;
       }
       $133 = ((($$1380)) + 16|0);
       $134 = HEAP32[$133>>2]|0;
       $135 = ($134|0)==(0|0);
       if ($135) {
        break;
       } else {
        $$1380 = $134;$$1384 = $133;
       }
      }
      HEAP32[$$1384>>2] = 0;
      $$3382 = $$1380;
     } else {
      $120 = ((($2)) + 8|0);
      $121 = HEAP32[$120>>2]|0;
      $122 = ((($121)) + 12|0);
      HEAP32[$122>>2] = $118;
      $123 = ((($118)) + 8|0);
      HEAP32[$123>>2] = $121;
      $$3382 = $118;
     }
    } while(0);
    $136 = ($116|0)==(0|0);
    if (!($136)) {
     $137 = ((($2)) + 28|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = (546492 + ($138<<2)|0);
     $140 = HEAP32[$139>>2]|0;
     $141 = ($2|0)==($140|0);
     if ($141) {
      HEAP32[$139>>2] = $$3382;
      $cond5 = ($$3382|0)==(0|0);
      if ($cond5) {
       $142 = 1 << $138;
       $143 = $142 ^ -1;
       $144 = HEAP32[(546192)>>2]|0;
       $145 = $144 & $143;
       HEAP32[(546192)>>2] = $145;
       break;
      }
     } else {
      $146 = ((($116)) + 16|0);
      $147 = HEAP32[$146>>2]|0;
      $not$ = ($147|0)!=($2|0);
      $$sink4 = $not$&1;
      $148 = (((($116)) + 16|0) + ($$sink4<<2)|0);
      HEAP32[$148>>2] = $$3382;
      $149 = ($$3382|0)==(0|0);
      if ($149) {
       break;
      }
     }
     $150 = ((($$3382)) + 24|0);
     HEAP32[$150>>2] = $116;
     $151 = ((($2)) + 16|0);
     $152 = HEAP32[$151>>2]|0;
     $153 = ($152|0)==(0|0);
     if (!($153)) {
      $154 = ((($$3382)) + 16|0);
      HEAP32[$154>>2] = $152;
      $155 = ((($152)) + 24|0);
      HEAP32[$155>>2] = $$3382;
     }
     $156 = ((($151)) + 4|0);
     $157 = HEAP32[$156>>2]|0;
     $158 = ($157|0)==(0|0);
     if (!($158)) {
      $159 = ((($$3382)) + 20|0);
      HEAP32[$159>>2] = $157;
      $160 = ((($157)) + 24|0);
      HEAP32[$160>>2] = $$3382;
     }
    }
   }
  } while(0);
  $161 = $101 | 1;
  $162 = ((($$1)) + 4|0);
  HEAP32[$162>>2] = $161;
  $163 = (($$1) + ($101)|0);
  HEAP32[$163>>2] = $101;
  $164 = HEAP32[(546208)>>2]|0;
  $165 = ($$1|0)==($164|0);
  if ($165) {
   HEAP32[(546196)>>2] = $101;
   return;
  } else {
   $$2 = $101;
  }
 } else {
  $166 = $83 & -2;
  HEAP32[$82>>2] = $166;
  $167 = $$1365 | 1;
  $168 = ((($$1)) + 4|0);
  HEAP32[$168>>2] = $167;
  $169 = (($$1) + ($$1365)|0);
  HEAP32[$169>>2] = $$1365;
  $$2 = $$1365;
 }
 $170 = $$2 >>> 3;
 $171 = ($$2>>>0)<(256);
 if ($171) {
  $172 = $170 << 1;
  $173 = (546228 + ($172<<2)|0);
  $174 = HEAP32[136547]|0;
  $175 = 1 << $170;
  $176 = $174 & $175;
  $177 = ($176|0)==(0);
  if ($177) {
   $178 = $174 | $175;
   HEAP32[136547] = $178;
   $$pre = ((($173)) + 8|0);
   $$0385 = $173;$$pre$phiZ2D = $$pre;
  } else {
   $179 = ((($173)) + 8|0);
   $180 = HEAP32[$179>>2]|0;
   $$0385 = $180;$$pre$phiZ2D = $179;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $181 = ((($$0385)) + 12|0);
  HEAP32[$181>>2] = $$1;
  $182 = ((($$1)) + 8|0);
  HEAP32[$182>>2] = $$0385;
  $183 = ((($$1)) + 12|0);
  HEAP32[$183>>2] = $173;
  return;
 }
 $184 = $$2 >>> 8;
 $185 = ($184|0)==(0);
 if ($185) {
  $$0378 = 0;
 } else {
  $186 = ($$2>>>0)>(16777215);
  if ($186) {
   $$0378 = 31;
  } else {
   $187 = (($184) + 1048320)|0;
   $188 = $187 >>> 16;
   $189 = $188 & 8;
   $190 = $184 << $189;
   $191 = (($190) + 520192)|0;
   $192 = $191 >>> 16;
   $193 = $192 & 4;
   $194 = $193 | $189;
   $195 = $190 << $193;
   $196 = (($195) + 245760)|0;
   $197 = $196 >>> 16;
   $198 = $197 & 2;
   $199 = $194 | $198;
   $200 = (14 - ($199))|0;
   $201 = $195 << $198;
   $202 = $201 >>> 15;
   $203 = (($200) + ($202))|0;
   $204 = $203 << 1;
   $205 = (($203) + 7)|0;
   $206 = $$2 >>> $205;
   $207 = $206 & 1;
   $208 = $207 | $204;
   $$0378 = $208;
  }
 }
 $209 = (546492 + ($$0378<<2)|0);
 $210 = ((($$1)) + 28|0);
 HEAP32[$210>>2] = $$0378;
 $211 = ((($$1)) + 16|0);
 $212 = ((($$1)) + 20|0);
 HEAP32[$212>>2] = 0;
 HEAP32[$211>>2] = 0;
 $213 = HEAP32[(546192)>>2]|0;
 $214 = 1 << $$0378;
 $215 = $213 & $214;
 $216 = ($215|0)==(0);
 if ($216) {
  $217 = $213 | $214;
  HEAP32[(546192)>>2] = $217;
  HEAP32[$209>>2] = $$1;
  $218 = ((($$1)) + 24|0);
  HEAP32[$218>>2] = $209;
  $219 = ((($$1)) + 12|0);
  HEAP32[$219>>2] = $$1;
  $220 = ((($$1)) + 8|0);
  HEAP32[$220>>2] = $$1;
  return;
 }
 $221 = HEAP32[$209>>2]|0;
 $222 = ($$0378|0)==(31);
 $223 = $$0378 >>> 1;
 $224 = (25 - ($223))|0;
 $225 = $222 ? 0 : $224;
 $226 = $$2 << $225;
 $$0366 = $226;$$0367 = $221;
 while(1) {
  $227 = ((($$0367)) + 4|0);
  $228 = HEAP32[$227>>2]|0;
  $229 = $228 & -8;
  $230 = ($229|0)==($$2|0);
  if ($230) {
   label = 69;
   break;
  }
  $231 = $$0366 >>> 31;
  $232 = (((($$0367)) + 16|0) + ($231<<2)|0);
  $233 = $$0366 << 1;
  $234 = HEAP32[$232>>2]|0;
  $235 = ($234|0)==(0|0);
  if ($235) {
   label = 68;
   break;
  } else {
   $$0366 = $233;$$0367 = $234;
  }
 }
 if ((label|0) == 68) {
  HEAP32[$232>>2] = $$1;
  $236 = ((($$1)) + 24|0);
  HEAP32[$236>>2] = $$0367;
  $237 = ((($$1)) + 12|0);
  HEAP32[$237>>2] = $$1;
  $238 = ((($$1)) + 8|0);
  HEAP32[$238>>2] = $$1;
  return;
 }
 else if ((label|0) == 69) {
  $239 = ((($$0367)) + 8|0);
  $240 = HEAP32[$239>>2]|0;
  $241 = ((($240)) + 12|0);
  HEAP32[$241>>2] = $$1;
  HEAP32[$239>>2] = $$1;
  $242 = ((($$1)) + 8|0);
  HEAP32[$242>>2] = $240;
  $243 = ((($$1)) + 12|0);
  HEAP32[$243>>2] = $$0367;
  $244 = ((($$1)) + 24|0);
  HEAP32[$244>>2] = 0;
  return;
 }
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (546684|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$015$lcssa = 0, $$01519 = 0, $$1$lcssa = 0, $$pn = 0, $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 4;
  } else {
   $$01519 = $0;$23 = $1;
   while(1) {
    $4 = HEAP8[$$01519>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$sink = $23;
     break L1;
    }
    $6 = ((($$01519)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 4;
     break;
    } else {
     $$01519 = $6;$23 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 4) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn = $$0;
   while(1) {
    $19 = ((($$pn)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$sink = $21;
 }
 $22 = (($$sink) - ($1))|0;
 return ($22|0);
}
function _strcat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (($0) + ($2)|0);
 (_strcpy($3,$1)|0);
 return ($0|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___stpcpy($0,$1);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$037 = 0, $$1$ph = 0, $$128$ph = 0, $$12834 = 0, $$135 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = HEAP8[$$02642>>0]|0;
     HEAP8[$$02741>>0] = $9;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = HEAP32[$$026$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     HEAP32[$$02536>>2] = $24;
     $25 = HEAP32[$22>>2]|0;
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1$ph = $$0$lcssa;$$128$ph = $$025$lcssa;
   label = 8;
  } else {
   $$1$ph = $1;$$128$ph = $0;
   label = 8;
  }
 } while(0);
 if ((label|0) == 8) {
  $31 = HEAP8[$$1$ph>>0]|0;
  HEAP8[$$128$ph>>0] = $31;
  $32 = ($31<<24>>24)==(0);
  if (!($32)) {
   $$12834 = $$128$ph;$$135 = $$1$ph;
   while(1) {
    $33 = ((($$135)) + 1|0);
    $34 = ((($$12834)) + 1|0);
    $35 = HEAP8[$33>>0]|0;
    HEAP8[$34>>0] = $35;
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     break;
    } else {
     $$12834 = $34;$$135 = $33;
    }
   }
  }
 }
 return;
}
function _rint($0) {
 $0 = +$0;
 var $$015 = 0.0, $$sink16 = 0.0, $$sink17 = 0.0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 $3 = $2 & 2146435072;
 $4 = ($3>>>0)>(1126170624);
 $5 = (0)>(0);
 $6 = ($3|0)==(1126170624);
 $7 = $6 & $5;
 $8 = $4 | $7;
 if ($8) {
  $$015 = $0;
 } else {
  $9 = ($2|0)<(0);
  $$sink17 = $9 ? -4503599627370496.0 : 4503599627370496.0;
  $$sink16 = $9 ? 4503599627370496.0 : -4503599627370496.0;
  $10 = $$sink17 + $0;
  $11 = $$sink16 + $10;
  $12 = $11 == 0.0;
  if ($12) {
   $13 = $9 ? -0.0 : 0.0;
   $$015 = $13;
  } else {
   $$015 = $11;
  }
 }
 return (+$$015);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$ = 0, $$$ = 0, $$0 = 0.0, $$020 = 0, $$1 = 0, $$1$ = 0, $$21 = 0.0, $$22 = 0.0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0;
 var $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($4|0)>(1023);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $$ = $8 ? $7 : 1023;
  $$$ = $5 ? $$ : $4;
  $$21 = $5 ? $6 : $3;
  $$0 = $$21;$$020 = $$$;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($11|0)<(-1022);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $$1 = $15 ? $14 : -1022;
   $$1$ = $12 ? $$1 : $11;
   $$22 = $12 ? $13 : $10;
   $$0 = $$22;$$020 = $$1$;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _rintf($0) {
 $0 = +$0;
 var $$015 = 0.0, $$sink16 = 0.0, $$sink17 = 0.0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0.0, $6 = 0.0, $7 = 0, $8 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $2 = $1 & 2130706432;
 $3 = ($2>>>0)>(1249902592);
 if ($3) {
  $$015 = $0;
 } else {
  $4 = ($1|0)<(0);
  $$sink17 = $4 ? -8388608.0 : 8388608.0;
  $$sink16 = $4 ? 8388608.0 : -8388608.0;
  $5 = $$sink17 + $0;
  $6 = $$sink16 + $5;
  $7 = $6 == 0.0;
  if ($7) {
   $8 = $4 ? -0.0 : 0.0;
   $$015 = $8;
  } else {
   $$015 = $6;
  }
 }
 return (+$$015);
}
function _ldexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function _qsort($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$067$lcssa = 0, $$06772 = 0, $$068$lcssa = 0, $$06871 = 0, $$1 = 0, $$169 = 0, $$2 = 0, $$idx = 0, $$idx$val = 0, $$idx2$pre$phiZZ2D = 0, $$idx2$val = 0, $$idx2$val$pre = 0, $$idx4$val = 0, $$idx6$val = 0, $$pre = 0, $$pre$pre = 0, $$pre76 = 0, $$val = 0, $$val1 = 0;
 var $$val3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $13$phi = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $3 = sp + 8|0;
 $4 = sp;
 $5 = $1 << 2;
 $6 = $4;
 $7 = $6;
 HEAP32[$7>>2] = 1;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = ($5|0)==(0);
 L1: do {
  if (!($10)) {
   $11 = ((($3)) + 4|0);
   HEAP32[$11>>2] = 4;
   HEAP32[$3>>2] = 4;
   $$0 = 2;$13 = 4;$15 = 4;
   while(1) {
    $12 = (($13) + 4)|0;
    $14 = (($12) + ($15))|0;
    $16 = (($3) + ($$0<<2)|0);
    HEAP32[$16>>2] = $14;
    $17 = ($14>>>0)<($5>>>0);
    $18 = (($$0) + 1)|0;
    if ($17) {
     $13$phi = $15;$$0 = $18;$15 = $14;$13 = $13$phi;
    } else {
     break;
    }
   }
   $19 = (($0) + ($5)|0);
   $20 = ((($19)) + -4|0);
   $21 = ($20>>>0)>($0>>>0);
   if ($21) {
    $22 = $20;
    $$idx = ((($4)) + 4|0);
    $$06772 = 1;$$06871 = $0;$$val = 1;
    while(1) {
     $23 = $$val & 3;
     $24 = ($23|0)==(3);
     do {
      if ($24) {
       _sift($$06871,$2,$$06772,$3);
       _shr($4,2);
       $25 = (($$06772) + 2)|0;
       $$1 = $25;
      } else {
       $26 = (($$06772) + -1)|0;
       $27 = (($3) + ($26<<2)|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = $$06871;
       $30 = (($22) - ($29))|0;
       $31 = ($28>>>0)<($30>>>0);
       if ($31) {
        _sift($$06871,$2,$$06772,$3);
       } else {
        $$idx$val = HEAP32[$$idx>>2]|0;
        _trinkle($$06871,$2,$$val,$$idx$val,$$06772,0,$3);
       }
       $32 = ($$06772|0)==(1);
       if ($32) {
        _shl($4,1);
        $$1 = 0;
        break;
       } else {
        _shl($4,$26);
        $$1 = 1;
        break;
       }
      }
     } while(0);
     $33 = HEAP32[$4>>2]|0;
     $34 = $33 | 1;
     HEAP32[$4>>2] = $34;
     $35 = ((($$06871)) + 4|0);
     $36 = ($35>>>0)<($20>>>0);
     if ($36) {
      $$06772 = $$1;$$06871 = $35;$$val = $34;
     } else {
      break;
     }
    }
    $$idx2$val$pre = HEAP32[$$idx>>2]|0;
    $$067$lcssa = $$1;$$068$lcssa = $35;$$idx2$pre$phiZZ2D = $$idx;$$idx2$val = $$idx2$val$pre;$$val1 = $34;
   } else {
    $$pre = ((($4)) + 4|0);
    $$067$lcssa = 1;$$068$lcssa = $0;$$idx2$pre$phiZZ2D = $$pre;$$idx2$val = 0;$$val1 = 1;
   }
   _trinkle($$068$lcssa,$2,$$val1,$$idx2$val,$$067$lcssa,0,$3);
   $37 = ((($4)) + 4|0);
   $$169 = $$068$lcssa;$$2 = $$067$lcssa;$39 = $$val1;
   while(1) {
    $38 = ($$2|0)==(1);
    $40 = ($39|0)==(1);
    $or$cond = $38 & $40;
    if ($or$cond) {
     $41 = HEAP32[$37>>2]|0;
     $42 = ($41|0)==(0);
     if ($42) {
      break L1;
     }
    } else {
     $43 = ($$2|0)<(2);
     if (!($43)) {
      _shl($4,2);
      $46 = (($$2) + -2)|0;
      $47 = HEAP32[$4>>2]|0;
      $48 = $47 ^ 7;
      HEAP32[$4>>2] = $48;
      _shr($4,1);
      $49 = (($3) + ($46<<2)|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = (0 - ($50))|0;
      $52 = (($$169) + ($51)|0);
      $53 = ((($52)) + -4|0);
      $54 = (($$2) + -1)|0;
      $$val3 = HEAP32[$4>>2]|0;
      $$idx4$val = HEAP32[$$idx2$pre$phiZZ2D>>2]|0;
      _trinkle($53,$2,$$val3,$$idx4$val,$54,1,$3);
      _shl($4,1);
      $55 = HEAP32[$4>>2]|0;
      $56 = $55 | 1;
      HEAP32[$4>>2] = $56;
      $57 = ((($$169)) + -4|0);
      $$idx6$val = HEAP32[$$idx2$pre$phiZZ2D>>2]|0;
      _trinkle($57,$2,$56,$$idx6$val,$46,1,$3);
      $$169 = $57;$$2 = $46;$39 = $56;
      continue;
     }
    }
    $44 = (_pntz($4)|0);
    _shr($4,$44);
    $45 = (($44) + ($$2))|0;
    $$pre$pre = HEAP32[$4>>2]|0;
    $$pre76 = ((($$169)) + -4|0);
    $$169 = $$pre76;$$2 = $45;$39 = $$pre$pre;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _sift($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$lcssa = 0, $$029$be = 0, $$02932 = 0, $$030$be = 0, $$03031 = 0, $$033 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $4 = sp;
 HEAP32[$4>>2] = $0;
 $5 = ($2|0)>(1);
 L1: do {
  if ($5) {
   $$02932 = $0;$$03031 = $2;$$033 = 1;$12 = $0;
   while(1) {
    $6 = ((($$02932)) + -4|0);
    $7 = (($$03031) + -2)|0;
    $8 = (($3) + ($7<<2)|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = (0 - ($9))|0;
    $11 = (($6) + ($10)|0);
    $13 = (FUNCTION_TABLE_iii[$1 & 31]($12,$11)|0);
    $14 = ($13|0)>(-1);
    if ($14) {
     $15 = (FUNCTION_TABLE_iii[$1 & 31]($12,$6)|0);
     $16 = ($15|0)>(-1);
     if ($16) {
      $$0$lcssa = $$033;
      break L1;
     }
    }
    $17 = (FUNCTION_TABLE_iii[$1 & 31]($11,$6)|0);
    $18 = ($17|0)>(-1);
    $19 = (($$033) + 1)|0;
    $20 = (($4) + ($$033<<2)|0);
    if ($18) {
     HEAP32[$20>>2] = $11;
     $21 = (($$03031) + -1)|0;
     $$029$be = $11;$$030$be = $21;
    } else {
     HEAP32[$20>>2] = $6;
     $$029$be = $6;$$030$be = $7;
    }
    $22 = ($$030$be|0)>(1);
    if (!($22)) {
     $$0$lcssa = $19;
     break L1;
    }
    $$pre = HEAP32[$4>>2]|0;
    $$02932 = $$029$be;$$03031 = $$030$be;$$033 = $19;$12 = $$pre;
   }
  } else {
   $$0$lcssa = 1;
  }
 } while(0);
 _cycle($4,$$0$lcssa);
 STACKTOP = sp;return;
}
function _shr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(31);
 $3 = ((($0)) + 4|0);
 if ($2) {
  $4 = (($1) + -32)|0;
  $5 = HEAP32[$3>>2]|0;
  HEAP32[$0>>2] = $5;
  HEAP32[$3>>2] = 0;
  $$0 = $4;$10 = 0;$7 = $5;
 } else {
  $$pre = HEAP32[$0>>2]|0;
  $$pre11 = HEAP32[$3>>2]|0;
  $$0 = $1;$10 = $$pre11;$7 = $$pre;
 }
 $6 = $7 >>> $$0;
 $8 = (32 - ($$0))|0;
 $9 = $10 << $8;
 $11 = $9 | $6;
 HEAP32[$0>>2] = $11;
 $12 = $10 >>> $$0;
 HEAP32[$3>>2] = $12;
 return;
}
function _trinkle($0,$1,$$val,$$1$val,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $$val = $$val|0;
 $$1$val = $$1$val|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$04551 = 0, $$0455780 = 0, $$04653 = 0, $$0465681 = 0, $$0475582 = 0, $$049 = 0, $$05879 = 0, $$05879$phi = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(240|0);
 $5 = sp + 232|0;
 $6 = sp;
 HEAP32[$5>>2] = $$val;
 $7 = ((($5)) + 4|0);
 HEAP32[$7>>2] = $$1$val;
 HEAP32[$6>>2] = $0;
 $8 = ($$val|0)!=(1);
 $9 = ($$1$val|0)!=(0);
 $10 = $8 | $9;
 L1: do {
  if ($10) {
   $11 = (($4) + ($2<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = (0 - ($12))|0;
   $14 = (($0) + ($13)|0);
   $15 = (FUNCTION_TABLE_iii[$1 & 31]($14,$0)|0);
   $16 = ($15|0)<(1);
   if ($16) {
    label = 9;
   } else {
    $phitmp = ($3|0)==(0);
    $$0455780 = 1;$$0465681 = $2;$$0475582 = $phitmp;$$05879 = $0;$22 = $14;
    while(1) {
     $17 = ($$0465681|0)>(1);
     $or$cond = $$0475582 & $17;
     if ($or$cond) {
      $18 = ((($$05879)) + -4|0);
      $19 = (($$0465681) + -2)|0;
      $20 = (($4) + ($19<<2)|0);
      $21 = HEAP32[$20>>2]|0;
      $23 = (FUNCTION_TABLE_iii[$1 & 31]($18,$22)|0);
      $24 = ($23|0)>(-1);
      if ($24) {
       $$04551 = $$0455780;$$04653 = $$0465681;$$049 = $$05879;
       label = 10;
       break L1;
      }
      $25 = (0 - ($21))|0;
      $26 = (($18) + ($25)|0);
      $27 = (FUNCTION_TABLE_iii[$1 & 31]($26,$22)|0);
      $28 = ($27|0)>(-1);
      if ($28) {
       $$04551 = $$0455780;$$04653 = $$0465681;$$049 = $$05879;
       label = 10;
       break L1;
      }
     }
     $29 = (($$0455780) + 1)|0;
     $30 = (($6) + ($$0455780<<2)|0);
     HEAP32[$30>>2] = $22;
     $31 = (_pntz($5)|0);
     _shr($5,$31);
     $32 = (($31) + ($$0465681))|0;
     $33 = HEAP32[$5>>2]|0;
     $34 = ($33|0)!=(1);
     $35 = HEAP32[$7>>2]|0;
     $36 = ($35|0)!=(0);
     $37 = $34 | $36;
     if (!($37)) {
      $$04551 = $29;$$04653 = $32;$$049 = $22;
      label = 10;
      break L1;
     }
     $$pre = HEAP32[$6>>2]|0;
     $38 = (($4) + ($32<<2)|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (0 - ($39))|0;
     $41 = (($22) + ($40)|0);
     $42 = (FUNCTION_TABLE_iii[$1 & 31]($41,$$pre)|0);
     $43 = ($42|0)<(1);
     if ($43) {
      $$04551 = $29;$$04653 = $32;$$049 = $22;
      label = 10;
      break;
     } else {
      $$05879$phi = $22;$$0455780 = $29;$$0465681 = $32;$$0475582 = 1;$22 = $41;$$05879 = $$05879$phi;
     }
    }
   }
  } else {
   label = 9;
  }
 } while(0);
 if ((label|0) == 9) {
  $44 = ($3|0)==(0);
  if ($44) {
   $$04551 = 1;$$04653 = $2;$$049 = $0;
   label = 10;
  }
 }
 if ((label|0) == 10) {
  _cycle($6,$$04551);
  _sift($$049,$1,$$04653,$4);
 }
 STACKTOP = sp;return;
}
function _shl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $$pre11 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1>>>0)>(31);
 $3 = ((($0)) + 4|0);
 if ($2) {
  $4 = (($1) + -32)|0;
  $5 = HEAP32[$0>>2]|0;
  HEAP32[$3>>2] = $5;
  HEAP32[$0>>2] = 0;
  $$0 = $4;$10 = 0;$7 = $5;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $$pre11 = HEAP32[$0>>2]|0;
  $$0 = $1;$10 = $$pre11;$7 = $$pre;
 }
 $6 = $7 << $$0;
 $8 = (32 - ($$0))|0;
 $9 = $10 >>> $8;
 $11 = $9 | $6;
 HEAP32[$3>>2] = $11;
 $12 = $10 << $$0;
 HEAP32[$0>>2] = $12;
 return;
}
function _pntz($0) {
 $0 = $0|0;
 var $$ = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -1)|0;
 $3 = (_a_ctz_l_447($2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = ((($0)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (_a_ctz_l_447($6)|0);
  $8 = (($7) + 32)|0;
  $9 = ($7|0)==(0);
  $$ = $9 ? 0 : $8;
  return ($$|0);
 } else {
  return ($3|0);
 }
 return (0)|0;
}
function _a_ctz_l_447($0) {
 $0 = $0|0;
 var $$068 = 0, $$07 = 0, $$09 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0);
 if ($1) {
  $$07 = 32;
 } else {
  $2 = $0 & 1;
  $3 = ($2|0)==(0);
  if ($3) {
   $$068 = $0;$$09 = 0;
   while(1) {
    $4 = (($$09) + 1)|0;
    $5 = $$068 >>> 1;
    $6 = $5 & 1;
    $7 = ($6|0)==(0);
    if ($7) {
     $$068 = $5;$$09 = $4;
    } else {
     $$07 = $4;
     break;
    }
   }
  } else {
   $$07 = 0;
  }
 }
 return ($$07|0);
}
function _cycle($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$026 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(256|0);
 $2 = sp;
 $3 = ($1|0)<(2);
 L1: do {
  if (!($3)) {
   $4 = (($0) + ($1<<2)|0);
   HEAP32[$4>>2] = $2;
   $5 = HEAP32[$0>>2]|0;
   $6 = HEAPU8[$5>>0]|(HEAPU8[$5+1>>0]<<8)|(HEAPU8[$5+2>>0]<<16)|(HEAPU8[$5+3>>0]<<24);
   HEAP32[$2>>2] = $6;
   $$026 = 0;$12 = $5;
   while(1) {
    $7 = (($0) + ($$026<<2)|0);
    $8 = (($$026) + 1)|0;
    $9 = (($0) + ($8<<2)|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = HEAPU8[$10>>0]|(HEAPU8[$10+1>>0]<<8)|(HEAPU8[$10+2>>0]<<16)|(HEAPU8[$10+3>>0]<<24);
    HEAP8[$12>>0]=$11&255;HEAP8[$12+1>>0]=($11>>8)&255;HEAP8[$12+2>>0]=($11>>16)&255;HEAP8[$12+3>>0]=$11>>24;
    $13 = HEAP32[$7>>2]|0;
    $14 = ((($13)) + 4|0);
    HEAP32[$7>>2] = $14;
    $exitcond = ($8|0)==($1|0);
    if ($exitcond) {
     break L1;
    }
    $$pre = HEAP32[$9>>2]|0;
    $$026 = $8;$12 = $$pre;
   }
  }
 } while(0);
 STACKTOP = sp;return;
}
function _srand($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -1)|0;
 $2 = 546176;
 $3 = $2;
 HEAP32[$3>>2] = $1;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 return;
}
function _rand() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = 546176;
 $1 = $0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (($0) + 4)|0;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (___muldi3(($2|0),($5|0),1284865837,1481765933)|0);
 $7 = tempRet0;
 $8 = (_i64Add(($6|0),($7|0),1,0)|0);
 $9 = tempRet0;
 $10 = 546176;
 $11 = $10;
 HEAP32[$11>>2] = $8;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $9;
 $14 = (_bitshift64Lshr(($8|0),($9|0),33)|0);
 $15 = tempRet0;
 return ($14|0);
}
function runPostSets() {
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}

  
function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function dynCall_vi(index,a1) {
  index = index|0;
  a1=a1|0;
  FUNCTION_TABLE_vi[index&31](a1|0);
}


function dynCall_vii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  FUNCTION_TABLE_vii[index&31](a1|0,a2|0);
}


function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&31](a1|0,a2|0,a3|0,a4|0)|0;
}


function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&31](a1|0,a2|0)|0;
}

function b0(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(0);return 0;
}
function b1(p0) {
 p0 = p0|0; nullFunc_vi(1);
}
function b2(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_vii(2);
}
function b3(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(3);return 0;
}
function b4(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(4);return 0;
}
function b5(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(5);return 0;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,_res0_inverse,b0,_res1_class,b0,_res1_inverse,_res2_class,b0,_res2_inverse,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_vi = [b1,b1,b1,b1,_floor1_free_info,_floor1_free_look,b1,b1,b1,b1,_floor0_free_info,_floor0_free_look,b1,b1,b1,b1,_res0_free_info,_res0_free_look,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
,b1,b1,b1];
var FUNCTION_TABLE_vii = [b2,_floor1_pack,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,_res0_pack,b2,b2,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_iiiii = [b3,b3,b3,b3,b3,b3,b3,_floor1_inverse2,b3,b3,b3,b3,b3,_floor0_inverse2,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,_vorbis_book_decodevs_add
,_vorbis_book_decodev_add,b3,b3];
var FUNCTION_TABLE_iiiiiiiii = [b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,_res1_forward,b4,b4,_res2_forward,b4,b4,b4,b4
,b4,b4,b4];
var FUNCTION_TABLE_iii = [b5,b5,_floor1_unpack,_floor1_look,b5,b5,_floor1_inverse1,b5,_floor0_unpack,_floor0_look,b5,b5,_floor0_inverse1,b5,_res0_unpack,_res0_look,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,_apsort,_icomp,b5
,b5,b5,b5];

  return { _llvm_bswap_i32: _llvm_bswap_i32, _vorbis_analysis: _vorbis_analysis, _oggpack_write: _oggpack_write, _bitshift64Lshr: _bitshift64Lshr, _oggpack_writeinit: _oggpack_writeinit, _oggpack_adv: _oggpack_adv, _encoder_prepare_analysis_buffers: _encoder_prepare_analysis_buffers, _encoder_get_data_len: _encoder_get_data_len, _memset: _memset, _vorbis_info_clear: _vorbis_info_clear, _encoder_finish: _encoder_finish, _vorbis_analysis_headerout: _vorbis_analysis_headerout, _encoder_write_headers: _encoder_write_headers, _encoder_get_data: _encoder_get_data, _memcpy: _memcpy, _bitshift64Shl: _bitshift64Shl, _oggpack_bytes: _oggpack_bytes, _oggpack_look: _oggpack_look, _vorbis_info_init: _vorbis_info_init, dynCall_iiiii: dynCall_iiiii, _ogg_stream_flush: _ogg_stream_flush, dynCall_iii: dynCall_iii, _vorbis_comment_init: _vorbis_comment_init, _ogg_stream_init: _ogg_stream_init, _i64Add: _i64Add, _encoder_get_analysis_buffer: _encoder_get_analysis_buffer, _vorbis_analysis_buffer: _vorbis_analysis_buffer, stackAlloc: stackAlloc, ___muldi3: ___muldi3, _encoder_encode: _encoder_encode, dynCall_vii: dynCall_vii, _encoder_create_vbr: _encoder_create_vbr, dynCall_vi: dynCall_vi, _ogg_stream_clear: _ogg_stream_clear, getTempRet0: getTempRet0, setTempRet0: setTempRet0, _oggpack_read: _oggpack_read, _vorbis_encode_init_vbr: _vorbis_encode_init_vbr, _ogg_stream_pageout: _ogg_stream_pageout, _vorbis_comment_clear: _vorbis_comment_clear, _vorbis_comment_add_tag: _vorbis_comment_add_tag, _emscripten_get_global_libc: _emscripten_get_global_libc, _encoder_clear_data: _encoder_clear_data, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiiii: dynCall_iiiiii, stackSave: stackSave, _free: _free, runPostSets: runPostSets, establishStackSpace: establishStackSpace, _memmove: _memmove, _ogg_stream_packetin: _ogg_stream_packetin, _oggpack_get_buffer: _oggpack_get_buffer, setThrew: setThrew, _malloc: _malloc, stackRestore: stackRestore, _oggpack_writeclear: _oggpack_writeclear, _sbrk: _sbrk, _encoder_destroy: _encoder_destroy, _oggpack_writetrunc: _oggpack_writetrunc };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real__vorbis_analysis = asm["_vorbis_analysis"]; asm["_vorbis_analysis"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_analysis.apply(null, arguments);
};

var real__oggpack_write = asm["_oggpack_write"]; asm["_oggpack_write"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_write.apply(null, arguments);
};

var real__oggpack_writeinit = asm["_oggpack_writeinit"]; asm["_oggpack_writeinit"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_writeinit.apply(null, arguments);
};

var real__encoder_encode = asm["_encoder_encode"]; asm["_encoder_encode"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_encode.apply(null, arguments);
};

var real__encoder_prepare_analysis_buffers = asm["_encoder_prepare_analysis_buffers"]; asm["_encoder_prepare_analysis_buffers"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_prepare_analysis_buffers.apply(null, arguments);
};

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackSave.apply(null, arguments);
};

var real__encoder_get_data_len = asm["_encoder_get_data_len"]; asm["_encoder_get_data_len"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_get_data_len.apply(null, arguments);
};

var real__vorbis_comment_init = asm["_vorbis_comment_init"]; asm["_vorbis_comment_init"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_comment_init.apply(null, arguments);
};

var real__vorbis_info_clear = asm["_vorbis_info_clear"]; asm["_vorbis_info_clear"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_info_clear.apply(null, arguments);
};

var real__encoder_finish = asm["_encoder_finish"]; asm["_encoder_finish"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_finish.apply(null, arguments);
};

var real__vorbis_analysis_headerout = asm["_vorbis_analysis_headerout"]; asm["_vorbis_analysis_headerout"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_analysis_headerout.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Lshr.apply(null, arguments);
};

var real__encoder_get_data = asm["_encoder_get_data"]; asm["_encoder_get_data"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_get_data.apply(null, arguments);
};

var real__encoder_write_headers = asm["_encoder_write_headers"]; asm["_encoder_write_headers"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_write_headers.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Shl.apply(null, arguments);
};

var real__oggpack_bytes = asm["_oggpack_bytes"]; asm["_oggpack_bytes"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_bytes.apply(null, arguments);
};

var real__oggpack_look = asm["_oggpack_look"]; asm["_oggpack_look"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_look.apply(null, arguments);
};

var real__vorbis_info_init = asm["_vorbis_info_init"]; asm["_vorbis_info_init"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_info_init.apply(null, arguments);
};

var real__ogg_stream_flush = asm["_ogg_stream_flush"]; asm["_ogg_stream_flush"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__ogg_stream_flush.apply(null, arguments);
};

var real__oggpack_writeclear = asm["_oggpack_writeclear"]; asm["_oggpack_writeclear"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_writeclear.apply(null, arguments);
};

var real__ogg_stream_init = asm["_ogg_stream_init"]; asm["_ogg_stream_init"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__ogg_stream_init.apply(null, arguments);
};

var real__vorbis_encode_init_vbr = asm["_vorbis_encode_init_vbr"]; asm["_vorbis_encode_init_vbr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_encode_init_vbr.apply(null, arguments);
};

var real__encoder_get_analysis_buffer = asm["_encoder_get_analysis_buffer"]; asm["_encoder_get_analysis_buffer"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_get_analysis_buffer.apply(null, arguments);
};

var real__vorbis_analysis_buffer = asm["_vorbis_analysis_buffer"]; asm["_vorbis_analysis_buffer"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_analysis_buffer.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackAlloc.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____muldi3.apply(null, arguments);
};

var real__encoder_clear_data = asm["_encoder_clear_data"]; asm["_encoder_clear_data"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_clear_data.apply(null, arguments);
};

var real__ogg_stream_clear = asm["_ogg_stream_clear"]; asm["_ogg_stream_clear"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__ogg_stream_clear.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_getTempRet0.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setTempRet0.apply(null, arguments);
};

var real__oggpack_read = asm["_oggpack_read"]; asm["_oggpack_read"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_read.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Add.apply(null, arguments);
};

var real__oggpack_get_buffer = asm["_oggpack_get_buffer"]; asm["_oggpack_get_buffer"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_get_buffer.apply(null, arguments);
};

var real__ogg_stream_pageout = asm["_ogg_stream_pageout"]; asm["_ogg_stream_pageout"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__ogg_stream_pageout.apply(null, arguments);
};

var real__vorbis_comment_clear = asm["_vorbis_comment_clear"]; asm["_vorbis_comment_clear"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_comment_clear.apply(null, arguments);
};

var real__vorbis_comment_add_tag = asm["_vorbis_comment_add_tag"]; asm["_vorbis_comment_add_tag"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__vorbis_comment_add_tag.apply(null, arguments);
};

var real__emscripten_get_global_libc = asm["_emscripten_get_global_libc"]; asm["_emscripten_get_global_libc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__emscripten_get_global_libc.apply(null, arguments);
};

var real__oggpack_adv = asm["_oggpack_adv"]; asm["_oggpack_adv"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_adv.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__llvm_bswap_i32.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__free.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_setThrew.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_establishStackSpace.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__memmove.apply(null, arguments);
};

var real__ogg_stream_packetin = asm["_ogg_stream_packetin"]; asm["_ogg_stream_packetin"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__ogg_stream_packetin.apply(null, arguments);
};

var real__encoder_create_vbr = asm["_encoder_create_vbr"]; asm["_encoder_create_vbr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_create_vbr.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackRestore.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__malloc.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__sbrk.apply(null, arguments);
};

var real__encoder_destroy = asm["_encoder_destroy"]; asm["_encoder_destroy"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__encoder_destroy.apply(null, arguments);
};

var real__oggpack_writetrunc = asm["_oggpack_writetrunc"]; asm["_oggpack_writetrunc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__oggpack_writetrunc.apply(null, arguments);
};
var _vorbis_analysis = Module["_vorbis_analysis"] = asm["_vorbis_analysis"];
var _oggpack_write = Module["_oggpack_write"] = asm["_oggpack_write"];
var _oggpack_writeinit = Module["_oggpack_writeinit"] = asm["_oggpack_writeinit"];
var _encoder_encode = Module["_encoder_encode"] = asm["_encoder_encode"];
var _encoder_prepare_analysis_buffers = Module["_encoder_prepare_analysis_buffers"] = asm["_encoder_prepare_analysis_buffers"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var _encoder_get_data_len = Module["_encoder_get_data_len"] = asm["_encoder_get_data_len"];
var _vorbis_comment_init = Module["_vorbis_comment_init"] = asm["_vorbis_comment_init"];
var _vorbis_info_clear = Module["_vorbis_info_clear"] = asm["_vorbis_info_clear"];
var _encoder_finish = Module["_encoder_finish"] = asm["_encoder_finish"];
var _vorbis_analysis_headerout = Module["_vorbis_analysis_headerout"] = asm["_vorbis_analysis_headerout"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _encoder_get_data = Module["_encoder_get_data"] = asm["_encoder_get_data"];
var _encoder_write_headers = Module["_encoder_write_headers"] = asm["_encoder_write_headers"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _oggpack_bytes = Module["_oggpack_bytes"] = asm["_oggpack_bytes"];
var _oggpack_look = Module["_oggpack_look"] = asm["_oggpack_look"];
var _vorbis_info_init = Module["_vorbis_info_init"] = asm["_vorbis_info_init"];
var _ogg_stream_flush = Module["_ogg_stream_flush"] = asm["_ogg_stream_flush"];
var _oggpack_writeclear = Module["_oggpack_writeclear"] = asm["_oggpack_writeclear"];
var _memset = Module["_memset"] = asm["_memset"];
var _ogg_stream_init = Module["_ogg_stream_init"] = asm["_ogg_stream_init"];
var _vorbis_encode_init_vbr = Module["_vorbis_encode_init_vbr"] = asm["_vorbis_encode_init_vbr"];
var _encoder_get_analysis_buffer = Module["_encoder_get_analysis_buffer"] = asm["_encoder_get_analysis_buffer"];
var _vorbis_analysis_buffer = Module["_vorbis_analysis_buffer"] = asm["_vorbis_analysis_buffer"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var _encoder_clear_data = Module["_encoder_clear_data"] = asm["_encoder_clear_data"];
var _ogg_stream_clear = Module["_ogg_stream_clear"] = asm["_ogg_stream_clear"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _oggpack_read = Module["_oggpack_read"] = asm["_oggpack_read"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _oggpack_get_buffer = Module["_oggpack_get_buffer"] = asm["_oggpack_get_buffer"];
var _ogg_stream_pageout = Module["_ogg_stream_pageout"] = asm["_ogg_stream_pageout"];
var _vorbis_comment_clear = Module["_vorbis_comment_clear"] = asm["_vorbis_comment_clear"];
var _vorbis_comment_add_tag = Module["_vorbis_comment_add_tag"] = asm["_vorbis_comment_add_tag"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var _oggpack_adv = Module["_oggpack_adv"] = asm["_oggpack_adv"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _ogg_stream_packetin = Module["_ogg_stream_packetin"] = asm["_ogg_stream_packetin"];
var _encoder_create_vbr = Module["_encoder_create_vbr"] = asm["_encoder_create_vbr"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _encoder_destroy = Module["_encoder_destroy"] = asm["_encoder_destroy"];
var _oggpack_writetrunc = Module["_oggpack_writetrunc"] = asm["_oggpack_writetrunc"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
;
Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];
Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];


// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;







/**
 * @constructor
 * @extends {Error}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}



    return Module;
}

// node.js Environment
var module;
if (module && module.exports) {
    makeVorbisEncoderModule({}, module);
}

// Web Worker Environment
if (!module && this.document === undefined) {
    VorbisWorkerScript.main(this);
}

